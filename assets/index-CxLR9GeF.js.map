{"version":3,"mappings":";q1FAKA,SAASA,GAAWC,EAAU,GAAI,CAChC,KAAM,CACJ,UAAAC,EAAY,GACZ,cAAAC,EACA,eAAAC,EACA,aAAAC,EACA,eAAAC,EACA,gBAAAC,CACD,EAAGN,EACJ,IAAIO,EACAC,EAEJ,MAAMC,EAAsB,MAAOC,EAAc,KAAS,CACxD,MAAMF,CAIV,EACE,eAAeG,GAAW,CACxB,GAAI,kBAAmB,UAAW,CAOhC,GANAJ,EAAK,MAAKK,GAAA,wBAAAC,CAAA,OAAC,QAAO,sBAAgB,gBAAC,eAAAA,EAAA,4BAAC,KAAK,CAAC,CAAE,QAAAA,KACnC,IAAIA,EAAQ,SAAU,CAAE,MAAO,IAAK,KAAM,SAAS,CAAE,CAC7D,EAAE,MAAOC,GAAM,CACdR,GAAA,MAAAA,EAAkBQ,EAE1B,CAAO,EACG,CAACP,EACH,OAMEA,EAAG,iBAAiB,YAAcQ,GAAU,EACtCA,EAAM,UAAYA,EAAM,aAC1B,OAAO,SAAS,QAC9B,CAAW,EACDR,EAAG,iBAAiB,YAAcQ,GAAU,CACrCA,EAAM,UACTZ,GAAA,MAAAA,GAEd,CAAW,EAgCLI,EAAG,SAAS,CAAE,UAAAN,CAAW,GAAE,KAAMe,GAAM,CACjCX,EACFA,EAAe,SAAUW,CAAC,EAE1BZ,GAAA,MAAAA,EAAeY,EACzB,CAAO,EAAE,MAAOF,GAAM,CACdR,GAAA,MAAAA,EAAkBQ,EAC1B,CAAO,CACF,CACF,CACD,OAAAN,EAAkBG,EAAQ,EACnBF,CACT,CC1EA,MAAMQ,EAAW,CACfC,YAAa,GACbC,iBAAkB,2BAClBC,0BAA2B,GAC3BC,cAAe,WACfC,gBAAiB,GACjBC,qBAAsB,KACtBC,eAAgB,EAClB,EAEaC,GAAgBzB,GAA0B,CACjDkB,cAAclB,EAAQkB,aAAeD,EAAIC,YACzCC,mBAAmBnB,EAAQmB,kBAAoBF,EAAIE,iBACnDC,4BAA4BpB,EAAQoB,2BAA6BH,EAAIG,0BACrEC,gBAAgBrB,EAAQqB,eAAiBJ,EAAII,cAC7CC,kBAAkBtB,EAAQsB,iBAAmBL,EAAIK,gBACjDC,uBAAuBvB,EAAQuB,sBAAwBN,EAAIM,qBAC3DC,iBAAiBxB,EAAQwB,gBAAkBP,EAAIO,eAEnDP,EAAIS,4BAAJT,EAAIS,0BAA8B1B,EAAQ0B,2BAC1CT,EAAIU,yBAAJV,EAAIU,uBAA2B3B,EAAQ2B,wBAEnCC,gBAAyCX,EAAIW,cAC7CC,oBAAiDZ,EAAIY,iBAC3D,ECxCYC,YACVC,mBAAmB,oBACnBC,YAAY,YAFFF,YAKCG,SAAkB,CAACH,YAAyBA,qBAE5CI,GAAc,CACzBC,IAAK,MACLC,OAAQ,QACV,EAEaC,GAAe,CAC1BC,KAAM,OACNC,QAAS,UACTC,KAAM,MACR,EAEaC,GAAsB,CACjCC,IAAK,IACLC,IAAK,GACP,EAEaC,GAAiB,GAEjBC,GAAwB,wCAExBC,GAAwB,wCAGxBC,GAAiC,GAAK,IAGtCC,GAAqB,CAEhCC,OAAQ,SAERC,QAAS,UAETC,YAAa,cAEbC,UAAW,YAEXC,KAAM,OAENC,IAAK,KACP,EAGaC,GAAwB,CAEnCC,KAAM,MACR,EAGaC,GAAoB,CAE/BC,KAAM,OAENC,SAAU,UAEZ,EAGaC,GAAuB,WAEvBC,GAAmB,aAEnBC,GAA0B,uBAE1BC,GAAa,GAAK,IAAO,GAEzBC,GAAa,GAAK,IAAO,GAEzBC,GAAqB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,MAAM,EAE/EC,GAA4B,GAE5BC,GAAmB,CAC9BC,eAAgB,GAChBC,wBAAyB,GACzBC,iCAAkC,GAClCC,qBAAsB,GACtBC,qBAAsB,GACtBC,iBAAkB,GAClBC,uBAAwB,GACxBC,gBAAiB,GACjBC,cAAe,GACfC,iBAAkB,GAClBC,mBAAoBZ,EACtB,EAEaa,GAAW,CACtBC,IAAK,MACLC,SAAU,UACZ,EAEaC,GAAuB,CAClCC,SAAU,WACVC,kBAAmB,oBACnBC,UAAW,YACXC,aAAc,eACdC,MAAO,OACT,ECrGaC,GAAY,IAAIC,GAAU,CAAEC,aAAc,YAAaC,oBAAqB,EAAK,CAAC,EAO/EC,WAAaC,EAAsDC,EAAW,GAAqB,CACjH,MAAMC,EAASP,GAAUQ,OAAOH,CAAmB,EAAE,CAAC,EAElDC,MAAY,CAACC,EAAc,UAAIE,MAAM,yBAAyBC,OAAOL,CAAmB,CAAC,aAAa,EAEnGE,QACT,CAEO,SAASI,GAAiBN,EAA2D,CACnFL,UAAUQ,OAAOH,CAAmB,CAC7C,CAKO,SAASO,GAAkBP,EAAsDQ,EAAqBP,EAAW,GAAqB,CAC3I,GAAI,CAACO,EACH,OAGEN,MAEA,IACFA,SAASP,GAAUc,YAAYT,EAAqBQ,CAAI,EAAE,CAAC,EAEpDN,QACAQ,EAAc,CACrB,GAAIA,aAAeN,OAASM,EAAIC,QAAQC,SAAS,4BAA4B,EAAG,CAC9E,GAAIX,EACI,UAAIG,MAAM,sBAAsBC,OAAOL,CAAmB,CAAC,gBAAgBQ,CAAI,GAAG,EAG1F,MACF,CAGQK,cAAM,0CAA2CH,CAAG,CAC9D,CACF,CAEgBI,YAAsBC,EAAWJ,EAAmD,CAClG,GAAI,CAACI,EAAc,UAAIX,MAAMO,CAAO,CACtC,CAEgBK,YAAcC,EAAoBC,EAAgD,CAChG,GAAI,CAACD,EAAW,MAAM,IAAIb,MAAM,GAAGc,CAAW,yBAAyB,CACzE,CCvDaC,SAAmBC,OAAO,kBAAkB,EAE5CC,GAA6BD,OAAO,4BAA4B,EAEhEE,GAAkBF,OAAO,iBAAiB,EAE1CG,GAAwBH,OAAO,uBAAuB,EAEtDI,GAAoBJ,OAAO,mBAAmB,ECN3CK,YAA6CC,EAAaC,EAAO,IAAK,CAChFC,MACJ,SAASC,KAAaC,EAAiB,CACjCF,gBAAsBA,CAAO,EACjCA,EAAUG,WAAW,IAAML,EAAS,GAAGI,CAAI,EAAGH,CAAI,CACpD,CAEUK,gBAAS,IAAMC,aAAaL,CAAO,EACtCC,CACT,CAEgBK,YAAgDC,EAASC,EAAe,CAClFC,MACAC,EAEJ,SAASC,KAAyCT,EAA2B,CAC3E,MAAMU,EAAmBF,EAAUG,KAAKC,MAAQJ,EAAUF,EAEtDI,GAAoBJ,GACjBO,QAAM,KAAMb,CAAI,EACrBQ,EAAUG,KAAKC,OACLL,IACVA,EAAWN,WAAW,IAAM,CACtBO,GACuBG,KAAKC,MAAQJ,GACdF,IACjBO,QAAM,KAAMb,CAAI,EACrBQ,EAAUG,KAAKC,OAGRE,UACVR,EAAQI,CAAgB,EAE/B,CAEUR,gBAAS,IAAMC,aAAaI,CAAQ,EACvCE,CACT,CAEaM,SAAiBC,GACrBA,EAAKC,QAAQ,kBAA8BC,GACzC3C,OAAO4C,aAAaC,SAASF,EAAMD,QAAQ,OAAQ,EAAE,EAAG,EAAE,CAAC,CACnE,EAQI,SAASI,GAASC,EAAe,CAUlCA,GATAA,EAAMC,QAAQ,GAAG,IAAM,IACjBD,IAAME,MAAM,CAAC,GAInBF,EAAMG,SAAW,IACnBH,EAAQA,EAAM,CAAC,EAAIA,EAAM,CAAC,EAAIA,EAAM,CAAC,EAAIA,EAAM,CAAC,EAAIA,EAAM,CAAC,EAAIA,EAAM,CAAC,GAGpEA,EAAMG,SAAW,EAId,OACLpI,EAAG+H,SAASE,EAAME,MAAM,EAAG,CAAC,EAAG,EAAE,EACjCE,EAAGN,SAASE,EAAME,MAAM,EAAG,CAAC,EAAG,EAAE,EACjCG,EAAGP,SAASE,EAAME,MAAM,EAAG,CAAC,EAAG,EAAE,EAErC,CAQO,SAASI,GAAuBN,EAAuB,CACtDO,QAAMR,GAASC,CAAK,EAE1B,OAAKO,EAKEA,EAAIxI,EAAI,KAAQwI,EAAIH,EAAI,KAAQG,EAAIF,EAAI,KAAQ,IAAM,UAAY,UAJhE,EAKX,CAIO,MAAMG,GAAuBC,GAOvBC,GAAkBC,GAIlBC,GAAgBA,CAACC,EAA+BC,WAAwBD,YAAKC,cAALD,cAAkBE,iBAAkBD,EAAYC,eAExHC,GAA4BC,GAA4B,cAAC,OAAQ,IAAK,MAAO,IAAI,EAAEzD,UAASP,SAAOgE,CAAK,IAAZhE,cAAe8D,aAAa,GAExHG,GAA2BD,GAA4B,cAAC,QAAS,IAAK,KAAM,KAAK,EAAEzD,UAASP,SAAOgE,CAAK,IAAZhE,cAAe8D,aAAa,GAO9H,MAAMI,GAAeF,GAAwCG,EAAQH,ECrG1DI,YAChBC,OAAO,OACPC,MAAM,MACNC,YAAY,YAHIH,YAMLI,SAAeC,GACnB,CAAC,CAACA,GAAgBd,GAAcc,EAAc3H,GAAmBI,SAAS,EAGtEwH,GAA0BD,GAC9BA,EAAaE,cAAgBP,aAAyBK,EAAaE,cAAgBP,OAG/EQ,GAAgCH,GAA+B,CACpEI,QAAaJ,EAAa,gBAAgB,EAC1C,CAAEK,iBAAgBC,cAAiBN,IAEnCpC,MAAUD,KAIhB,IAHgByC,IAAeG,kBAA8BF,GAAkBA,EAAiBzC,IACxE0C,GAAgBA,EAAe1C,EAG9C+B,aAGT,GAAI,CAACS,EACIT,YAGT,OAAQS,EAAU,CAChB,IAAKG,WACL,IAAKA,mBACIZ,kBACT,IAAKY,iBACIZ,aACT,IAAKY,cACL,IAAKA,aACIZ,WACX,CACF,EAEaa,GAAcR,GAClBA,EAAaE,cAAgBP,QAAoBK,EAAaE,cAAgBP,MCtD1Ec,GAAa,WACbC,GAAgB,WAChBC,GAAoB,WACpBC,GAAqB,WAErBC,GAAc,OACdC,GAAa,WAEbC,GAAiB,KACjBC,GAAY,GAAGD,EAAc,KAE7BE,GAA6B,aAC7BC,GAA+B,YAC/BC,GAA8B,WAE9BC,GAAoB,GAAGL,EAAc,IAAIE,EAA0B,GACnEI,GAAsB,GAAGN,EAAc,IAAIG,EAA4B,GACvEI,GAAqB,GAAGP,EAAc,IAAII,EAA2B,GCnBtEI,YAEVC,qBAEAC,mBAEAC,mBAEAC,qBAEAC,qBAEAC,uBAZUN,YCEZ,MAA8BO,EAAe,CAE7C,CCEA,MAAMC,GAAahG,GACVA,aAAiBT,MAAQS,EAAQ,IAAIT,MAAMC,OAAOQ,CAAK,CAAC,EAGpDiG,GACVC,GACD,CAACC,EAAerG,EAAiB,CAAEE,QAAO,GAAGoG,CAAiB,EAAI,KAAO,CAClD3G,GAAcsG,EAAc,EAGpCM,QAAyBC,GAAA,CACxBC,MAAIL,EAAUC,EAAOrG,EAASsG,EAAOpG,EAAQgG,GAAUhG,CAAK,EAAI+B,MAAS,EACtF,CACH,EAEWyE,GAAWP,GAAUT,GAASC,KAAK,EACnCgB,GAAUR,GAAUT,GAASE,IAAI,EACjCgB,GAAUT,GAAUT,GAASG,IAAI,EACjCgB,GAAWV,GAAUT,GAASI,KAAK,EACxBK,GAAUT,GAASK,KAAK,ECZnCe,SAAuCxD,GAClDA,EAAOA,EAAKyD,kBAAoBzD,EAAK0D,kBAAoB1D,EAAK2D,SAAWhF,OAG9DiF,GAAsB5D,GAC1B,OAAOwD,GAAoCxD,CAAI,EAAM,IAKjD6D,GAAuB7D,GAAuBD,GAAcC,EAAM9G,GAAmBC,MAAM,EAE3F2K,GAAY9D,GAAuB4D,GAAmB5D,CAAI,GAAK6D,GAAoB7D,CAAI,EAEvF+D,GAAa/D,GACjB,OAAOA,iBAAMgE,eAAkB,KAAejE,GAAcC,EAAM9G,GAAmBE,OAAO,EAGxF6K,GAA4CjE,GAAmC,CAC1F,GAAI,CAACA,GAAQ,CAAC+D,GAAU/D,CAAI,EAC1B,OAIF,MAAMkE,GADOlE,EAAKmE,KAAOnE,EAAKmE,KAAKC,MAAM,GAAG,EAAI,IACvBC,KAAK,SAAUC,EAAK,CACpC,4BAAsBC,KAAKD,CAAG,EACtC,EAED,GAAIJ,EACF,OAAOA,EAAYE,MAAM,GAAG,EAAE,CAAC,CAInC,EAEaI,GAAiBxE,GAC5BD,GAAcC,EAAM9G,GAAmBG,WAAW,EC5BvCoL,GAAYA,CAACC,EAAaC,IAAgC,CACrE,KAAM,CAACC,EAASC,EAAiB,EAAE,EAAIH,EAAIN,MAAM,GAAG,EAC9CU,EAAkB,IAAIC,gBAAgBF,CAAc,EAEnDG,eAAQL,CAAW,EAAE1B,QAAQ,CAAC,CAACgC,EAAK7E,CAAK,IAAM,CAChDA,MAAU,KACL0E,SAAgBI,OAAOD,CAAG,EAG7BE,QAAiBC,MAAMC,QAAQjF,CAAK,EAAIA,EAAMkF,KAAK,GAAG,EAAIlF,EAEhE0E,EAAgBS,IAAIN,EAAK7I,OAAO+I,CAAc,CAAC,EAChD,EAEKK,QAAcV,EAAgBW,WAEpC,MAAO,GAAGb,CAAO,GAAGY,EAAc,IAAIA,CAAW,GAAK,EAAE,EAC1D,EAWaE,GAAa,CAAsBC,EAAoBC,EAA+BjB,IAAyC,CAC1I,MAAMkB,EAAOF,EACVvB,MAAM,GAAG,EACT0B,IAAiBC,GAAA,CAChB,GAAIA,IAAY,IAEV,OAACH,EAEEI,OAAOhB,QAAQY,CAAU,EAC7BK,OAAO,CAAC,CAAChB,CAAG,IAAM,CAACU,EAAahJ,SAASsI,CAAG,CAAC,EAC7Ca,IAAI,CAAC,CAACI,EAAG9F,CAAK,IAAMA,CAAK,EACzBkF,KAAK,GAAG,EALaS,EAO1B,GAAI,CAACA,EAAQI,WAAW,GAAG,GAAK,CAACP,EAAmBG,SAI9CK,QAAaL,EAAQM,SAAS,GAAG,EACjCC,EAAYP,EAAQjH,QAAQ,IAAK,EAAE,EAAEA,QAAQ,IAAK,EAAE,EACpDyH,EAAaX,EAAWU,CAAqC,EAEnE,OAAKC,IACEH,GACH9C,GAAQ,gBAAiB,iCAAkC,CACzDuC,KAAMF,EACNW,YACD,EAGI,GAGFC,CACR,EACAjB,KAAK,GAAG,EAGX,OAAOX,EAAcF,GAAUoB,EAAMlB,CAAW,EAAIkB,CACtD,EAEaW,GAAUA,CAAC3H,EAAc4H,EAAyB,MAC7D5H,EACG4G,WACAvF,YACApB,UAAQ,OAAQ,GAAG,EACnBA,QAAQ,WAAY,EAAE,EACtBA,QAAQ,OAAQ,GAAG,EACnBA,QAAQ,MAAO,EAAE,EACjBA,QAAQ,MAAO,EAAE,EACjBA,QAAQ,KAAM2H,CAAc,EAEpBC,GAAWA,CAAC,CACvBC,KACAC,QACAC,aACAC,OAAO,GACPC,WAOF,IACSrB,GACLpE,GACA,CAAEqF,KAAIC,MAAOA,EAAQJ,GAAQI,CAAK,EAAIjI,QACtC,CACEzH,EAAG2P,EACHC,KAAMA,EAAO,IAAM,KACnB9P,EAAG+P,EAEP,EAGWC,GAAcA,CAACL,EAAYC,IAC/BlB,GAAWnE,GAAe,CAAEoF,KAAIC,MAAOA,EAAQJ,GAAQI,CAAK,EAAIjI,OAAW,EAGvEsI,GAAiBA,CAACN,EAAYC,IAClClB,GAAWlE,GAAmB,CAAEmF,KAAIC,MAAOA,EAAQJ,GAAQI,CAAK,EAAIjI,OAAW,EAG3EuI,GAAgBA,CAAC,CAAEC,OAAMC,YAAWC,OAA4E,IAAM,CACjI,OAAQF,EAAI,CACV,KAAK/L,GAAqBI,aACjByL,UAAeG,EAAWC,CAAK,EACxC,KAAKjM,GAAqBK,MACxB,OAAOiL,GAAS,CAAEC,GAAIS,EAAWR,MAAOS,EAAO,EACjD,KAAKjM,GAAqBC,SACjB2L,UAAYI,EAAWC,CAAK,EACrC,QACS,QACX,CACF,EAEaC,GAAkBA,CAACT,EAAoBU,EAAoBT,EAAO,KACtEpB,GACLnE,GACA,CAAEoF,GAAIE,GACN,CACEW,QAASD,EACTT,KAAMA,EAAO,IAAM,KAEvB,EAIWW,GAAkBA,CAAC,CAC9B9D,WACAoD,YACAD,OACAD,YAMF,IAAMpC,GAAU,MAAMd,CAAQ,GAAI,CAAEzM,EAAG2P,EAAY7P,EAAc8P,KAAMA,EAAO,IAAM,IAAK,CAAC,EAE7EY,GAAoCA,CAACjM,EAAqBqL,EAAeD,IAA8B,CAC5Gc,QAA2B1D,GAAyCxI,CAAK,EACzEmM,EAAmCpE,GAAoC/H,CAAK,EAElF,OAAOgM,GAAgB,CAErB9D,SAAUiE,GAAoCD,GAA4B,GAC1Eb,OACAD,aAEAE,UAAWY,GAA4BlM,EAAMoM,QAC9C,CACH,ECrLO,MAAMC,WAAiB3L,KAAM,CAIlC4L,YAAYrL,EAAU,GAAIsL,EAAc,CACtC,MAAMtL,CAAO,EAJfsL,eACAtL,kBAIE,KAAKH,KAAO,WACZ,KAAKG,QAAUA,EACf,KAAKsL,KAAOA,CACd,CACF,CAMaC,SAAiB,MAAOC,GAAuB,CACpDC,QAAO,MAAMD,EAASE,OAExB,IAACF,EAASG,GAAI,CAChB,MAAM3L,EAAU,YAAYwL,EAASxD,GAAG,iBAAiBwD,EAASI,MAAM,GAClEC,EAAaJ,GAAQ,OAAOA,GAAS,UAAY,YAAaA,GAAQ,OAAOA,EAAKzL,SAAY,SAAWyL,EAAKzL,QAAUiC,OAE9H,MAAM,IAAImJ,GAASS,GAAc7L,EAASwL,EAASI,QAAU,GAAG,CAClE,CAEOH,QACT,ECXaK,GAAWA,CAACC,EAA0BC,EAAqBC,EAA0B9H,IAAwC,CACxI,MAAM+H,EAAavI,GAAwBQ,iBAAcgI,oBAAoB,GAAK1I,GAAyBU,iBAAciI,IAAI,EACvHC,EAAclI,iBAAckI,YAK9BN,MAHAG,KACAH,IAAgBlQ,GAAaC,MAAQ,CAACuQ,GACtCN,IAAgBlQ,GAAaE,SAAWiQ,GAAc,CAACK,GACvDN,IAAgBlQ,GAAaG,MAAQiQ,GAAmB,EAACI,WAAaC,KAAgBC,KAAMC,UAGlG,EAWaC,GAAoBA,CAACC,EAAsBC,IACjDA,EAEEA,EACJvK,QAAQ,MAAO,EAAE,EACjBsF,MAAM,GAAG,EACTkF,OACC,CAACC,EAAQC,IACPA,EAAQpK,QAAQ,GAAGgK,CAAY,GAAG,IAAM,GAAKI,EAAQpK,QAAQ,IAAIgK,CAAY,GAAG,IAAM,EAClF,CAAC,GAAGG,EAAQ,CAAEC,QAASA,EAAQnK,MAAMmK,EAAQpK,QAAQ,GAAG,EAAI,CAAC,EAAG8J,QAASM,EAAQ,CAAC,IAAM,IAAK,EAC7FD,EACN,EACF,EAXoB,KChCXE,GAAc,CAAIlN,EAAcmN,IAA6B,CAClEC,QAAQC,GAAsBF,CAAO,EAY3C,OAAOG,GAAOF,CAAK,CACrB,ECJaG,EAAiBL,GAAyB,cAAe,KAAO,CAC3EM,OAAQ,GACRC,OAAQ,CACNrD,GAAI,GACJsD,SAAU,GACVC,YAAa,GACbC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,CAAC,EACTC,QAAS,CAAE,EACXC,KAAM,CAAE,EACRC,aAAc,CACZC,OAAQ,CACNC,WAAY,EACd,EACAxP,IAAK,CACHyP,SAAU,KACVC,QAAS,KACTF,WAAY,EACd,CACF,EACAG,QAAS,CAAC,CACZ,EACAC,SAAU,CACRC,+BAAgC,CAAE,EAClCC,SAAUlR,EACZ,EACAmR,mBAAoB,CAAE,EACtBxC,YAAalQ,GAAaC,KAC1B0S,gBAAiB,IACnB,EAAE,EC3BWC,GAAkBA,CAC7BC,EACAC,IAC0B,CAC1B,MAAMC,EAAWC,GAAe,CAC9BC,IAAKJ,EACN,EAmCD,OAAO,IAAIK,GAAa,CACtBC,KAAyCJ,EACzCK,MAAO,IAAIC,GAAc,CAAEC,YAAa,GAAO,EAChD,CACH,EC2iIaC,GAAwqSDA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,MAiDCA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,MAiDCA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,MAmE/B,MAAMC,GAAkkelBE,GAAwgBC9/JrC,MAAMG,GAAa,GACbC,GAAuB,gDAA+C,IAGvDC,IAAUC,GAD9BC,KAAYD,GAAAE,GAAb,KACgC,CADhC,cAMYC,mCAA4BA,CAAC,CAAEC,UAASpF,QAAOqF,mBAAgF,CACvI,MAAMC,EAAW,aAAaF,CAAO,WAAWC,GAAiBrF,CAAK,QAG/D3C,OAFKD,GAAU,GAAGtN,EAAIE,gBAAgB,GAAGsV,CAAQ,GAAI,CAAEC,gBAAiB,EAAGC,SAAUH,EAAgBrF,EAAQ,KAAM,CAEnH3C,GAGCoI,mBAAYA,CAAC9M,EAAoB+M,IAAiB,CACpDC,QAAOhN,EAAK+M,CAAI,EAEtB,GAAIC,GAAQ,CAACC,GAAQ,IAAIzO,KAAKwO,CAAI,CAAC,EAAG,CACpCzJ,GAAS,aAAc,YAAYwJ,CAAI,4BAA4B/M,EAAK4G,KAAK,eAAgB,CAAEhK,MAAO,IAAIT,MAAM,cAAc,EAAG,EAC1HwC,MACT,CAEOqO,SAAOE,GAASF,CAAI,EAAIrO,SAGvBwO,6BAAsBA,CAACnN,EAAoBoN,IAAsB,CACzE,GAAI,CAACA,EACIpN,SAGT,MAAMqN,EAAkBlW,EAAIM,qBACtB6V,EAAkB,CAAE,GAAGtN,GAE7B,GAAIoN,IAAaC,EACf,SAAW,CAACpI,EAAKiB,CAAC,IAAKF,OAAOhB,QAAQsI,CAAe,EAC/CtN,EAAK,GAAGiF,CAAG,IAAImI,CAAQ,EAAE,IAC3BE,EAAgBrI,CAAG,EAAIjF,EAAK,GAAGiF,CAAG,IAAImI,CAAQ,EAAE,GAK/CE,WAMCC,8BAAuBA,CAACC,EAA0BJ,IAA+B,CACnF,MAAEK,OAAM,GAAGC,CAASF,IAEpBnS,EAAqB,CAAE,GAAGqS,EAAMrS,SAAU,IAEvCA,kBAAWoS,EAAK3H,IAAc9F,GAAA,CAC/B,MAAE2N,gBAAeC,WAAU1D,cAAa/F,OAAM,GAAGuJ,CAAS1N,IAE1Da,EAA6B,CACjCgN,OAAQL,EAAY7G,GACpBkB,QAAS+F,EACTzJ,KAAMA,EAAKmB,KAAK,GAAG,EACnB4E,YAAaA,GAAe,GAC5B4D,QAAS,CAAE,EACXC,OAAQ,CAAE,EACVC,MAAO,GACPtC,KAAM,GACNuC,QAAS,EACT,GAAGP,EACH,GAAGC,GAGL,OAAO,KAAKO,mBAAmB,CAAElO,KAAMa,EAAcxF,WAAU+R,WAAU,EAC1E,EAEM/R,IAMC8S,2BAAoBA,CAAC9S,EAAoB+S,EAAyBhB,KAC1E/R,EAASA,SAAWA,EAASA,SAASyK,IAAK9F,GAAS,KAAKkO,mBAAmB,CAAElO,OAAM3E,WAAU+R,UAAU,EAAC,EAGrGgB,IACF/S,EAASA,SAAWA,EAASA,SAAS4K,OAAiBjG,KAAK6H,UAAYuG,CAAc,GAGjF/S,IAOT6S,4BAAqBA,CAAC,CAAElO,OAAM3E,WAAU+R,cAA+E,CAC/GpD,QAASqE,EAAYC,WAAWtE,OAChCuE,EAAYvI,OAAOwI,KAAKxE,iBAAQQ,YAAY,EAAE,CAAC,EAC/CkC,EAAgBrR,iBAAUoT,WAC1BhC,EAAUzM,EAAK6H,QACf6G,EAAmB,KAAKvB,oBAAoBnN,EAAMoN,CAAQ,EAE1DuB,EAAuB,CAC3B,GAAG3O,EACH,GAAG0O,EACHE,UAAW,KAAKpC,0BAA0B,CAAEC,UAASpF,MAAOwH,OAAoBnC,gBAAe,EAC/FoC,iBAAkB,KAAKtC,0BAA0B,CAAEC,UAASpF,MAAOwH,eAA4BnC,gBAAe,EAC9GqC,gBAAiB,KAAKvC,0BAA0B,CAAEC,UAASpF,MAAOwH,aAA0B,EAC5F9F,YAAa/I,EAAKgP,WAAa7F,GAAkBoF,EAAWvO,EAAKgP,UAAU,EAAIrQ,OAC/EuC,eAAgB,KAAK4L,UAAU9M,EAAM,oBAAoB,EACzDmB,aAAc,KAAK2L,UAAU9M,EAAM,kBAAkB,GAIlCe,qBAAcC,GAA6B2N,CAAoB,EAE7EA,IAGDM,2BAAoBA,CAACC,EAA0B9B,EAAmB+B,IAA0B,CAC5F,MAAEC,WAAU7V,OAAM8V,aAAYC,OAAUJ,IAGvC,OACLE,SAAUA,EACPnJ,OAAQsJ,GAAOA,EAAGC,UAAU,EAC5B1J,IAAayJ,GAAA,cACZ,GAAG,KAAKrB,mBAAmB,CAAElO,KAAMuP,EAAGC,WAA4BpC,WAAU,EAC5E+B,cAAcA,iBAAc1J,eAAc8J,IAAGE,gBAAHF,cAAkB9J,aAAc,GAC1EzB,cAAe5H,OAAOmT,EAAGG,cAAc,GACvC,EACJC,WAAY,CAAEpW,OAAM8V,aAAYC,OAAM,EACxC,GAGFM,sCAAgCC,GAAqB,SAC5C,OACL3F,YAAa2F,iBAAQ3F,YAErB2D,OAAQ,MACRG,MAAO,MACPtC,KAAM,GACN7D,QAASgI,iBAAQlJ,GACjBsH,QAAS,EACT9J,KAAM,GACNyC,MAAMiJ,EAAOC,MAEb7P,YAAa,SACb2O,UAAW,wCAAwCiB,mBAAQ9B,OAAOgC,MAAM1L,KAAQ2L,KAAE7I,MAAQ,WAAvC0I,cAAiDhK,MACpGkJ,gBAAiB,wCAAwCc,mBAAQ9B,OAAOgC,MAAM1L,KAAQ2L,KAAE7I,MAAQ,YAAvC0I,cAAkDhK,MAC3GkI,OAAQ8B,iBAAQ9B,OAAOgC,MACpB9J,OAAOgK,GAAQA,EAAKpK,MAAQoK,EAAKC,OACjCpK,IAAamK,IAAA,CACZE,IAAK,sCAAwCF,EAAKpK,KAClDsB,KAAM8I,EAAK9I,KACX+I,MAAOD,EAAKC,QACZ,CAKN,GAGFE,sCAAgCC,GAAmB,SAC1C,OACLnG,YAAamG,iBAAQnG,YAErB2D,OAAQ,MACRG,MAAO,MACPtC,KAAM,GACN7D,QAASwI,iBAAQ1J,GACjBsH,QAAS,EACT9J,KAAMkM,WAAQlM,KAAOkM,EAAOlM,KAAKmB,KAAK,GAAG,EAAI,GAC7CsB,MAAOyJ,EAAOzJ,MAEd3G,YAAa,SACb2O,UAAW,wCAAwCyB,mBAAQtC,OAAOgC,MAAM1L,KAAQ2L,KAAE7I,MAAQ,WAAvCkJ,cAAiDxK,MACpGkJ,gBAAiB,wCAAwCsB,mBAAQtC,OAAOgC,MAAM1L,KAAQ2L,KAAE7I,MAAQ,YAAvCkJ,cAAkDxK,MAC3GkI,OAAQsC,iBAAQtC,OAAOgC,MACpB9J,OAAOgK,GAAQA,EAAKpK,MAAQoK,EAAKC,OACjCpK,IAAamK,IAAA,CACZE,IAAK,sCAAwCF,EAAKpK,KAClDsB,KAAM8I,EAAK9I,KACX+I,MAAOD,EAAKC,QACZ,CAMN,GAIFI,uCAAiClX,GAAqB,uBAC7C,OACL8Q,YAAa9Q,iBAAS8Q,YACtBqG,WAAUnX,mBAASoX,SAATpX,cAAiB2W,QAAQ,OAAQ3W,iBAASoX,OAAOT,MAAMzQ,QAAO,EAAIlG,iBAASoX,OAAOT,MAAM,GAAGU,gBAAkB,EACvH5C,OAAQ,MACRG,MAAO,GACPtC,KAAM,GACN7D,QAASzO,iBAASuN,GAClBsH,QAAS,EACT9J,KAAM/K,WAAS+K,KAAO/K,EAAQ+K,KAAKmB,KAAK,GAAG,EAAI,GAC/CsB,MAAOxN,EAAQwN,MAEf3G,YAAa,UACb2O,UAAY,yCAAyCxV,mBAAS2U,SAAT3U,cAAiB2W,QAAS,MAAO3W,mBAAS2U,OAAOgC,MAAM1L,KAAQ2L,KAAE7I,MAAQ,WAAxC/N,cAAkDyM,KAAO,YAC/IkJ,gBAAiB,yCAAyC3V,mBAAS2U,SAAT3U,cAAiB2W,QAAS,MAAO3W,mBAAS2U,OAAOgC,MAAM1L,KAAQ2L,KAAE7I,MAAQ,YAAxC/N,cAAmDyM,KAAO,YACrJkI,SAAQ3U,mBAAS2U,SAAT3U,cAAiB2W,QAAS,MAAO3W,mBAAS2U,SAAT3U,cAAiB2W,MACvD9J,OAAOgK,GAAQA,EAAKpK,MAAQoK,EAAKC,OACjCpK,IAAamK,IAAA,CACZE,IAAK,sCAAwCF,EAAKpK,KAClDsB,KAAM8I,EAAK9I,KACX+I,MAAOD,EAAKC,KACd,IAAM,CAAE,EACVpC,UAAS1U,mBAASoX,SAATpX,cAAiB2W,QAAS,MAAO3W,mBAASoX,SAATpX,cAAiB2W,MACxD9J,OAAegK,KAAKS,aACpB5K,IAAamK,IAAA,CACZU,KAAMV,EAAKS,YACXvJ,KAAM,+BACR,IAAM,GAKV,GAIFyJ,qCAA8BA,CAACC,EAAcC,IAAwB,WAC5D,OACL5G,YAAa2G,iBAAO3G,YACpBqG,WAAUM,mBAAOL,SAAPK,cAAed,QAAQ,OAAQc,iBAAOL,OAAOT,MAAMzQ,QAAO,EAAIuR,iBAAOL,OAAOT,MAAM,GAAGU,gBAAkB,EACjH5C,OAAQ,MACRG,MAAO,GACPtC,KAAM,GACN7D,QAASgJ,iBAAOlK,GAChBsH,QAAS,EACT9J,KAAM0M,WAAO1M,KAAO0M,EAAM1M,KAAKmB,KAAK,GAAG,EAAI,GAC3CsB,MAAOiK,iBAAOjK,MACdmK,UAAW,YAAaF,iBAAOlK,IAE/B1G,YAAa,QACb2O,UAAW,wCAAwCiC,mBAAO9C,OAAOgC,MAAM1L,KAAQ2L,KAAE7I,MAAQ,WAAtC0J,cAAgDhL,MACnGkJ,gBAAiB,wCAAwC8B,mBAAO9C,OAAOgC,MAAM1L,KAAQ2L,KAAE7I,MAAQ,YAAtC0J,cAAiDhL,MAC1GkI,OAAQ8C,iBAAO9C,OAAOgC,MACnB9J,OAAOgK,GAAQA,EAAKpK,MAAQoK,EAAKC,OACjCpK,IAAamK,IAAA,CACZE,IAAK,sCAAwCF,EAAKpK,KAClDsB,KAAM8I,EAAK9I,KACX+I,MAAOD,EAAKC,SAEhBpC,QAAS+C,iBAAOL,OAAOT,MACpB9J,UAAegK,EAAKS,cAAgBI,EAAYb,EAAK9I,MAAQ,UAAY8I,EAAK9I,MAAQ,SACtFrB,IAAamK,IAAA,CACZU,KAAMV,EAAKS,YACXvJ,KAAM,kCACN,CAKN,GAGF6J,kCAA2BA,CAACC,EAA4BH,IAClDG,EAAaJ,MACR,KAAKD,4BAA4BK,EAAaJ,MAAOC,CAAS,EAC5DG,EAAa7X,QACf,KAAKkX,8BAA8BW,EAAa7X,OAAO,EACrD6X,EAAaZ,OACf,KAAKD,6BAA6Ba,EAAaZ,MAAM,EACnDY,EAAapB,OACf,KAAKD,6BAA6BqB,EAAapB,MAAM,EAEvD,CACLjJ,MAAO,cAOXsK,6BAAsB,MAAO,CAC3BrK,aACAsK,WACAC,QACAhE,cAMyC,CACrC,KAAC+D,WAAU7R,QACb,MAAO,GAGHqN,QAAW,oBAAoB9F,CAAU,GACzCnC,EAAMD,GAAU,GAAGtN,EAAIE,gBAAgB,GAAGsV,CAAQ,GAAI,CAAEyE,QAAOC,UAAWF,EAAU,EACpFjJ,EAAW,MAAMoJ,MAAM5M,CAAG,EAC1ByD,EAAQ,MAAMF,GAAeC,CAAQ,EAE3C,GAAI,CAACC,EAAM,MAAM,IAAIhM,MAAM,8CAA8C0K,CAAU,EAAE,EAErF,OAAQsB,EAAK9M,UAAY,IAAIyK,IAAK9F,GAAS,KAAKkO,mBAAmB,CAAElO,OAAMoN,UAAU,EAAC,IAMxFmE,sBAAe,MAAO,CACpB5K,KACAyK,QACAI,cACApE,cAMuC,OAIjCqE,QAAS,MADMtG,GAAgBgB,EAAoB,EACvBuF,MAA2C,CAC3EC,QAAS,CACPC,QAASxE,EACL,CACE,gBAAiBA,CAEnBzO,QACN,EACA+S,MAAO1F,GAEP6F,UAAW,CAAElL,GAAIA,EAAG7H,QAAQ,WAAW,EAAE,CAAE,EAC3CgT,YAAa,WACd,EAED,GAAIL,EAAOM,OACH,UAAI5V,MAAM,qBAAqB,EAEjC0U,SAAQY,IAAOtJ,OAAPsJ,cAAaZ,MAC3BmB,QAAQ7O,IAAI,gBAAgB,EAC5B6O,QAAQ7O,IAAI0N,CAAK,EAIXoB,QAA6B,KAAKjB,yBAAyBS,EAAOtJ,KAAMxB,EAAGR,WAAW,UAAU,CAAC,EACvG6L,eAAQ7O,IAAI,8BAA8B,EAC1C6O,QAAQ7O,IAAI8O,CAA0B,EAqB/BA,IAMTC,kCAA2B,MAAO,CAChCvL,KACAyD,SACA+H,SACAC,WACAhF,cAOuC,CACvC,MAAMT,EAAW,aAAavC,CAAM,UAAUzD,CAAE,iBAC1CjC,EAAMD,GAAU,GAAGtN,EAAIE,gBAAgB,GAAGsV,CAAQ,GAAI,CAAEyF,WAAUC,QAASF,EAAQ,EACnFjK,EAAW,MAAMoJ,MAAM5M,CAAG,EAE1B4N,GADQ,MAAMrK,GAAeC,CAAQ,GACpB7M,SAAS,CAAC,EAEjC,GAAI,CAACiX,EAAiB,UAAInW,MAAM,qBAAqB,EAErD,OAAO,KAAK+R,mBAAmB,CAAElO,KAAMsS,EAAWlF,WAAU,IAQ9DmF,mBAAY,MAAO5L,EAAY6L,EAA0B,KAAoC,eAC3F,GAAI,CAAC7L,EACG,UAAIxK,MAAM,uBAAuB,EAKnCsV,QAAS,MADMtG,GAAgBgB,EAAoB,EACvBuF,MAA2C,CAC3EA,MAAO1F,GAEP6F,UAAW,CAAElL,IAAO,EACpBmL,YAAa,WACd,EAEDE,QAAQ7O,IAAI,gBAAgB,EACpBA,aAAIsO,mBAAQtJ,OAARsJ,cAAcpB,MAAM,EAEhC,IAAIoC,EAAiB,GACrBhB,sBAAQtJ,OAARsJ,cAAcpB,SAAdoB,QAAsBiB,QAAQ3C,MAAM9M,QAAkB4M,GAAA,CAC7CT,WAASW,MAAM9M,QAA0B0P,GAAA,CAC9CF,IACD,IAGH,MAAMG,EAAoB,CACxBC,YAAWpB,IAAOtJ,KAAKkI,SAAZoB,cAAoB9K,KAAM,GACrCmM,cAAeL,EACfM,eAActB,IAAOtJ,KAAKkI,SAAZoB,cAAoBiB,QAAQ3C,MAAMzQ,SAAU,EAC1D0T,eAAgBP,EAAiB,GACjCC,QAAS,IAKT,IACI/F,QAAW,gBAAgBhG,CAAE,GAC7BjC,EAAMD,GAAU,GAAGtN,EAAIE,gBAAgB,GAAGsV,CAAQ,GAAI6F,CAAM,EAC5DtK,EAAW,MAAMoJ,MAAM5M,CAAG,OACvB,CAAC,CAELkO,WAOPK,6BAAsB,MAAO9B,GAA+E,SAEpGzM,QAAM,GAAGvN,EAAIE,gBAAgB,0BAAyB8Z,EAAS7L,KAAK,GAAG,CAAC,GAC9E0M,QAAQ7O,IAAIuB,CAAG,EAET+H,QAAU0E,EAAS,CAAC,EAWnB,OACJ1E,QAAU,CAAI,CACb,YAAagF,MAVF,MADMtG,GAAgBgB,EAAoB,EACvBuF,MAA2C,CAC3EA,MAAO1F,GAEP6F,UAAW,CAAElL,GAAI8F,CAAQ,EACzBqF,YAAa,WACd,GAKuB3J,KAAK/O,UAAZqY,cAAqB5B,SAArB4B,cAA6ByB,WAAY,MACtD,eAAkB,EAClB,cAAiB,KAChB,EAEL,GAyBFC,qBAAc,MAAO,CACnBxP,WACAyP,aACAC,YAAYnH,GACZoH,UACAlG,cAOqC,OACrC,GAAI,CAACzJ,EACG,UAAIxH,MAAM,uBAAuB,EAOnCwQ,QAAW,gBAAgBhJ,CAAQ,YACnCe,EAAMD,GAAU,GAAGtN,EAAIE,gBAAgB,GAAGsV,CAAQ,GAAI,CAC1D4G,YAAaH,EACb/D,WAAYgE,EACZG,SAAUF,EACX,EACDtB,QAAQ7O,IAAIuB,CAAG,EAIT+M,QAAS,MADMtG,GAAgBgB,EAAoB,EACvBuF,MAA2C,CAC3EC,QAAS,CACPC,QAASxE,EACL,CACE,gBAAiBA,CAEnBzO,QACN,EACA+S,MAAO1F,GAEP6F,UAAW,CAAElL,GAAIhD,CAAS,EAC1BmO,YAAa,WACd,EAED,GAAIL,EAAOM,OACH,UAAI5V,MAAM,qBAAqB,EAEjCsX,SAAQhC,IAAOtJ,OAAPsJ,cAAapB,OAC3B2B,QAAQ7O,IAAI,sBAAsB,EAClC6O,QAAQ7O,IAAIsQ,CAAK,EAEjB,MAAMrE,EAAW,GACVsD,mBAAQ3C,MAAM9M,QAAkB4M,GAAA,CAC9BT,WAASW,MAAM9M,QAA0B0P,GAAA,CAC1CvD,EAAS9P,OAAS+T,GACtBjE,EAASsE,KAAM,CACb,GAAG,KAAKpD,8BAA8BqC,CAAc,EACpDxD,aAAcU,EAAOC,MACrB9L,cAAe2O,EAAe7C,MAC/B,CAAE,CAEJ,IAGL,MAAMH,EAAa,CACjBpW,KAAM6Z,EAAa,EACnB/D,WAAYgE,EACZ/D,MAAOF,EAAS9P,QAAU,GAG3B0S,eAAQ7O,IAAIwM,CAAU,EAEd,CACLP,WACAO,aACF,GAcFgE,+BAAwB,MAAO,CAC7BhQ,WACAwL,eACAiE,aACAC,YAAYnH,GACZkB,cAOqC,CACrC,GAAI,CAACzJ,EACG,UAAIxH,MAAM,uBAAuB,EAGzC6V,QAAQ7O,IAAI,KAAK,EAEjB,MAAMwJ,EAAW,gBAAgBhJ,CAAQ,YAAYwL,CAAY,YAC3DzK,EAAMD,GAAU,GAAGtN,EAAIE,gBAAgB,GAAGsV,CAAQ,GAAI,CAAE4G,YAAaH,EAAY/D,WAAYgE,EAAW,EAExGnL,EAAW,MAAMoJ,MAAM5M,CAAG,EAC1BwK,EAAe,MAAMjH,GAAeC,CAAQ,EAElD,OAAO,KAAK+G,kBAAkBC,EAAa9B,EAAU+B,CAAY,IAGnEyE,uBAAgB,MAAOjN,GAAmE,CACxF,GAAI,CAACA,EACG,UAAIxK,MAAM,4BAA4B,EAG9C,MAAMuI,EAAMvN,EAAIE,iBAAmB,6BAA6BsP,CAAE,QAC5DuB,EAAW,MAAMoJ,MAAM5M,EAAK,CAAEmP,YAAa,OAAQ,EAEjD,aAAM5L,GAAeC,CAAQ,IAKvC4L,yBAAkB,MAAOtB,EAA4B,GAAIpF,EAAmBjW,EAAIM,uBAAwD,WAIhIga,QAAS,MADMtG,GAAgBgB,EAAoB,EACvBuF,MAAuD,CACvFC,QAAS,CACTC,QAASxE,EACN,CACE,gBAAiBA,CAEnBzO,QACL,EACA+S,MAAO5F,GACP+F,UAAW,CAAEkC,QAAUvB,EAAOwB,QAAU,EAAG,EAC3ClC,YAAa,WACZ,EAEKmC,EAAkC,CACtC/J,YAAa,iBAGf+J,SAAsB5Y,SAAW,IAEjCoW,IAAOtJ,KAAK+L,SAAZzC,QAAoB1B,MAAM9M,QAAkBjD,GAAA,CAC1CgS,QAAQ7O,IAAInD,CAAI,EAChBiU,EAAsB5Y,SAASqY,KAAK,KAAK9C,4BAA4B5Q,CAAI,CAAC,KAE5EyR,IAAOtJ,KAAKiH,WAAZqC,QAAsB1B,MAAM9M,QAAkBjD,GAAA,CAC5CgS,QAAQ7O,IAAInD,CAAI,EAChBiU,EAAsB5Y,SAASqY,KAAK,KAAK9C,4BAA4B5Q,CAAI,CAAC,KAE5EyR,IAAOtJ,KAAKgM,UAAZ1C,QAAqB1B,MAAM9M,QAAkBjD,GAAA,CAC3CgS,QAAQ7O,IAAInD,CAAI,EAChBiU,EAAsB5Y,SAASqY,KAAK,KAAK9C,4BAA4B5Q,CAAI,CAAC,IAGrEiU,IAOTG,yBAAkB,MAAOzN,EAAa6L,EAA4B,CAAIpF,IAAmBjW,EAAIM,uBAAwD,SAKnJ,GAHQ0L,YAAI,mBAAqBwD,CAAE,EAG/B,CAACA,EACIhI,OAGX,GAAIgI,GAAM,iBACD,YAAKmN,gBAAgBtB,EAAQpF,CAAQ,EAKxCqE,QAAS,MADMtG,GAAgBgB,EAAoB,EACvBuF,MAAuD,CACvFC,QAAS,CACPC,QAASxE,EACL,CACE,gBAAiBA,CAEnBzO,QACN,EACA+S,MAAOzF,GACP4F,UAAW,CAAElL,IAAQ,EACrBmL,YAAa,WACd,EAED,GAAIL,EAAOM,OACH,UAAI5V,MAAM,qBAAqB,EAEjCkY,SAAa5C,IAAOtJ,OAAPsJ,cAAa4C,WAChCrC,QAAQ7O,IAAI,gBAAgB,EAC5B6O,QAAQ7O,IAAIkR,CAAU,EAGpB,MAAMJ,EAAkC,CACtC/J,aAAamK,iBAAYnK,cAAe,GAMxCtD,MAAO,YAEP0N,qBAAsB,MACtB7F,WAAY,kBAIdwF,SAAsB5Y,SAAW,IAErBkZ,mCAAOxE,MAAM9M,QAAkBjD,GAAA,CAEzC,OADAgS,QAAQ7O,IAAInD,CAAI,EACRA,EAAKwU,aAAY,CACvB,IAAK,QACCxU,EAAK6Q,OAAO,MACdoD,EAAsB5Y,SAASqY,KAAK,KAAK9C,4BAA4B5Q,EAAK6Q,KAAK,CAAC,EAElF,MACF,IAAK,UACG7Q,EAAK5G,SAAS,MAChB6a,EAAsB5Y,SAASqY,KAAK,KAAKpD,8BAA8BtQ,EAAK5G,OAAO,CAAC,EAEtF,MACJ,IAAK,SACG4G,EAAKqQ,QAAQ,MACf4D,EAAsB5Y,SAASqY,KAAK,KAAKtD,6BAA6BpQ,EAAKqQ,MAAM,CAAC,EAEpF,KACN,IAIF2B,QAAQ7O,IAAI,4BAA4B,EACxC6O,QAAQ7O,IAAI8Q,CAAqB,EAC1BA,CAO8D,GAGvEQ,wBAAiB,MAAO,CAAE9N,KAAIyD,SAAQgD,cAA4G,CAI5I,GAFIjK,YAAI,kBAAoBwD,CAAE,EAE9B,CAACA,GAAM,CAACyD,EACJ,UAAIjO,MAAM,kCAAkC,EAGpD,MAAMwQ,EAAW,aAAavC,CAAM,kBAAkBzD,CAAE,GAClDjC,EAAMD,GAAU,GAAGtN,EAAIE,gBAAgB,GAAGsV,CAAQ,GAAI,EAAE,EACxDzE,EAAW,MAAMoJ,MAAM5M,CAAG,EAC1ByD,EAAQ,MAAMF,GAAeC,CAAQ,EAEpC,YAAKqF,qBAAqBpF,EAAMiF,CAAQ,IAGjDsH,0BAAmB,MAAO,CAAEtK,SAAQoI,YAAiE,CAC7F7F,QAAW,aAAavC,CAAM,4BAE9B1F,EAAMD,GAAU,GAAGtN,EAAIE,gBAAgB,GAAGsV,CAAQ,GAAI,CAC1DgI,aAAcnC,EAAOoC,WACtB,EAEK1M,EAAW,MAAMoJ,MAAM5M,CAAG,EAC1ByD,EAAQ,MAAMF,GAAeC,CAAQ,EAEpC,YAAKiG,kBAAkBhG,CAAI,IAEtC,CAAC,GAAAoE,IChzBD,MAA8BsI,EAAe,CAY7C,CC4BA,MAA8BC,EAAe,CAOjC/M,YAAYgN,EAAkC,CAN/CA,mBAOP,KAAKA,SAAWA,CAClB,CA+CF,0BCjFA,MAAMC,GAASC,GACbC,GAAO,EAAEC,MAAM,CACbtN,QAASuN,EAAO,EAChBC,SAAUC,GAAO,CACnB,CAAC,CACH,EAAE,IAGmBC,IAAmBlJ,GADvCC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QASRyQ,GAAOxY,EAAgB,EAACuY,EAAA9W,OAAA,IAAAgX,GAAA,SAAAF,EAAAxQ,EAAA,QACxByQ,GAAOtJ,EAAU,EAACqJ,EAAA9W,OAAA,IAAAiX,GAAA,SAAAH,EAAAxQ,EAAA,QAClByQ,GAAOb,EAAc,EAACY,EAAA9W,OAAA,IAAAkX,GAAAC,QAAAC,uBAAAC,QAAA,EAAAC,GAAAH,QAAAC,SAAA3Z,4BAAAgQ,UAAApG,WAAAoG,GAAAyI,UAAA7O,WAAA6O,EAAA,GAAAxI,GAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,GAAAsJ,GAAAtJ,GAAA0J,GAAA1J,GAX3B,KACyC,CAOvCxE,YAC4BmD,EACNgL,EACIC,EACxB,CAVQC,mCAA4B,WAEnBF,qBACAC,yBACAE,yBAaTC,8BAAuB,MAAOC,EAA8BC,EAAepJ,IAA6D,CAChJ,MAAMqJ,EAAoB,MAAM,KAAKP,WAAWhF,oBAAoB,CAAErK,WAAY0P,EAAsBpF,SAAUqF,EAAKpJ,WAAU,EAG1HsJ,OAFuB1Q,OAAO2Q,aAAaF,GAAqB,IAAI3Q,IAAK9F,GAAS,CAACA,EAAK6H,QAAS7H,CAAI,CAAC,CAAC,CAEvG0W,GAICE,oCAA6B,MACrCL,EACAC,EACApJ,IACsD,CACtD,MAAMyJ,EAAkB,MAAM,KAAKX,WAAWjD,oBAAoBuD,CAAG,EAC/DM,EAAY9Q,OAAOwI,KAAKqI,GAAmB,CAAE,GAChD/Q,IAAa+Q,yCAAkB5R,KAAlB4R,cAAyB,KAAzBA,cAA6BhE,UAAS,EACnD5M,OAAO1F,OAAO,EACXwW,EAAiB,CAAC,GAAG,IAAIC,IAAIF,CAAS,CAAC,EACvCG,EAAc,MAAM,KAAKf,WAAWhF,oBAAoB,CAAErK,WAAY0P,EAAsBpF,SAAU4F,EAAgB3J,WAAU,EAS/H8J,OARiBlR,OAAOwI,KAAKqI,GAAmB,CAAE,GAAEvN,OAAO,CAAC6N,EAAKlS,IAAQ,SAC9E,MAAMmS,GAAeP,sBAAkB5R,KAAlB4R,cAAyB,KAAzBA,cAA6BhE,UAClD,OAAIuE,IACFD,EAAIlS,CAAG,EAAIgS,iBAAa5S,KAAakL,KAAG1H,UAAYuP,IAE/CD,CACT,EAAG,CAA+C,EAE3CD,GAuBTG,yBAAkB,MAAOC,EAAuBf,EAA8BnJ,IAAsB,CAC5FmK,QAAaD,EAAO,MAAM,KAAKE,2BAA2BF,CAAI,EAAI,MAAM,KAAKG,6BAG7EjB,EAAMe,EAAWzR,IAAI,CAAC,CAAE+B,aAAcA,CAAO,EAE/C,IAAC2O,EAAIlX,OACP,MAAO,GAGL,IACF,MAAMmX,EAAoB,MAAM,KAAKH,qBAAqBC,EAAsBC,EAAKpJ,CAAQ,EACvF6J,EAAc,MAAM,KAAKL,2BAA2BL,EAAsBC,EAAKpJ,CAAQ,EAEtFmK,SACJzR,IAAc9F,GAAA,CACP0X,QAAeT,iBAAcjX,EAAK6H,SAClC8P,EAAclB,EAAkBzW,EAAK6H,OAAO,EAElD,GAAI8P,EACK,YAAKC,uBAAuBF,GAAgBC,EAAa3X,EAAK6H,QAAS6P,iBAAc7P,QAAS7H,EAAKqV,QAAQ,CACpH,CACD,EACApP,OAAQjG,GAAmCO,EAAQP,CAAK,QACpDpD,EAAgB,CACvB2G,GAAS,sBAAuB,oCAAqC,CAAE3G,QAAO,CAChF,CAEA,MAAO,EAAE,GAGXib,+BAAyBC,GACvBA,EAAahS,IAAI,CAAC,CAAE+B,UAASwN,eAAgB,CAC3CxN,UACAwN,UACA,KAEJ0C,6BAAsB,MAAOD,EAAkCR,IAA0B,OACnFA,EACI,OAAAU,EAAA,KAAK3B,iBAAL,YAAA2B,EAAqBC,mBAAmB,CAC5CC,QAAS,KAAKL,sBAAsBC,CAAY,EAChDR,UAGI,WAAKnB,eAAegC,QAAQ,KAAK/B,0BAA2BgC,KAAKC,UAAU,KAAKR,sBAAsBC,CAAY,CAAC,CAAC,CAC5H,GAMFF,gCAAyBA,CAAC5X,EAAoB6H,EAAiBlE,EAA8B2U,KACpF,CACLzQ,UACAlE,WACAiD,MAAO5G,EAAK4G,MACZzC,KAAMnE,EAAKmE,KACXoM,SAAUvQ,EAAKuQ,SACf8E,SAAUiD,EACVzX,aAAcb,KAIlBuY,iCAA0BA,IAAM,SACvB,QAAAC,GAAAR,EAAA,KAAK3B,iBAAL,YAAA2B,EAAqBjD,WAArB,YAAAyD,EAA+Bxd,qBAAsBZ,KAW9Dqe,kBAAW,MAAOzY,EAAoB0Y,EAAsCJ,EAA8BR,IAAqC,CAC7I,GAAI,CAACQ,EAAe,OAEdK,QAAmB,KAAKf,uBAAuBc,GAAc1Y,EAAMA,EAAK6H,QAAS6Q,iBAAY7Q,QAASyQ,CAAa,EAEnHM,EAAiBd,EAAa7R,OAAO,CAAC,CAAE4B,UAASlE,cAC9CkE,IAAY8Q,EAAiB9Q,UAAY,CAAClE,GAAYA,IAAagV,EAAiBhV,SAC5F,EAEDiV,SAAeC,QAAQF,CAAgB,EACxBG,SAAO,KAAKP,wBAAyB,GAE7CK,IA/IP,KAAK1C,WAAaA,EAClB,KAAKC,eAAiBA,EACjBE,oBAAiB/Z,GAAewY,GAAgB5J,CAAe,CACtE,CAiCU6N,qBAAqBb,EAAkB,CAC/C,OAAIA,GAAWlD,GAAOgE,aAAad,CAAO,EACjCA,EAGF,EACT,CAEA,MAAgBV,2BAA2BF,EAAgB,CACzD,MAAMY,EAAU,MAAM,KAAK7B,eAAegB,gBAAgB,CAAEC,OAAM,EAE3D,YAAKyB,qBAAqBb,CAAO,CAC1C,CAEA,MAAgBT,4BAA6B,CAC3C,MAAMS,EAAU,MAAM,KAAK/B,eAAe8C,QAAQ,KAAK7C,0BAA2B,EAAI,EAE/E,YAAK2C,qBAAqBb,CAAO,CAC1C,CA2FF,CAAC,GAAA3L,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,cCjL+D,IAG3C2M,IAAyB7M,GAD7CC,KAAYD,GAAAE,GAAb,KAC+C,CAD/C,cAEY4M,kBAAW,MAAUzU,EAAa0U,EAAgB,GAAIC,IAStD,MARS,MAAM/H,MAAM5M,EAAK,CAChC5H,OAAQ,OACR8U,QAAS,CACP0H,cAAeD,EAAM,UAAUA,CAAG,GAAK,EACzC,EACAD,KAAMhB,KAAKC,UAAUe,CAAI,EAC1B,GAEsBhR,QAGzBmR,uBAAgB,MAAOC,EAAc7S,EAAY0S,EAAc7G,EAAyBhB,IAAyB,CAC/G,MAAMrJ,EAAO,MAAM,KAAKgR,SAA2B,GAAGK,CAAI,UAAU7S,CAAE,QAAQ6K,EAAc,QAAQA,CAAW,GAAK,EAAE,GAAIgB,EAAQ6G,CAAG,EAErI,GAAI,CAAClR,EAAKsR,SAAgB,UAAItd,MAAM,cAAc,EAElD,OAAOgM,EAAKiJ,QAEhB,CAAC,GAAA7E,uBCpBD,MAAMmN,GAAqB,iBACrBC,GAAmB,eAEnBC,GAAgB,CACpBxR,KAAM,mBACNyR,KAAM,mCACR,SAQE,IAGmBC,IAAazN,GADjCC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QAMEyQ,GAAOb,EAAc,EAACY,EAAA9W,OAAA,IAAAgX,GAAAG,QAAAC,uBAAAC,QAAA,EAAAJ,GAAAE,QAAAC,qCAAAlB,GAAA,IAAA7O,OAAA6O,EAAA,CAAAxI,KAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,IANrCyL,GAAA,KACmC,CAKjCjQ,YAAoCoO,EAAgC,CAJjDA,yBAET4D,uBAAgB,IAM1BC,eAASD,GAA2B,CAClC,KAAKA,cAAgBA,IAGfE,oBAAaA,IAAO,KAAKF,cAAgB,oCAAsC,6BAEvFG,kBAAWA,CAAC9I,EAAe+I,EAAe,GAAIC,IACrC,KAAKjE,eAAegC,QAAQuB,GAAoBtB,KAAKC,UAAU,CAAEjH,QAAO+I,eAAcC,UAAS,EAAG,EAAK,GAGhHjB,kBAAW,SAAY,CACrB,MAAMkB,EAAc,MAAM,KAAKlE,eAAe8C,QAAQS,GAAoB,GAAM,EAAK,EAErF,OAAIW,GAIG,CAAEjJ,MAAO,GAAI+I,aAAc,GAAIC,QAAS,EAAE,GAGnDE,qBAAc,SAAY,CACxB,MAAMC,QAAQC,IAAI,CAAC,KAAKrE,eAAesE,WAAWf,EAAkB,EAAG,KAAKvD,eAAesE,WAAWd,EAAgB,CAAC,CAAC,IAG1He,yBAAkB,SAAY,CACtBL,QAAc,MAAM,KAAKlB,WAExB,OAAC,CAACkB,EAAYjJ,OAASiJ,EAAYD,QAAU5b,KAAKC,IAAQ,QAG3Dkc,wBAAiB,MACvB9U,EAAe,IACf/I,EAAS,MACTsc,EACA,CAAEnZ,cAAc,OAAQ2a,eAAe,OAAQC,qBAAqB,GAAOC,YAAWC,sBAAsB,IAA0B,GACtIC,IACG,OACH,MAAMpJ,EAAkC,CACtC,eAAgBgI,GAAc3Z,CAAW,GAG3C,GAAI4a,EAAoB,CAChBR,QAAc,MAAM,KAAKlB,WAE3BkB,EAAYjJ,QACNkI,gBAAgB,UAAUe,EAAYjJ,KAAK,GAEvD,CAEM6J,QAAW,IAAIlW,gBAEjBqU,GACKpU,eAAQoU,CAAI,EAAEnW,QAAQ,CAAC,CAACgC,EAAK7E,CAAK,IAAM,EACzCA,GAASA,IAAU,KACjB,OAAOA,GAAU,SACZ4E,eAAQ5E,CAAwC,EAAE6C,QAAQ,CAAC,CAACiY,EAAUC,CAAU,IAAM,CAClFC,SAAO,GAAGnW,CAAG,IAAIiW,CAAQ,IAAKC,EAAW1V,UAAU,EAC7D,EAEDwV,EAASG,OAAOnW,EAAK7E,EAAMqF,SAAU,GAEzC,CACD,EAGG4V,QAAW,GAAGxV,EAAKM,WAAW,MAAM,EAAIN,EAAO,GAAG,KAAKoU,WAAY,IAAGpU,CAAI,EAAE,GAChFmV,EAAe,IAAI,IAAIjW,gBAAgBiW,CAAsC,EAAEvV,SAAU,IAAK,EAAE,GAG5F6V,EAAO,MAAMhK,MAAM+J,EAAU,CACjCzJ,UACAkJ,YACAhe,SACAsc,KAAMA,GAAQ6B,EAASxV,SAAS,EACjC,EAEK8V,EAAY,OAAMD,IAAKV,KAALU,uBAEpB,IAACA,EAAKjT,GACF,MAAEH,SAAU,CAAEC,KAAMoT,CAAU,GAGtC,OAAIR,EACK,CAAE,GAAGO,EAAMnT,KAAMoT,GAGnBA,IAGTC,aAAM,CAAI3V,EAAc3P,EAA0B8kB,IAChD,KAAKL,eAAe9U,EAAM,MAAOlH,OAAWzI,EAAS8kB,CAAY,GAEnES,eAAQ,CAAI5V,EAAcuT,EAAgCljB,IAA6B,KAAKykB,eAAe9U,EAAM,QAASuT,EAAMljB,CAAO,GAEvIwlB,aAAM,CAAI7V,EAAcuT,EAAgCljB,IAA6B,KAAKykB,eAAe9U,EAAM,MAAOuT,EAAMljB,CAAO,GAEnIylB,cAAO,CAAI9V,EAAcuT,EAAgCljB,IAA6B,KAAKykB,eAAe9U,EAAM,OAAQuT,EAAMljB,CAAO,GAErI0lB,gBAAS,CAAI/V,EAAc3P,EAA0BkjB,IAAmC,KAAKuB,eAAe9U,EAAM,SAAUuT,EAAMljB,CAAO,GArGvI,KAAKigB,eAAiBA,CACxB,CA+GF,EATE0F,EA9GF7D,GA8GS8D,gBAAiBlf,GAAsC,aAC5D,OACE,OAAOA,GAAU,UACjBA,IAAU,MACV,aAAcA,GACd,QAAQA,OAAmBsL,WAAnBtL,cAA6BuL,OAA7BvL,cAAmCoL,OAAS,UACpD,QAAQpL,OAAmBsL,WAAnBtL,cAA6BuL,OAA7BvL,cAAmCF,UAAY,WApH7Dsb,GAuHC,GAAAzL,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,uBCvI4D,IAGxCwP,IAAqB1P,GADzCC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QAIEyQ,GAAOoE,EAAa,EAACrE,EAAA9W,OAAA,IAAAgX,GAAAG,QAAAC,uBAAAC,QAAA,EAAAJ,GAAAE,QAAAC,qCAAA+D,GAAA,IAAA9T,OAAA8T,EAAA,CAAAzN,KAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,GAJpC,KAC2C,CAGzCxE,YAAmCmO,EAA2B,CAF3CA,qBAMnB8F,0BAAmB,MAAOC,EAAmB,GAAIxP,IAAoB,CAC/D,IAYF,OAXa,MAAM,KAAKyJ,WAAWsF,IACjC,2BACA,CACEX,mBAAoB,IAEtB,CACEqB,cAAeD,EACfrO,SAAUnB,EAEd,GAEY2E,WACN,CACA,UAAIjV,MAAM,cAAc,CAChC,IAGFggB,0BAAqC,MAAO,CAAE/R,YAAa,CACrD,IAIKjC,OAHM,MAAM,KAAK+N,WAAWsF,IAAmB,aAAapR,CAAM,gBAAiB,CACxFyQ,mBAAoB,MAAM,KAAK3E,WAAWwE,gBAAgB,EAC3D,CACMvS,MACD,CACA,UAAIhM,MAAM,gCAAgC,CAClD,IA9BA,KAAK+Z,WAAaA,CACpB,CA+BF,CAAC,GAAA3J,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,6BC9BD,MAAMyI,GAASC,GACbC,GAAO,EAAEC,MAAM,CACbtN,QAASuN,EAAO,CAClB,CAAC,CACH,EAAE,IAGmBgH,IAAe/P,GADnCC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QASRyQ,GAAOxY,EAAgB,EAACuY,EAAA9W,OAAA,IAAAgX,GAAA,SAAAF,EAAAxQ,EAAA,QACxByQ,GAAOtJ,EAAU,EAACqJ,EAAA9W,OAAA,IAAAiX,GAAA,SAAAH,EAAAxQ,EAAA,QAClByQ,GAAOb,EAAc,EAACY,EAAA9W,OAAA,IAAAkX,GAAAC,QAAAC,uBAAAC,QAAA,EAAAC,GAAAH,QAAAC,SAAA3Z,4BAAAgQ,UAAApG,WAAAoG,GAAAyI,UAAA7O,WAAA6O,EAAA,GAAAxI,GAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,GAAAsJ,GAAAtJ,GAAA0J,GAAA1J,GAX3B,KACqC,CAOnCxE,YAC4BmD,EACNgL,EACIC,EACxB,CAVMkG,+BAAwB,aAEbnG,qBACAC,yBACAE,yBAgCnBiG,sBAAe,MAAOhF,EAAuBiF,EAAuBnP,IAAsB,CAElF+D,SADamG,EAAO,MAAM,KAAKkF,wBAAwBlF,CAAI,EAAI,MAAM,KAAKmF,2BACpD3W,IAAI,CAAC,CAAE+B,aAAcA,CAAO,EAExD,GAAI,CAACsJ,EACH,MAAO,GAGL,IAGMuL,OAFc,MAAM,KAAKxG,WAAWhF,oBAAoB,CAAErK,WAAY0V,EAAepL,WAAU/D,WAAU,GAExF,CAAItH,UAAc,KAAK6W,eAAe3c,CAAI,CAAC,QAC7DpD,EAAgB,CACvB2G,GAAS,kBAAmB,0BAA2B,CAAE3G,QAAO,CAClE,CAEA,MAAO,EAAE,GAGXggB,4BAAsBrhB,GACbA,EAAUuK,IAAI,CAAC,CAAE+B,cAAe,CAAEA,SAAU,KAGrDgV,0BAAmB,MAAOthB,EAAuB+b,IAA0B,OACzE,GAAIA,EACK,OAAAU,EAAA,KAAK3B,iBAAL,YAAA2B,EAAqB8E,gBAAgB,CAC1CvhB,UAAW,KAAKqhB,mBAAmBrhB,CAAS,EAC5C+b,SAGI,WAAKnB,eAAegC,QAAQ,KAAKkE,sBAAuBjE,KAAKC,UAAU,KAAKuE,mBAAmBrhB,CAAS,CAAC,CAAC,CAClH,GAGFwhB,8BAAuBA,IAAM,SACpB,QAAAvE,GAAAR,EAAA,KAAK3B,iBAAL,YAAA2B,EAAqBjD,WAArB,YAAAyD,EAA+Bxd,qBAAsBZ,KAG9DuiB,wBAAkB3c,IACT,CACL6H,QAAS7H,EAAK6H,QACdjB,MAAO5G,EAAK4G,MACZzC,KAAMnE,EAAKmE,KACXoM,SAAUvQ,EAAKuQ,SACf1P,aAAcb,KArEhB,KAAKkW,WAAaA,EAClB,KAAKC,eAAiBA,EACtB,KAAKE,eAAiB/Z,GAAewY,GAAgB5J,EAAiB,EAAK,CAC7E,CAEU8R,kBAAkBzhB,EAAoB,CAC9C,OAAIA,GAAayZ,GAAOgE,aAAazd,CAAS,EACrCA,EAGF,EACT,CAEA,MAAgBihB,wBAAwBlF,EAAgB,OACtD,MAAM/b,EAAY,OAAMyc,EAAA,KAAK3B,iBAAL,YAAA2B,EAAqBsE,aAAa,CAAEhF,UAErD,YAAK0F,kBAAkBzhB,CAAS,CACzC,CAEA,MAAgBkhB,yBAA0B,CACxC,MAAMlhB,EAAY,MAAM,KAAK4a,eAAe8C,QAAQ,KAAKoD,sBAAuB,EAAI,EAE7E,YAAKW,kBAAkBzhB,CAAS,CACzC,CAiDF,CAAC,GAAAgR,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,ICtGD,MAAM0Q,GAAmC/H,GAAO,CAC9C9N,UAAWgO,EAAO,EAAE8H,YAAY,EAChCtW,MAAOwO,EAAO,EAAE8H,YAAY,EAC5BrjB,SAAUsjB,GAAQ,EAAED,YAAY,EAChCE,gBAAiBhI,IAASiI,WAAWH,YAAY,EACjD/V,KAAMmW,GAAQC,QAAM,CAAC,WAAY,oBAAqB,YAAa,cAAc,CAAC,EAClFC,OAAQtI,GAAO,EAAEgI,YAAY,CAC/B,CAAC,EAAEO,QAAQ,EAELC,GAA6BxI,GAAO,EAAEC,MAAM,CAChD9N,MAAO+N,EAAO,EAAEqI,QAAQ,EACxBrW,UAAWgO,EAAO,EAAEqI,QAAQ,EAC5BE,WAAYvI,EAAO,EAAE8H,YAAY,EACjC/V,KAAMmW,GAAM,EAAEC,MAAM,CAAC,WAAY,eAAgB,OAAO,CAAC,EAAEL,YAAY,EACvEM,OAAQtI,GAAO,EAAEgI,YAAY,CAC/B,CAAC,EAEKU,GAAqC1I,GAAO,CAChD2I,wBAAyBzI,EAAO,EAAEiI,SAAS,EAC3CS,eAAgB1I,EAAO,EAAEiI,SAAS,EAClC9G,qBAAsBnB,EAAO,EAAEiI,SAAS,EACxCd,cAAenH,EAAO,EAAEiI,SAAS,CACnC,CAAC,EAEKU,GAAiC7I,GAAO,CAC5CvO,GAAIyO,EAAO,EAAEiI,SAAS,EACtBW,aAAc5I,EAAO,EAAEiI,SAAS,EAChCY,YAAa7I,EAAO,EAAEiI,SAAS,EAC/B3S,WAAYyS,KAAUe,QAAQ,EAAI,CACpC,CAAC,EAEKC,GAA2BjJ,GAAO,CACtCvK,SAAUyK,EAAO,EAAEiI,SAAS,EAC5BzS,QAAS0K,GAAO,EAAE+H,SAAS,EAC3B3S,WAAYyS,KAAUe,QAAQ,EAAI,CACpC,CAAC,EAEKE,GAAmClJ,GAAO,CAC9CkI,gBAAiBhI,EAAO,EAAEiI,SAAS,EACnCgB,eAAgBjJ,EAAO,EAAEiI,SAAS,EAClCiB,iBAAkBlJ,EAAO,EAAEiI,SAAS,EACpCkB,WAAYnJ,EAAO,EAAEiI,SAAS,CAChC,CAAC,EAEYmB,GAAiCtJ,GAAO,CACnDvO,GAAIyO,EAAO,EAAE8H,YAAY,EACzBjT,SAAUmL,EAAO,EAAE8H,YAAY,EAC/BhT,YAAakL,EAAO,EAAEqI,QAAQ,EAC9BgB,eAAgBrJ,EAAO,EAAEiI,SAAS,EAClCqB,WAAYtJ,EAAO,EAAEiI,SAAS,EAC9BsB,iBAAkBrB,KAAQC,MAAM,CAAC,OAAQ,MAAM,CAAC,EAAEL,YAAY,EAC9D0B,SAAUxJ,EAAO,EAAEiI,SAAS,EAC5BjT,OAAQgL,EAAO,EAAEqI,QAAQ,EACzBpT,OAAQ6K,GAAO,CACb2J,OAAQzJ,IAAS8H,cAAcG,SAAS,CACzC,GAAEH,YAAY,EACf5S,QAAS2K,KAAQ6J,GAAG7B,EAAa,EACjC1S,KAAM0K,KAAQ6J,GAAGpB,EAAU,EAC3B7S,QAASuT,GAAclB,YAAY,EACnCnI,SAAU6I,GAAeV,YAAY,EACrC1S,aAAc0K,GAAO,CACnBzK,OAAQsT,GAAab,YAAY,EACjChiB,IAAKijB,GAAUjB,YAAY,CAC5B,GAAEA,YAAY,EACf6B,eAAgB7J,GAAO,CACrB9M,KAAMgN,IAAS8H,cAAcG,SAAS,EACtC2B,IAAK5J,IAAS8H,cAAcG,SAAS,CACtC,GAAEH,YAAY,EACfM,OAAQtI,GAAO,EAAEgI,YAAY,EAC7B+B,sBAAuB/J,GAAO,EAAEC,MAAM,CAEpCqE,KAAMpE,EAAO,EAAEpZ,SAAS,EACxBwV,YAAa4D,EAAO,EAAE8H,YAAY,EACnC,EACDgC,kBAAmBhK,GAAO,EACvBC,MAAM,CACL1M,YAAa2M,IAASmI,MAAM,CAAC,OAAQ,WAAY,UAAW,MAAM,CAAC,EAAEL,YAAY,EACjFiC,IAAKjK,GAAO,CACVkK,gBAAiBhK,EAAO,CACzB,GAAE8H,YAAY,CAChB,GACAA,YAAY,CACjB,CAAC,EAAEO,QAAQ,EChFJ,MAAM4B,WAAiBljB,KAAM,CAGlC4L,YAAYrL,EAAiB4iB,EAAkB,CAC7C,MAAM5iB,CAAO,EAHf4iB,kBAIE,KAAK/iB,KAAO,WACZ,KAAK+iB,QAAUA,CACjB,CACF,i6CCJA,IAKqBC,IAAalT,GADjCC,KAAYD,GAAAE,GAAb,KACmC,CADnC,cAEYiT,qBAAcroB,EAAIE,kBAGlBooB,wBAAyB,CACjC9Y,GAAI,GACJsD,SAAU,GACVC,YAAa,GACbE,OAAQ,GACRC,OAAQ,CACNwU,OAAQ,kBACV,EACAvU,QAAS,CAAE,EACXC,KAAM,CAAE,EACRC,aAAc,CAAC,EACfK,QAAS,CACP0T,WAAY,EACd,EACAxJ,SAAU,CAAC,IAGH2K,sBAAgB1V,GAA2B,CAC7C,MAAEM,UAASL,UAAaD,IACxB2V,EAAiBrV,EAAQxE,IAAKwE,GAAYtE,OAAO4Z,OAAO,CAAE/lB,SAAU,IAASyQ,CAAO,CAAC,EAEpF,OAAE,GAAGN,EAAQC,SAAUA,GAAY4V,GAAQC,EAAE,0BAA0B,EAAGxV,QAASqV,EAAe,GAG3GI,0BAAmBA,IACV,KAAKN,gBAGdO,wBAAkBhW,GACTwU,GAAayB,SAASjW,EAAQ,CACnCkW,OAAQ,GACT,GAGHC,8BAAwBC,GAAoB,CAC1C,GAAKA,EAIDA,SAAOrhB,MAAM,eAAe,EACvB,GAAG,KAAKygB,WAAW,iBAAiBY,CAAM,QAG5CA,IAGTC,oBAAa,MAAOC,IACVnd,YAAI,cAAgBmd,CAAc,EAGnC,KAAKZ,aAAaa,EAAuB,IAwCpD,CAAC,GAAAhU,uBCnG6C,IAGzBiU,IAAenU,GADnCC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QAIEyQ,GAAOb,EAAc,EAACY,EAAA9W,OAAA,IAAAgX,GAAAG,QAAAC,uBAAAC,QAAA,EAAAJ,GAAAE,QAAAC,qCAAAlB,GAAA,IAAA7O,OAAA6O,EAAA,CAAAxI,KAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,GAJrC,KACqC,CAGnCxE,YAAoCoO,EAAgC,CAFjDA,yBAmDnBsK,6BAAsBA,CAACL,EAAgBtV,IAEjCA,WAAU4V,4BACL,CAAC,CAACN,GAITtV,iBAAU6V,uBAAwBP,IAAWtV,iBAAUC,kCAAkCD,iBAAUC,+BAA+B3L,QAAQghB,KAAW,GAIzJQ,oBAAa,SAAY,OACvB,MAAM9V,EAAW,MAAMwG,MAAM,cAAc,EACxCuP,QAAiBpP,EAAO5S,MAAM,EAC9BgiB,QAAoBC,GAAIC,MAAMC,CAAS,CAAc,EACrDC,MAAiBrkB,IAChBwG,GAAS,kBAAmB,4CAA6C,CAAExG,QAAO,EAE3E,GACR,EAEGskB,EAAOC,KAKPC,EAAe,CACnBxa,MAAOsa,EAAKpB,EAAE,wBAAwB,EACtC5V,YAAagX,EAAKpB,EAAE,2BAA2B,EAC/CuB,SAAU,oFAGZ,GAAI,CAACvW,EACG,UAAIuU,GAAS,6BAA8B+B,CAAY,EAe/D,GAXAtW,EAAS6V,sBAAT7V,EAAS6V,oBAAwBxpB,EAAIS,2BAC5BoT,wBAAa7T,EAAII,eAAiBuC,IAC3CgR,EAASwW,mBAATxW,EAASwW,iBAAqBnqB,EAAIU,wBAClCiT,EAASyW,qBAATzW,EAASyW,mBAAuBpqB,EAAIG,2BAGhCwT,EAASE,WAAalR,IAAwB,CAACgR,EAASwW,kBAC1Dhe,GAAQ,kBAAmB,+GAA+G,EAK1I,CAACwH,EAAS6V,sBACT,CAAC7V,EAASC,kCAAkCD,IAASC,iCAATD,cAAyCxL,UAAW,IACjG,CAACwL,EAAS4V,4BAEJ,UAAIrB,GAAS,2BAA4B+B,CAAY,EAGtDtW,WAxGP,KAAKqL,eAAiBA,CACxB,CAEA,MAAMqL,gBAAgB1W,EAAgCpG,EAAa,OACjE,GAAI,CAACoG,EACI,SAIH2W,QADY,IAAI1c,gBAAgBL,EAAIN,MAAM,GAAG,EAAE,CAAC,CAAC,EAC3BoX,IAAIzhB,EAAgB,EAGhD,GAAI,CAAC+Q,EAAS4V,gCAAgC5V,IAASC,iCAATD,cAAyCxL,SAAU,IAAM,EACrG,OAAOwL,EAAS6V,oBAGlB,GAAIc,IAAc,KAAM,CAEtB,GAAI,CAACA,EACG,kBAAKtL,eAAesE,WAAWzgB,EAAuB,EACrD8Q,EAAS6V,oBAIlB,GAAI,KAAKF,oBAAoBgB,EAAW3W,CAAQ,EAC9C,aAAM,KAAKqL,eAAegC,QAAQne,GAAyBynB,CAAS,EAC7DA,EAGDne,GAAA,kBAAmB,mCAAmCme,CAAS,EAAE,CAC3E,CAGA,MAAMC,EAAe,MAAM,KAAKvL,eAAe8C,QAAQjf,GAAyB,EAAK,EAGjF0nB,MAAgB,OAAOA,GAAiB,SAAU,CACpD,GAAI,KAAKjB,oBAAoBiB,EAAc5W,CAAQ,EAC1C4W,SAGDpe,GAAA,kBAAmB,0BAA4Boe,CAAY,EAC7D,WAAKvL,eAAesE,WAAWzgB,EAAuB,CAC9D,CAEA,OAAO8Q,EAAS6V,mBAClB,CA4DF,CAAC,GAAApU,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,ICrGM,MAAMoV,EAAkBlY,GAA0B,eAAgB,CAAClE,EAAKiW,KAAS,CACtFoG,QAAS,GACTtK,KAAM,KACNuK,aAAc,KACdC,aAAc,KACdC,aAAc,KACdC,cAAe,KACfC,iBAAkB,KAClBC,kBAAmB,KACnBC,yBAA0B,GAC1BC,aAAc,KACdC,WAAaT,GAAqBrc,EAAI,CAAEqc,UAAS,EACjDU,eAAgBA,IAAM,CACdhL,QAAOkE,EAAMlE,OACb2K,EAAmBzG,EAAMyG,mBAE/B,GAAI,EAAC3K,WAAM3Q,IAAU,UAAIxK,MAAM,oBAAoB,EAE5C,OAAEomB,WAAYjL,iBAAM3Q,GAAI6b,SAAUlL,EAAM2K,mBACjD,CACF,EAAE,EC1BWQ,GAAuBhZ,GAA+B,oBAAqB,CAACvD,EAAGsV,KAAS,CACnG1D,aAAc,CAAE,EAChB4K,oBAAqB,GACrBC,2BAA4B3qB,GAAcC,iBAC1CghB,QAAUjZ,GACRwb,EAAM1D,eAAazT,KAAK,CAAC,CAAEwD,UAASwN,cAC3BxN,IAAY7H,EAAK6H,SAAWwN,EAAW1c,GAAoBC,KAAOyc,EAAW1c,GAAoBE,GACzG,EACH+pB,YAAaA,KACV,CACC/U,OAAQ2N,IAAMmH,4BAA8B3qB,GAAcC,iBAC1D2O,MAAO,oBACPvL,SAAUmgB,IACP1D,aAAa7R,OAAO,CAAC,CAAEpF,eAAcwU,UAAe,KAAC,CAACxU,GAAgBwU,EAAW1c,GAAoBC,KAAOyc,EAAW1c,GAAoBE,GAAG,EAC9IiN,IAAI,CAAC,CAAEjF,kBAAmBA,CAAY,IAE7CgiB,0BAA2BA,IACzBrH,IAAM1D,aAAaxO,OAAO,CAACwZ,EAAiC9iB,IAAS,CACnE,MAAMiF,EAAMjF,EAAK6H,QAEZ5C,UAAG,EAAIjF,EAAKqV,SAEVyN,CACT,EAAG,EAAE,EACPC,wBAAyBA,IACvBvH,IAAM1D,aAAaxO,OAAO,CAACwZ,EAAiC9iB,IAAS,CAC7DiF,QAAMjF,EAAK2D,UAAY3D,EAAK6H,QAE7B5C,UAAG,EAAIjF,EAAKqV,SAEVyN,CACT,EAAG,EAAE,CACT,EAAE,kBCzCiE,IAG9CE,IAAsB3W,GAD1CC,KAAYkJ,GAAAM,QAAAC,SAAAC,sBAAA,EAAAL,GAAAG,QAAAC,SAAAR,mCAAAvP,OAAAuP,EAAA,CAAAlJ,KAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAb,KAC4C,CAG1CxE,YAAYkb,EAA0C,CAFrCA,8BAMjBrC,oBAAa,MAAOxT,GAAqB,CACjC,WAAK8V,oBAAoB9V,CAAQ,IAGzC8V,6BAAsB,MAAO9V,GAAsB,OAC3C,MAAEkK,QAASqK,EAAgBrT,WAC3BiI,GAAuBzM,IAAewE,SAAS,EAAEtE,OAAO+K,WAAjCjL,cAA2CyM,qBAExE,GAAI,CAACA,EACH,OAGF,MAAMuB,EAAe,MAAM,KAAKmL,oBAAoB5L,gBAAgBC,EAAMf,EAAsBnJ,CAAQ,EAExGqV,GAAqBU,SAAS,CAC5BrL,aAAcA,EAAa7R,OAAQjG,GAAmC,CAAC,EAACA,WAAM6H,QAAO,EACrF6a,oBAAqB,GACrBC,2BAA4BpM,EAC7B,IAGHwB,6BAAsB,SAAY,CAC1B,MAAED,gBAAiB2K,GAAqBnU,WACxC,CAAEgJ,QAASqK,EAAgBrT,WAEjC,MAAM,KAAK2U,oBAAoBlL,oBAAoBD,EAAcR,CAAI,IAWvEmB,kBAAW,MAAOzY,EAAoB0Y,EAAsCJ,IAAiC,CACrG,MAAER,gBAAiB2K,GAAqBnU,WAE9C,GAAI,CAACgK,EAAe,OAEdM,QAAiB,MAAM,KAAKqK,oBAAoBxK,SAASzY,EAAM0Y,EAAYJ,EAAeR,CAAY,EAExGc,IACF6J,GAAqBU,SAAS,CAAErL,aAAcc,EAAgB,EAC9D,MAAM,KAAKb,sBACb,GAjDA,KAAKkL,oBAAsBA,CAC7B,CAkDF,CAAC,GAAA1W,EAAA,GAAAA,EAAA,GAAAA,IC1CD,MAA8B6W,EAAgB,CAwC9C,CClDA,MAA8BC,EAAoB,CAoBlD,CCdaC,SAAmB7Z,GAA2B,gBAA2BlE,IAAA,CACpFge,qBAAsB,CAAE,EACxBxa,YAAa,CAAE,EACfya,mBAAoB,CAAE,EACtBC,yBAA0B,CAAE,EAC5BC,cAAe,KACfC,eAAgB,KAChBC,MAAO,KACPC,eAAgB,KAChBC,2BAAmDve,EAAI,CAAEge,uBAAsB,EAC/EQ,YAAqBxe,EAAI,CAAEqe,QAAO,EAClCI,qBAAuCze,EAAI,CAAEse,iBAAgB,CAC/D,EAAE,EC7BK,MAAMI,WAA4B9nB,KAAM,CAG7C4L,YAAYgK,EAA8B,CAClC/L,aAAOke,OAAOnS,CAAM,EAAEoS,OAAO7e,KAAK,GAAG,CAAC,EAHvCyM,iBAKL,KAAKA,OAASA,CAChB,CACF,CCRaqS,SAA4BvC,GAAsC,CAC7E,MAAMwC,EAAgBxC,iBAAcyC,OAEhCD,WAAkB,QAAgB,UAClCA,IAAkB,OAAe,YAE9B,SACT,ECPaE,GAA2BV,GAA2CA,uCAAgBxf,KAAMkL,GAAOA,EAAGiV,aAAe,UAA/CX,cAAwDld,KAAxDkd,cAA4Dpe,aAAc,0BC2BjG,IAGvCgf,IAAkBpY,GADtCC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QAOEyQ,GAAOxY,EAAgB,EAACuY,EAAA9W,OAAA,IAAAgX,GAAA,SAAAF,EAAAxQ,EAAA,QAAoCyQ,GAAOrY,EAAe,EAACoY,EAAA9W,OAAA,IAAAiX,GAAAE,QAAAC,SAAAC,sBAAA,EAAAH,GAAAC,QAAAC,SAAA,4BAAA2O,gBAAA1e,WAAA0e,gBAAA,OAAAC,cAAA,IAAA3e,OAAA2e,aAAA,CAAAtY,KAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,GAAAsJ,GAAAtJ,GAPlG,KACwC,CAMtCxE,YAAsCmD,EAA2D0Z,EAA8B,CAL9GvO,yBACAwO,0BACAC,8BACAF,wBASjBG,0BAAmB,SAAY,CACvBxB,QAAuBD,GAAiBhV,WAAWiV,qBACnDxa,EAAcwa,EAAuB,MAAM,KAAKyB,UAAU,CAAE3b,SAAUka,EAAqBzd,IAAI,CAAC,CAAE0D,aAAcA,CAAO,CAAG,GAAI,GAGhI,GAFJ8Z,GAAiBH,SAAS,CAAEpa,cAAa,EAErC,CAACua,GAAiBhV,WAAWkV,mBAAmBlkB,QAAU,KAAK+W,eAAe4O,aAAc,CACxFzB,QAAqB,MAAM,KAAKwB,UAAU,CAAE3b,SAAU,KAAKgN,eAAe4O,aAAc,EAC9F3B,GAAiBH,SAAS,CAAEK,qBAAoB,CAClD,CAEA,GAAI,CAACF,GAAiBhV,WAAWmV,yBAAyBnkB,OAAQ,CAC1D4lB,QAAuB,MAAM,KAAKC,0BAClC1B,EAA2ByB,EAAuB,MAAM,KAAKF,UAAU,CAAE3b,SAAU6b,CAAsB,GAAI,GACnH5B,GAAiBH,SAAS,CAAEM,2BAA0B,CACxD,IAGF2B,iCAA0BA,IAAM,KAAK/O,eAAe4O,cAEpDI,qBAAc,MAAO3B,GAAyB,CAC5CJ,GAAiBH,SAAS,CAAEO,gBAAe,IAG7C4B,yBAAkB,MAAOrc,GAAgC,SACjD,MAAEqZ,kBAAmBX,EAAgBrT,WACrC,CAAEkU,YAAaF,EAAe,EAE9BuB,EAAiB,MAAM,KAAK0B,oBAC5BC,EAAkBvmB,SAASslB,GAAwBV,CAAc,CAAC,EAElE4B,EAAmC,CACvCxc,QACAsZ,WAAYC,EAAS7b,GACrB+e,SAASlD,iBAAUkD,UAAW,GAC9BF,mBAGItd,EAAW,MAAM,KAAK2c,gBAAgBc,YAAYF,CAAe,EAEnEvd,wBAAU6J,SAAV7J,cAAkB5I,QAAS,EACZgP,oBAAWyV,SAAS,IAAI,EAEnC,IAAI5nB,MAAM+L,iBAAU6J,OAAO,EAAE,EAGrCuR,GAAiBhV,SAAS,EAAEyV,UAAS7b,IAAS0d,eAAT1d,cAAuB0b,KAAK,IAGnEiC,qBAAc,MAAOjC,EAAc4B,EAA0BM,IAA8C,OACrG,IACF,MAAM5d,EAAW,MAAM,KAAK2c,gBAAgBgB,YAAY,CAAEjC,QAAO4B,kBAAiBM,aAAY,EAE1F5d,EAAS0d,aAAahC,OACxBN,GAAiBhV,SAAS,EAAEyV,UAAS7b,IAAS0d,eAAT1d,cAAuB0b,KAAK,QAE5DhnB,EAAgB,CACvB,GAAIA,aAAiBT,MACfS,KAAMF,UAAY,kBACH4R,cAAWyV,SAAS,IAAI,MAC3C,IAAWnnB,EAAMF,UAAY,sBAC3B,MAAM,IAAIunB,GAAoB,CAAE6B,WAAY,CAACjG,GAAQC,EAAE,mCAAmC,CAAC,EAAG,EAChG,GAAWljB,EAAMF,UAAY,qCAC3B,MAAM,IAAIunB,GAAoB,CAAE6B,WAAY,CAACjG,GAAQC,EAAE,6CAA6C,CAAC,EAAG,EAI5G,MAAM,IAAImE,GAAoB,CAAEpK,KAAM,CAACgG,GAAQC,EAAE,qBAAqB,CAAC,EAAG,CAC5E,IAGFyF,2BAAoB,SAAsC,SAClD,MAAE1B,kBAAmBP,GAAiBhV,WAE5C,GAAIuV,EAAuBA,SAE3B,MAAM3b,EAAW,MAAM,KAAK2c,gBAAgBU,kBAAkB,EAE1Drd,KAAS6J,OAAOzS,OAAS,EAAG,MAAM,IAAInD,MAAM+L,EAAS6J,OAAO,CAAC,CAAC,EAElEuR,UAAiBhV,SAAS,EAAE0V,mBAAkB9b,IAAS0d,eAAT1d,cAAuB2b,cAAc,GAE5E3b,IAAS0d,eAAT1d,cAAuB2b,iBAIhCkC,+BAAwB,MAAO,CAAEC,cAAwC,EAAI,KAAyB,CAC9F,MAAEpC,SAAUN,GAAiBhV,WAEnC,GAAI,CAACsV,EAAa,UAAIznB,MAAM,kBAAkB,EAE9C,MAAM+L,EAAW,MAAM,KAAK2c,gBAAgBkB,sBAAsB,CAAEE,QAASrC,EAAMjd,GAAIqf,eAAc,EAEjG9d,KAAS6J,OAAOzS,OAAS,EAAG,MAAM,IAAInD,MAAM+L,EAAS6J,OAAO,CAAC,CAAC,EAC9D7J,KAAS0d,aAAaM,eAAgB,MAAM,IAAI/pB,MAAM+L,EAAS0d,aAAaM,cAAc,EAE9F,OAAOhe,EAAS0d,eAGlBO,+BAAwB,MAAO,CAAEC,qBAAoBC,WAAUC,eAA8F,CACrJ,MAAE1C,SAAUN,GAAiBhV,WAEnC,GAAI,CAACsV,EAAa,UAAIznB,MAAM,kBAAkB,EAE9C,OAAO,MAAM,KAAK0oB,gBAAgBsB,sBAAsBC,EAAoBxC,EAAOyC,EAAUC,CAAS,IAGxGC,mCAA4B,MAAOD,EAAmBE,EAA4B,KAAuC,CACjH,MAAE5C,SAAUN,GAAiBhV,WAC7B2X,EAAUrC,iBAAOjd,GAEvB,GAAI6f,GAAoB,CAACP,EAAe,UAAI9pB,MAAM,8BAA8B,EAE7DU,GAAA,KAAKgoB,gBAAgB0B,0BAA2B,gEAAgE,EAEnI,MAAMre,EAAW,MAAM,KAAK2c,gBAAgB0B,0BAA0B,CACpEN,UACAK,YACD,EAEGpe,KAAS6J,OAAOzS,OAAS,EAC3B,MAAM,IAAInD,MAAM+L,EAAS6J,OAAO,CAAC,CAAC,EAGpC,OAAO7J,EAAS0d,eAGlBa,6BAAsB,MAAOC,EAAmCJ,EAAmBN,IAAwD,CACnI,MAAEpC,SAAUN,GAAiBhV,WAEnC,GAAI,CAACsV,EAAa,UAAIznB,MAAM,kBAAkB,EAE3BU,GAAA,KAAKgoB,gBAAgB4B,oBAAqB,0DAA0D,EAEvH,MAAMve,EAAW,MAAM,KAAK2c,gBAAgB4B,oBAAoB,CAC9DR,QAASrC,EAAMjd,GACf2f,YACAI,gBACAC,WAAY,MAAM,KAAK/B,cAAc,EACrCoB,eACD,EAEG9d,KAAS6J,OAAOzS,OAAS,EAAG,MAAM,IAAInD,MAAM+L,EAAS6J,OAAO,CAAC,CAAC,EAElE,OAAO7J,EAAS0d,eAGlBgB,8BAAuB,MAAOC,EAAkBZ,EAAkBa,IAAwD,CACxH,GAAI,CAACb,EAAe,UAAI9pB,MAAM,kBAAkB,EAE7BU,GAAA,KAAKgoB,gBAAgB+B,qBAAsB,2DAA2D,EAEzH,MAAM1e,EAAW,MAAM,KAAK2c,gBAAgB+B,qBAAqB,CAC/DX,UACAY,UACAC,cACD,EAEG5e,KAAS6J,OAAOzS,OAAS,EAC3B,MAAM,IAAInD,MAAM+L,EAAS6J,OAAO,CAAC,CAAC,EAGpC,OAAO7J,EAAS0d,eAGlBmB,uBAAgB,MAAO,CACrBC,aACAC,aACAC,YACAC,WACArB,aAAa,GACbE,kBAQsC,CAChC,MAAEpC,SAAUN,GAAiBhV,WAEnC,GAAI,CAACsV,EAAa,UAAIznB,MAAM,kBAAkB,EAE9C,MAAM+L,EAAW,MAAM,KAAK2c,gBAAgBuC,kBAAkB,CAC5DxD,QACAoD,aACAC,aACAC,YACAC,WACArB,aACAE,eACD,EAEG9d,KAAS6J,OAAOzS,OAAS,EAAG,MAAM,IAAInD,MAAM+L,EAAS6J,OAAO,CAAC,CAAC,EAE3D,OACLsV,YAAanf,EAAS0d,aAAayB,YACrC,GAGFlC,iCAA0B,SAAsC,CACxD,MAAE7C,kBAAmBX,EAAgBrT,WAErC,CAAEiU,cAAeD,EAAe,EAChC,CAAET,gBAAiBF,EAAgBrT,WAEzC,GAAI,CAACuT,GAAgB,CAAC,KAAKgD,gBAAgBM,wBAAgC,YAExDtoB,GAAA,KAAKgoB,gBAAgByC,SAAU,+CAA+C,EAEjG,MAAMpf,EAAW,MAAM,KAAK2c,gBAAgBM,wBAAwB,CAClE5C,aACA/Y,QAASqY,EAAarY,QACvB,EAED,OAAKtB,EAAS0d,aAAa2B,UAAUjoB,OAE9B4I,EAAS0d,aAAa2B,UAAUzhB,IAAI,CAAC,CAAE0hB,eAAgBA,CAAS,EAFnB,IAEmB,GAGzEC,4BAAqB,SAAY,CACzB/D,QAAgBJ,GAAiBhV,WAAWoV,cAC5C7B,EAAeF,EAAgBrT,WAAWuT,aAC1C,CAAES,kBAAmBX,EAAgBrT,WACrC,CAAEiU,cAAeD,EAAe,EAEtC,GAAI,CAACoB,GAAiB,CAAC7B,EAAoB,UAAI1lB,MAAM,mBAAmB,EAErDU,GAAA,KAAKgoB,gBAAgB4C,mBAAoB,yDAAyD,EAE/GC,QAA2CtD,GAAyBvC,CAAY,EAEhF8F,EAA4B,CAChCH,UAAW9D,EAAcla,QACzB+Y,aACA/Y,QAASqY,EAAarY,QACtBke,mBAGI,WAAK7C,gBAAgB4C,mBAAmBE,CAAyB,IAGzEC,4BAAqB,MAAO,CAAEC,cAAaC,oBAAsE,CAC5FjrB,GAAA,KAAKioB,oBAAoB8C,mBAAoB,6DAA6D,EAEvH,MAAEhC,gBAAiB,MAAM,KAAKd,oBAAoB8C,mBAAmB,CACzEC,cACAC,iBACD,EAEMlC,WAGTmC,mCAA4B,MAC1Bf,EACAC,EACAC,EACAC,EACA3B,EACAwC,IACG,CACgBnrB,GAAA,KAAKgoB,gBAAgBoD,8BAA+B,oEAAoE,EACxHprB,GAAA,KAAKgoB,gBAAgBqD,oBAAqB,0DAA0D,EAEvH,MAAMhgB,EAAW,MAAM,KAAK2c,gBAAgBoD,8BAA8B,CACxEzC,kBACAwB,aACAC,aACAC,YACAC,WACD,EAEGjf,KAAS6J,OAAOzS,OAAS,EAAG,MAAM,IAAInD,MAAM+L,EAAS6J,OAAO,CAAC,CAAC,EAElE,OAAIiW,GACI,WAAKnD,gBAAgBqD,oBAAoB,CAAEC,iBAAkBH,EAAkB,EAGhF9f,EAAS0d,eAGlBwC,gCAAyB,MAAO1B,EAAmClB,EAAyBc,IAA+D,CACtIzpB,GAAA,KAAKgoB,gBAAgBuD,uBAAwB,6DAA6D,EAE7H,MAAMlgB,EAAW,MAAM,KAAK2c,gBAAgBuD,uBAAuB,CACjE5C,kBACAc,YACAI,gBACAC,WAAY,MAAM,KAAK/B,cAAc,EACtC,EAEG1c,KAAS6J,OAAOzS,OAAS,EAAG,MAAM,IAAInD,MAAM+L,EAAS6J,OAAO,CAAC,CAAC,EAElE,OAAO7J,EAAS0d,eAGlByC,qCAA8B,MAAOxB,EAAkBrB,EAAyBsB,IAAuE,CAClIjqB,GAAA,KAAKgoB,gBAAgBwD,4BAA6B,kEAAkE,EAEvI,MAAMngB,EAAW,MAAM,KAAK2c,gBAAgBwD,4BAA4B,CACtE7C,kBACAqB,UACAC,cACD,EAEG5e,KAAS6J,OAAOzS,OAAS,EAAG,MAAM,IAAInD,MAAM+L,EAAS6J,OAAO,CAAC,CAAC,EAElE,OAAO7J,EAAS0d,eAGlBZ,mBAAoC1F,GAC3B,KAAKuF,gBAAgBG,UAAU1F,CAAO,GAG/CgJ,yBAAgDhJ,GACvC,KAAKuF,gBAAgByD,gBAAgBhJ,CAAO,GAjUnD,KAAKsF,cAAgBA,EAChBvO,oBAAiB/Z,GAAewY,GAAgB5J,CAAe,EAC/D2Z,qBAAkBvoB,GAAe8mB,GAAiBlY,CAAe,EACjE4Z,yBAAsBxoB,GAAe+mB,GAAqBnY,CAAe,CAChF,CA+TF,CAAC,GAAAqB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,IC1VM,MAAMgc,GAAoB9e,GAA4B,iBAAkB,CAAClE,EAAKiW,KAAS,CAC5FjgB,UAAW,CAAE,EACbitB,QAAS,KACTC,oBAAqBzwB,GAAcE,UACnCwwB,WAAahsB,GAA2B6I,EAAI,CAAEijB,QAAS9rB,EAAS,EAChEisB,aAAcA,IAAMpjB,EAAI,CAAEijB,QAAS,KAAM,EACzCI,QAAU5oB,GAAuBwb,EAAI,EAAEjgB,UAAUyN,KAAuB6f,KAAahhB,UAAY7H,EAAK6H,OAAO,EAC7G+a,YAAaA,KACV,CACC/U,OAAQ2N,IAAMiN,qBAAuBzwB,GAAcE,UACnD0O,MAAO,YACPvL,SAAUmgB,IAAMjgB,UAAUuK,IAAI,CAAC,CAAEjF,kBAAmBA,CAAY,GAEtE,EAAE,kBCtBqD,IAGlCioB,IAAmBzc,GADvCC,KAAYkJ,GAAAM,QAAAC,SAAAC,sBAAA,EAAAL,GAAAG,QAAAC,SAAAqG,mCAAApW,OAAAoW,EAAA,CAAA/P,KAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAb,KACyC,CAGvCxE,YAAYghB,EAAmC,CAF9BA,2BAMjBnI,oBAAa,MAAOxT,GAAqB,CACjC,WAAK4b,iBAAiB5b,CAAQ,IAGtC4b,0BAAmB,MAAO5b,GAAsB,OACxC,MAAEkK,QAASqK,EAAgBrT,WAC3BiO,GAAgBzS,IAAewE,SAAS,EAAEtE,OAAO+K,WAAjCjL,cAA2CyS,cAEjE,GAAI,CAACA,EACH,OAGF,MAAMhhB,EAAY,MAAM,KAAKwtB,iBAAiBzM,aAAahF,EAAMiF,EAAenP,CAAQ,EAExFmb,GAAkBpF,SAAS,CAAE5nB,YAAWktB,oBAAqBlM,EAAe,IAG9EM,0BAAmB,SAAY,CACvB,MAAEthB,aAAcgtB,GAAkBja,WAClC,CAAEgJ,QAASqK,EAAgBrT,WAEjC,MAAM,KAAKya,iBAAiBlM,iBAAiBthB,EAAW+b,CAAI,IAG9DmB,kBAAW,MAAOzY,GAAuB,CACjC,MAAEzE,aAAcgtB,GAAkBja,WAEpC,IAAC/S,EAAUyN,KAAK,CAAC,CAAEnB,aAAcA,IAAY7H,EAAK6H,OAAO,EAAG,CACxD0M,QAAQ,CAAC,KAAKwU,iBAAiBpM,eAAe3c,CAAI,CAAC,EAAEipB,OAAO1tB,CAAS,EAC3EgtB,GAAkBpF,SAAS,CAAE5nB,UAAWgZ,EAAO,EAC/C,MAAM,KAAKsI,kBACb,IAGFpC,oBAAa,MAAOza,GAAuB,CACnC,MAAEzE,aAAcgtB,GAAkBja,WAElCiG,EAAQhZ,EAAU0K,OAAO,CAAC,CAAE4B,aAAcA,IAAY7H,EAAK6H,OAAO,EACxE0gB,GAAkBpF,SAAS,CAAE5nB,UAAWgZ,EAAO,EAE/C,MAAM,KAAKsI,kBAAiB,GAG9BqM,wBAAiB,MAAOlpB,GAAmC,CACnD,MAAEzE,YAAWqtB,UAASF,cAAeH,GAAkBja,WAE7D,GAAI,CAACtO,EACH,OAKF,GAFmB4oB,EAAQ5oB,CAAI,EAEf,CACR,WAAKya,WAAWza,CAAI,EAE1B,MACF,CAGA,GAAIzE,EAAU+D,OAAS,KAAKypB,iBAAiBhM,uBAAwB,CACxD8C,KAAQC,EAAE,0BAA2B,CAAEqJ,SAAU,KAAKJ,iBAAiBhM,qBAAqB,CAAG,EAAC,EAC3G,MACF,CAEM,WAAKtE,SAASzY,CAAI,IAG1BopB,eAAQ,SAAY,CAClBb,GAAkBpF,SAAS,CAAE5nB,UAAW,GAAI,EAE5C,MAAM,KAAKshB,kBAAiB,GAzE5B,KAAKkM,iBAAmBA,CAC1B,CA0EF,CAAC,GAAAxc,EAAA,GAAAA,EAAA,GAAAA,uBCrFwD,IAGpC8c,IAAahd,GADjCC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QAIEyQ,GAAOpY,EAAqB,EAACmY,EAAA9W,OAAA,IAAAgX,GAAAG,QAAAC,SAAAC,sBAAA,EAAAJ,GAAAE,QAAAC,SAAA,qBAAA3Z,MAAA,CAAAiQ,KAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,GAJ5C,KACmC,CAGjCxE,YAA2CwZ,EAA4B,CAFtDA,6BAMjB+H,8BAAuB,MAAOlf,EAAgBiP,IAA+C,CAC3F,MAAM3U,EAAM,GAAG,KAAK6c,kBAAkB,aAAanX,CAAM,mBACnDlC,EAAW,MAAMoJ,MAAM5M,EAAK,CAChC5H,OAAQ,MACR8U,QAAS,CACP0H,cAAeD,EAAM,UAAUA,CAAG,GAAK,EACzC,EACD,EAEG,OAACnR,EAASG,GASN,MAAMH,EAASE,QARrB7E,GAAS,gBAAiB,iCAAkC,CAC1D+E,OAAQJ,EAASI,OACjB1L,MAAOsL,EAASE,KAAK,EACtB,EAEM,KAGmB,GAG9BmhB,6BAAsB,MAAOnf,EAAgBof,IAAwD,CACnG,MAAM9kB,EAAM,GAAG,KAAK6c,kBAAkB,aAAanX,CAAM,kBACnDlC,EAAW,MAAMoJ,MAAM5M,EAAK,CAChC5H,OAAQ,MACR8U,QAAS,CACP,eAAgB,kBAClB,EACAwH,KAAMhB,KAAKC,UAAU,CACnBmR,gBACD,EACF,EAEG,OAACthB,EAASG,GASN,MAAMH,EAASE,QARrB7E,GAAS,gBAAiB,gCAAiC,CACzD+E,OAAQJ,EAASI,OACjB1L,MAAOsL,EAASE,KAAK,EACtB,EAEM,KAGmB,GA7C5B,KAAKmZ,mBAAqBA,CAC5B,CA8CF,CAAC,GAAAhV,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,ICpDYkd,SAAiBhgB,GAAyB,cAAe,KAAO,CAC3E2I,SAAU,IACZ,EAAE,8BCOF,MAAMsX,GAAgB,gBAAgB,IAGjBC,IAAgBtd,GADpCC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QAURyQ,GAAOxY,EAAgB,EAACuY,EAAA9W,OAAA,IAAAgX,GAAA,SAAAF,EAAAxQ,EAAA,QACxByQ,GAAOtJ,EAAU,EAACqJ,EAAA9W,OAAA,IAAAiX,GAAA,SAAAH,EAAAxQ,EAAA,QAClByQ,GAAOb,EAAc,EAACY,EAAA9W,OAAA,IAAAkX,GAAA,SAAAJ,EAAAxQ,EAAA,QACtByQ,GAAO2T,EAAa,EAAC5T,EAAA9W,OAAA,IAAAsX,GAAAH,QAAAC,SAAAC,sBAAA,EAAA4T,GAAA9T,QAAAC,qCAAA2O,gBAAA,IAAA1e,OAAA0e,gBAAA,OAAAtY,GAAA,IAAApG,OAAAoG,GAAAyI,UAAA7O,WAAA6O,UAAAwU,GAAA,IAAArjB,OAAAqjB,EAAA,GAAAhd,GAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,GAAAsJ,GAAAtJ,GAAA0J,GAAA1J,GAAAqd,GAAArd,GAb1B,KACsC,CAQpCxE,YAC4BmD,EACNgL,EACIC,EACD0T,EACvB,CAZe3T,qBACA2T,wBACAxT,yBACAF,yBAET/L,gBAAiB,IAczBwW,oBAAa,SAAY,CACjB,MAAE5W,SAAQvB,eAAgBqB,EAAewE,WAC/C,KAAKlE,OAASJ,EAAOI,OAGjB3B,IAAgB,QAMf,KAAKqhB,+BAA8B,GAQ1CvY,sBAAe,MAAO9E,GAAoB,CAClC,MAAEsV,gBAAiBJ,EAAgBrT,WAEzC,GAAI,GAAC,KAAKlE,QAAU,CAAC2X,GAIjB,IACIgI,QAAe,MAAM,KAAKD,gCAC5B,KAACC,WAAc3X,UACX,UAAIjW,MAAM,4DAA4D,EAEvE,aAAM,KAAK+Z,WAAWhE,yBAAyB,CAAEvL,GAAI8F,EAASrC,OAAQ,KAAKA,OAAQ+H,OAAQ4P,EAAapb,GAAIyL,SAAU2X,EAAa3X,SAAU,QAC7IxV,EAAgB,CACvB,GAAIA,aAAiBkL,IAAYlL,EAAMoL,OAAS,IAAK,CAE7C+hB,QAAe,MAAM,KAAKR,sBAChC,GAAIQ,WAAc3X,SACT,aAAM,KAAK8D,WAAWhE,yBAAyB,CAAEvL,GAAI8F,EAASrC,OAAQ,KAAKA,OAAQ+H,OAAQ4P,EAAapb,GAAIyL,SAAU2X,EAAa3X,SAAU,EAGhJ,UAAIjW,MAAM,qDAAqD,CACvE,CACMS,OACR,IAQFktB,uCAAgC,SAA0C,CAClEE,QAAuB,MAAM,KAAKC,kBAClCC,EAAgBF,GAAwBxrB,KAAKC,MAAQurB,EAAqB5P,QAMhF,OAJK4P,GACH,MAAM,KAAKV,uBAGTY,EACK,MAAM,KAAKX,sBAGbS,IAQTV,8BAAuB,SAA0C,CAC3D,IAAC,KAAKlf,OACD,YAGT,MAAM+f,EAAO,MAAM,KAAK9T,eAAe+T,YAAY,EAE7CL,EAAe,MAAM,KAAKF,cAAcP,qBAAqB,KAAKlf,OAAQ+f,iBAAM9Q,GAAG,EACzF,OAAI0Q,GACI,WAAKM,gBAAgBN,CAAY,EAChCA,GAGF,OAQTR,6BAAsB,SAA0C,CACxDS,QAAuB,MAAM,KAAKC,kBAExC,GAAI,CAACD,EACI,YAGHD,QAAe,MAAM,KAAKF,cAAcN,oBAAoB,KAAKnf,OAAQ4f,EAAqBR,aAAa,EACjH,OAAIO,GACI,WAAKM,gBAAgBN,CAAY,EAChCA,GAGF,OAOTM,yBAAkB,MAAON,GAA+B,CACtDN,GAAetG,SAAS,CAAE/Q,SAAU2X,EAAa3X,SAAU,EAGrDgI,QAAU,IAAI5b,KAAKA,KAAKC,IAAQ,OAAO,GAAI,EAAE6rB,UACnD,OAAO,MAAM,KAAKnU,eAAegC,QAAQuR,GAAetR,KAAKC,UAAU,CAAE,GAAG0R,EAAc3P,UAAS,EAAG,EAAI,IAM5G6P,yBAAkB,SAAkE,CAClF,MAAMF,EAAe,MAAM,KAAK5T,eAAe8C,QAA4CyQ,GAAe,GAAM,EAAI,EACpH,OAAIK,GACFN,GAAetG,SAAS,CAAE/Q,SAAU2X,EAAa3X,SAAU,EAGtD2X,IAMTQ,4BAAqB,UACnBd,GAAetG,SAAS,CAAE/Q,SAAU,KAAM,EACnC,MAAM,KAAK+D,eAAesE,WAAWiP,EAAa,IA/IzD,KAAKxT,WAAaA,EAClB,KAAK2T,cAAgBA,EACrB,KAAK1T,eAAiBA,EACjBE,oBAAiB/Z,GAAewY,GAAgB5J,CAAe,CACtE,CA6IF,CAAC,GAAAqB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,uBCnJiD,IAG7Bie,IAAiBne,GADrCC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QAeRyQ,GAAOxY,EAAgB,EAACuY,EAAA9W,OAAA,IAAAgX,GAAAG,QAAAC,SAAAC,sBAAA,EAAAJ,GAAAE,QAAAC,qCAAA2O,gBAAA,IAAA1e,OAAA0e,gBAAA,OAAAiF,GAAA,IAAA3jB,OAAA2jB,GAAA,OAAAb,GAAA,IAAA9iB,OAAA8iB,GAAA9F,UAAAhd,WAAAgd,EAAA,CAAA3W,KAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,GAf7B,KACuC,CAarCxE,YAC4BmD,EAC1Buf,EACAC,EACAC,EACA,CAjBe9F,0BACAxO,yBACAyO,8BACA8F,6BACAH,2BACAC,8BACAC,iCACA5V,mBAGT8V,8BAqBRC,sBAAe,SAAY,CACrB,IACe,MAAM,KAAKzU,eAAe+T,YAAY,GAGrD,MAAM,KAAKW,mBAENnuB,EAAgB,CACvB2G,GAAS,oBAAqB,qBAAsB,CAAE3G,QAAO,EAIzDA,aAAiBT,OAASS,EAAMF,QAAQC,SAAS,mBAAmB,GACtE,MAAM,KAAKquB,QAEf,IAGFpK,oBAAa,MAAOlc,EAAammB,IAA8C,CAC7E,KAAKA,oBAAsBA,EAE3BlJ,EAAgBwB,SAAS,CAAEvB,QAAS,GAAM,EACpC5X,QAASF,EAAewE,WAAWtE,OAEzC,MAAM,KAAKqM,eAAeuK,WAAW5W,EAAQtF,EAAK,KAAKsmB,MAAM,EAG7DlhB,EAAeqZ,SAAS,CAAE1a,YAAa,KAAK4N,eAAe5N,YAAa,EAExE,MAAM,KAAKqiB,eACX,MAAM,KAAK3O,mBAEXwF,EAAgBwB,SAAS,CAAEvB,QAAS,GAAO,IAO7CqJ,oBAAa,MAAO/G,GAA+F,CACjHvC,EAAgBwB,SAAS,CAAEvB,QAAS,GAAM,EAEpC,MAAEtK,QAASqK,EAAgBrT,WAC3B,CAAEhU,iBAAgBC,2BAA4B,KAAK2wB,cAErDllB,UAAOmlB,UAAUC,eAAeC,KAAKnH,EAAQ,OAAO,GAAK,CAAC5pB,EACtD,UAAI6B,MAAM,4BAA4B,EAG9C,GAAI,CAACmb,EACG,UAAInb,MAAM,oBAAoB,EAGhC4V,QAAS,KAAKuZ,oBAAoBpH,CAA6B,EACrE,GAAInS,EAAOzS,OACF,OACLyS,SACA6T,aAAc,CAAC,GAInB,IAAItG,EAAU4E,EAET3pB,IACO+kB,EAAA,CAAE,GAAG4E,EAAQqH,MAAOjU,EAAKiU,QAGrC,MAAMC,EAAc,MAAM,KAAKnV,eAAeoV,eAAe,CAAE,GAAGnM,EAAS3Y,GAAI2Q,EAAK3Q,GAAGlB,SAAS,EAAG,EAEnG,GAAI,CAAC+lB,EACG,UAAIrvB,MAAM,eAAe,EAGjCwlB,SAAgBwB,SAAS,CAAE7L,KAAMkU,EAAa,EAEvC,CAAEzZ,OAAQ,CAAE,EAAE6T,aAAc4F,EAAY,GAGjDT,oBAAa,SAAY,CACjB,MAAE/gB,UAAWF,EAAewE,WAE9B,IACF,MAAMpG,EAAW,MAAM,KAAKmO,eAAeqV,QAAQ,CAAE1hB,SAAQ,EAEzD9B,GACF,MAAM,KAAKyjB,WAAWzjB,EAASoP,KAAMpP,EAAS+Z,gBAAgB,EAGhEN,EAAgBwB,SAAS,CAAEvB,QAAS,GAAO,OACpB,CACvBD,EAAgBwB,SAAS,CACvB7L,KAAM,KACNuK,aAAc,KACdC,aAAc,KACdE,cAAe,KACfC,iBAAkB,KAClBC,kBAAmB,KACnBN,QAAS,GACV,CACH,IAGFgK,eAAQ,MAAOL,EAAeM,EAAkBxF,IAAqB,OACnE1E,EAAgBwB,SAAS,CAAEvB,QAAS,GAAM,EAEtC,IACF,MAAM1Z,EAAW,MAAM,KAAKmO,eAAeuV,MAAM,CAAEL,QAAOM,WAAUxF,WAAU,EAE9E,GAAIne,EAAU,CACN,OAAA8P,EAAA,KAAKyS,mBAAL,YAAAzS,EAAuBsR,wBAC7B,MAAM,KAAKqC,WAAWzjB,EAASoP,KAAMpP,EAAS+Z,gBAAgB,EAC9D,MACF,QACOrlB,EAAgB,CACnBA,gBAAiBT,OAASS,EAAMF,QAAQwD,cAAcvD,SAAS,qBAAqB,EACtF,MAAM,IAAIsnB,GAAoB,CAAEsH,MAAO,CAAC1L,GAAQC,EAAE,2BAA2B,CAAC,EAAG,CACnF,QACQ,CACR6B,EAAgBwB,SAAS,CAAEvB,QAAS,GAAO,CAC7C,CAGA,MAAM,IAAIqC,GAAoB,CAAEpK,KAAM,CAACgG,GAAQC,EAAE,iCAAiC,CAAC,EAAG,IAGxFkL,gBAAS,SAAY,WACb,OAAAhT,EAAA,KAAK3B,iBAAL,YAAA2B,EAAqBgT,UACrB,OAAAxS,EAAA,KAAKiS,mBAAL,YAAAjS,EAAuB+R,sBAC7B,MAAM,KAAKuB,kBAGX,OAAMC,EAAA,KAAKlB,sBAAL,YAAAkB,EAAA,WAA2B,GAGnCl1B,kBAAW,MAAO00B,EAAeM,EAAkBxF,EAAkB2F,EAAmChG,IAA0B,CAC5H,IACF,MAAM9d,EAAW,MAAM,KAAKmO,eAAexf,SAAS,CAAE00B,QAAOM,WAAUI,SAAUD,EAAgB3F,WAAUL,eAAc,EAEzH,GAAI9d,EAAU,CACN,MAAEoP,OAAM2K,kBAAqB/Z,IACnC,MAAM,KAAKyjB,WAAWrU,EAAM2K,EAAkB,EAAI,EAElD,MACF,QACOrlB,EAAgB,CACvB,GAAIA,aAAiBT,MAAO,CACpB+vB,QAAetvB,EAAMF,QAAQwD,YAAY,EAE/C,GAAIgsB,EAAavvB,SAAS,yBAAyB,GAAKuvB,EAAavvB,SAAS,wBAAwB,EACpG,MAAM,IAAIsnB,GAAoB,CAAEpK,KAAM,CAACgG,GAAQC,EAAE,kCAAkC,CAAC,EAAG,EAC9EoM,KAAavvB,SAAS,qCAAqC,EACpE,MAAM,IAAIsnB,GAAoB,CAAEsH,MAAO,CAAC1L,GAAQC,EAAE,+CAA+C,CAAC,EAAG,EAC5FoM,KAAavvB,SAAS,wBAAwB,EACvD,MAAM,IAAIsnB,GAAoB,CAAE4H,SAAU,CAAChM,GAAQC,EAAE,uCAAuC,CAAC,EAAG,CAEpG,CACF,CAGA,MAAM,IAAImE,GAAoB,CAAEpK,KAAM,CAACgG,GAAQC,EAAE,uCAAuC,CAAC,EAAG,IAG9FqM,wBAAiB,MAAOlK,GAAqF,OACrG,MAAEK,kBAAmBX,EAAgBrT,WACrC,CAAEkU,YAAaF,EAAe,EAEpCX,EAAgBwB,SAAS,CAAEvB,QAAS,GAAM,EAEtC,IACF,MAAMwK,EAAkB,OAAMpU,EAAA,KAAK3B,iBAAL,YAAA2B,EAAqBqU,uBAAuB,CACxE7J,WACAyJ,SAAUhK,KAGZ,OAAImK,GACFzK,EAAgBwB,SAAS,CAAElB,iBAAkBmK,EAAiB,EACvD,CACLxG,aAAcwG,EACdra,OAAQ,KAGL,CACL6T,aAAc,CAAE,EAChB7T,OAAQ,GACV,QACQ,CACR4P,EAAgBwB,SAAS,CAAEvB,QAAS,GAAO,CAC7C,IAKF0K,6BAAsB,SAAY,CAC1B,MAAEhK,kBAAmBX,EAAgBrT,WACrC,CAAEkU,YAAaF,EAAe,EAE9B2J,EAAW,MAAM,KAAK5V,eAAeiW,oBAAoB,CAAE9J,WAAU,EAE3E,OAAIyJ,GACFtK,EAAgBwB,SAAS,CAAElB,iBAAkBgK,EAAU,EAGlDA,IAGTM,8BAAuB,SAAY,CAC3B,MAAEviB,UAAWF,EAAewE,WAElCqT,EAAgBwB,SAAS,CAAEhB,yBAA0B,GAAM,EAC3D,MAAM8J,EAAW,MAAM,KAAK5V,eAAekW,qBAAqBviB,CAAM,EAEtE2X,EAAgBwB,SAAS,CAAEjB,kBAAmB+J,EAAU9J,yBAA0B,GAAO,IAG3FqK,0BAAmB,SAA+C,CAC1D,MAAElK,kBAAmBX,EAAgBrT,WACrC,CAAEkU,YAAaF,EAAe,EAE7B,YAAKjM,eAAemW,iBAAiB,CAAEhK,WAAU,IAG1DiK,8BAAuB,MAAOC,GAAuC,CAC7D,MAAEpK,kBAAmBX,EAAgBrT,WACrC,CAAEkU,WAAUP,oBAAqBK,EAAe,EAEhDqK,EAAkB,MAAM,KAAKtW,eAAeoW,qBAAqB,CAAEjK,WAAU,GAAGkK,EAAS,EAE/F/K,SAAgBwB,SAAS,CACvB7L,KAAMqV,EACN1K,mBACD,EAEM0K,IAGTC,uBAAgB,MAAOrB,EAAesB,IAAqB,CACnD,WAAKxW,eAAeuW,cAAc,CACtCE,cAAevB,EACfsB,WACD,IAGHE,uCAAgC,MAAOC,EAAqBC,EAAqBC,IAAoC,CAC7G,WAAK7W,eAAe0W,8BAA8B,CACtDC,cACAC,cACAC,0BACD,IAGHC,iCAA0B,MAAOL,EAAuBG,EAAqBG,EAA4BF,IAAoC,CACrI,WAAK7W,eAAegX,6BAA6B,CACrDP,gBACAG,cACAG,qBACAF,0BACD,IAGHI,4BAAqB,MAAOhlB,GAAqD,OACzE,MAAEga,kBAAmBX,EAAgBrT,WAErC,CAAEiU,cAAeD,EAAe,EAEhC,CAAET,gBAAiBF,EAAgBrT,WACzC,GAAI,CAACuT,EAAoB,UAAI1lB,MAAM,iCAAiC,EAEpE,MAAM+L,EAAW,OAAM8P,EAAA,KAAK8M,sBAAL,YAAA9M,EAA0BsV,mBAAmB,CAClE/K,aACA/Y,QAASqY,EAAarY,QACtBlB,SACAilB,eAAgB1L,EAAa0L,kBAG3BrlB,KAAS6J,OAAOzS,OAAS,EAAG,MAAM,IAAInD,MAAM+L,EAAS6J,OAAO,CAAC,CAAC,EAElE,aAAM,KAAKyb,oBAAoB,CAAEC,MAAO,GAAI,EAErCvlB,iBAAU0d,eAGnB8H,2BAAoB,MAAO,CACzBC,WACAC,aACAC,MACAC,WACAC,UACAC,cAQI,CACE,MAAE1L,kBAAmBX,EAAgBrT,WAErC,CAAEiU,cAAeD,EAAe,EAEnBzlB,GAAA,KAAKioB,oBAAoB4I,kBAAmB,4DAA4D,EAE3H,MAAMxlB,EAAW,MAAM,KAAK4c,oBAAoB4I,kBAAkB,CAChEC,WACAC,aACAC,MACAC,WACAC,UACAC,WACD,EACKhM,EAAiB,MAAM,KAAK8C,oBAAoBmJ,iBAAiB,CAAE1L,YAAY,IAAM,KAE3FZ,SAAgBwB,SAAS,CACvBvB,QAAS,GACTI,gBACD,EACM9Z,IAGTgmB,2BAAoB,MAAO1kB,GAAuC,CAChE,GAAI,CAACA,EACI,SAGH,MAAEoc,gBAAiB,MAAM,KAAKf,gBAAgByD,gBAAgB,CAAE9e,UAAS,EACxE,OAAC,EAACoc,WAAcuI,iBAKzBhS,0BAAmB,SAAkC,OAC7C,MAAEnS,SAAQc,YAAahB,EAAewE,WACtClE,EAASJ,EAAOI,OAItB,GAAI,CAH0B,CAAC,EAACU,WAAUyW,oBAIjC,YAGT,MAAMrZ,EAAW,MAAM,KAAK0iB,mBAAmBzO,iBAAiB,CAAE/R,SAAQ,EACtElC,uBAAUkmB,QAAVlmB,QAAiB5I,OAAQ,CAE3B,MAAMyiB,EAAe7Z,EAASkmB,MAAM/pB,KAAegqB,KAAKtY,SAASuY,eAAiB,MAAM,GAAKpmB,EAASkmB,MAAM,CAAC,EAC7GzM,SAAgBwB,SAAS,CAAEpB,eAAc,EAClCA,CACT,CAEO,cAGTyL,6BAAsB,MACpB,CAAEe,QAAOd,SAA8C,CACrDc,MAAO,EACPd,MAAO,KAEY,SACrB9L,EAAgBwB,SAAS,CAAEvB,QAAS,GAAM,EAEpC,MAAEU,kBAAmBX,EAAgBrT,WACrC,CAAEiU,cAAeD,EAAe,EAChC,CAAE7Z,eAAgBqB,EAAewE,WAInCigB,MAASA,EAAQ,EACZ,WAAIhU,QAASiU,GAAuC,CACzD1wB,WAAW,IAAM,CACf,KAAK0vB,oBAAoB,CAAEC,QAAO,EAAEgB,QAAQD,CAAO,GAClDD,CAAK,EACT,EAIH,GAAI9lB,IAAgB,OAClB,cAAMuP,EAAA,KAAK6S,sBAAL,YAAA7S,EAAA,YAEC2J,EAAgBwB,SAAS,CAAEvB,QAAS,GAAO,EAG9C,MAAC8M,EAAoB5M,EAAcE,CAAa,EAAI,MAAMzH,QAAQC,IAAI,CAC1E,KAAKsK,oBAAoB6J,sBAAsB,CAAEpM,aAAY,EAC7D,KAAKuC,oBAAoB8J,mBAAmB,CAAErM,aAAY,EAC1D,KAAKuC,oBAAoBmJ,iBAAiB,CAAE1L,YAAY,EAAC,CAC1D,EAED,IAAIH,EAA6B,KAEjC,GAAI,CAACsM,GAAwBjB,GAASA,EAAQ,EAGrC,aAAM,KAAKD,oBAAoB,CAAEe,MAAOM,KAAYpB,MAAOA,EAAQ,EAAG,EAI3E,IACF,GAAIiB,WAAoBI,gBAAiB,CACpBjyB,GAAA,KAAKgoB,gBAAgByC,SAAU,+CAA+C,EAC9EzqB,GAAA,KAAKgoB,gBAAgBkK,sBAAuB,4DAA4D,EAE3H,MAAMC,EAAc,MAAM,KAAKnK,gBAAgBkK,sBAAsB,CAAEE,SAAUP,EAAmBI,gBAAiB,EAGrH1M,GAFsB,MAAM,KAAKyC,gBAAgByC,SAAS,CAAE9d,QAASwlB,EAAYpJ,aAAa4B,UAAW,GAE5E5B,YAC/B,QACOhpB,EAAgB,CACvB2G,GAAS,oBAAqB,oCAAqC,CAAE3G,QAAO,CAC9E,CAGA,OAAM4b,EAAA,KAAKqS,sBAAL,YAAArS,EAAA,YAENmJ,EAAgBwB,SAAS,CACvBtB,aAAc6M,EACd9M,QAAS,GACTQ,eACAN,eACAE,gBACD,IAGHkN,2BAAoB,SAAY,OACxB,MAAEx0B,wBAAyB,KAAKwwB,cAEnB,OAAAruB,GAAA,KAAKwZ,eAAe6Y,kBAAmB,uDAAuD,EACjHnyB,GAAcrC,EAAsB,gBAAgB,GAE7Csd,EAAA,KAAK3B,iBAAL,YAAA2B,EAAqBkX,kBAAkBvwB,OAAS,GAGzDwwB,4BAAsB9H,GAAwB,CACtC,MAAEvsB,iBAAkB,KAAKowB,cAEZ,OAAAruB,GAAA,KAAKwZ,eAAe+Y,cAAe,mDAAmD,EACzGryB,GAAcjC,EAAe,eAAe,EAErC,KAAKub,eAAe+Y,cAAc,CAAE/H,cAAa,IAG1DgI,2BAAoB,MAAOxD,GAAqB,CACxC,MAAElxB,oBAAqB,KAAKuwB,cAEfruB,GAAA,KAAKwZ,eAAeiZ,cAAe,mDAAmD,EACzGvyB,GAAcpC,EAAkB,gBAAgB,EAE5C,IACI,WAAK0b,eAAeiZ,cAAc,CAAEzD,WAAU,QAC7CjvB,EAAgB,CAGnBF,MAFYE,aAAiBT,MAAQS,EAAMF,QAAQwD,YAAgB,MAE3DvD,SAAS,qBAAqB,EAClC,IAAIsnB,GAAoB,CAAEpK,KAAM,CAACgG,GAAQC,EAAE,iDAAiD,CAAC,EAAG,EAGlG,IAAImE,GAAoB,CAAEpK,KAAM,CAACgG,GAAQC,EAAE,mCAAmC,CAAC,EAAG,CAC1F,IAGFyP,oBAAa,MAAOC,GAA0B,CACzB3yB,GAAA,KAAKioB,oBAAoB2K,aAAc,uDAAuD,EAE3G,MAAE7J,gBAAiB,MAAM,KAAKd,oBAAoB2K,aAAa,CAAED,gBAAe,EAE/E5J,WAGTwE,qBAAc,SACL,KAAK/T,eAAe+T,eAG7BsF,kCAA2B,MAAO,CAAEC,OAAMC,eACjC,KAAKvZ,eAAeqZ,yBAAyB,CAAEC,OAAMC,YAAW,GAwBjEtE,6BAAuBpH,GAAoD,SACjF,MAAMnS,EAAmB,GACzB,OAAI8d,QAAO3L,mBAAQ4L,YAAR5L,cAAmB5kB,MAAM,EAAI,IACtCyS,EAAO2B,KAAKmM,GAAQC,EAAE,+BAA+B,CAAC,EAEpD+P,QAAO3L,mBAAQ6L,WAAR7L,cAAkB5kB,MAAM,EAAI,IACrCyS,EAAO2B,KAAKmM,GAAQC,EAAE,8BAA8B,CAAC,EAGhD/N,IAGD+Z,yBAAkB,SAAY,CACpCnK,EAAgBwB,SAAS,CACvB7L,KAAM,KACNuK,aAAc,KACdC,aAAc,KACdE,cAAe,KACfC,iBAAkB,KAClBC,kBAAmB,KACnBN,QAAS,GACV,EAEK,WAAK8I,oBAAoB1B,mBACzB,WAAK2B,uBAAuBzH,qBAAoB,GAphBjD2B,qBAAkBvoB,GAAe8mB,GAAiBlY,CAAe,EACjEmL,oBAAiB/Z,GAAewY,GAAgB5J,CAAe,EAC/D4Z,yBAAsBxoB,GAAe+mB,GAAqBnY,CAAe,EACzE0f,wBAAqB9uB,EAAUigB,EAAqB,EAGzD,KAAK0O,iBAAmBA,EACxB,KAAKC,oBAAsBA,EAC3B,KAAKC,uBAAyBA,EAE9B,KAAK5V,SAAW7J,EAAkB,KAAKmL,eAAetB,SAAW1a,EACnE,CAqCA21B,YAAa,CACX,OAAO,KAAK3Z,eAAe4Z,OAC7B,CAqbA/E,aAAc,CACZ,OAAO,KAAKnW,QACd,CAEA,MAAc4W,WAAWrU,EAAgB2K,EAA4CiO,EAAe,GAAO,CACzGvO,EAAgBwB,SAAS,CACvB7L,OACA2K,mBACD,EAED,MAAM1H,QAAQ4V,WAAW,CACvB,KAAK3C,oBAAoB,EACzB,KAAKjB,qBAAqB,EAE1B2D,EAAe,KAAKxF,oBAAoB7N,iBAAqB,OAAK6N,oBAAoB1B,iBAAiB,EACvGkH,EAAe,KAAKvF,uBAAuB5S,oBAAwB,OAAK4S,uBAAuBzH,oBAAoB,EACpH,EAEDvB,EAAgBwB,SAAS,CAAEvB,QAAS,GAAO,CAC7C,CA4BF,CAAC,GAAArV,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,6BCzjBiD,IAG7B6jB,IAAa/jB,GADjCC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QAORyQ,GAAO6J,EAAa,EAAC9J,EAAA9W,OAAA,IAAAgX,GAAA,SAAAF,EAAAxQ,EAAA,QACrByQ,GAAO8K,EAAe,EAAC/K,EAAA9W,OAAA,IAAAiX,GAAA,SAAAH,EAAAxQ,EAAA,QACvByQ,GAAOb,EAAc,EAACY,EAAA9W,OAAA,IAAAkX,GAAAC,QAAAC,SAAAC,sBAAA,EAAAC,GAAAH,QAAAC,SAAAwJ,+BAAAvZ,WAAAuZ,GAAAiB,UAAAxa,WAAAwa,GAAA3L,UAAA7O,WAAA6O,EAAA,GAAAxI,GAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,GAAAsJ,GAAAtJ,GAAA0J,GAAA1J,GAT3B,KACmC,CAKjCxE,YACyBsoB,EACEC,EACDna,EACxB,CAReka,wBACAC,0BACAna,yBAYjBoa,+BAAwB,MAAOC,GAAqC,CAClE,MAAMlQ,EAAiB,KAAK+P,cAAclQ,qBAAqBqQ,CAAY,EACrEC,EAAgB,KAAKJ,cAActQ,iBAAiB,EAErDO,GACHxW,EAAeqZ,SAAS,CAAEnZ,OAAQymB,EAAe,EAGnD,IAAIzmB,EAAS,MAAM,KAAKqmB,cAAchQ,WAAWC,CAAc,EAE/DtW,SAAOrD,GAAK6pB,EACLnmB,SAASL,EAAOK,QAAU,GAG5BL,EAAOK,OAAOwU,SACVxU,SAAOwU,OAAS4R,EAAcpmB,OAAOwU,QAI9C/U,EAAeqZ,SAAUuN,GAAUC,GAAM,GAAID,EAAO,CAAE1mB,OAAQ,CAAEK,OAAQ,CAAEwU,OAAQ7U,EAAOK,OAAOwU,MAAO,CAAE,CAAG,EAAC,EAE7G7U,EAAS,MAAM,KAAKqmB,cAAcrQ,eAAehW,CAAM,EACvDA,EAAS2mB,GAAM,GAAIF,EAAezmB,CAAM,EAEjCA,IAGT4mB,uBAAgB,MAAOlsB,EAAa0I,EAAkByd,IAA8C,SAClGznB,GAAS,gBAAiB,mBAAoB,CAAEsB,MAAK,EAErD,MAAMoG,EAAW,MAAM,KAAKwlB,gBAAgB1P,WAAW,EACjD4P,EAAe,MAAM,KAAKF,gBAAgB9O,gBAAgB1W,EAAUpG,CAAG,EACvEsF,EAAS,MAAM,KAAKumB,sBAAsBC,CAAY,EACtDtlB,EAAkB,KAAK2lB,yBAAyB7mB,CAAM,EAG5DF,SAAeqZ,SAAS,CAAEnZ,SAAQD,OAAQ,GAAMmB,kBAAiB,EAI5DiL,oBAAeyK,WAAW,OAAO,EAGtC9W,EAAeqZ,SAAS,CAAErY,WAAU,EAGhCI,GACF,MAAMpP,EAAU0uB,EAAiB,EAAE5J,WAAWlc,EAAKmmB,CAAmB,EAIpE/f,WAAUyW,oBACNzlB,QAAU6tB,EAAgB,EAAE/I,cAGhC5W,IAAO+K,WAAP/K,QAAiBuM,sBAAwBvM,EAAOM,QAAQtB,KAAMuG,GAAOA,EAAGpI,OAASnP,GAAcC,gBAAgB,GACjH,MAAM6D,EAAUknB,EAAsB,EAAEpC,WAAWxT,CAAQ,GAGzDpD,IAAO+K,WAAP/K,QAAiBuS,eAAiBvS,EAAOM,QAAQtB,KAAMuG,GAAOA,EAAGpI,OAASnP,GAAcE,SAAS,GACnG,MAAM4D,EAAUgtB,EAAmB,EAAElI,WAAWxT,CAAQ,EAGnD,CAAEpD,SAAQc,WAAU0lB,eAAa,GAG1CK,kCAA4B7mB,GAAmB,CAG7C,MAAM8mB,EAF2Bp1B,GAAUQ,OAAiCkB,EAA0B,EAE3CkM,OAAO,CAACynB,EAAeF,IAA6B,CACvG3lB,QAAkB2lB,EAAyB7mB,CAAM,EAEvD,OAAOkB,EAAkB,CAAC,GAAG6lB,EAAe7lB,CAAe,EAAI6lB,CACjE,EAAG,CAAe,GAEdD,KAA0BxxB,OAAS,EACrC,MAAM,IAAInD,MAAM,mEAAmE20B,EAA0BxrB,KAAK,IAAI,CAAC,EAAE,EAGpHwrB,SAA0B,CAAC,GAAK,OAGzCE,4BAAqBA,IAAqB,CAClCC,QAAcnnB,EAAewE,WAEnC,GAAI,CAAC2iB,EAAYlnB,OAAc,UAAI5N,MAAM,mFAAmF,EAE5H,OAAO80B,EAAY/lB,kBAGrBgmB,+BAAwBA,IAA0B,OAC1CD,QAAcnnB,EAAewE,WAEnC,GAAI,CAAC2iB,EAAYlnB,OAAc,UAAI5N,MAAM,sFAAsF,EACxH80B,YAAYnmB,WAAZmmB,cAAsB1P,qBAAsB5iB,SAnGnD,KAAK0xB,cAAgBA,EACrB,KAAKC,gBAAkBA,EACvB,KAAKna,eAAiBA,CACxB,CAkGF,CAAC,GAAA5J,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,IChID,MAA8B4kB,EAAW,CAUzC,WCHaC,SAAkBC,GACzBA,EAAM/oB,SAAW,YACZ,IAGT/E,GAAS,gBAAiB,0CAA2C,CAAE3G,MAAOy0B,EAAMC,OAAQ,EACrF,IACP,IAGmBC,IAAallB,GADjCC,KAAYD,GAAAE,GAAb,KACmC,CADnC,cA4BEilB,uBAAgB,MAAOrpB,EAAenI,IAAuB,CAC3D,MAAMyxB,EAAO,CAAC,CAACzxB,EAAK0xB,cAAgB,GAE9BC,EAAa,KAAKC,cAAc5xB,CAAI,EAE1C,GAAI,CAACoF,MAAMC,QAAQ8C,CAAI,QAAU,GAcjC,MAAM0pB,GAZmB,MAAMtX,QAAQ4V,WACrChoB,EAAKrC,IACH6rB,oBACIG,iBAAiBC,GAElB9Q,MAAiBrkB,GAAA,CAChBwG,GAAS,gBAAiB,gCAAiC,CAAExG,QAAOm1B,UAAS,CAE9E,EACL,CACF,GAGG9rB,OAAOmrB,EAAW,EAClBtrB,IAAK2L,GAAWA,EAAOrR,KAAK,EAC5B6F,OAAQ8rB,GAAmC,CAAC,CAACA,CAAO,EAEvD,OAAON,EAAO,KAAKO,qBAAqBH,CAAQ,EAAIA,IAOtDI,qBAAc,MAAOjyB,GAAuB,CACpC2xB,QAAa,KAAKC,cAAc5xB,CAAI,EAEpCkyB,EAAW,MAAMP,iBAAYQ,cAAcnyB,IAC3C6xB,EAAW,MAAM,KAAKL,cAAcU,EAAUlyB,CAAI,EAElDoyB,EAAepyB,EAAKoyB,cAAgBnzB,SAASe,EAAKoyB,YAAY,EAE7D,OACLzrB,GAAI3G,EAAK6H,QACTjB,MAAO5G,EAAK4G,MACZsD,YAAalK,EAAKkK,YAClBkoB,aAAcA,GAAgB,EAC9BtjB,iBAAkB9O,EAAK8O,iBACvBC,gBAAiB/O,EAAK+O,gBACtB8iB,WACF,GAGFD,uBAAiB5xB,GAAuB,OACtC,MAAMqyB,IAAeryB,mBAAMqyB,eAANryB,cAAoBsyB,sBAAuBr3B,GAASC,IACnEq3B,EAAUj2B,GAAe60B,GAAYkB,EAAc,EAAK,EAE9D,OAAKE,GACKjvB,GAAA,gBAAiB,oCAAoC+uB,CAAY,gBAAgB,EAGpFE,IAMTC,sBAAe,MAAOje,GACbgG,QAAQC,IAAIjG,EAAMzO,OAAc,KAAKmsB,YAAYjyB,CAAI,CAAC,CAAC,GAvFxDgyB,qBAAqBH,EAAwB,OAC7CY,YAAYj0B,KACZk0B,EAAY,IAAIl0B,MAAKqzB,IAAS,CAAC,IAAVA,cAAac,SAAS,EAM3CC,EAAe,IAAIp0B,KAAKA,KAAKq0B,IAAIH,EAAUI,iBAAkBJ,EAAUK,YAAY,EAAGL,EAAUM,YAAY,CAAC,EAC7GC,EAAYC,GAAiBT,EAAOG,CAAY,EAEtD,OAAOf,EAAS/rB,IAAI,CAACisB,EAASoB,KAAS,CACrC,GAAGpB,EACHprB,GAAI,GAAGorB,EAAQprB,EAAE,IAAIwsB,CAAG,GACxBR,UAAWS,GAAQ,IAAI50B,KAAKuzB,EAAQY,SAAS,EAAGM,CAAS,EAAEI,OAAO,EAClEC,QAASF,GAAQ,IAAI50B,KAAKuzB,EAAQuB,OAAO,EAAGL,CAAS,EAAEI,OAAO,CAC9D,GACJ,CAwEF,CAAC,GAAA9mB,cCzGD,MAAMgnB,GAA2Bre,GAAO,EAAEC,MAAM,CAC9C,cAAeD,GAAO,EAAEC,MAAM,CAC5B,QAASC,EAAO,EAAEpZ,SAAS,EAC5B,EACD4K,MAAOsO,GAAO,EAAEC,MAAM,CACpB,QAASC,EAAO,EAAEpZ,SAAS,EAC5B,EACDw3B,KAAMte,GAAO,EAAEC,MAAM,CACnB,QAASC,EAAO,EACjB,EACDqe,KAAMve,GAAO,EAAEC,MAAM,CACnBhF,IAAKiF,EAAO,EACb,EACDse,MAAOte,EAAO,EAAEpZ,SAAS,EACzB23B,KAAMve,EAAO,EAAEpZ,SAAS,CAC1B,CAAC,EAEK43B,GAAa5mB,GAAyB+T,GAAM/T,EAAM,iBAAsBxO,QAAM,EAAEq1B,cAAc,IAG/EC,IAAkBznB,GADtCC,GAAW,EAACD,GAAAE,GAAb,cACgD4kB,EAAW,CAD3D,kCAEEW,0BAAmB,MAAO3pB,GAAuC,WAC/D,MAAM4pB,EAAU,MAAMwB,GAAyBtT,SAAS9X,CAAI,EAErD,OACLxB,GAAIorB,EAAQ,aAAa,EAAE,OAAO,EAClCnrB,MAAOmrB,EAAQ,MAAS,OAAO,EAC/BY,UAAWiB,GAAU7B,EAAQ,KAAQ,EACrCuB,QAASM,GAAU7B,EAAQ,IAAO,EAClC7nB,aAAa6nB,mBAAU,OAAVA,cAAoB,SACjCnjB,WAAWmjB,mBAAU,OAAVA,cAAoB,IAC/BhjB,iBAAiBgjB,mBAAU,OAAVA,cAAoB,GAAK,CAC5C,GAGFI,uBAAgB,MAAOnyB,GAAuB,OACtC,MAAE+zB,aAAc,MAAMj9B,GAAA,0CAAO,sBAAiB,OAAAk9B,KAAA,kDAE9CC,EAAcj0B,EAAKi0B,YAEzB,GAAI,CAACA,EAAa,CAChB3wB,GAAQ,qBAAsB,qEAAsE,CAAEtD,OAAM,EACrGrB,MACT,CAEA,MAAMu1B,EAAmB,CACvBC,iBAAkB,GAClBC,oBAAqB,IAGnB,IACIjsB,QAAO,MAAMmJ,MAAM2iB,CAAW,EAAEpT,KAAMwT,GAAQA,EAAIx1B,MAAM,EAExDqzB,EADS,IAAI6B,EAAUG,CAAgB,EACrBnT,MAAM5Y,CAAI,EAE3B+pB,2BAAUoC,KAAVpC,cAAcqC,YAAa,SAC3B33B,EAAgB,CACnBA,aAAiBT,OACVoH,GAAA,qBAAsB,6CAA6C0wB,CAAW,IAAK,CAAEr3B,QAAO,CAEzG,IAEJ,CAAC,GAAA2P,cC7DD,MAAMioB,GAAwB,UAExBC,GAAqBvf,GAAO,EAAEC,MAAM,CACxCxO,GAAIyO,EAAO,EAAEpZ,SAAS,EACtB4K,MAAOwO,EAAO,EAAEpZ,SAAS,EACzB22B,UAAWvd,EACRpZ,aACAuI,KAAMnE,GAAWA,EAAQ6M,GAAQ,IAAIzO,KAAK4B,CAAK,CAAC,EAAI,EAAM,EAC7DkzB,QAASle,EACNpZ,aACAuI,KAAMnE,GAAWA,EAAQ6M,GAAQ,IAAIzO,KAAK4B,CAAK,CAAC,EAAI,EAAM,EAC7Ds0B,6BAA8Bzf,GAAM,EAAE6J,GACpC5J,KAASC,MAAM,CACblQ,IAAKmQ,EAAO,EAAEpZ,SAAS,EACvBoE,MAAOgV,IAAS7Q,KAAK,qBAAsB,oBAAsBnE,GAAmB,OAAOA,GAAU,QAAQ,EAC9G,CACH,CACF,CAAC,EAAE,IAGkBu0B,IAAYtoB,GADhCC,GAAW,EAACD,GAAAE,GAAb,cAC0C4kB,EAAW,CADrD,kCAEEW,0BAAmB,MAAO3pB,GAAuC,aAC/D,MAAM4pB,EAAU,MAAM0C,GAAmBxU,SAAS9X,CAAI,EAChD6F,IAAQ+jB,OAAQ2C,+BAAR3C,cAAsC1tB,QAAerE,EAAKiF,MAAQ,WAAlE8sB,cAA4E3xB,QAASzB,OAE5F,OACLgI,GAAIorB,EAAQprB,GACZC,MAAOmrB,EAAQnrB,MACf+rB,UAAWZ,EAAQY,UACnBW,QAASvB,EAAQuB,QACjB1kB,UAAWZ,EACXe,gBAAiBf,EACjB9D,cAAa6nB,OAAQ2C,+BAAR3C,cAAsC1tB,QAAerE,EAAKiF,MAAQ,iBAAlE8sB,cAAkF3xB,QAASzB,OAC1G,GAGFwzB,uBAAgB,MAAOnyB,GAAuB,CACxC,IAACA,EAAKi0B,YAAa,CACrB3wB,GAAQ,eAAgB,qEAAsE,CAAEtD,OAAM,EAC/FrB,MACT,CAEMiT,QAAU,IAAIgjB,QAGhB50B,EAAK60B,eACCtvB,MAAIivB,GAAuBx0B,EAAK60B,aAAa,EAGnD,IACF,MAAM3sB,EAAW,MAAMoJ,MAAMtR,EAAKi0B,YAAa,CAC7CriB,UACD,EAGM,aAAM3J,GAAeC,CAAQ,QAC7BtL,EAAgB,CACnBA,aAAiBT,OACnBoH,GAAS,eAAgB,mCAAmCvD,EAAKi0B,WAAW,IAAK,CAAEr3B,QAAO,CAE9F,IAEJ,CAAC,GAAA2P,IC/DY2kB,SAAyBvf,GAC7BA,EAAQjW,UAAU8f,IAAI4U,EAAa,EAAEc,sBAAsB,ECO7D,MAAM4D,EAA4B,CAAlC,cACGC,eAAwB,IAEhCC,WAAY,CACV,OAAO,KAAKD,MAAMz1B,MACpB,CAKA,MAAM21B,SAAU,CACd,OAAO,IAAI1a,QAAuB,CAACiU,EAAS0G,IAAW,CACrD,KAAKH,MAAMrhB,KAAK,CAAE8a,UAAS0G,SAAQ,EACpC,CACH,CAKA,MAAM1G,QAAQrmB,EAAU,CACtB,MAAMgtB,EAAW,KAAKJ,MAAMjvB,IAAI,CAAC,CAAE0oB,aAAcA,EAAQrmB,CAAI,CAAC,EAC9D,KAAK4sB,MAAQ,GAGPxa,cAAQ4V,WAAWgF,CAAQ,CACnC,CAKA,MAAMD,OAAO5D,EAAkB,CAC7B,MAAM6D,EAAW,KAAKJ,MAAMjvB,IAAI,CAAC,CAAEovB,YAAaA,EAAO5D,CAAM,CAAC,EAC9D,KAAKyD,MAAQ,GAGPxa,cAAQ4V,WAAWgF,CAAQ,CACnC,CACF,6BCtCA,MAAMC,GAAmB,OAuBnBC,GAAengB,GAAO,EAAEC,MAAM,CAClCmgB,YAAalgB,EAAO,EAAEpZ,SAAS,EAC/Bme,aAAc/E,EAAO,EAAEpZ,SAAS,CAClC,CAAC,EAKKu5B,GAAiBC,GACdH,GAAaI,YAAYD,CAAS,EAMrCE,GAAsBtkB,GAAkB,CACxC,IACIukB,QAA2BC,GAAUxkB,CAAK,EAE5C,UAAOukB,EAAaE,KAAQ,SAC9B,OAAOF,EAAaE,IAAM,SAEL,CACvB,CAGK,QACT,EAEA,IAaqBC,IAAazpB,GADjCC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QAaRyQ,GAAOb,EAAc,EAACY,EAAA9W,OAAA,IAAAgX,GAAA,SAAAF,EAAAxQ,EAAA,QACtByQ,GAAOrY,EAAe,EAACoY,EAAA9W,OAAA,IAAAiX,GAAA,SAAAH,EAAAxQ,EAAA,QACvByQ,GAAOnY,EAAiB,EAACkY,EAAA9W,OAAA,IAAAkX,GAAA,SAAAJ,EAAAxQ,EAAA,QAAE8wB,GAAS,EAACtgB,EAAA9W,OAAA,IAAAsX,GAAAH,QAAAC,SAAA,cAAAC,QAAA,EAAA4T,GAAA9T,QAAAC,SAAA,4BAAAlB,GAAA,IAAA7O,OAAA6O,GAAA,OAAA8P,cAAA,IAAA3e,OAAA2e,cAAA,OAAAqR,iBAAA,IAAAhwB,OAAAgwB,gBAAA,CAAA3pB,KAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,GAAAsJ,GAAAtJ,GAAA0J,GAAA1J,GAAAqd,GAAArd,GAf1C,KACmC,CAWjCxE,YAC0BoO,EACCyO,EACcpd,EACvC,CAdiB2O,yBACAyO,wBACApd,kBACAutB,eAAQ,IAAID,IACrBmB,sBAAe,IACfC,oBAAa,IAEvBjG,iBAAU,IACVkG,gBAAwB,MA+BhBC,yBAMAC,sBAA2D,MAAO,CAAElc,kBAAmB,OACzF,IACI,MAAEyL,aAAc0Q,GAAc,MAAM,KAAK3a,KAAyB,uBAAwBvD,KAAKC,UAAU,CAAE8B,cAAc,EAAC,EAEzH,OACLmb,YAAagB,EAAUjd,IACvBc,aAAcmc,EAAUnc,oBAEnBvd,EAAgB,CACvB,MAAIA,aAAiBT,QACnBiH,GAAS,gBAAiB,gCAAiC,CAAExG,QAAO,GAIhEA,EAAMF,QAAQC,SAAS,4CAA4C,GAAKC,EAAMF,QAAQC,SAAS,8BAA8B,KAC1H,KAAKy5B,gBACRhzB,GAAS,gBAAiB,2BAA2B,EAEvD,OAAM4U,EAAA,KAAKoe,iBAAL,YAAApe,EAAA,cAIJpb,CACR,IAMM25B,gCAAyB,MAAOpuB,GAAsB,CACvD8tB,kBAAe9tB,EAAKquB,SAAW,aAEhCruB,EAAKguB,QACD,WAAKM,UAAUtuB,EAAKguB,MAAM,EAG9BhuB,EAAKquB,SAAW,WACZ,WAAKzB,MAAMvG,UACRrmB,EAAKquB,SAAW,YACnB,WAAKzB,MAAMG,QACnB,GAMMwB,8BAAuBA,CAAChG,EAAsByF,IAAoB,CACpE,IAAC,KAAK3uB,QAAS,OAEnB,MAAM9K,EAAuB,CAC3B85B,OAAQ9F,EACRyF,UAGG3uB,aAAQmvB,YAAYj6B,CAAO,IAG1Bud,oBAAaA,IAAO,KAAKgW,QAAU,wCAA0C,iCAE7EtV,wBAAiB,MAAO9U,EAAe,IAAK/I,EAAS,MAAOsc,EAAeljB,EAA0B,KAAO,CAC9G,IACF,MAAMkb,EAAQlb,EAAQ0gC,aAAe,MAAM,KAAKC,wBAA0Bl4B,OAanE,aAXM,MAAM2S,MAAM,GAAG,KAAK2I,WAAY,IAAGpU,CAAI,GAAI,CACtD+L,QAAS,CACPklB,OAAQ,mBACR,eAAgB,mBAChBxd,cAAelI,EAAQ,UAAUA,CAAK,GAAK,EAC7C,EACA0J,UAAW5kB,EAAQ4kB,UACnBhe,SACAsc,OACD,GAEiBhR,aACXxL,EAAgB,CAChB,OACLmV,OAAQ3M,MAAM0Z,GAAGliB,aAAiBT,MAAQS,EAAMF,QAAUN,OAAOQ,CAAK,CAAC,EAE3E,IAWFgkB,oBAAa,MAAOqP,EAAkBmG,IAAwC,CAC5E,KAAKnG,QAAUA,EACf,KAAKmG,eAAiBA,EAEtB,MAAM,KAAKW,2BAQX,MAAM,KAAKC,yBAAwB,GAMrCP,mBAAY,MAAON,GAAmB,CACpC,KAAKA,OAASA,EACTD,gBAAaR,GAAmBS,EAAOb,WAAW,EAEjD,WAAK2B,iBAAiB,KAAKd,MAAM,IAMzCe,qBAAc,SAAY,CACxB,KAAKf,OAAS,KAER,WAAKc,iBAAiB,IAAI,IAMlCF,kCAA2B,SAAY,CACrC,MAAMI,EAAe,MAAM,KAAKhhB,eAAe8C,QAAQmc,GAAkB,EAAK,EAC1Ee,MAEA,UAAOgB,GAAiB,SAAU,OAElC,IAGE,GAFK/e,OAAK2I,MAAMoW,CAAY,EAE5B,CAAC5B,GAAcY,CAAM,EAAG,YACtB,CACN,MACF,CAEM/b,QAAUsb,GAAmBS,EAAOb,WAAW,EAGjDlb,EAAU,KAAK8b,aACjB,KAAKC,OAASA,EACd,KAAKD,WAAa9b,EACpB,GAMFgd,8BAAuBA,IAChB,KAAKjB,OAEH,KAAKD,WAAa,IAAM13B,KAAKC,MAAQ,KAAKy3B,WAAa,EAFrC,IAK3BmB,mBAAYA,IACH,CAAC,CAAC,KAAKlB,QAQRmB,uBAAgB,MAAOnB,GAAmB,CAChD,KAAKO,qBAAqB,YAAY,EACtC,KAAKT,aAAe,GAEhB,IACF,MAAMK,EAAY,MAAM,KAAKD,aAAaF,CAAM,EAEhD,GAAIG,EAAW,CACP,WAAKG,UAAUH,CAAS,EAC9B,KAAKL,aAAe,GACfS,0BAAqB,WAAYJ,CAAS,EACzC,WAAKvB,MAAMvG,UAEjB,MACF,QACO5xB,EAAgB,CACvBwG,GAAS,gBAAiB,2BAA4B,CAAExG,QAAO,CACjE,CAGA,MAAM,KAAKs6B,cACX,KAAKjB,aAAe,GACpB,KAAKS,qBAAqB,UAAU,EAC9B,WAAK3B,MAAMG,QAAO,GAQ1B8B,iCAA0B,SAAY,CAChC,IAEF,GAAI,KAAKf,aACP7yB,UAAS,gBAAiB,kDAAkD,EACrE,MAAM,KAAK2xB,MAAME,UAI1B,GAAI,CAAC,KAAKmC,qBAA0B,IAAC,KAAKjB,OACxC,OAGI,WAAKmB,cAAc,KAAKnB,MAAM,QAC7Bv5B,EAAgB,CACvB2G,GAAS,gBAAiB,iDAAkD,CAAE3G,QAAO,CACvF,IAMF26B,wBAAiB,SAAY,OAC3B,aAAM,KAAKP,0BAGX,MAAM,KAAKD,4BAEJ/e,EAAA,KAAKme,SAAL,YAAAne,EAAasd,cAMtBuB,+BAAwB,SAAY,CAC5BvB,QAAc,MAAM,KAAKiC,iBAE/B,GAAI,CAACjC,EACG,UAAIn5B,MAAM,yBAAyB,EAGpCm5B,WAGTkC,oBAAa,SAAY,CACjB7Q,QAAa,MAAM,KAAK/B,gBAE9B,OAAO,KAAKpJ,IAAwB,WAAWmL,EAAa,eAAiBA,EAAa,EAAE,EAAE,IAGhGnL,aAAM,CAAI3V,EAAc3P,IAA6B,KAAKykB,eAAe9U,EAAM,MAAOlH,OAAWzI,CAAO,GAExGulB,eAAQ,CAAI5V,EAAcuT,EAAeljB,IAA6B,KAAKykB,eAAe9U,EAAM,QAASuT,EAAMljB,CAAO,GAEtHwlB,aAAM,CAAI7V,EAAcuT,EAAeljB,IAA6B,KAAKykB,eAAe9U,EAAM,MAAOuT,EAAMljB,CAAO,GAElHylB,cAAO,CAAI9V,EAAcuT,EAAeljB,IAA6B,KAAKykB,eAAe9U,EAAM,OAAQuT,EAAMljB,CAAO,GAEpH0lB,gBAAS,CAAI/V,EAAc3P,IAA6B,KAAKykB,eAAe9U,EAAM,SAAUlH,OAAWzI,CAAO,SA/R5G,KAAKigB,eAAiBA,EACtB,KAAKyO,cAAgBA,EAErB,KAAKpd,QAAUA,GACfwQ,EAAA,KAAKxQ,UAAL,MAAAwQ,EAAcyf,iBAAiB,UAAW,KAAKlB,uBACjD,CAKA,MAAcU,iBAAiBd,EAAuB,CAChDA,EACF,MAAM,KAAKhgB,eAAegC,QAAQid,GAAkBhd,KAAKC,UAAU8d,CAAM,CAAC,EAEpE,WAAKhgB,eAAesE,WAAW2a,EAAgB,CAEzD,CAgRF,CAAC,GAAA7oB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,IC9XYmrB,SAAkBlV,IACtB,CACL7b,GAAI6b,EAAS7b,GACb4kB,MAAO/I,EAAS+I,MAChB7F,QAASlD,EAASkD,QAClBoK,UAAWtN,EAASsN,UACpBC,SAAUvN,EAASuN,SACnB4H,SAAU,GAAGnV,EAASsN,SAAS,IAAItN,EAASuN,QAAQ,GAEpDha,SAAUyM,EAASoV,cAAgB,CAAC,ICT3BC,GAA0BC,IAC9B,CACL3wB,KAAM,WACN5K,KAAMu7B,EAAQv7B,KACd8K,MAAOywB,EAAQzwB,MACf0wB,aAAc,GACd/7B,SAAU87B,EAAQ97B,SAClBg8B,YAAaF,EAAQE,YACrB9hC,QAAS,CAAC,EACV+hC,iBAAkB,GAClBC,QAASJ,EAAQI,gCCkCuB,IAGvBC,IAAoB9rB,GADxCC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QAYEyQ,GAAOogB,EAAa,EAACrgB,EAAA9W,OAAA,IAAAgX,GAAA,SAAAF,EAAAxQ,EAAA,QAAgCyQ,GAAOrY,EAAe,EAACoY,EAAA9W,OAAA,IAAAiX,GAAAE,QAAAC,SAAAC,sBAAA,EAAAH,GAAAC,QAAAC,SAAA,4BAAA+f,GAAA,IAAA9vB,OAAA8vB,GAAAnR,qBAAA3e,WAAA2e,aAAA,GAAAtY,GAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,GAAAsJ,GAAAtJ,GAZ3F,cACkDuI,EAAe,CAW/D/M,YAAmCqwB,EAAuDxT,EAA8B,CAChH,OACJtqB,eAAgB,GAChBC,wBAAyB,GACzBC,iCAAkC,GAClCC,qBAAsB,GACtBC,qBAAsB,GACtBC,iBAAkB,GAClBC,uBAAwB,GACxBC,gBAAiB,GACjBC,cAAe,GACfC,iBAAkB,GAElBC,mBAAoB,GACrB,EAxBgBo9B,wBACAxT,wBACTyT,qBAAc,IAEdT,sBAAwC,IAElDnvB,qBAA2BlQ,GAAaE,SACxCwsB,sBAAyB,IACzBgL,iBAAU,IAsBFqI,sBAAgBvmB,GAAqB,CACvCA,KAAOzS,OAAS,EAClB,MAAM,IAAInD,MAAM4V,EAAO,CAAC,CAAC,CAC3B,GAGMwmB,mCAA6BpO,GACFyL,GAAUzL,EAAK9Q,GAAG,EAC/BkJ,YAGdiW,qBAAc,MAAO,CAAEjW,gBAAyC,CAChE,MAAEqD,eAAc7T,UAAW,MAAM,KAAKqmB,cAAc5c,IAAyB,cAAc+G,CAAU,GAAI,CAC7GqU,aAAc,GACf,EAED,YAAK0B,aAAavmB,CAAM,EACnB6lB,kBAAehS,EAAagS,cAAgB,GAE1CF,GAAe9R,CAAY,IAG5B4R,oBAAa,SACZ,KAAKY,cAAcZ,cAG5B5W,oBAAa,MAAO5W,EAAgByuB,EAAcrC,IAAwC,OAClFsC,SAAe1uB,mBAAQQ,eAARR,cAAsBS,OAEvC,KAACiuB,WAAc/xB,IACX,UAAIxK,MAAM,sEAAsE,EAIxF,KAAKk8B,YAAcK,EAAa/xB,GAChC,KAAK8B,YAAciwB,EAAa1a,cAAgB0a,EAAaza,YAAc1lB,GAAaG,KAAOH,GAAaE,QACvGwsB,kBAAe,CAACyT,iBAAc1a,aAAc0a,iBAAcza,WAAW,EAAEhY,OAAO1F,OAAO,EAAEuF,IAAI1J,MAAM,EAGjG6zB,aAAU,CAAC,CAACyI,EAAahuB,WAC9B,MAAM,KAAK0tB,cAAcxX,WAAW,KAAKqP,QAASmG,CAAc,IAGlEhM,qBAAc,SACR,KAAKgO,cAAcjC,OACd,CACL9c,IAAK,KAAK+e,cAAcjC,OAAOb,YAC/Bnb,aAAc,KAAKie,cAAcjC,OAAOhc,cAIrC,MAGTmS,6BAA2C,MAAOhN,GAAY,OACtD,MAAEkD,UAAalD,IACfpX,EAAW,MAAM,KAAKkwB,cAAc5c,IAAiC,cAAcgH,iBAAU7b,EAAE,YAAa,CAChHiwB,aAAc,GACf,EACI0B,yBAAapwB,EAAS6J,MAAM,IAE1B7J,mBAAU0d,eAAV1d,cAAwB+jB,WAAY,EAAE,GAG/CI,gCAAiD,MAAO/M,GAAY,CAC5D,MAAEkD,UAAalD,IAEf9M,EAAwC,CAC5C7L,GAAI6b,EAAS7b,GACbslB,SAAU3M,EAAQ2M,UAGd/jB,EAAW,MAAM,KAAKkwB,cAAc1c,IAA4B,cAAc8G,iBAAU7b,EAAE,YAAayR,KAAKC,UAAU7F,CAAM,EAAG,CACnIokB,aAAc,GACf,EACI0B,yBAAapwB,EAAS6J,MAAM,EAE1B,MAAM,KAAKua,oBAAoBhN,CAAO,IAG/CsM,eAAe,MAAO,CAAEL,QAAOM,cAAe,CAC5C,MAAMvM,EAAwB,CAC5BiM,QACAM,WACAwM,YAAa,KAAKA,YAClB1R,WAAY,MAAM,KAAK/B,cAAc,GAGjC,CAAEgB,aAAcuE,EAAMpY,UAAW,MAAM,KAAKqmB,cAAczc,KAAmB,SAAUvD,KAAKC,UAAUiH,CAAO,CAAC,EACpH,KAAKgZ,aAAavmB,CAAM,EAElB,WAAKqmB,cAAc3B,UAAU,CAAEnB,YAAanL,EAAK9Q,IAAKc,aAAcgQ,EAAKhQ,aAAc,EAEvF,MAAE7C,OAAM2K,oBAAqB,MAAM,KAAKyJ,UAEvC,OACLpU,OACA6S,OACAlI,mBACF,GAGFprB,kBAAqB,MAAO,CAAE00B,QAAOM,WAAUI,WAAUjG,kBAAmB,CACpE2S,QAAkB,MAAM,KAAKnB,aAE9Bc,kBAAaK,EAAgB5mB,MAAM,EAExC,MAAMuN,EAA2B,CAC/BiM,QACAM,WACA+M,OAAQD,EAAgB/S,aAAagT,OACrClT,QAASiT,EAAgB/S,aAAaF,QACtCsI,SAAU2K,EAAgB/S,aAAaoI,SACvCqK,YAAa,KAAKA,YAClB1R,WAAY,MAAM,KAAK/B,cAAc,EACrCoB,gBAGI,CAAEJ,aAAcuE,EAAMpY,UAAsC,MAAM,KAAKqmB,cAAczc,KAAK,aAAcvD,KAAKC,UAAUiH,CAAO,CAAC,EACrI,KAAKgZ,aAAavmB,CAAM,EAElB,WAAKqmB,cAAc3B,UAAU,CAAEnB,YAAanL,EAAK9Q,IAAKc,aAAcgQ,EAAKhQ,aAAc,EAEvF,MAAE7C,QAAS,MAAM,KAAKoU,UAEtBzJ,EAAmB,MAAM,KAAKoK,uBAAuB,CAAEJ,WAAUzJ,SAAUlL,EAAM,EAAE2J,MAAM,IAEtF,EACR,EAEM,OACL3J,OACA6S,OACAlI,mBACF,GAGF+I,gBAAS,SAAY,CAEb,WAAKoN,cAAclB,aAAY,GAGvCxL,iBAAU,SAAY,CACdmN,QAAW,MAAM,KAAKzO,cAE5B,GAAI,CAACyO,EAAgB,UAAI18B,MAAM,eAAe,EAExComB,QAAa,KAAKgW,0BAA0BM,CAAQ,EACpDvhB,EAAO,MAAM,KAAKkhB,YAAY,CAAEjW,aAAY,EAC5C0J,EAAW,MAAM,KAAKK,oBAAoB,CAAE9J,SAAUlL,EAAM,EAE3D,OACLA,OACA2K,iBAAkBgK,EACpB,GAGFM,8BAA6C,SAAY,OACjDrkB,QAAW,MAAM,KAAKkwB,cAAc5c,IAAkC,eAAe,KAAK6c,WAAW,WAAW,EAEjHC,yBAAapwB,EAAS6J,MAAM,KAEzB7J,IAAS0d,eAAT1d,cAAuB+jB,WAAY,IAAInmB,IAAI+xB,EAAsB,IAG3ErL,0BAAqC,MAAO,CAAEhK,cAAe,CACrDta,QAAsD,MAAM,KAAKkwB,cAAc5c,IAAI,cAAcgH,iBAAU7b,EAAE,kBAAmB,CACpIiwB,aAAc,GACf,EAEI0B,yBAAapwB,EAAS6J,MAAM,EAE1B7J,EAAS0d,eAGlB6G,8BAA6C,MAAO,CAAEjK,WAAU,GAAGlD,KAAc,CAC/E,MAAM9M,EAAsC,CAC1C+P,WAAYC,EAAS7b,GACrB,GAAG2Y,GAGCpX,EAAW,MAAM,KAAKkwB,cAAc1c,IAA4B,cAAc8G,EAAS7b,EAAE,WAAYyR,KAAKC,UAAU7F,CAAM,EAAG,CACjIokB,aAAc,GACf,EACI0B,yBAAapwB,EAAS6J,MAAM,EAE1B,KAAKymB,YAAY,CAAEjW,WAAYC,EAAS7b,GAAI,IAGrDimB,uBAA+B,MAAOtN,GAAY,CAChD,MAAMpX,EAAW,MAAM,KAAKkwB,cAAc1c,IACxC,uBACAtD,KAAKC,UAAU,CACb,GAAGiH,EACH+Y,YAAa,KAAKA,WACnB,EACH,EAEKC,kBAAapwB,EAAS6J,MAAM,IAGnCsb,sCAA+C,MAAO/N,GAAY,CAChE,MAAMpX,EAAW,MAAM,KAAKkwB,cAAc3c,MACxC,uBACArD,KAAKC,UAAU,CACb,GAAGiH,EACH+Y,YAAa,KAAKA,WACnB,EACH,EAEKC,kBAAapwB,EAAS6J,MAAM,IAGnCgb,uCAA+D,SAAY,IAI3EtB,wBAAiC,MAAOnM,GAAY,CAC5C,MAAE3Y,KAAIoP,WAAU4hB,WAAU,GAAGjqB,CAAS4R,IACtC9M,EAAgC,CACpC7L,KACA,GAAG+G,GAIC,CAAEkY,eAAc7T,QAAO,EAAI,MAAM,KAAKqmB,cAAc3c,MAA8B,cAAc9U,CAAE,GAAIyR,KAAKC,UAAU7F,CAAM,EAAG,CAClIokB,aAAc,GACd9b,UAAW,GACZ,EAED,YAAKwd,aAAavmB,CAAM,EACnB6lB,kBAAehS,EAAagS,cAAgB,GAE1CF,GAAe9R,CAAY,IAGpC3N,4BAAyC,MAAO,CAAEX,OAAMY,aAAc,CACpE,MAAMoH,EAAU,CAAE3Y,GAAI2Q,EAAK3Q,GAAIixB,aAAc,CAAE,GAAG,KAAKA,aAAc1f,SAAQ,GACvE,CAAEnG,SAAQ6T,cAAiB,QAAM,KAAKwS,cAAc3c,MAA8B,cAAcnE,EAAK3Q,EAAE,GAAIyR,KAAKC,UAAUiH,CAAO,EAAG,CACxIsX,aAAc,GACd9b,UAAW,GACZ,EAED,KAAKwd,aAAavmB,CAAM,EACnB6lB,kBAAehS,EAAagS,cAAgB,EAAC,GAGpD9a,yBAAmC,MAAO,CAAExF,OAAM/b,eAAgB,CAChE,MAAM+jB,EAAU,CAAE3Y,GAAI2Q,EAAK3Q,GAAIixB,aAAc,CAAE,GAAG,KAAKA,aAAcr8B,WAAU,GACzE,CAAEwW,SAAQ6T,cAAiB,QAAM,KAAKwS,cAAc3c,MAA8B,cAAcnE,EAAK3Q,EAAE,GAAIyR,KAAKC,UAAUiH,CAAO,EAAG,CACxIsX,aAAc,GACd9b,UAAW,GACZ,EAED,KAAKwd,aAAavmB,CAAM,EACnB6lB,kBAAehS,EAAagS,cAAgB,EAAC,GAGpDvgB,yBAAkB,SACR,KAAKugB,aAAa,SAAc,IAG1Ctb,sBAAe,SACL,KAAKsb,aAAa,WAAgB,IAG5ClI,kCAA8C,SACrC,IAGTN,wBAEAF,4BAEAI,wBAtRE,KAAK8I,cAAgBA,EACrB,KAAKxT,cAAgBA,CACvB,CAqRF,CAAC,GAAArY,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,0BCtU2C,IAGvBusB,IAAqBzsB,GADzCC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QAKEyQ,GAAOogB,EAAa,EAACrgB,EAAA9W,OAAA,IAAAgX,GAAA,SAAAF,EAAAxQ,EAAA,QAAgCyQ,GAAOrY,EAAe,EAACoY,EAAA9W,OAAA,IAAAiX,GAAAE,QAAAC,SAAAC,sBAAA,EAAAH,GAAAC,QAAAC,SAAA,4BAAA+f,GAAA,IAAA9vB,OAAA8vB,GAAAnR,qBAAA3e,WAAA2e,aAAA,GAAAtY,GAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,GAAAsJ,GAAAtJ,GAL3F,cACmD6W,EAAgB,CAIjErb,YAAmCqwB,EAAuDxT,EAA8B,CAChH,QAJWwT,wBACAxT,wBAQnBI,mBAAuB,MAAO1F,GACrB,MAAM/E,QAAQC,IACnB8E,EAAQjW,SAASvD,IAAI,MAAO0D,GAAY,CAChCtB,QAAW,MAAM,KAAKof,SAAS,CAAE9d,QAASpN,OAAOoN,CAAO,EAAG,EAE7DtB,KAAS6J,OAAOzS,OAAS,EAC3B,MAAM,IAAInD,MAAM+L,EAAS6J,OAAO,CAAC,CAAC,EAGpC,OAAO7J,EAAS0d,YACjB,EACH,GAGF0B,kBAAqB,MAAOhI,GAAY,CAChCqH,QAAa,MAAM,KAAK/B,gBAEvB,YAAKwT,cAAc5c,IAAI,WAAW8D,EAAQ9V,OAAO,GAAGmd,EAAa,eAAiBA,EAAa,EAAE,EAAE,IAG5GhB,qBAA2B,MAAOrG,GAAY,OAC5C,MAAMyZ,EAAU,MAAM,KAAKX,cAAcZ,WAAW,EAEhDuB,KAAQhnB,OAAOzS,OAAS,EAAG,MAAM,IAAInD,MAAM48B,EAAQhnB,OAAO,CAAC,CAAC,EAE1D4U,QAAaoS,EAAQnT,aAAaoT,UAElCC,EAAyC,CAC7CzvB,QAAS8V,EAAQrW,MAAMO,QACvB+Y,WAAYjD,EAAQiD,WACpBmD,QAASpG,EAAQoG,QACjBsI,WAAU+K,mBAASnT,eAATmT,cAAuB/K,WAAY,MAC7CrH,aACAnB,gBAAiBlG,EAAQkG,iBAG3B,OAAO,KAAK4S,cAAczc,KAAK,UAAWvD,KAAKC,UAAU4gB,CAAkB,EAAG,CAAErC,aAAc,GAAM,IAGtGsC,kBAAqB,MAAO,CAAEjT,aACrB,KAAKmS,cAAc5c,IAAI,WAAWyK,CAAO,GAAI,CAAE2Q,aAAc,GAAM,GAG5E/Q,qBAA2B,MAAO,CAAEjC,QAAO,GAAGtE,KAAc,CAC1D,MAAMpX,EAAW,MAAM,KAAKkwB,cAAc3c,MAA4C,WAAWmI,EAAMjd,EAAE,GAAIyR,KAAKC,UAAUiH,CAAO,EAAG,CACpIsX,aAAc,GACf,EAEG1uB,KAAS6J,OAAOzS,OAAQ,CACtB4I,KAAS6J,OAAO,CAAC,EAAEpV,SAAS,cAAcinB,EAAMjd,EAAE,YAAY,EAC1D,UAAIxK,MAAM,iBAAiB,EAG/B+L,KAAS6J,OAAO,CAAC,EAAEpV,SAAS,UAAU2iB,EAAQwG,UAAU,YAAY,EAChE,UAAI3pB,MAAM,qBAAqB,EAGnC+L,KAAS6J,OAAO,CAAC,EAAEpV,SAAS,UAAU2iB,EAAQwG,UAAU,kCAAkC,EACtF,UAAI3pB,MAAM,oCAAoC,CAExD,CAEO+L,WAGTqd,2BAAuC,SAC9B,KAAK6S,cAAc5c,IAAI,mBAAoB,CAAEob,aAAc,GAAM,GAG1E7Q,+BAA+C,MAAOzG,GAC7C,KAAK8Y,cAAczc,KAAK,YAAavD,KAAKC,UAAUiH,CAAO,EAAG,CAAEsX,aAAc,GAAM,GAG7FxP,2BAAuC,MAAO9H,GAAY,CAClD,MAAEsE,QAAOoD,aAAYE,YAAWC,WAAUnB,cAAiB1G,IAE3D6Z,EAAgB,CACpBlT,QAASrC,EAAMjd,GACfqgB,aACAE,YACAC,WACAnB,gBAGF,OAAO,KAAKoS,cAAczc,KAAK,+BAAgCvD,KAAKC,UAAU8gB,CAAa,EAAG,CAAEvC,aAAc,GAAM,IAGtHzR,iCAAmD,MAAO7F,GACjD,KAAK8Y,cAAc5c,IAAI,cAAc8D,EAAQiD,UAAU,0BAA0BjD,EAAQ9V,OAAO,gBAAiB,CAAEotB,aAAc,GAAM,GAGhJ7H,+BAA+C,MAAOzP,GAC7C,KAAK8Y,cAAc5c,IAAI,0BAA0B8D,EAAQ2P,QAAQ,GAAI,CAAE2H,aAAc,GAAM,GAGpGnP,4BAAyC,MAAOnI,GACvC,KAAK8Y,cAAczc,KACxB,cAAc2D,EAAQiD,UAAU,0BAA0BjD,EAAQ9V,OAAO,GACzE4O,KAAKC,UAAU,CAAEmP,UAAWlI,EAAQkI,UAAWE,gBAAiBpI,EAAQoI,gBAAiB,EACzF,CAAEkP,aAAc,GAClB,GAGFtO,yBAAmC,MAAOhJ,GACjC,KAAK8Y,cAAc5c,IAAI,iBAAiB8D,EAAQ9V,OAAO,GAAI,CAAEotB,aAAc,GAAM,GAG1FrQ,mCAAoD,MAAOjH,GAClD,MAAM,KAAK8Y,cAAczc,KAAK,6BAA8BvD,KAAKC,UAAUiH,CAAO,EAAG,CAAEsX,aAAc,GAAM,GAGpHnQ,6BAA8C,MAAOnH,GACnD,KAAK8Y,cAAczc,KACjB,oCACAvD,KAAKC,UAAU,CAAE,GAAGiH,EAAS8Z,sBAAuB,KAAKhB,cAAcnI,QAAU,SAAWtxB,OAAW,EACvG,CAAEi4B,aAAc,GAClB,GAEFhQ,8BAAgD,MAAOtH,GACrD,KAAK8Y,cAAczc,KAAK,6CAA8CvD,KAAKC,UAAUiH,CAAO,EAAG,CAAEsX,aAAc,GAAM,GAEvH3O,uCAAyD,MAAO3I,GACvD,KAAK8Y,cAAczc,KAAK,+CAAgDvD,KAAKC,UAAUiH,CAAO,EAAG,CAAEsX,aAAc,GAAM,GAGhI1O,6BAA2C,MAAO5I,GACzC,KAAK8Y,cAAcxc,OAAO,oBAAoB0D,EAAQ6I,gBAAgB,GAAI,CAAEyO,aAAc,GAAM,GAGzGxO,gCAAiD,MAAO9I,GACtD,KAAK8Y,cAAczc,KACjB,oCACAvD,KAAKC,UAAU,CACb,GAAGiH,EACH8Z,sBAAuB,KAAKhB,cAAcnI,QAAU,SAAWtxB,OAChE,EACD,CAAEi4B,aAAc,GAClB,GAEFvO,qCAA2D,MAAO/I,GAChE,KAAK8Y,cAAczc,KAAK,6CAA8CvD,KAAKC,UAAUiH,CAAO,EAAG,CAAEsX,aAAc,GAAM,GAEvHzQ,+BAAwB,SAAY,IAlJlC,KAAKiS,cAAgBA,EACrB,KAAKxT,cAAgBA,CACvB,CAiJF,CAAC,GAAArY,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,uBC3K2C,IAGvB8sB,IAAyBhtB,GAD7CC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QAIEyQ,GAAOogB,EAAa,EAACrgB,EAAA9W,OAAA,IAAAgX,GAAAG,QAAAC,SAAA,cAAAC,QAAA,EAAAJ,GAAAE,QAAAC,SAAA,4BAAA+f,GAAA9vB,WAAA8vB,EAAA,GAAAzpB,GAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,GAJpC,cACuD8W,EAAoB,CAGzEtb,YAAmCqwB,EAA8B,CACzD,QAHWA,wBAOnBzJ,+BAA+C,MAAO,CAAEpM,gBAAiB,CACjEra,QAAW,MAAM,KAAKoxB,iBAAiB,CAAE/W,aAAY,EAE3D,OAAIra,EAAS6J,OAAOzS,OAAS,EAAU,KAEhC4I,EAAS0d,aAAarR,MAAMlQ,KAAMrE,GAASA,EAAKsI,SAAW,UAAYtI,EAAKsI,SAAW,WAAW,GAAK,OAGhHsmB,4BAAyC,MAAO,CAAErM,gBAAiB,CAC3Dra,QAAW,MAAM,KAAKqxB,gBAAgB,CAAEhX,aAAY,EAE1D,OAAIra,EAAS6J,OAAOzS,OAAS,EAAU,KAEhC4I,EAAS0d,aAAarR,QAG/B0Z,0BAAqC,MAAO,CAAE1L,gBAAiB,CACvDra,QAAW,MAAM,KAAKsxB,kBAAkB,CAAEjX,aAAY,EAE5D,OAAIra,EAAS6J,OAAOzS,OAAS,EAAU,KAEhC4I,EAAS0d,aAAa6T,eAAep1B,KAAyBo1B,KAAeC,MAAM,GAAK,OAGjGJ,0BAAqC,MAAOha,GACnC,KAAK8Y,cAAc5c,IAAI,cAAc8D,EAAQiD,UAAU,iBAAkB,CAAEqU,aAAc,GAAM,GAGxGtJ,4BAAyC,MAAOhO,GACvC,KAAK8Y,cAAc3c,MAAM,cAAc6D,EAAQiD,UAAU,iBAAkBnK,KAAKC,UAAUiH,CAAO,EAAG,CAAEsX,aAAc,GAAM,GAGnI4C,2BAAuC,MAAOla,GACrC,KAAK8Y,cAAc5c,IAAI,cAAc8D,EAAQiD,UAAU,mBAAoB,CAAEqU,aAAc,GAAM,GAG1G2C,yBAAmC,MAAO,CAAEhX,aAAYpkB,QAAOw7B,YACtD,KAAKvB,cAAc5c,IAAI/W,GAAU,cAAc8d,CAAU,gBAAiB,CAAEpkB,QAAOw7B,SAAQ,EAAG,CAAE/C,aAAc,GAAM,GAG7HnH,sBAA6B,MAAO,CAAED,mBAC7B,KAAK4I,cAAc5c,IAAI,YAAYgU,CAAa,GAAI,CAAEoH,aAAc,GAAM,GAGnFlJ,4BAEA9F,6BAjDE,KAAKwQ,cAAgBA,CACvB,CAiDF,CAAC,GAAA7rB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,ICjED,MAAMqtB,GAAuBA,CAAC5vB,EAAgBnD,IAA6C,OACzF,MAAMgzB,EAAW7vB,EAAOO,KAAKlG,KAAerE,KAAKoH,YAAcP,CAAU,EAGzE,QAFgBgzB,mBAAUlc,aAAVkc,cAAsBz1B,MAAM,KAAK6B,OAAO1F,WAEtC,EACpB,EAEMu5B,GAAiBA,CAACz+B,EAAoB4K,IACtCA,IAAW,GAAW5K,EAEnB,CACL,GAAGA,EACHA,SAAUA,EAASA,SAAS4K,OAAO,CAAC,CAAE9B,UAAYA,EAAOA,EAAKC,MAAM,GAAG,EAAEzH,SAASsJ,CAAM,EAAI,EAAM,GAahG8zB,GAA8BA,CAACC,EAAyB,MAAkB,CAC9EpzB,MAAO,GACPvL,SAAU,IAAI+J,MAAM40B,CAAc,EAAEC,KAAK,CAAE,GAAEn0B,IAC3C,CAACo0B,EAAQpqB,KACN,CACC5F,YAAa,GACbqG,SAAU,EACV1C,OAAQ,GACRG,MAAO,GACPD,OAAQ,CAAE,EACVa,UAAW,GACXG,gBAAiB,GACjBD,iBAAkB,GAClBpD,KAAM,GACNyuB,MAAO,GACPtyB,QAAS,eAAeiI,CAAK,GAC7B7B,QAAS,EACTmsB,OAAQ,GACRtsB,QAAS,CAAE,EACX3J,KAAM,GACNyC,MAAO,GACPyzB,OAAQ,IAEd,CACF,GAEMC,GAAsBA,CAACpY,EAA8C,GAAID,EAA6C,KACtH,CAACC,GAAqB,CAACD,EAClB,GAGMC,iBAAmB5Y,OAAO,CAAC6N,EAAKojB,IAAqB,CAClE,MAAMzC,EAAU7V,iBAAkB5d,QAA0Bm2B,EAAgBj+B,OAASg+B,EAAiBh+B,MAEtG,GAAIu7B,EAAS,CACX,MAAM13B,EAAQm6B,EAAiBE,sBAAwB3C,EAAQ13B,OAAS,GAAK03B,EAAQpH,QAAU,WAC3F6J,IAAiBh+B,IAAI,EAAI6D,CAC/B,CAEO+W,QACT,EAAG,CAAuC,GAKtCujB,GAAiBA,CAACxY,EAA8C,GAAID,EAA6C,KAAO,CACxH,IAACC,GAAqB,CAACD,EACzB,MAAO,GAET,MAAMiC,EAAkC,GACxChC,kBAAmBjf,QAA8Bs3B,GAAA,CAC3CtY,WAAkB5d,KAAMm2B,GAAoBA,EAAgBj+B,OAASg+B,EAAiBh+B,MAAQi+B,EAAgB9J,QAAU,cACnH6J,IAAiBh+B,IAAI,EAAI,GAClC,GAGK2nB,CACT,EAEMyW,GAAwB1O,GAAiC,CAC7D,MAAM/H,EAA2C,GAEjD,OAAK+H,IAILA,WAAUhpB,QAAqB60B,GAAA,CACtBA,IAAQv7B,IAAI,EAAIu7B,EAAQ3wB,OAAS,WAAa2wB,EAAQG,mBAAqB,GAAOH,EAAQC,cAAgB,MAG5G7T,CACT,EAEM0W,GAA2BA,CAAC1Y,EAA6CgC,IAA+B,CAC5G,MAAM+H,EAA8B,GAEpC,MAAI,CAAC/J,GAAqB,CAACgC,GAE3BhC,EAAkBjf,QAAqB60B,GAAA,CACrC7L,EAASvY,KAAK,CACZnX,KAAMu7B,EAAQv7B,KACd27B,QAASJ,EAAQI,QACjBxH,MAAOxM,EAAO4T,EAAQv7B,IAAI,EAAI,WAAa,WAC3C6D,MAAO8jB,EAAO4T,EAAQv7B,IAAI,GAAK,GAChC,EACF,EAEM0vB,CACT,EAEM4O,GAA0BA,CAAC3Y,EAAsC+J,IAA+C,CACpH,MAAMhK,EAAsC,GACtC6Y,EAA2B,GAEjC,MAAI,CAAC5Y,GAAqB,CAAC+J,EAAiB,CAAEhK,mBAAkB6Y,mBAEhE5Y,EAAkBjf,QAAqB60B,GAAA,CACjCA,EAAQ97B,UAAY,CAACiwB,EAAS6L,EAAQv7B,IAAI,GAC7BmX,OAAKokB,EAAQv7B,IAAI,EAGlC0lB,EAAiBvO,KAAK,CACpBnX,KAAMu7B,EAAQv7B,KACd27B,QAASJ,EAAQI,QACjBxH,MAAOzE,EAAS6L,EAAQv7B,IAAI,EAAI,WAAa,WAC7C6D,MAAO6rB,EAAS6L,EAAQv7B,IAAI,GAAK,GAClC,EACF,EAEM,CAAE0lB,mBAAkB6Y,kBAC7B,EAEMC,GAAqBjD,GAA6BA,EAAQ13B,QAAU,GAEpE46B,GAA+BA,CAAC,CAAEz+B,OAAM6D,QAAQ,EAAoB,EAAG8F,EAAWmO,IAAkC,CACxH,MAAM4mB,EACA1+B,IAAS,WACP8X,EAAWhQ,KAAK,CAAC,CAAE9H,OAAM6D,OAAY7D,QAAS,WAAa6D,IAAU,IAAI,EACpEA,IAAU,MAAQ,GAAKA,EAGzB,OAGSA,IAAU,IAAQA,IAAU,KAE7B7D,IAAS,QACjB6D,EAAQ,KAAO,MAGjBA,EAGF,OAAC7D,EAAM0+B,CAAG,CACnB,EAEMC,GAAkCjP,GACtCjmB,OAAO2Q,YAAYsV,EAAShmB,OAAO80B,EAAiB,EAAEj1B,IAAIk1B,EAA4B,CAAC,EAEnFG,GAAYC,GACZh2B,MAAMC,QAAQ+1B,CAAG,GAAM,OAAOA,GAAQ,UAAYA,IAAQ,KACrDhjB,KAAK2I,MAAM3I,KAAKC,UAAU+iB,CAAG,CAAC,EAEhCA,EAGHC,GAAoBhK,GAAmB,CAC3C,GAAI,OAAOA,GAAU,UAAal3B,GAAyCwC,SAAS00B,CAAK,EAAUA,QACrG,EAEMiK,GAAmBC,GAAqC,CAC5D,GAAI,CAACA,EACI,SAGHC,QAAQD,EAAan3B,MAAM,GAAG,EAEpC,OAAOo3B,EAAMl8B,SAAW,EAAIm8B,KAAKC,MAAMz8B,SAASu8B,EAAM,CAAC,CAAC,EAAIv8B,SAASu8B,EAAM,CAAC,CAAC,CAAC,EAAI,CACpF,wBCrIA,MAAMG,GAAe,mCAAmC,IAGnCC,IAAiBvvB,GADrCC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QAYEyQ,GAAOb,EAAc,EAACY,EAAA9W,OAAA,IAAAgX,GAAA,SAAAF,EAAAxQ,EAAA,QAAkCyQ,GAAOoE,EAAa,EAACrE,EAAA9W,OAAA,IAAAiX,GAAAE,QAAAC,SAAAC,sBAAA,EAAAH,GAAAC,QAAAC,SAAA,4BAAAlB,GAAA,IAAA7O,OAAA6O,GAAAiF,UAAA9T,WAAA8T,EAAA,GAAAzN,GAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,GAAAsJ,GAAAtJ,GAZ5F,cAC+CuI,EAAe,CAW5D/M,YAAoCoO,EAAuDD,EAA2B,CAC9G,OACJ5b,eAAgB,GAChBC,wBAAyB,GACzBC,iCAAkC,GAClCC,qBAAsB,GACtBC,qBAAsB,GACtBE,uBAAwB,GACxBC,gBAAiB,GACjBF,iBAAkB,GAClBI,iBAAkB,GAClBD,cAAe,GAEfE,mBAAoB,GACrB,EAxBgBmb,yBACAD,qBAETvL,kBAAW,IAErBlC,qBAA2BlQ,GAAaE,SACxCmS,iBAAyB,MACzBqa,sBAAyB,IACzBgL,iBAAU,IAsBF4L,mBAAYA,CAACz7B,EAAeyM,EAAW,KAAO,CAChD,IACKuL,YAAK2I,MAAM3gB,CAAK,OACjB,CACCyM,QACT,IAGMivB,wBAAkBC,IACjB,CACLl0B,QAASk0B,EAASnuB,YAIdouB,2BAAqB9jB,IACpB,CACLrQ,QAASqQ,EAAQtK,SACjByH,SAAU6C,EAAQ7C,YAId4mB,uBAAiBC,GAAmC,CACpD,MAAEv1B,KAAIgpB,OAAMpE,QAAO4Q,UAAWxE,EAAU5hB,WAAUqmB,WAAYC,CAAcH,IAC5EI,EAAU,IAAI99B,KAAK69B,EAAY,GAAI,EAAEE,iBAErCzM,EAAY/Z,iBAAUymB,WACtBzM,EAAWha,iBAAU0mB,QAEpB,OACL91B,GAAIA,EAAGlB,SAAS,EAChBkqB,OACApE,QACAoM,WACA7H,YACAC,WACAha,WACAumB,UACA5W,QAAS,GACTgX,WAAY,GACd,GAWF9b,oBAAa,MAAO5W,EAAgBtF,EAAai4B,IAAmC,OAC5EC,SAAY5yB,IAAOQ,eAAPR,cAAqB9O,IAEnC,KAAC0hC,WAAWjyB,UACR,UAAIxO,MAAM,gEAAgE,EAI7E8zB,aAAU,CAAC,CAAC2M,EAAUlyB,WAErBvT,QAAc,KAAK84B,QAAU4M,cAA0BA,aAC7DC,GAASC,UAAU5lC,CAAW,EAEzB+e,gBAAW8D,MAAM,KAAKiW,OAAO,EAG9B2M,EAAUjyB,WACZ,KAAKA,SAAWiyB,EAAUjyB,UAGxBiyB,EAAUhyB,UACZ,KAAKnC,YAAclQ,GAAaG,KAChC,KAAKkS,QAAUgyB,EAAUhyB,QACpBqa,kBAAe2X,EAAUhyB,QAAU,CAACxO,OAAOwgC,EAAUhyB,OAAO,CAAC,EAAI,IAIlEjG,QAAc,IAAII,gBAAgBL,EAAIN,MAAM,GAAG,EAAE,CAAC,CAAC,EACnDgN,EAAQzM,EAAY6W,IAAI,OAAO,EAC/BrB,EAAexV,EAAY6W,IAAI,eAAe,EAC9CpB,EAAUzV,EAAY6W,IAAI,SAAS,EAErC,CAACpK,GAAS,CAAC+I,GAAgB,CAACC,GAIhC,KAAKlE,WAAWgE,SAAS9I,EAAO+I,EAAclb,SAASmb,CAAO,CAAC,IAGjEgQ,qBAAc,SAAY,CACxB,GAAI,MAAM,KAAKlU,WAAWwE,kBAAmB,CAC3C,MAAM7G,EAAc,MAAM,KAAKqC,WAAWiD,SAAS,EAE5C,OACLE,IAAKxF,EAAYzC,MACjB+I,aAActG,EAAYsG,aAE9B,CAEO,cAGToS,8BAA6C,SAAY,CACnD,IACIpkB,QAAO,MAAM,KAAK+N,WAAWsF,IAA+B,6BAA6B,KAAK7Q,QAAQ,EAAE,EAExGqyB,EAAQ70B,iBAAMkM,WAAWhQ,KAAK,CAAC,CAAE9H,UAAWA,IAAS,SAErDkV,EAAStJ,iBAAMkM,WAElBpO,OAAQg3B,GAAU,CAAC,CAAC,qBAAsB,aAAc,SAAS,EAAEtgC,SAASsgC,EAAM1gC,IAAI,GAAK,CAAC,CAACygC,CAAK,EAAErgC,SAASsgC,CAAK,GAClHn3B,IACEm3B,IAA4B,CAC3B91B,KAAM81B,EAAM91B,KACZszB,sBAAuB,GACvBl+B,KAAM0gC,EAAM1gC,KACZ8K,MAAO41B,EAAM51B,MACb2wB,YAAaiF,EAAMjF,YACnBh8B,SAAUihC,EAAMjhC,SAChB9F,QAAS+mC,EAAM/mC,QACf6hC,aAAc,GACdG,QAAS,IACT,GAAI+E,EAAM91B,OAAS,WACf,CACE8wB,iBAAkBgF,EAAMC,gBAAkB,QAE5C,CACEnF,aAAckF,EAAMC,aACtB,CAER,IAEKF,SAAQ,CAAC,KAAKG,gBAAgBH,CAAK,EAAG,GAAGvrB,CAAM,EAAIA,OACpD,CACA,UAAItV,MAAM,qCAAqC,CACvD,IAGFmwB,6BAA2C,MAAOhN,GAAY,OACxD,IACE,KAACA,WAASkD,UACL,OACLyJ,SAAU,IAIR,MAAEzJ,UAAalD,IAErB,OAAO,KAAKuc,WAAUrZ,IAASzM,WAATyM,cAAmByJ,SAAoB,EAAE,OACzD,CACA,UAAI9vB,MAAM,oCAAoC,CACtD,IAGFkwB,gCAAiD,MAAO/M,GAAY,OAC9D,IACI,MAAEkD,WAAUyJ,UAAa3M,IAEzB8d,EAAsB,KAAKC,oBAAoB7a,CAAQ,EAEvDhQ,EAAS,CACb,GAAG4qB,EACHrnB,SAAU,CACR,GAAGqnB,EAAoBrnB,SACvB,GAAGmlB,GAA+BjP,CAAQ,EAC1CA,SAAU7T,KAAKC,UAAU4T,CAAQ,CACnC,GAGI9jB,EAAO,MAAM,KAAK+N,WAAWwF,IAAiB,YAAalJ,EAAQ,CAAEqI,mBAAoB,GAAM,EAErG,OAAO,KAAKghB,WAAU1zB,mBAAM4N,WAAN5N,cAAgB8jB,SAAoB,EAAE,OACtD,CACA,UAAI9vB,MAAM,oCAAoC,CACtD,IAGFswB,8BAA6C,MAAO,CAAEjK,WAAU,GAAG8a,KAC1D,KAAK7R,eAAe,CAAE,GAAGjJ,EAAU,GAAG8a,EAAY,GAG3DvQ,uCAA+D,MAAOzN,GAAY,CAC1E,MAAE0N,cAAaC,cAAaC,yBAA4B5N,IAE1D,IACI,WAAKpJ,WAAWyF,KACpB,4BACA,CACE4hB,aAAcvQ,EACdnB,SAAUoB,EACVuQ,sBAAuBtQ,GAEzB,CAAErS,mBAAoB,GACxB,QACOje,EAAgB,CACnBkd,SAAcgC,cAAclf,CAAK,EAC7B,IAAIT,MAAMS,EAAMsL,SAASC,KAAKzL,OAAO,EAEvC,IAAIP,MAAM,2BAA2B,CAC7C,IAGFywB,uBAA+B,MAAO,CAAEE,mBAAoB,CACtD,IACI,WAAK5W,WAAWyF,KAAqB,4BAA6B,CACtE4P,MAAOuB,EACP2Q,cAAe,KAAK9yB,SACpB+yB,YAAa,EACd,OACK,CACA,UAAIvhC,MAAM,2BAA2B,CAC7C,IAGFyvB,eAAe,MAAO,CAAEL,QAAOM,WAAUxF,cAAe,OAClD,IACF,MAAMle,EAAO,MAAM,KAAK+N,WAAWyF,KAAoB,4BAA6B,CAClFgiB,UAAW,KAAKhzB,UAAY,GAC5BizB,WAAY,WACZvX,WACAwX,SAAUtS,EACVM,WACD,EAED,KAAK3V,WAAWgE,SAAS/R,EAAK21B,aAAc,GAAI31B,EAAKiS,OAAO,EAE5D,MAAM9C,EAAO,KAAK2kB,cAAc9zB,EAAK+zB,OAAO,EAErC,OACL/R,KAAM,KAAK4T,WAAW51B,CAAI,EAC1BmP,OACA2K,iBAAkB,KAAK4Z,WAAUvkB,mBAAMvB,WAANuB,cAAgB2U,SAAoB,EAAE,EACzE,MACM,CACA,UAAI9vB,MAAM,8BAA8B,CAChD,IAGFtF,kBAAqB,MAAO,CAAE00B,QAAOM,WAAUxF,WAAU4F,cAAe,OAClE,IACF,MAAM9jB,EAAO,MAAM,KAAK+N,WAAWyF,KAAoB,YAAa,CAClEwgB,UAAW5Q,EACXsS,SAAUtS,EACVM,WACA2R,sBAAuB3R,EACvB8R,UAAW,KAAKhzB,UAAY,GAC5BxD,KAAM,WACNkf,WACAuX,WAAY,WACZ7nB,SAAU,CACRymB,WAAY,IACZC,QAAS,IACT,GAAGvB,GAA+BjP,CAAQ,EAC1CA,SAAU7T,KAAKC,UAAU4T,CAAQ,CACnC,EACD,EAED,KAAK/V,WAAWgE,SAAS/R,EAAK21B,aAAc,GAAI31B,EAAKiS,OAAO,EAE5D,MAAM9C,EAAO,KAAK2kB,cAAc9zB,EAAK+zB,OAAO,EAErC,OACL/R,KAAM,KAAK4T,WAAW51B,CAAI,EAC1BmP,OACA2K,iBAAkB,KAAK4Z,WAAUvkB,mBAAMvB,WAANuB,cAAgB2U,SAAoB,EAAE,SAElErvB,EAAgB,CACnBkd,SAAcgC,cAAclf,CAAK,EAC7B,IAAIT,MAAMS,EAAMsL,SAASC,KAAKzL,OAAO,EAEvC,IAAIP,MAAM,2BAA2B,CAC7C,IAGF6uB,gBAAS,SAAY,CACf,IACE8R,GAASkB,cAAcC,gBACzBnB,GAASkB,cAAcE,cAGrB,MAAM,KAAKhoB,WAAWwE,oBAClB,WAAKxE,WAAWsF,IAAe,mBAAoB,CAAEX,mBAAoB,GAAM,EAC/E,WAAK3E,WAAWoE,cACxB,MACM,CACA,UAAIne,MAAM,qBAAqB,CACvC,IAGFuvB,iBAAU,SAAY,OAChB,IACF,MAAMvjB,EAAO,MAAM,KAAK+N,WAAWsF,IAAiB,YAAa,CAAEX,mBAAoB,GAAM,EAEvFvD,EAAO,KAAK2kB,cAAc9zB,CAAI,EAE7B,OACLmP,OACA2K,iBAAkB,KAAK4Z,WAAUvkB,mBAAMvB,WAANuB,cAAgB2U,SAAoB,EAAE,EACzE,MACM,CACA,UAAI9vB,MAAM,4BAA4B,CAC9C,IAGFsvB,wBAAiC,MAAOjJ,GAAa,CAC/C,IACIra,QAAO,MAAM,KAAK+N,WAAWwF,IAAiB,YAAa,KAAK2hB,oBAAoB7a,CAAQ,EAAG,CAAE3H,mBAAoB,GAAM,EAE1H,YAAKohB,cAAc9zB,CAAI,OACxB,CACA,UAAIhM,MAAM,6BAA6B,CAC/C,IAGFkhC,6BAAuB7a,GAAiC,SACtD,MAAMsN,IAAYtN,IAASsN,YAATtN,cAAoB2b,SAAU,GAC1CpO,IAAWvN,IAASuN,WAATvN,cAAmB2b,SAAU,GACxCxG,EAAW,GAAG7H,CAAS,IAAIC,CAAQ,GAAGoO,QAAW3b,EAAS+I,MAE1DxV,EAAmC,CACvC,GAAGyM,EAASzM,SACZymB,WAAY1M,EACZ2M,QAAS1M,GAQJ5nB,MALM,CACXg0B,UAAWxE,EACX5hB,WAGK5N,GAGTqkB,0BAAqC,MAAO,CAAEhK,SAAU,CAAEsN,YAAWC,UAAS,KAAQ,CAC9EqO,SAAmBtO,iBAAWqO,SAAU,GACxCE,GAAkBtO,iBAAUoO,SAAU,GAErC,OACLG,iBAAkB,GAClBC,yBAA0B,CAACH,GAAoB,CAACC,EAChDvzB,SAAU,CACR,CACE0zB,OAAQ,CACN1O,UAAWsO,GAAoB,KAC/BrO,SAAUsO,GAAmB,IAC/B,EACAI,QAAS,GACTx5B,IAAK,oBACLjJ,SAAU,GACX,EAEL,GAGFqxB,sCAA+C,MAAO/N,GAAY,CAC1D,MAAE8N,qBAAqB,GAAIH,cAAaC,0BAA0B,EAAO5N,IAC3E,IACF,MAAM,KAAKpJ,WAAWwF,IAAU,6BAA6B0R,CAAkB,GAAI,CACjFvB,SAAUoB,EACVuQ,sBAAuBtQ,EACvBwQ,YAAa,EACd,QACM9gC,EAAgB,CACnBkd,SAAcgC,cAAclf,CAAK,EAC7B,IAAIT,MAAMS,EAAMsL,SAASC,KAAKzL,OAAO,EAEvC,IAAIP,MAAM,4BAA4B,CAC9C,IAGFghC,yBAAkBA,CAAC,CAAE91B,MAAOq3B,KAA+C,CACnEC,QAAY,YAAYD,GAAY/C,EAAY,qBAAqB9b,GAAQC,EAAE,2CAA2C,CAAC,OAI1H,OACL3Y,KAAM,WACNszB,sBAAuB,GACvBz+B,SAAU,GACVO,KAAM,QACNw7B,aAAc,GACd1wB,MAAOq3B,EACH7e,GAAQC,EAAE,qCAAsC,CAAE6e,YAAW,EAC7D9e,GAAQC,EAAE,8CAA+C,CAAE6e,YAAW,EAC1E1G,iBAAkB,GAClBD,YAAa,GACb9hC,QAAS,CAAC,EACVgiC,QAAS,IACX,GAGFjgB,4BAAyC,MAAO,CAAEC,aAAc,CACxD0mB,QAAU,MAAM,KAAKvnB,kBACrBwnB,EAAeD,EAAQ94B,OAAW9O,EAAE6Q,OAAO,GAAK,GAEtD,MAAM0S,QAAQ4V,WACZjY,EAAQpS,IAAI,CAAC,CAAE+B,UAASwN,cAAe,CACrC,GAAI,CAACwpB,EAAaliC,SAASkL,CAAO,GAAK+2B,EAAQ51B,KAAYhS,KAAE6Q,SAAWA,GAAW7Q,EAAEqe,UAAYA,CAAQ,EAChG,YAAKa,WAAWuF,MACrB,mCACA,CACE7N,SAAU/F,EACVwN,YAEF,CAAEwF,mBAAoB,GACxB,CAEH,EACH,IAGFiC,yBAAmC,MAAO,CAAEvhB,eAAgB,CAE1D,MAAMujC,GADU,MAAM,KAAKxiB,gBACQxW,OAAW9O,EAAE6Q,OAAO,GAAK,GACtDk3B,EAAqBxjC,EAAUuK,IAAK9O,GAAMA,EAAE6Q,OAAO,EAGzD,MAAM0S,QAAQ4V,WACZ4O,EAAmBj5B,IAAkB8H,GAC3BkxB,EAAmBniC,SAASiR,CAAQ,EAExC2M,QAAQiU,UADR,KAAKtY,WAAWyF,KAAoB,+BAAgC,CAAE/N,YAAY,CAAEiN,mBAAoB,GAAM,CAEnH,CACH,EAGA,MAAMN,QAAQ4V,WACZ2O,EAAmBh5B,IAAiB2G,GAC1BsyB,EAAmBpiC,SAAS8P,CAAO,EAEvC8N,QAAQiU,UADR,KAAKtY,WAAW0F,OAAuB,gCAAgCnP,CAAO,GAAI,CAAEoO,mBAAoB,GAAM,CAEnH,CACH,IAGFyB,sBAAe,SAAY,OACzB,MAAM0iB,EAAgB,MAAM,KAAK9oB,WAAWsF,IAA0B,+BAAgC,CAAEX,mBAAoB,GAAM,EAElI,QAAOmkB,mBAAe3qB,aAAf2qB,cAA2Bl5B,IAAI,KAAKg2B,kBAAmB,EAAE,GAGlEzkB,yBAAkB,SAAY,OAC5B,MAAM4nB,EAAmB,MAAM,KAAK/oB,WAAWsF,IAC7C,mCACA,CACEX,mBAAoB,IAEtB,CACE5U,OAAQ,qBAEZ,EAEA,QAAOg5B,mBAAkB5qB,aAAlB4qB,cAA8Bn5B,IAAI,KAAKk2B,qBAAsB,EAAE,GAGxEtM,kCAA8C,MAAO,CAAEC,OAAMC,eAAgB,CACvE,IACF,OAAKkN,GAASkB,cAAcC,gBAC1BnB,GAASoC,UAAUvP,EAAM,CACvBC,YACAuP,OAAQA,IAAM,GACf,EAEI,QACD,CACC,QACT,IAGFjQ,2BAAuC,SAAY,CAE7C,IACF,OAAO,MAAM,KAAKhZ,WAAWyF,KAAqB,mBAAoB,CAAEkQ,SAAUltB,OAAW++B,YAAa,GAAK,CAAE7iB,mBAAoB,GAAM,OACrI,CACA,UAAI1e,MAAM,+BAA+B,CACjD,IAGFmzB,uBAA+B,MAAO,CAAEzD,cAAe,CACjD,IACF,OAAO,MAAM,KAAK3V,WAAW0F,OAAuB,kBAAmB,CAAEf,mBAAoB,IAAQ,CAAEgR,WAAU6R,YAAa,EAAG,QAC1H9gC,EAAgB,CACnBkd,SAAcgC,cAAclf,CAAK,EAC7B,IAAIT,MAAMS,EAAMsL,SAASC,KAAKzL,SAAW,0BAA0B,EAGrE,IAAIP,MAAM,0BAA0B,CAC5C,IAGFizB,uBAA+B,MAAO,CAAE/H,iBAAkB,CACxD,MAAM+X,EAAc,KAAKjpB,eAAekpB,aACtCjnB,KAAKC,UAAU,CACbslB,UAAW,KAAKhzB,UAAY,GAC5B20B,SAAUjY,CACX,EACH,EAEMkY,EAAiB,MAAM,KAAKrpB,WAAWsF,IAC3C,mBACA,CACET,oBAAqB,IAEvB,CACE2V,MAAO0O,EAEX,EAEIG,KAAej3B,SAAW,IACtB,UAAInM,MAAM,6BAA6B,EAG/C,OAAOojC,EAAep3B,KAAKq3B,cApgB3B,KAAKrpB,eAAiBA,EACtB,KAAKD,WAAaA,CACpB,CA4CQ6nB,WAAW5T,EAA6B,CACxC,MAAE2T,aAAczkB,CAAQ8Q,IACvB,OACL9Q,MACAc,aAAc,GAElB,CAkdF,CAAC,GAAA5N,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,IC5lBYkzB,SAAoBA,CAACC,EAAiB,CAAEC,qBAAuE,IACrHD,EAIE,GAFSjE,KAAKmE,KAAKF,EAAU,EAAE,CAErB,IAAIC,CAAmB,GAJnB,GAiBVE,GAAiBA,CAACtvB,EAAkB,CAAEuvB,oBAAmBH,qBAA0C,IAAM,CAChH,IAACpvB,EAAiB,SAEtB,MAAMwvB,EAAQtE,KAAKC,MAAMnrB,EAAW,IAAI,EAClCyvB,EAAUvE,KAAKwE,OAAO1vB,EAAWwvB,EAAQ,MAAQ,EAAE,EAEnDG,EAAcH,EAAQ,GAAGA,CAAK,GAAGD,CAAiB,GAAK,GACvDK,EAAgBH,EAAU,GAAGA,CAAO,GAAGL,CAAmB,GAAK,GAE9D,OAACO,EAAaC,CAAa,EAAEl6B,OAAO1F,OAAO,EAAE+E,KAAK,GAAG,CAC9D,EAEa86B,GAAcA,CAACC,EAAerS,EAAkBtI,IACpD,IAAI4a,KAAKC,aAAa7a,GAAW,QAAS,CAC/C8a,MAAO,WACPxS,WACD,EAAEyS,OAAOJ,CAAK,EAGJK,GAAyBA,CAACvxB,EAAuBnL,IACxD,CAACmL,GAAgB,CAACnL,EACb,GAGFmL,GAAgBA,IAAiB,IAAM,IAAIA,CAAY,KAAKnL,CAAa,GAAK,IAAIA,CAAa,GAG3F28B,GAAsBA,CAAC/H,EAAgB13B,EAAuBC,IACpED,EAIAC,EAIE,GAAGy/B,GAAwB1/B,EAAgB03B,EAAQ,KAAK,CAAC,MAAMiI,GAAoB1/B,EAAcy3B,CAAM,CAAC,GAHtGgI,GAAwB1/B,EAAgB03B,EAAQ,KAAK,EAJrD,GAUEkI,GAAsBA,CAAC9zB,EAAY4rB,IACvC,IAAI0H,KAAKS,eAAenI,EAAQ,CAAEoI,IAAK,UAAWC,MAAO,OAAQC,KAAM,UAAW,EAAET,OAAOzzB,CAAI,EAG3F6zB,GAAsBA,CAAC7zB,EAAY4rB,IACvC,IAAI0H,KAAKS,eAAenI,EAAQ,CAAEuI,KAAM,UAAWC,OAAQ,UAAW,EAAEX,OAAOzzB,CAAI,EAG/E4zB,GAA0BA,CAAC5zB,EAAY4rB,EAAgByI,EAAY,MACvE,GAAGP,GAAoB9zB,EAAM4rB,CAAM,CAAC,GAAGyI,CAAS,GAAGR,GAAoB7zB,EAAM4rB,CAAM,CAAC,GChEhF0I,GAAiBr4B,GAAiBm3B,GAAYn3B,EAAMs4B,qBAAsBt4B,EAAMu4B,iBAAkBv4B,EAAMw4B,eAAe,EAEvHC,GAAez4B,GAAyBA,mBAAMO,UAANP,cAAgB,MAAO,wBC0BhC,IAGvB04B,IAAkBt1B,GADtCC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QAMEyQ,GAAOoE,EAAa,EAACrE,EAAA9W,OAAA,IAAAgX,GAAAG,QAAAC,SAAA,cAAAC,QAAA,EAAAJ,GAAAE,QAAAC,SAAA,4BAAA+D,GAAA9T,WAAA8T,EAAA,GAAAzN,GAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,GANpC,cACgD6W,EAAgB,CAK9Drb,YAAmCmO,EAA2B,CACtD,QALW0rB,6BAAsB,UAEtB1rB,qBAOX2rB,6BAAsBA,CAAC/kC,EAA+B8kC,KACrD,CACLj7B,GAAI7J,EAAO6J,GACX6d,WAAY1nB,EAAOglC,YAAYxP,kBAAkB,EACjDyP,SAAUH,EACVI,QAAS,MAILC,4BAAqBA,CAACC,EAAoB,EAAG/T,EAAyB,MACrE,CACLpc,OAAQ,CAAE,EACV6T,aAAc,CACZuI,gBACA+T,WACF,KAgCIC,qBAAel5B,IACd,CACLtC,GAAIsC,EAAMtC,GACV6C,QAAS,KAAK44B,cAAcn5B,CAAK,EACjCo5B,cAAep5B,EAAM+kB,SACrBuT,qBAAsBt4B,EAAMq5B,OAC5Bd,iBAAkBv4B,EAAM+kB,SACxBuU,WAAYt5B,EAAMiB,YAClBwvB,OAAQ,GACRpV,OAAQrb,EAAMu5B,YAAYle,SAAW,SAAWrb,EAAMu5B,YAAYC,WAAa,GAAK,OAASx5B,EAAMu5B,YAAYle,OAC/Goe,YAAaz5B,EAAM05B,aAAe,EAAI,EACtCC,kBAAmB35B,EAAMjJ,KAAK6iC,qBAAuB,MAIjDC,qBAAexjB,IACd,CACL3Y,GAAI2Y,EAAQrW,MAAMtC,GAClB4b,WAAYjD,EAAQiD,WACpB/Y,QAAS8V,EAAQrW,MAAMO,QACvBu5B,WAAYzjB,EAAQrW,MAAMs4B,qBAC1ByB,eAAgB,CACdC,WAAY3jB,EAAQrW,MAAMs4B,qBAE1B2B,eAAgB5jB,EAAQrW,MAAMs4B,qBAC9B4B,gBAAiB7jB,EAAQrW,MAAMs4B,qBAC/B6B,iBAAkB,EAClBC,SAAU,CACZ,EACAC,QAAS,EACTtV,SAAU1O,EAAQrW,MAAMo5B,eAAiB,MACzCkB,uBAAwB,MAI5B5d,qBAA2B,MAAOrG,IACzB,CACLvN,OAAQ,CAAE,EACV6T,aAAc,CACZlpB,QAAS,GACTknB,MAAO,KAAKkf,YAAYxjB,CAAO,EAC/BkkB,QAAS,EACX,KAIJxe,mBAAuB,MAAO1F,IACb,MAAM/E,QAAQC,IAC3B8E,EAAQjW,SAASvD,IAAI,MAAO0D,GAAY,CAClC,IACIrB,QAAO,MAAM,KAAK+N,WAAWsF,IAA2B,aAAa,KAAKioB,aAAaj6B,CAAO,CAAC,cAAc,EAEnH,OAAOrB,iBAAMrC,IAAKmD,GAAU,KAAKk5B,YAAYl5B,CAAK,EAAC,MAC7C,CACA,UAAI9M,MAAM,sBAAsB,CACxC,CACD,EACH,GAEcgoB,QAGhBoB,2BAAuC,SAAY,CAC7C,IACF,MAAMpd,EAAO,MAAM,KAAK+N,WAAWsF,IAA6B,oBAAqB,CAAEX,mBAAoB,GAAM,EAC3GgJ,EAAkC,GACnC5gB,iBAASnG,GAAkC,CAC1C,CAAC,OAAQ,QAAQ,EAAEH,SAASG,EAAOglC,YAAY5hC,YAAY,CAAC,GAC9D2jB,EAAenQ,KAAK,KAAKmuB,oBAAoB/kC,EAAQ,KAAK8kC,mBAAmB,CAAC,CAChF,CACD,EACM,CACL7vB,OAAQ,CAAE,EACV6T,aAAc,CACZlpB,QAAS,GACTmnB,iBACAvb,OAAQ,CACV,EACF,MACM,CACA,UAAInM,MAAM,+BAA+B,CACjD,IAGFirB,2BAAuC,MAAO9H,GAAY,CACpD,IACF,MAAMnX,EAAO,MAAM,KAAK+N,WAAWyF,KACjC,qBACA,CACE+nB,OAAQpkB,EAAQ2H,WAChB0c,WAAYrkB,EAAQsE,MAAMjd,GAC1Bi9B,eAAgB,EAChBC,aAAcvkB,EAAQwG,YAExB,CAAEjL,mBAAoB,GACxB,EAEA,OAAI1S,WAAMxB,GACD,CACLoL,OAAQ,CAAC,+BAA+B,EACxC6T,aAAc,CACZyB,YAAa/H,EAAQ6H,QACvB,GAGG,CACLpV,OAAQ,CAAE,EACV6T,aAAc,CACZyB,YAAalf,EAAKkT,QACpB,EACF,MACM,CACA,UAAIlf,MAAM,uCAAuC,CACzD,IAGF2nC,2BAAsC,UAC7B,CACL/xB,OAAQ,CAAE,EACV6T,aAAc,CAAC,KAInBG,+BAA+C,UACtC,CACLhU,OAAQ,CAAE,EACV6T,aAAc,CAAC,KAInBC,qBAA2B,MAAO,CAAEjC,QAAOkC,gBAAiB,CACtD,IACF,MAAM3d,EAAO,MAAM,KAAK+N,WAAWyF,KACjC,qBACA,CACEkoB,aAAc,GAAG/d,CAAU,GAC3Bie,cAAengB,EAAMjd,IAEvB,CAAEkU,mBAAoB,GACxB,EAEMqoB,EAAiBtf,EAAMmf,WAAa56B,EAAKm6B,OACzC0B,EAAsB,CAC1B,GAAGpgB,EACHmf,WAAY56B,EAAKm6B,OACjBU,eAAgB,CACd,GAAGpf,EAAMof,eACTE,iBACAC,gBAAiBD,CACnB,EACAe,SAAU,CACRC,QAAS,GACT/8B,KAAM,SACNg9B,QAASh8B,EAAKi8B,iBAChB,GAGK,OACLryB,OAAQ,CAAE,EACV6T,aAAc,CACZlpB,QAAS,uBACTknB,MAAOogB,EACPR,QAAS,EACX,SAEK5mC,EAAgB,CACnBkd,SAAcgC,cAAclf,CAAK,GAAKA,EAAMsL,SAASC,KAAKzL,UAAY,oBAClE,IAAIP,MAAM,qBAAqB,EAGjC,IAAIA,MAAM,2BAA2B,CAC7C,IAGFmsB,yBAAmC,MAAO,CAAE9e,aAAc,CACpD,IACIrB,QAAO,MAAM,KAAK+N,WAAWsF,IAA2B,UAAU,KAAKioB,aAAaj6B,CAAO,CAAC,UAAW,CAC3GqR,mBAAoB,GACrB,EAED,OAAO,KAAKonB,mBAAmB95B,EAAKk8B,WAAY,EAAI,OAC9C,CACN,OAAO,KAAKpC,oBACd,IAGF9b,+BAAwB,MAAOC,EAAqCxC,EAAcyC,EAAkBC,IAAsB,CACxH,MAAMhH,EAAU,CACdhK,OAAQ8Q,EAAmBwH,WAAW9uB,QAAQ,MAAO,EAAE,EACvDwlC,UAAWle,EAAmBme,eAC9BC,UAAWpe,EAAmBqe,cAAgB,GAC9CC,SAAUte,EAAmBue,aAAe,GAC5CC,IAAKxe,EAAmBye,QACxBlB,WAAY/f,EAAMjd,GAClBi9B,eAAgB,EAChBC,aAAczd,EAAmBN,WACjCO,WACAye,WAAYxe,GAGV,IACEob,UAAY9d,CAAK,EACnB,MAAM,KAAK1N,WAAWyF,KAAqB,iBAAkB2D,EAAS,CAAEzE,mBAAoB,GAAM,EAElG,MAAM,KAAK3E,WAAWyF,KAAqB,YAAa2D,EAAS,CAAEzE,mBAAoB,GAAM,EAGxF,QACD,CACA,UAAI1e,MAAM,wBAAwB,CAC1C,IAGFgpB,kCAEA+T,mBAEAzR,6BAEAsH,gCAEAxI,oCAEAE,8BAEAG,+BAEAqB,wCAEAC,8BAEAE,iCAEAC,sCAEAf,mBA7RE,KAAKpR,WAAaA,CACpB,CAyBQksB,cAAcn5B,EAAkB,CAGtC,MAFkB,CAAC,MAAO,YAAY,EAErBtM,SAASsM,EAAMu5B,YAAYjmC,IAAI,EAAI,IAAI0M,EAAM87B,OAAO,IAAI97B,EAAMtC,EAAE,GAAK,IAAIsC,EAAM87B,OAAO,IAAI97B,EAAMtC,EAAE,EACrH,CAMQ88B,aAAaj6B,EAA0B,CACzC,cAAOA,GAAY,SAEjBA,EAAQrD,WAAW,GAAG,GAAKqD,EAAQrD,WAAW,GAAG,EAC5ClH,SAASuK,EAAQnK,MAAM,CAAC,EAAE+E,MAAM,GAAG,EAAE,CAAC,CAAC,EAIzCnF,SAASuK,CAAO,EAGlBA,CACT,CA8OF,CAAC,GAAA+C,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,0BC3RA,IAGoBy4B,IAAsB34B,GAD1CC,KAAYkJ,GAAA,SAAAC,EAAAxQ,EAAA,QAKEggC,GAAM,KAAK,EAACxvB,EAAA9W,OAAA,IAAAgX,GAAA,SAAAF,EAAAxQ,EAAA,QAAkCyQ,GAAOoE,EAAa,EAACrE,EAAA9W,OAAA,IAAAiX,GAAAE,QAAAC,SAAAC,sBAAA,EAAAH,GAAAC,QAAAC,SAAA,4BAAAjB,GAAA,IAAA9O,OAAA8O,GAAAgF,UAAA9T,WAAA8T,EAAA,GAAAzN,GAAAE,GAAAiJ,GAAAjJ,GAAAoJ,GAAApJ,GAAAqJ,GAAArJ,GAAAsJ,GAAAtJ,GALlF,cACoD8W,EAAoB,CAItEtb,YAA0BsO,EAAuDH,EAA2B,CACpG,QAJWG,yBACAH,qBASXgvB,2BACNC,GAKkB,CACZ,MAAE7vB,SAAQkvB,YAAWE,WAAUJ,YAAWc,YAAWC,aAAYrX,UAAamX,IAC9EG,EAAmB,IAAId,CAAS,GAAGnlC,MAAM,EAAE,EAE1C,OACLsH,GAAI,EACJ6e,gBAAiB,EACjB+f,eAAgB,OAChB7e,cAAe,OACfnE,WAAY8iB,EAAW5/B,SAAS,EAChC+/B,4BAA6B,CAC3BC,WAAYnB,EACZoB,QAASN,EACTO,mBAAoBvpC,OAAOkZ,CAAM,EACjCswB,mBAAoB,GAAGN,CAAgB,IAAIZ,CAAQ,EACrD,EACAhL,OAAQ,GACR1L,WACF,GAGM6X,2BAAqBC,GAA6C,WACxE,MAAMC,IAAkBD,mBAAaE,iBAAbF,cAA6BrgC,aAAc,IAE5D,OACL+pB,cAAesW,EAAYG,mBAAqBpmB,GAAQC,EAAE,6BAA6B,EACvFomB,gBAAiBJ,EAAY1J,WAC7B+J,SAAUL,EAAYM,UACtB58B,UAASs8B,IAAYf,UAAZe,cAAqBrgC,aAAcoa,GAAQC,EAAE,6BAA6B,EACnFumB,UAAWP,EAAYQ,WAAa,GACpC/D,YAAYuD,iBAAaS,aAAc,GACvCC,YAAa,GACbC,wBAAyBV,EACzBW,oBAAqBZ,EAAYa,cAAgB,MACjDC,qBAAsBb,EACtB1D,cAAeyD,EAAYa,cAAgB,MAC3CE,kBAAmBd,EACnBe,cAAe,IACfC,wBAAyBhB,EACzBxjB,YAAYujB,IAAYkB,cAAZlB,cAAyBrgC,WACrCqnB,cAAe,GACfma,eAAgB,GAChBxF,gBAAiB,KACjByF,kBAAmB,GACnB1F,iBAAkB,GAClB9a,cAAeof,EAAYqB,qBAAuBtnB,GAAQC,EAAE,6BAA6B,EAC3F,GAGMsnB,kCAA2BA,CAACvlB,EAAmCqgB,IAAsB,SAC3F,IAAI55B,EAAS,GACb,OAAQuZ,EAAawlB,YAAW,CAC9B,IAAK,aACM/+B,EAAA,eACT,MACF,IAAK,YACMA,EAAA,SACT,MACF,IAAK,WACMA,EAAA,YACT,MACF,IAAK,qBACMA,EAAA,UACT,MACF,QACWA,EAAA,YACb,CAEO,OACLwf,eAAgBjG,EAAaylB,gBAC7B99B,SAASqY,IAAakjB,UAAbljB,cAAsBpc,WAC/BoiB,YAAa,IAAIhG,EAAakiB,aAAa,GAC3Cz7B,SACA45B,YACAqF,cAAe1lB,EAAa2lB,iBAC5BC,iBAAkB5lB,EAAa6lB,mBAC/BC,oBAAqB9lB,EAAamM,SAClCuX,eAAgB,SAChB7e,cAAe7E,EAAaslB,oBAC5B5E,WAAY1gB,EAAa0kB,WACzBjiB,QAAQzC,IAAa2gB,cAAb3gB,cAA0ByC,OAClCye,WAAYlhB,EAAamkB,eACzBzY,eAAgB1L,EAAa+lB,gBAC7B9Y,gBAAiB,KACnB,GAGM+Y,mCAA6BhmB,IAC5B,CACLiG,eAAgB,GAChBte,QAASqY,EAAa7hB,KAAK2G,GAAGlB,SAAS,EACvC6C,OAAQ,SACR45B,UAAWrgB,EAAawiB,WACxBkD,cAAe1lB,EAAawiB,WAC5BoD,iBAAkB,EAClBE,oBAAqB,MACrBpC,eAAgB,OAChB7e,cAAe7G,GAAQC,EAAE,6BAA6B,EACtDyiB,WAAY1gB,EAAa7hB,KAAK4G,MAC9B0d,OAAQ,UACRye,WAAY,EACZxV,eAAgB,GAChBuB,gBAAiB,QAIrBH,+BAA+C,SAAY,CACnD/jB,QAAU,KAAKyL,eAAezL,QAEpC,GAAIA,IAAY,KAAY,UAAIzO,MAAM,oEAAoE,EAEtG,IACF,MAAM2rC,EAAY,MAAM,KAAK5xB,WAAWsF,IAA2B,UAAU5Q,CAAO,UAAW,CAC7FiQ,mBAAoB,GACrB,EAED,GAAIitB,EAAW,CAaPpZ,SAZO,MAAM,KAAKxY,WAAWsF,IACjC,iBACA,CACEX,mBAAoB,GACpB5a,YAAa,QAEf,CACE9B,MAAO,GACP5E,KAAM,EAEV,GAEgC8a,WAAWhQ,KAAMwd,GAAsCA,EAAakjB,UAAYn6B,CAAO,EAEvH,OAAI8jB,EACK,KAAK0Y,yBAAyB1Y,EAAoBoZ,iBAAWzD,UAAU,EAGzE,KAAKwD,0BAA0BC,CAAS,CACjD,CACO,kBACAlrC,EAAgB,CACnBkd,MAAcgC,cAAclf,CAAK,GAAKA,EAAMsL,SAASC,KAAKH,OAAS,IAC9D,YAEH,UAAI7L,MAAM,yCAAyC,CAC3D,IAGFyyB,4BAAyC,SAAY,OAC/C,IACF,MAAMzmB,EAAO,MAAM,KAAK+N,WAAWsF,IAA+B,iCAAkC,CAClGX,mBAAoB,GACpB5a,YAAa,OACd,EAED,OAAOkI,mBAAMkM,aAANlM,cAAkBrC,OAAqB,KAAK+/B,kBAAkBC,CAAW,EAAC,MAC3E,CACA,UAAI3pC,MAAM,4BAA4B,CAC9C,IAGF8xB,0BAAqC,SAAY,OAC3C,IACF,MAAM9lB,EAAO,MAAM,KAAK+N,WAAWsF,IAA4B,6BAA8B,CAC3FX,mBAAoB,GACpB5a,YAAa,OACd,EAEK8nC,EAAyB,GACpB/Z,eAAY7lB,iBAAM4/B,MACrBr0B,OACJ,KAAKwxB,kBAAkB,CACrB,IAAG/8B,IAAK4/B,QAAL5/B,cAAa6lB,GAChBA,UACD,EACH,EAEF,OAAO+Z,EAAM1jC,KAAyBo1B,KAAeC,MAAM,GAAK,UAC1D,CACC,WACT,IAGFJ,0BAAmB,UACV,CACLvnB,OAAQ,CAAE,EACV6T,aAAc,CAAErR,MAAO,EAAG,KAI9B+Y,4BAAyC,MAAO,CAAE9jB,UAAS+jB,oBAAqB,CAC9E,GAAI,CAACA,EACG,UAAIpxB,MAAM,yBAAyB,EAEvC,IACI,kBAAK+Z,WAAWsF,IAAgC+R,EAAgB,CAAE1S,mBAAoB,GAAM5a,YAAa,OAAQ,EAChH,CACL8R,OAAQ,CAAE,EACV6T,aAAc,CAAEpc,UAAkBlB,OAAQ,YAAa45B,UAAW,CAAE,EACtE,MACM,CACA,UAAI/lC,MAAM,+BAA+B,CACjD,IAGFyrB,4BAAyC,MAAO,CAAEC,cAAaC,oBAAqB,CAC9E,IACF,MAAM3f,EAAO,MAAM,KAAK+N,WAAWyF,KACjC,kCACA,CACEqsB,eAAgBlgB,EAChBic,cAAelc,GAEjB,CACEhN,mBAAoB,GAExB,EACO,OACL9I,OAAQ,CAAE,EACV6T,aAAc,CAAElpB,QAASyL,EAAKzL,OAAQ,EACxC,MACM,CACA,UAAIP,MAAM,+BAA+B,CACjD,IAGFuxB,2BAAuC,MAAO,CAAEC,WAAUC,aAAYC,MAAKC,WAAUC,UAASC,cAAe,CACvG,IACF,MAAMpI,EAAe,MAAM,KAAK1P,WAAWwF,IACzC,6BACA,CACEpG,OAAQsY,EACR0W,UAAW3W,EACXiX,IAAK/W,EACL2W,UAAW1W,EACX4W,SAAU3W,EACV4Y,aAAc3Y,GAEhB,CAAEnT,mBAAoB,GACxB,EAEO,OAAE9I,OAAQ,CAAE,EAAE6T,eAAa,MAC5B,CACA,UAAIzpB,MAAM,+BAA+B,CACjD,IAGFszB,sBAAe,MAAO,CAAED,mBAA+C,CACjE,IACF,MAAM5J,EAAe,MAAM,KAAK1P,WAAWsF,IAAU,+BAA+BgU,CAAa,WAAY,CAC3G3U,mBAAoB,GACpB5a,YAAa,OACb2a,aAAc,OACf,EAEM,OAAE7I,OAAQ,CAAE,EAAE6T,eAAa,MAC5B,CACA,UAAIzpB,MAAM,+BAA+B,CACjD,IAGFq9B,4BAEAD,0BA/QE,KAAKljB,eAAiBA,EACtB,KAAKH,WAAaA,CACpB,CA8QF,CAAC,GAAA3J,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,IC/TYykB,SAAsBrf,GAC1BA,EAAQjW,UAAU8f,IAAI4U,EAAa,EAAEY,mBAAmB,ECNpDiX,GAAgEj+B,GAAA,SAC3E,OAAOA,OAAOQ,eAAPR,cAAqBS,SAArBT,QAA6BrD,GAAKvO,GAAYE,OAAS,IAChE,EAEa4vC,GAA6Dl+B,GAAA,SACxE,OAAOA,OAAOQ,eAAPR,cAAqB9O,MAArB8O,QAA0BW,SAAWvS,GAAYC,IAAM,IAChE,EC2CAqD,GAAUysC,KAAK5oB,EAAa,EAAE6oB,SAC9B1sC,GAAUysC,KAAK5yB,EAAmB,EAAE6yB,SACpC1sC,GAAUysC,KAAK/rB,EAAe,EAAEgsB,SAChC1sC,GAAUysC,KAAKjvB,EAAyB,EAAEkvB,SAC1C1sC,GAAUysC,KAAK/7B,EAAU,EAAEg8B,SAC3B1sC,GAAUysC,KAAK3nB,EAAe,EAAE4nB,SAChC1sC,GAAUysC,KAAK9e,EAAa,EAAE+e,SAG9B1sC,GAAUysC,KAAK/X,EAAa,EAAEgY,SAC9B1sC,GAAUysC,KAAKnlB,EAAsB,EAAEolB,SACvC1sC,GAAUysC,KAAKrf,EAAmB,EAAEsf,SACpC1sC,GAAUysC,KAAK5W,EAAa,EAAE6W,SAG9B1sC,GAAUysC,KAAK3d,EAAiB,EAAE4d,SAClC1sC,GAAUysC,KAAK1jB,EAAkB,EAAE2jB,SACnC1sC,GAAUysC,KAAKxe,EAAgB,EAAEye,SAGjC1sC,GAAUysC,KAAKhX,EAAU,EAAEkX,GAAG1T,EAAY,EAAE2T,gBAAgBrtC,GAASC,GAAG,EACxEQ,GAAUysC,KAAKhX,EAAU,EAAEkX,GAAGvU,EAAkB,EAAEwU,gBAAgBrtC,GAASE,QAAQ,EAGnFO,GAAUysC,KAAKjrC,EAAgB,EAAEqrC,eAAevX,EAAkB,EAClEt1B,GAAUysC,KAAK7qC,EAAqB,EAAEirC,eAAerX,EAAqB,EAG1Ex1B,GAAUysC,KAAK/qC,EAA0B,EAAEorC,gBAAgBP,EAAuB,EAClFvsC,GAAUysC,KAAKrS,EAAa,EAAEsS,SAC9B1sC,GAAUysC,KAAKrzB,EAAc,EAAEuzB,GAAGlQ,EAAoB,EAAEmQ,gBAAgBlwC,GAAYE,MAAM,EAC1FoD,GAAUysC,KAAK/kB,EAAe,EAAEilB,GAAGvP,EAAqB,EAAEwP,gBAAgBlwC,GAAYE,MAAM,EAC5FoD,GAAUysC,KAAK9kB,EAAmB,EAAEglB,GAAGhP,EAAyB,EAAEiP,gBAAgBlwC,GAAYE,MAAM,EAGpGoD,GAAUysC,KAAK/qC,EAA0B,EAAEorC,gBAAgBN,EAAoB,EAC/ExsC,GAAUysC,KAAKruB,EAAa,EAAEsuB,SAC9B1sC,GAAUysC,KAAKpsB,EAAqB,EAAEqsB,SACtC1sC,GAAUysC,KAAKrzB,EAAc,EAAEuzB,GAAGzM,EAAiB,EAAE0M,gBAAgBlwC,GAAYC,GAAG,EACpFqD,GAAUysC,KAAK/kB,EAAe,EAAEilB,GAAG1G,EAAkB,EAAE2G,gBAAgBlwC,GAAYC,GAAG,EACtFqD,GAAUysC,KAAK9kB,EAAmB,EAAEglB,GAAGrD,EAAsB,EAAEsD,gBAAgBlwC,GAAYC,GAAG,ECzF9F,MAAqBowC,WAA2B9lC,EAAe,CAC7DoF,YAA6BjF,EAAoB,CACzC,QADqBA,eAE7B,CAESK,IAAIulC,EAAiB3lC,EAAerG,EAAiBsG,EAAiCpG,EAAe,CACxG8rC,OAAQ,KAAK5lC,UAEjB,QAAQ4lC,EAAK,CACX,KAAKtmC,GAASI,MACd,KAAKJ,GAASK,MACJ7F,cAAM,GAAGwF,GAASsmC,CAAK,CAAC,KAAK3lC,CAAK,KAAKrG,CAAO,EAAE,EACxD,MACF,KAAK0F,GAASG,KACJomC,aAAK,GAAGvmC,GAASsmC,CAAK,CAAC,KAAK3lC,CAAK,KAAKrG,CAAO,EAAE,EACvD,MACF,QAEUyG,YAAI,GAAGf,GAASsmC,CAAK,CAAC,KAAK3lC,CAAK,KAAKrG,CAAO,EAAE,CAC1D,CAEIE,GACFoV,QAAQpV,MAAMA,CAAK,EAGjBoG,GAASgD,OAAOwI,KAAKxL,CAAK,EAAE1D,OAAS,GAEvC0S,QAAQ7O,IAAIH,CAAK,EAErB,CACF,WC5Ba4lC,QAAmBv8B,GAD/BC,GAAW,EAACD,GAAAE,GAAb,cACyCsI,EAAe,CADxD,kCAEEg0B,gBAAiB,SAEjBjoB,WAAWioB,EAAgB,CACzB,KAAKA,OAASA,CAChB,CAEAC,cAAc7jC,EAAa,CACzB,MAAO,GAAG,KAAK4jC,MAAM,IAAI5jC,CAAG,EAC9B,CAEA,MAAMgU,QAAQhU,EAAa8b,EAAgBgoB,EAAY,GAAM,CACvD,IACI3oC,QAAQ4oC,OAAOC,aAAahwB,QAAQ8vB,EAAY,KAAKD,cAAc7jC,CAAG,EAAIA,CAAG,EAEnF,OAAO7E,GAAS2gB,EAAQ3I,KAAK2I,MAAM3gB,CAAK,EAAIA,QACrCxD,EAAgB,CACvB2G,GAAS,sBAAuB,qCAAsC,CAAE3G,QAAO,CACjF,CACF,CAEA,MAAMub,QAAQlT,EAAa7E,EAAe2oC,EAAY,GAAM,CACtD,IACKE,oBAAa9wB,QAAQ4wB,EAAY,KAAKD,cAAc7jC,CAAG,EAAIA,EAAK7E,CAAK,QACrExD,EAAgB,CACvB2G,GAAS,sBAAuB,qCAAsC,CAAE3G,QAAO,CACjF,CACF,CAEA,MAAM6d,WAAWxV,EAAa,CACxB,IACF+jC,OAAOC,aAAaxuB,WAAW,KAAKquB,cAAc7jC,CAAG,CAAC,QAC/CrI,EAAgB,CACvB2G,GAAS,sBAAuB,sCAAuC,CAAE3G,QAAO,CAClF,CACF,CAIAyiC,aAAahO,EAAuB,CAC3B2X,cAAOE,KAAK7X,CAAK,CAC1B,CAEA8X,aAAa9X,EAAuB,CAC3B2X,cAAOI,KAAK/X,CAAK,CAC1B,CACF,CAAC,GAAA9kB,ICnBD7Q,GAAUysC,KAAKtzB,EAAc,EAAEwzB,GAAGO,EAAmB,EAErDltC,GAAUysC,KAAK5qC,EAAiB,EAAEirC,gBAAgB,IAAIxS,GAAiB,2BAA2B,CAAC,EAGnGt6B,GAAUysC,KAAoB9qC,EAAe,EAAEmrC,gBAAgB,SAAYa,MAAe,EAa1F3tC,GAAUysC,KAAqBxlC,EAAc,EAAE4lC,eAAe,IAAM,IAAIE,GAA0DrmC,GAASI,KAAK,CAAC,EC/CpI8mC,SAAc,IAAIC,GAAY,CACzCC,eAAgB,CACdC,QAAS,CACPC,UAAW,GAAK,GAAK,IACrBC,qBAAsB,GACtBC,aAAc,EAChB,CACF,CACF,CAAC,EAMD,SAASC,GAAc,CAAEC,UAA6B,EAAgB,CACpE,OAAQC,MAAAC,GAAA,CAAoB,OAAQV,GAAcQ,UAAS,EAC7D,6RCAMG,GAAYA,CAAC,CAAErjC,QAAOlK,UAASwtC,iBAAgB,GAAGx8B,CAAY,IAAM,CAClE,MAAEoS,KAAMqqB,EAAe,OAAO,EAEpC,aACGC,GACC,OAAOxjC,GAASkZ,EAAE,uBAAuB,EACzC,QAASpjB,GAAWojB,EAAE,2BAA2B,EACjD,eAAgBoqB,GAAkBpqB,EAAE,YAAY,EAC5CpS,IACJ,EAEN,EAEa08B,GAA8BA,CAAC,CAAExjC,QAAOkjC,WAAUptC,UAASwtC,iBAAgBttC,QAAOykB,UAAgB,IAAM,CACnH,MAAMgpB,EAAOvgC,EAAgBwgC,YAAMA,cAAEtgC,SAAFsgC,cAAUjgC,SAAVigC,cAAkBzrB,OAAM,EAIzD,OAAAkrB,EAAA,IAAC,OAAI,UAAWQ,GAAOC,UACrB,SAACC,EAAA,YAAI,UAAWF,GAAOG,IACrB,UAAAX,MAAC,OAAI,UAAWQ,GAAOv8B,MAAO,IAAKq8B,GAAQ,mBAAoB,IALzD,GAKkE,EACxEN,MAAC,MAAG,UAAWQ,GAAO3jC,MAAO,YAAU,SACpCA,YAAS,mBACZ,GACC6jC,EAAA,YAAI,UAAWF,GAAOI,KACrB,UAAAZ,MAAC,IAAE,WAAWQ,GAAO7tC,QAAUA,YAAW,+CAA+C,EACxFotC,EACyCjqC,EAUxC,EAEJ,EACF,EACF,EAEJ,kGCpDM+qC,GAAUA,CAAC,CAAEC,OAAO,SAAUC,YAAY,EAAU,WAErD,MAAI,WAAWC,EAAWR,GAAOS,OAAQF,EAAW,CAAE,CAACP,GAAOU,KAAK,EAAGJ,IAAS,QAAS,CAACN,GAAOW,KAAK,EAAGL,IAAS,OAAS,GACzH,UAAAd,EAAA,IAAC,MAAG,UACH,MAAG,UACH,MAAG,UACH,MAAG,GACN,+JCLEoB,GAAiBA,CAAC,CAAEC,wBAAwB,GAAOC,SAAS,EAAa,IAAmB,CAC1FP,QAAYC,EAAWR,GAAOe,eAAgB,CAClD,CAACf,GAAOgB,WAAW,EAAGH,EACtB,CAACb,GAAOiB,KAAK,EAAG,CAACH,EACjB,CAACd,GAAOc,MAAM,EAAGA,EAClB,EAED,aACG,MAAI,WAAAP,EACH,eAACF,GAAQ,MAAK,QAAQ,EACxB,EAEJ,gLCbMa,GAAiB,CACrBC,KAAM,SACNlI,QAAS,YACThb,QAAS,SACT5rB,MAAO,WACT,EAEM+uC,GAAgCA,CAAC,CAAE7B,WAAUpE,UAAU,QAASkG,UAAU,EAAY,IAAM,CAC1Fd,QAAYC,EAAWR,GAAOsB,aAAc,CAChD,CAACtB,GAAO3tC,KAAK,EAAG8oC,IAAY,QAC5B,CAAC6E,GAAO/hB,OAAO,EAAGkd,IAAY,UAC9B,CAAC6E,GAAO/G,OAAO,EAAGkC,IAAY,UAC9B,CAAC6E,GAAOmB,IAAI,EAAGhG,IAAY,OAC3BoG,OAAQ,CAACF,EACV,EAEKG,EAAWN,GAAe/F,CAAO,EAEvC,OACGqE,MAAA,OAAI,YAAWgC,EAAU,UAAAjB,EACvBhB,UACH,EAEJ,ECvBMkC,GAAuBC,gBAAwCttC,MAAS,EAEjEutC,GAAmBA,IAAM,CAC9BC,QAAWC,aAAWJ,EAAoB,EAEhD,GAAI,CAACG,EAAgB,UAAIhwC,MAAM,kCAAkC,EAEjE,OAAOgwC,EAASA,QAClB,EAEaE,GAAwBA,CAAC,CAAEvC,UAA4B,IAAM,CACxE,KAAM,CAACwC,EAAcC,CAAe,EAAIC,WAA8B,IAAI,EAEpEL,EAAWM,cAAY,CAAC/vC,EAAiBgpC,EAA+Bn1B,EAAWm8B,GAAsB,EAAE,IAAM,CACrGH,EAAA,CAAE7vC,UAASgpC,UAAS,EAEpC5nC,WAAW,IAAM,CACfyuC,EAAgB,IAAI,GACnBh8B,CAAQ,CACb,EAAG,CAAE,GAEL,OACGk6B,OAAAuB,GAAqB,SAArB,CAA8B,MAAO,CAAEG,UACrCG,eACCK,GACE,aAAA5C,EAAA,IAAC4B,GAAa,SAASW,EAAa5G,QAAS,QAAS,GACnD4G,SAAa5vC,UAChB,EACAkwC,SAASxzB,IACX,EACD0wB,CACH,GAEJ,kOC1Ca+C,SAA2BA,CAACC,EAAwCC,IACxEA,EAAiBzjC,OAAO,CAAC0jC,EAAWC,IAAiB,CACpDC,QAAgBJ,EAAiBzoC,KAAK,CAAC,CAAE2D,UAAWA,IAASilC,CAAY,EAE/E,GAAIC,EACK,OAAC,GAAGF,EAAWE,CAAa,EAGrC,MAAM,IAAI/wC,MAAM,sCAAsC8wC,CAAY,EAAE,CACtE,EAAG,CAA2B,GCRnBE,GAAa,CAAC,UAAW,SAAU,UAAW,OAAQ,MAAO,QAAS,OAAQ,SAAU,WAAY,OAAQ,OAAO,ECUnHC,GAA0C,CACrD,CACEplC,KAAM,KACNqlC,YAAa,SACf,EACA,CACErlC,KAAM,KACNqlC,YAAa,SACf,CAAC,EAGGC,GAAW,SAAY,CAC3B,MAAMP,EAAmBQ,QAAuCnpC,MAAM,GAAG,GAAK,GACxEiJ,EAAkBkgC,KAElBtiC,EAAqB4hC,GAAyBO,GAAmBL,CAAgB,EAInF,GAFJjjC,EAAeqZ,SAAS,CAAElY,qBAAoB,EAE1C,CAACA,EAAmBjC,KAAK,CAAC,CAAEhB,UAAWA,IAASqF,CAAe,EACjE,MAAM,IAAIlR,MAAM,wCAAwCkR,CAAe,EAAE,EAGrEwS,SACH2tB,IAAIC,EAAkB,EACtBD,IAAIE,EAAgB,EACpBF,IAAIG,EAAgB,EACpBC,KAAK,CACJC,cAAe5iC,EAAmBnF,IAAI,CAAC,CAAEkC,UAAWA,CAAI,EACxD8lC,YAAazgC,EAEb0gC,kBAAmB,GACnBC,GAAIb,GACJc,UAAW,SACXC,WAAY,SACZC,cAAe,CACbC,YAAa,EACf,EACAC,UAAW,CACTzqB,MAAO,CAAC,eAAgB,WAAW,EACnC0qB,OAAQ,CAAC,cAAc,EACvBC,mBAAoB,gBACtB,EACAC,MAAO,CAELC,YAAa,EACf,EACD,CACL,ECxDaC,GAAwBA,CAACC,EAAoBhqC,EAA8B,KAC/EF,GAAU,GAAGkqC,EAAShiC,QAAQ,GAAGgiC,EAAS36B,QAAU,EAAE,GAAIrP,CAAW,EAGjEiqC,EAAuBA,CAACD,EAAoBE,EAA+BlqC,IAC/EF,GAAU,GAAGkqC,EAAShiC,QAAQ,GAAGgiC,EAAS36B,QAAU,EAAE,GAAI,CAAE66B,IAAG,GAAGlqC,EAAa,EAS3EmqC,GAA6BA,CAACD,EAAwBlqC,IAC1DF,GAAUukC,OAAO2F,SAASI,KAAM,CAAEF,IAAG,GAAGlqC,EAAa,ECRxDqqC,GAA2DvxC,GAAoB,CAC7EwxC,QAAQC,SAAO,IAAM,CACnB,UAAI/yC,MAAM,2BAA2B,EAC5C,EAEDgzC,yBAAgB,IAAM,CACpBF,EAAMrQ,QAAUnhC,GACf,CAACA,CAAQ,CAAC,EAINgvC,cAAY,IAAI5uC,IAAS,CAC1B,UAAOoxC,EAAMrQ,SAAY,WACpBqQ,SAAMrQ,QAAQ,GAAG/gC,CAAI,CAEhC,EAAG,CAAE,EACP,EC1BA,SAASuxC,GAAcnqC,EAA4B,CAC3C,MAAC+V,CAAY,EAAIq0B,KAEhBr0B,SAAaQ,IAAIvW,CAAG,CAC7B,CCJA,MAAMqqC,GAAeA,CAACC,EAAyBC,EAA0B,EAAGC,IAAiC,CAC3G,MAAMC,EAAWR,WACX,CAACS,EAAWC,CAAY,EAAIpD,WAAS+C,CAAe,EAE1DM,mBAAU,IAAM,CAEd,GADO7xC,oBAAa0xC,EAAS9Q,OAAO,EAChC+Q,IAAc,EAAG,CACfF,GAAiCA,IACrC,MACF,CAES7Q,iBAAUoK,OAAOlrC,WAAW,IAAM,CAC3BgyC,KAAUA,EAAQN,CAAe,GAC9CA,EAAkB,GAAI,EAElB,IAAM,CACJxxC,oBAAa0xC,EAAS9Q,OAAO,EAErC,GAAC6Q,EAAiBE,EAAWH,CAAe,CAAC,EAEzCG,CACT,ECrBMj0C,GAAY,IAAIC,GAAU,CAAEC,aAAc,YAAaC,oBAAqB,EAAK,CAAC,ECIlFk0C,GAA4B,CAAuBC,EAAoBC,IACnEC,GAAiB,CAGvB,GAFqBx0C,GAAUy0C,QAAQH,CAAU,EAE/B,CACVI,QAAsB10C,GAAU8f,IAAew0B,CAAU,EAExD,OAAAjG,EAAA,IAACqG,EAAwBF,KAAS,EAC3C,CAEO,OAAAnG,EAAA,IAACkG,EAAqBC,KAAS,+fCP7BG,GAAmBlzC,OAAO,QAAQ,EA2BzCmzC,GAAgCA,CAAC,CACrCjpC,QACAyiC,WACA3qC,QAAQ,UACRoxC,YACAC,YAAY,GACZ9W,SAAS,GACTgM,UAAU,WACVmF,OAAO,SACP4F,WACAC,OACAvpC,OAAO,SACPkhC,KACAsI,UACA7F,YACA8F,kBAAkB,GAClB,GAAGljC,CACQ,IAAM,CACjB,MAAMmjC,EAAmBC,GACvB/F,EAAWR,GAAOwG,OAAQjG,EAAWP,GAAOprC,CAAK,EAAGorC,GAAO7E,CAAO,EAAG,CACnE,CAAC6E,GAAO7Q,MAAM,EAAGoX,EACjB,CAACF,CAAe,EAAGE,EACnB,CAACvG,GAAOiG,SAAS,EAAGA,EACpB,CAACjG,GAAOW,KAAK,EAAGL,IAAS,QACzB,CAACN,GAAOU,KAAK,EAAGJ,IAAS,QACzB,CAACN,GAAOkG,QAAQ,EAAGA,EACpB,EAEGnmC,EAEDimC,gCAAcxG,MAAA,OAAI,UAAWQ,GAAOgG,UAAYA,SAAUA,EAAA,EAC1DxG,MAAC,OAAK,WAAWgB,EAAW,CAAE,CAACR,GAAOuB,MAAM,EAAG4E,CAAM,IAAK/xC,OAAY0I,SAAMA,CAAA,GAC5EyiC,EACA4G,GAAS3G,MAAAa,GAAA,CAAQ,UAAWL,GAAOyG,eAAgB,KAAM,QAAW,CACvE,IAGF,OAAI3I,EAEA0B,MAACkH,GAAQ,WAAW,CAAC,CAAEH,UAAS,IAAMD,EAAgBC,CAAQ,EAAG,GAAAzI,KAAY36B,EAAM,IAAG,GACnFpD,SACHA,CAAA,GAKDy/B,EAAA,cAAO,UAAW8G,EAAgBnX,CAAM,EAAG,QAAS+W,EAAW9xC,OAAYgyC,EAAS,KAAAxpC,EAAY,gBAAespC,EAAU,GAAI/iC,EAC3HpD,SACHA,CAAA,EAEJ,EACA4mC,EAAenB,GAA0BM,GAAkBC,EAAM,wCCzE3Da,GAA2BA,CAAC,CAAEC,qBAAoBC,uBAAsBpnC,UAAS,IAAM,CACrF,MAAE6V,KAAMqqB,EAAe,SAAS,EAChCwF,EAAYL,GAAa,GAAI,EAAG+B,CAAoB,EAE1D,OACG5G,OAAA,OAAI,UAAWF,GAAO+G,QACrB,UAACvH,MAAA,MAAIjqB,WAAE,yBAA0B,CAAE7V,UAAU,GAAE,EAC/C8/B,MAAC,IAAGjqB,YAAE,+BAAgC,CAAE7V,UAAU,GAAE,EACpD8/B,MAACuG,GAAO,QAAQ,YAAY,MAAM,UAAU,MAAOxwB,EAAE,0BAA2B,CAAE6vB,YAAW,EAAG,QAASyB,EAAoB,KAAK,QAAQ,UAAS,IACrJ,GAEJ,qECZMG,GAAiCA,CAAC,CAAEpqC,OAAMzK,UAAS00C,oBAA0B,IAAM,CACjF,MAAEtxB,KAAMqqB,EAAe,SAAS,EACtC,cACG,MACC,WAACJ,MAAA,MAAG,UAAWQ,GAAO3jC,MAAQO,SAAuB2Y,EAAvB3Y,IAAS,YAAgB,6BAAkC,wBAAN,CAAgC,GACnH4iC,MAAC,IAAE,WAAWQ,GAAO7tC,QAAUyK,aAAS,YAAc2Y,EAAE,oCAAoC,EAAIpjB,CAAQ,SACvG,MACC,UAAAqtC,EAAA,IAACuG,GAAO,MAAOxwB,EAAE,gBAAgB,EAAG,QAASsxB,EAAoB,MAAM,UAAU,QAAQ,YAAY,KAAK,QAAQ,UAAS,KAC7H,CACF,GAEJ,ECPMI,GAAiBC,GAAgCA,iBAASC,UAE1DC,GAA6BA,CAAC,CAClC7G,YACA8G,cACAC,OAAO,GACPthC,WAAW,IACXge,QAAQ,EACRujB,qBACAC,sBACAC,cAAc,GACdlI,UACF,IAAM,CACEmI,QAAU/C,SAAuB,IAAI,EACrC,CAAC5mC,EAAQ4pC,CAAS,EAAI1F,WAAiB,QAAQ,EAC/C,CAAC2F,EAAiBC,CAAkB,EAAI5F,WAAkB,EAAK,EAE/D7uC,EAAUuxC,WACVmD,EAAWnD,WAGXoD,EAAYtD,GAAiB,IAAM,CACvCoD,EAAmB,EAAI,EAEvBZ,GAAcS,EAAQrT,OAAO,EAE7BjhC,EAAQihC,QAAUoK,OAAOlrC,WAAW,IAAMo0C,EAAU,SAAS,EAAG3jB,CAAK,EAC5DqQ,UAAUoK,OAAOlrC,WAAW,IAAM,CACzCo0C,EAAU,MAAM,EAChBJ,GAAsBA,EAAmB,GACxCvhC,EAAWge,CAAK,EACpB,EAEKgkB,EAAavD,GAAiB,IAAM,CACpCmD,IACFx0C,EAAQihC,QAAUoK,OAAOlrC,WAAW,IAAMo0C,EAAU,SAAS,EAAG3jB,CAAK,EAC5DqQ,UAAUoK,OAAOlrC,WAAW,IAAM,CACzCo0C,EAAU,QAAQ,EAClBH,GAAuBA,EAAoB,GAC1CxhC,EAAWge,CAAK,EACrB,CACD,EAeD,OAbAshB,YAAU,KACJgC,EACQS,IAECC,IAGN,IAAM,CACXv0C,aAAaL,EAAQihC,OAAO,EAC5B5gC,aAAaq0C,EAASzT,OAAO,IAE9B,CAACiT,EAAMS,EAAWC,CAAU,CAAC,EAE5B,CAACV,GAAQvpC,IAAW,UAAY,CAAC0pC,EAC5B,KAIPjI,MAAC,OAAI,MAAO6H,EAAYtpC,CAAM,EAAG,UAAAwiC,EAAsB,IAAKmH,EACzDnI,UACH,EAEJ,ECpEM0I,GAAOA,CAAC,CAAEX,OAAO,GAAMthC,WAAW,IAAKge,QAAQ,EAAGujB,qBAAoBC,sBAAqBjI,WAAUgB,WAAiB,IAA0B,CAE9I2H,QAAa,aADHliC,EAAW,GACY,aACjCqhC,EAAetpC,IAAmC,CACtDmqC,aACAC,UAAWpqC,IAAW,WAAaA,IAAW,OAAS,WAAa,eAGtE,OACGyhC,MAAA4H,GAAA,CACC,YAAcrpC,GAAmBspC,EAAYtpC,CAAM,EACnD,KAAAupC,EACA,SAAAthC,EACA,MAAAge,EACA,mBAAAujB,EACA,oBAAAC,EACA,UAAAjH,EAEChB,UACH,EAEJ,ECnCa6I,GAAY,CAAC,EAAE,OAAO3J,OAAW,KAAeA,OAAO4D,UAAY5D,OAAO4D,SAASgG,eAEhG,IAAI/H,GAEJ,SAAwBgI,GAAcC,EAAkB,CACtD,IAAK,CAACjI,IAAQA,KAAS,GAAMiI,IACvBH,GAAW,CACPI,QAAYnG,SAASgG,cAAc,KAAK,EAC9CG,EAAUvS,MAAMwS,SAAW,WAC3BD,EAAUvS,MAAMyS,IAAM,UACtBF,EAAUvS,MAAMtwB,MAAQ,OACxB6iC,EAAUvS,MAAM0S,OAAS,OACzBH,EAAUvS,MAAM2S,SAAW,SAClB/5B,cAAKg6B,YAAYL,CAAS,EAC5BA,KAAUM,YAAcN,EAAUO,YAChCl6B,cAAKm6B,YAAYR,CAAS,CACrC,CAEKlI,SACT,CAEa2I,SAAarjC,GACjB,IAAIoK,QAAqBiU,GAAA,CACxBilB,QAA4B7G,SAASgG,cAAc,QAAQ,EACjEa,EAAOtsC,KAAO,kBACdssC,EAAOC,MAAQ,GACfD,EAAOtjC,IAAMA,EACNwjC,SAAS,IAAMnlB,IACtBilB,EAAOG,QAAqBh3C,GAAA,CAClB8uC,mBAAK,gCAAiC9uC,CAAK,EAC7C,IAAIT,MAAM,+BAA+B,GAExCid,cAAKg6B,YAAYK,CAAM,EACjC,EC7BGI,GAAsBA,IAAM,CAChCjH,SAASxzB,KAAKonB,MAAMsT,YAAc,GAAGjB,GAAc,EAAI,CAAC,KAC/Cz5B,cAAKonB,MAAMuT,UAAY,QAClC,EAEMC,GAAuBA,IAAM,CACjB5uC,MAAM6uC,KAAKrH,SAASsH,iBAAiB,QAAQ,CAAC,EAClCjuC,OAAmBkuC,KAAOtC,IAAI,EAAEvyC,SAGjD8Z,cAAKonB,MAAM4T,eAAe,cAAc,EACxCh7B,cAAKonB,MAAM4T,eAAe,YAAY,EAEnD,EAGA,IAAIC,GAEG,MAAMC,GAAWA,IAAM,CACtBC,QAAe9H,cAAY,IAAM,CAErC,GAAI,CAAC4H,IAAiBzH,SAAS4H,gBAAkB5H,SAASxzB,KACxD,OAGchU,MAAM6uC,KAAKrH,SAASsH,iBAAiB,QAAQ,CAAC,EAClCjuC,OAAmBkuC,KAAOtC,IAAI,EAAEvyC,SAGxC,IAClB+0C,GAAcI,MAAM,EACJ91C,UAEpB,EAAG,CAAE,GAELkxC,YAAU,IACD,IAAM,CACUmE,KACRO,GAAA,EAEd,CAACA,CAAY,CAAC,EAEXG,QAAajI,cAAY,IAAM,CAC9B4H,KACHA,GAAgBzH,SAAS4H,eAGPX,IACtB,EAAG,CAAE,GAECc,EAAclI,cAAY,IAAM,CACvB8H,IACQP,IAAA,EACpB,CAACO,CAAY,CAAC,EAEV,OAAEG,aAAYC,cACvB,qIC9BMC,GAAyBA,CAAC,CAC9B/C,OACAgD,UACA/K,WACAgB,YACAgK,WACAC,OACAC,qBAAqBxC,GACrByC,8BACA,GAAGC,CACE,IAAM,CACX,MAAMC,EAAWjG,WACXkG,EAA2BlG,SAA8D,CAAEmG,WAAY,KAAMC,SAAU,KAAM,EAE7H,CAAEZ,aAAYC,eAAgBL,GAAS,EAEvCiB,EAAkBvG,GAAiB,IAAM,OAC7C,MAAMwG,EAAwBA,IAAM,UAElCL,IAASvW,UAATuW,QAAkBM,UAAU75B,OAAO2uB,GAAOmL,QACjC9W,sBAAS+W,oBAAoB,eAAgBH,EAAqB,GAGzEL,IAASvW,UAATuW,QAAkBtD,OACXjT,UAAQnH,iBAAiB,eAAgB+d,CAAqB,EACvEL,EAASvW,QAAQ6W,UAAUG,IAAIrL,GAAOmL,KAAK,EAC7C,CACD,EAEKG,EAAiB7G,GAAiB,IAAM,SACjC0F,KACXS,IAASvW,UAATuW,QAAkBW,aAClBX,IAASvW,UAATuW,QAAkBM,UAAU75B,OAAO2uB,GAAOmL,MAAK,CAChD,EAEKK,EAAqE9+C,GAAA,CACrEA,EAAMgO,MAAQ,UAAYkwC,EAASvW,QAAQoX,SAAS/+C,EAAMwe,UAC5Dxe,EAAMg/C,eAAe,EACXpB,GAAA,MAAAA,IACZ,EAGIqB,EAAgEj/C,GAAA,CAChEk+C,EAASvW,QAAQoX,SAAS/+C,EAAMwe,MAAqB,IAC7Co/B,GAAA,MAAAA,IACEF,IACd,EAGIwB,EAA2BA,IAAM,QACrChB,IAASvW,UAATuW,QAAkBO,OAAM,EAG1B7F,YAAU,IAAM,CACVgC,EACagE,IAECN,GAEjB,GAACM,EAAgBN,EAAiB1D,CAAI,CAAC,EAE1C,MAAMuE,EAAgEn/C,GAAA,CAC9D,MACJ2nC,QAAS,CAAEyW,aAAYC,UAAS,CAC9BF,IAGAC,IAAeC,GAKfr+C,EAAMwe,SAAW0/B,EAASvW,UAClBiW,GAAA,MAAAA,IACEF,IACd,EAGF,OAAO0B,GAAS1J,aACd5C,EAAA,IAAC,SACC,WAAWgB,EAAWD,EAAW,CAAE,CAACP,GAAOuK,QAAQ,EAAGA,EAAU,EAChE,UAAWiB,EACX,QAASG,EACT,QAASE,EACT,YAAoBp/C,GAAA,CACO4nC,UAAQyW,WAAar+C,EAAEye,QAElD,UAAkBze,GAAA,CACS4nC,UAAQ0W,SAAWt+C,EAAEye,MAChD,EACA,IAAK0/B,EACL,KAAAJ,EACA,GAAIG,EAEJ,SAAAnL,MAACiL,GAAmB,KAAAnD,EAAY,SAAU,IAAK,UAAWoD,EAA6B,oBAAqBkB,EACzGrM,UACH,GACF,EACA8C,SAAS0J,cAAc,MAAM,CAC/B,CACF,ECnHMC,GAAQA,CAAC,CACb1E,OAAO,GACPthC,WAAW,IACXge,QAAQ,EACRujB,qBACAC,sBACAjI,WACA0M,YAAY,MACZhW,QAAQ,CAAC,CACJ,IAA0B,CAC/B,MAAMd,EAAUnvB,EAAW,IACrBkiC,EAAa,aAAa/S,CAAO,mBAAmBA,CAAO,SAC3D+W,EAAa,CACjBC,KAAM,sBACNzD,IAAK,sBACL0D,MAAO,qBACPC,OAAQ,sBAEJhF,EAAetpC,IAAmC,CACtDmqC,aACAC,UAAWpqC,IAAW,WAAaA,IAAW,OAAS,kBAAoBmuC,EAAWD,CAAS,EAC/FK,QAASvuC,IAAW,WAAaA,IAAW,OAAS,EAAI,EACzDwuC,OAAQ,GACR,GAAGtW,IAGL,OACGuJ,MAAA4H,GAAA,CACC,YAAcrpC,GAAmBspC,EAAYtpC,CAAM,EACnD,KAAAupC,EACA,SAAAthC,EACA,MAAAge,EACA,mBAAAujB,EACA,oBAAAC,EAECjI,UACH,EAEJ,ECpDMiN,GAAY7G,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAK,EAAoB8G,gBAAoB,OAAQ,CAAE,EAAG,uGAAyG,GAAmBA,gBAAoB,OAAQ,CAAE,EAAG,gBAAiB,KAAM,MAAQ,EAAC,8CCWxXC,GAA8BA,CAAC,CAAEnN,WAAU6G,UAAS7F,YAAW,GAAGoM,CAAiB,IAEpFnN,MAAA,UAAO,UAAWgB,EAAWR,GAAO4M,WAAYrM,CAAS,EAAG,KAAK,SAAS,QAAA6F,EAAsBuG,KAC9FpN,UACH,mCCNEsN,EAAkBA,CAAC,CAAE3jB,KAAM4jB,EAAevM,WAAU,IACjDf,MAACsN,GAAc,UAAWtM,EAAWR,GAAO9W,KAAMqX,CAAS,EAAG,cAAY,MAAS,2FCItFwM,GAAoCA,CAAC,CAAE3G,UAAS/E,UAAU,EAAY,IAAM,CAC1E,MAAE9rB,GAAMqqB,EAAe,QAAQ,EAGnC,OAAAJ,MAACkN,GAAW,SAAAtG,EAAkB,aAAY7wB,EAAE,aAAa,EAAG,UAAWirB,EAAWR,GAAOgN,iBAAkB,CAAE,CAAChN,GAAOuB,MAAM,EAAG,CAACF,EAAS,EACtI,SAAA7B,MAACqN,EAAK,MAAMI,GAAM,CACpB,EAEJ,kGCLMC,GAA0BA,CAAC,CAAE5F,OAAMgD,UAAS/K,WAAUe,OAAO,QAASkK,OAAM,GAAGG,CAAsB,IAEvGnL,MAAC6K,GAAM,MAAA/C,EAAY,QAAAgD,EAAkB,mBAAoB0B,GAAO,KAAAxB,EAAY,SAAQ,GAClF,SAAAtK,OAAC,MAAI,WAAWM,EAAWR,GAAO4J,OAAQ5J,GAAOM,CAAI,CAAC,EAAG,cAAa6M,OAAkB,GAAIxC,EACzFpL,YACDC,MAACuN,GAAiB,SAASzC,CAAQ,GACrC,EACF,GCMJ,SAAwB8C,GAAqC,CAC3DC,gBACAC,mBACAC,iBAAiB,GACjBC,WACAC,kBACAC,eAQF,EAA0B,CAClB,MAAEn4B,KAAMqqB,EAAe,OAAO,EAC9B,CAAC+N,EAASC,CAAU,EAAI3L,EAC5BxmC,gBAAO2Q,YAAa3Q,OAAOwI,KAAKopC,CAAa,EAAqB9xC,IAAab,GAAA,CAACA,EAAK,EAAK,CAAC,CAAC,CAC9F,EACM,CAACif,EAAQk0B,CAAS,EAAI5L,WAAYoL,CAAa,EAC/C,CAACS,EAAYC,CAAa,EAAI9L,WAAS,EAAK,EAC5C,CAACz6B,EAAQwmC,CAAS,EAAI/L,WAAwB,CAAE,GAChD,CAACgM,EAAuBC,CAAwB,EAAIjM,WAAS,EAAK,EAElEkM,EAAQjM,cAAY,IAAM,CAC9B2L,EAAUR,CAAa,EACvBW,EAAU,CAAE,GACZE,EAAyB,EAAK,EAC9BH,EAAc,EAAK,EACnBH,EAAWnyC,OAAO2Q,YAAa3Q,OAAOwI,KAAKopC,CAAa,EAAqB9xC,IAAKb,GAAQ,CAACA,EAAK,EAAK,CAAC,CAAC,CAA8B,GACpI,CAAC2yC,CAAa,CAAC,EAEZe,EAAgBA,CAACp8C,EAAcq8C,IAAkB,CACrD,GAAKf,EAED,IACegB,iBAAet8C,EAAMq8C,CAAU,EAGhDL,EAAWxmC,IAAY,CAAE,GAAGA,EAAQ,CAACxV,CAAI,EAAG,IAAO,UAC5CK,EAAgB,CACvB,GAAIA,aAAiBk8C,GAAiB,CAC9B5sB,QAAetvB,EAAMmV,OAAO,CAAC,EACnCwmC,EAAWxmC,IAAY,CAAE,GAAGA,EAAQ,CAACxV,CAAI,EAAG2vB,CAAe,IAC3DusB,EAAyB,EAAI,CAC/B,CACF,GAGIM,EAAWtM,cAAY,CAAClwC,EAAe6D,IAA4B,CACvEg4C,EAAwBxZ,IAAA,CAAE,GAAGA,EAAS,CAACriC,CAAI,EAAG6D,CAAQ,GACxD,EAAG,CAAE,GAEC44C,EAAgD/hD,GAAA,CAC9CsF,QAAOtF,EAAMwe,OAAOlZ,KACpB6D,EAAQnJ,EAAMwe,kBAAkBwjC,kBAAoBhiD,EAAMwe,OAAOtO,OAAS,WAAalQ,EAAMwe,OAAOyjC,QAAUjiD,EAAMwe,OAAOrV,MAE3H+4C,EAAY,CAAE,GAAGj1B,EAAQ,CAAC3nB,CAAI,EAAG6D,GAEvCg4C,EAAUe,CAAS,EACnBhB,EAAyBvZ,IAAA,CAAE,GAAGA,EAAS,CAACriC,CAAI,EAAG6D,CAAQ,IAEnD2R,EAAOxV,CAAI,GACbo8C,EAAcp8C,EAAM48C,CAAS,CAC/B,EAGIC,EAA4CniD,GAAA,CAC5C,CAAC6gD,GAAkB,CAACI,EAAQjhD,EAAMwe,OAAOlZ,IAAI,GAEnCtF,IAAMwe,OAAOlZ,KAAM2nB,CAAM,GAGnCjE,EAAY43B,GAAgC,CAC5C,IACFA,SAAiB7+B,aAAakL,EAAQ,CAAEm1B,WAAY,GAAO,EAEpD,SACAz8C,EAAgB,CACvB,GAAIA,aAAiBk8C,GAAiB,CACpC,MAAMQ,EAAoC,GAE1C,QAASxpC,EAAQ,EAAGA,EAAQlT,EAAM28C,MAAMj6C,OAAQwQ,IAAS,CACvD,MAAMjK,EAAOjJ,EAAM28C,MAAMzpC,CAAK,EAAEjK,KAC1BnJ,EAAUE,EAAM28C,MAAMzpC,CAAK,EAAEiC,OAAO,CAAC,EAEvClM,GAAQnJ,GAAW,CAAC48C,EAAUzzC,CAAI,IACpCyzC,EAAUzzC,CAAI,EAAInJ,EAEtB,CAEIE,EAAM28C,MAAMC,MAAO58C,GAAUA,EAAMuK,OAAS,UAAU,EAC9C0S,OAAOiG,EAAE,gCAAgC,EAEzCjG,OAAOiG,EAAE,6BAA6B,EAGlDy4B,EAAUe,CAA2B,CACvC,CACF,CAEO,UAiDF,OACLp1B,SACAnS,SACAymC,wBACAQ,eACAI,aACAK,aApDyC,MAAOxiD,GAAU,CAGtD,GAFJA,EAAMg/C,eAAe,EAEjB,GAAC8B,GAAYM,GAOjB,IAJAE,EAAU,CAAE,GACZE,EAAyB,EAAK,EAG1BZ,GAAoB,CAAC53B,EAAS43B,CAAgB,EAAG,CACnDY,EAAyB,EAAI,EAC7B,MACF,CAGAH,EAAc,EAAI,EAEd,IACF,MAAMP,EAAS7zB,EAAQ,CAAE60B,WAAUR,YAAWD,gBAAeG,2BAA0Bx4B,WAAU,EACjG+3B,WAAkB9zB,SACXtnB,EAAgB,CACvB,MAAM08C,EAAoC,GAEtC18C,aAAiBqnB,GACZjf,eAAQpI,EAAMmV,MAAM,EAAE9O,QAAQ,CAAC,CAACgC,EAAK7E,CAAK,IAAM,CACjD6E,GAAO7E,GAAS,CAACk5C,EAAUr0C,CAAG,IAChCq0C,EAAUr0C,CAAG,EAAI7E,EAAMkF,KAAK,GAAG,EACjC,CACD,EACQ1I,aAAiBT,MAC1Bm9C,EAAUz/B,KAAOjd,EAAMF,QAEbmd,OAAOiG,EAAE,eAAe,EAEpCy4B,EAAUe,CAA2B,EAErBrB,GAAA,MAAAA,EAAA,CACdr7C,QACA88C,WAAaz0C,GAAiB8zC,EAAS9zC,EAAK,EAAE,GAElD,CAEAqzC,EAAc,EAAK,IAUnBD,aACAU,WACAR,YACAD,gBACAG,2BACAC,QAEJ,CCjMA,MAAMiB,GAAYA,CAACC,EAAwB,KAAqD,CAC9F,KAAM,CAAClpB,EAAOvN,CAAQ,EAAIqpB,WAASoN,CAAY,EAIxC,OAAClpB,EAFQmpB,GAAyB12B,EAAUyb,GAAa,OAAOib,EAAe,IAAcA,EAAa,CAACjb,CAAQ,CAErG,CACvB,ECPMkb,GAAiB5J,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,mPAAmP,CAAE,CAAC,ECAtb+C,GAAoB7J,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,kkBAAkkB,CAAE,CAAC,ECExwBgD,GAAaA,CAACnR,EAAiBoR,IAAoB,CAGvD,MAAMC,EAAiCze,KAAK0e,SAAW,IAEvD,MAAO,CAACtR,EAAQpN,KAAKwE,MAAMia,CAAQ,EAAGD,CAAM,EACzCh0C,OAAO1F,OAAO,EACd+E,KAAK,GAAG,EACRxG,QAAQ,UAAW,GAAG,EACtBoB,aACL,EAEMk6C,GAAcA,CAACvR,EAAiBoR,EAAiBI,IAA8B,CAC7E,MAAC1zC,EAAI2zC,CAAK,EAAI9N,WAAS6N,GAAYL,GAAWnR,EAAQoR,CAAM,CAAC,EAEnEpK,mBAAU,IAAM,CACdyK,EAAMD,GAAYL,GAAWnR,EAAQoR,CAAM,CAAC,CAC3C,GAACI,EAAUxR,EAAQoR,CAAM,CAAC,EAEtBtzC,CACT,2ECVM4zC,GAA8BA,CAAC,CAAEzQ,WAAUgB,YAAWluC,QAAO+J,IAAU,IAAM,CACjF,MAAM6zC,EAAWJ,GAAY,cAAez7C,OAAWgI,CAAE,EAElDmjC,eACJ,MAAI,IAAI0Q,EAAU,UAAWzP,EAAWR,GAAOkQ,WAAY,CAAE,CAAClQ,GAAO3tC,KAAK,EAAGA,CAASkuC,GAAS,EAC7FhB,UACH,GACE,IACN,yECFa4Q,GAAYA,CAAC,CAAE5P,YAAW6P,cAAa3+C,WAAUqL,QAAOzK,QAAO69C,aAAY/C,SAAQkD,UAAU,GAAMr+C,MAAY,IAAM,CAChI,MAAMs+C,EAAqB9P,EAAWR,GAAOuQ,UAAWhQ,CAAS,EAC3DnkC,EAAKyzC,GAAY,aAAc79C,CAAI,EACnCw+C,EAAeX,GAAY,cAAe79C,CAAI,EAEpD,OACGkuC,OAAA,OAAI,UAAWoQ,EAAoB,cAAanD,EAC9C,UAAC,EAACrwC,GACAojC,OAAA,SAAM,QAAS9jC,EAAI,UAAW4jC,GAAOljC,MACnCA,YACArL,GAAY4+C,EAAU7Q,EAAA,IAAC,QAAK,cAAY,OAAO,YAAC,GAAU,MAC7D,EAED4Q,EAAY,CAAEI,eAAcp0C,KAAI,EAChCi0C,GACE7Q,MAAAwQ,GAAA,CAAW,GAAIQ,EAAc,MAAAn+C,EAC3B69C,SACHA,EAAA,CAEJ,GAEJ,oQCZMO,GAAaA,CAACC,EAA4CC,IAAqD,CAAC,CAACA,EAEjHC,GAAQA,CAAC,CACbn/C,WACA8uC,YACA2F,WACAmK,UAAU,GACVx6C,QACAuG,KACApK,OACA2+C,YACAt+C,QACAm+C,eACA5zC,OACAi0C,cACAC,WACAC,cACAC,eACA,GAAGC,CACE,IAAM,CAEX,MAAMC,EAAYt0C,GAAQ,OACpBu0C,EAAqB3Q,EACzBR,GAAO7uC,UACP,CACE,CAAC6uC,GAAO3tC,KAAK,EAAGA,EAChB,CAAC2tC,GAAOkG,QAAQ,EAAGA,EACnB,CAAClG,GAAO+Q,WAAW,EAAG,CAAC,CAACA,EACxB,CAAC/Q,GAAOgR,YAAY,EAAG,CAAC,CAACA,GAE3BzQ,CACF,EAEMoK,EAAiB,CACrB,gBAAiB,CAAC,CAACl5C,EACnB,eAAgBuE,GAAQvE,GAAYY,GAASwD,IAAU,IACvD,mBAAoB26C,GAGhBY,EAAkD,CACtDh1C,KACApK,OACA6D,QACAqwC,WACAmL,KAAMV,EAAY,EAAIv8C,OACtBmsC,UAAWP,GAAOlZ,MAClBwqB,SAAU,CAACjB,EACX5+C,WACA,GAAGk5C,EACH,GAAGsG,GAGCnqB,EAAQ2pB,GAAWW,EAAaT,CAAS,EAC7CnR,MAAC,YAAa4R,KAAa,IAAKP,CAAY,SAE3C,QAAUO,MAAa,KAAMF,EAAW,IAAKJ,CAC/C,GAED,OAAOT,EACLnQ,OAAC,MAAI,WAAWiR,EACbJ,kBAAe,MAAI,WAAW/Q,GAAOuR,QAAUR,UAAY,GAAS,KACpEjqB,EACAkqB,EAAgBxR,MAAA,OAAI,UAAWQ,GAAOuR,QAAUP,UAAa,GAAS,KACzE,GAEAlqB,CAEJ,4CC7EM0qB,GAA6BA,CAAC,CAAEjR,YAAW2P,aAAYpzC,QAAOzK,QAAOZ,WAAU4+C,UAAU,GAAMlD,SAAQn7C,OAAM,GAAGi/C,CAAW,IAE7HzR,EAAA,IAAC2Q,GACC,WAAW3P,EAAWR,GAAOyR,UAAWlR,CAAS,EACjD,MAAAluC,EACA,WAAA69C,EACA,MAAApzC,EACA,SAAArL,EACA,QAAA4+C,EACA,OAAAlD,EACA,KAAAn7C,EACA,YAAc0/C,GAAgBlS,EAAA,IAAAoR,GAAA,CAAM,QAAAP,EAAkB,MAAAh+C,EAAc,KAAAL,EAAY,SAAAP,EAAoB,GAAIigD,KAAgBT,CAAc,EACtI,8MCrBAU,GAAiB,gCAEjBC,GAAoCA,CAAC,CAAEtwB,UAAgB,IAAM,CAC3D,MAAE/L,KAAMqqB,EAAe,SAAS,EAyBhCiS,GAvBoBvwB,GAAqB,CAC7C,IAAIuwB,EAAW,EAEf,OAAKvwB,EAAS9sB,MAAMm9C,EAAc,IAE9BrwB,EAAS9sB,MAAM,QAAQ,IACzBq9C,GAAY,GAGVvwB,EAAS9sB,MAAM,UAAU,IAC3Bq9C,GAAY,GAGVvwB,EAAS9sB,MAAM,gBAAgB,IACjCq9C,GAAY,GAGVvwB,EAAS9sB,MAAM,kCAAkC,IACnDq9C,GAAY,IAGPA,IAEyBvwB,CAAQ,EACpCwwB,EAAS,CACbv8B,EAAE,wCAAwC,EAC1CA,EAAE,qCAAqC,EACvCA,EAAE,qCAAqC,EACvCA,EAAE,uCAAuC,EACzCA,EAAE,4CAA4C,CAAC,EAG7C,OAACs8B,SAGF,MAAI,WAAW7R,GAAO+R,iBAAkB,gBAAeF,EACtD,UAACrS,MAAA,OAAI,UAAWQ,GAAOgS,oBACrB,eAAC,MAAI,WAAWhS,GAAOiS,qBAAqB,CAC9C,SACC,OAAK,WAAU,SAAU18B,WAAE,uCAAuC,EAAE,EAAO,UAAE,OAAK,WAAWyqB,GAAOljC,MAAQg1C,WAAOD,CAAQ,EAAE,CAChI,IARoB,IAUxB,ECpCMK,GAAiCA,CAAC,CAAEr8C,QAAOs8C,iBAAiB,GAAMjC,aAAYkC,iBAAiB,GAAM,GAAGzM,CAAa,IAAM,CACzH,MAAEpwB,KAAMqqB,EAAe,SAAS,EAChC,CAACyS,EAAcC,CAAkB,EAAIlD,GAAU,EAGnD,OAAA5P,MAACgS,GACK7L,MACJ,WACEuK,IACCkC,EACClS,OAACqS,GAAM,SAAN,CACC,UAAC/S,MAAAoS,GAAA,CAAiB,SAAU/7C,GAAS,EAAG,GACvC0f,EAAE,4BAA4B,EACjC,GACE,MAEN,KAAM88B,EAAe,OAAS,WAC9B,aACEF,EACG3S,MAAAkN,GAAA,CAAW,aAAYn3B,EAAE,qBAAqB,EAAG,QAAS,IAAM+8B,IAAsB,eAAcD,EACnG,SAAA7S,MAACqN,EAAK,MAAMwF,EAAeG,GAAaC,EAAc,GACxD,EACE,KAEN,SAAQ,EACR,EAEN,iOC1BMC,GAAqBA,IAAM,CACzBC,QAAoBphD,EAAU0uB,EAAiB,EAE/C,CAAE1K,KAAMqqB,EAAe,MAAM,EAC7BgC,EAAWD,KACX2C,EAAIO,GAAc,GAAG,EAErB,CAAC+N,EAAiBC,CAAkB,EAAI5Q,WAAiB,EAAE,EAE3D6Q,EAAWC,KACX3O,EAAW4O,KAEX,CACJ9D,eACAT,eACA90B,SACAnS,SACAwmC,YACAG,MAAO8E,GACL7F,GAA+B,CACjCC,cAAe,CAAE/rB,SAAU,EAAG,EAC9BgsB,iBAAkB3iC,GAAO,EAAEC,MAAM,CAAE0W,SAAUzW,EAAO,EAAEpZ,SAAS8jB,EAAE,sBAAsB,CAAC,EAAG,EAC3Fi4B,SAAW7zB,GAAW,CACpBk5B,EAAmBl5B,EAAO2H,QAAQ,EACzB+iB,IAAqBD,EAAU,6BAA6B,EAAG,CAAE7vC,QAAS,GAAM,CAC3F,EACD,EAEKwwB,EAAgBmuB,GAAYP,EAAkB7tB,kBAAmB,CACrEquB,UAAW,SAAY,CACrBL,EAAS,GAAG,EACZ,MAAMH,EAAkBlyB,SACflL,IAAE,gCAAgC,EAAG,SAAS,CACzD,EACA69B,QAAU/gD,GAAmB,CACvBA,aAAiBqnB,KACnBs0B,EAAU37C,EAAMmV,MAAM,EACb68B,IAAqBD,EAAU,gBAAgB,EAAG,CAAE7vC,QAAS,GAAM,GAE9Es+C,EAAmB,EAAE,CACvB,EACD,EAEDvN,YAAU,IAAM,CAEVhB,IAAM,+BAAiC,CAACsO,GACjCvO,IAAqBD,EAAU,gBAAgB,EAAG,CAAE7vC,QAAS,GAAM,CAC9E,EACC,CAAC6vC,EAAUE,EAAGwO,EAAUF,EAAiB7tB,EAAekuB,CAAS,CAAC,EAE/DI,QAAenR,cAAY,IAAM,CAC5BmC,IAAqBD,EAAU,IAAI,EAAG,CAAE7vC,QAAS,GAAM,GAC/D,CAAC6vC,EAAU0O,CAAQ,CAAC,EAGvB,OAAIF,SAEC,MACC,WAAApT,MAAC,MAAG,UAAWQ,GAAOsT,QAAU/9B,WAAE,8BAA8B,EAAE,EACjE2qB,EAAA,YAAI,UAAWF,GAAOuT,WACrB,UAAC/T,EAAA,SAAGjqB,SAAEA,EAAA,gDAAgD,CAAE,GACvDiqB,EAAA,SAAGjqB,SAAEA,EAAA,kDAAkD,CAAE,GAC1DiqB,MAAC,MAAI,WAAWQ,GAAOwT,WACrB,eAAC,IAAGj+B,YAAE,sCAAsC,EAAE,CAChD,UACC,IACEA,aAAE,kDAAkD,EAAE,UAAE,KAAE,IAC1DA,EAAE,4CAA4C,GACjD,GACF,EACC2qB,EAAA,YAAI,UAAWF,GAAOyT,QACrB,UAACjU,MAAAuG,EAAA,CAAO,SAAUhhB,EAAc2uB,UAAW,QAAQ,OAAO,MAAOn+B,EAAE,gBAAgB,EAAG,QAAS89B,CAAa,GAC3G7T,MAAAuG,EAAA,CACC,SAAUhhB,EAAc2uB,UACxB,QAAQ,SACR,MAAOn+B,EAAE,8BAA8B,EACvC,QAAS,IAAM,CACbwP,EAAc4uB,OAAOf,CAAe,GACpC,GAEN,CACF,IAMF1S,EAAA,KAAC,OAAK,UAAUgP,EACd,UAAA1P,MAAC,MAAG,UAAWQ,GAAOsT,QAAU/9B,WAAE,8BAA8B,EAAE,QACjE,IAAE,WAAWyqB,GAAO4T,UAAYr+B,WAAE,0CAA0C,EAAE,EAC9E/N,EAAO8H,MAAQkwB,EAAA,IAAC4B,IAAa,QAAQ,QAAS55B,WAAO8H,KAAK,EAC1DkwB,MAAA0S,GAAA,CACC,MAAOv4B,EAAO2H,SACd,SAAUmtB,EACV,MAAOl5B,EAAE,kBAAkB,EAC3B,YAAaA,EAAE,0CAA0C,EACzD,MAAO,CAAC,CAAC/N,EAAO8Z,UAAY,CAAC,CAAC9Z,EAAO8H,KACrC,WAAY9H,EAAO8Z,SACnB,KAAK,WACL,eAAgB,EAAM,GAExB4e,OAAC,OAAI,UAAWM,EAAWR,GAAOyT,QAASzT,GAAO6T,OAAO,EACvD,UAACrU,MAAAuG,EAAA,CAAO,KAAK,SAAS,MAAM,UAAU,MAAOxwB,EAAE,kBAAkB,EAAG,UAAS,KAC5EiqB,EAAA,IAAAuG,EAAA,CAAO,KAAK,SAAS,QAASsN,EAAc,QAAQ,OAAO,MAAO99B,EAAE,gBAAgB,EAAG,UAAS,MACnG,CACF,GAEJ,yEC9GMu+B,GAAkBA,IAAM,CACtBnB,QAAoBphD,EAAU0uB,EAAiB,EAC/C8zB,EAAqBxiD,EAAU2oB,EAAkB,EAEjD,CAAE3E,GAAMqqB,EAAe,SAAS,EAChCgC,EAAWD,KACXmR,EAAWC,KACX3O,EAAW4O,KAEX,CAAE90C,aAAY,EAAIqB,EAAe,CAAC,CAAErB,kBAAmB,CAAEA,aAAc,IACvE,CAACuS,CAAY,EAAIq0B,KACjBkP,EAAiBvjC,EAAaQ,IAAI,gBAAgB,EAClDgjC,EAAoBxjC,EAAaQ,IAAI,SAAS,EAE9C,CAAC0Q,EAAcuyB,CAAe,EAAIjS,EAAiB,WAEnDkS,EAAoBC,UAAQ,IACzB/P,EAAqBD,EAAUlmC,IAAgBlQ,GAAaG,KAAO,UAAY,IAAI,EACzF,CAAC+P,EAAakmC,CAAQ,CAAC,EAEpBiQ,EAAqB5P,GAAiB,MAAOuP,GAA2B,CAC5E,MAAMt4B,EAAUu4B,EAAoBv/C,SAASu/C,EAAmB,EAAE,EAAI7/C,OAElE,IACF,MAAM2/C,EAAmB13B,qBAAqB,CAAE23B,eAAgBM,UAAUN,CAAc,GAAKt4B,CAAO,EACpG,MAAMi3B,EAAkB1vB,oBAAoB,CAAEC,MAAO,GAAI,EAEhD3N,IAAE,0BAA0B,EAAG,SAAS,EACjDu9B,EAASqB,CAAiB,QACnB9hD,EAAgB,CACnBA,aAAiBT,OACnBsiD,EAAgB7hD,EAAMF,OAAO,CAEjC,EACD,EAEDmzC,mBAAU,IAAM,CACT0O,GAELK,EAAmBL,CAAc,GAChC,CAACK,EAAoBL,CAAc,CAAC,QAGpC,MAAI,WAAWhU,GAAO7uC,UACpBwwB,WAEGue,OAAAqU,EAAA,oBAAA/U,EAAA,IAAC,KAAG,WAAWQ,GAAO3jC,MAAQslB,SAAaA,EAAA,EAC3C6d,MAACuG,GACC,MAAOxwB,EAAE,8BAA8B,EACvC,QAAQ,YACR,MAAM,UACN,KAAK,QACL,QAAS,IAAMu9B,EAASzO,EAAqBD,EAAU,UAAU,CAAC,EAClE,UAAS,MAEb,EAEC5E,MAAA,OACC,SAACA,MAAAa,GAAA,CAAO,GACV,CAEJ,EAEJ,ECpEMmU,GAAiBA,IAAM,CACrB7B,QAAoBphD,EAAU0uB,EAAiB,EAC/C8zB,EAAqBxiD,EAAU2oB,EAAkB,EAEjDu6B,EAAc9P,WACd,CAAChjB,EAAcuyB,CAAe,EAAIjS,WAAwB,IAAI,EAC9D,CAAE1sB,KAAMqqB,EAAe,MAAM,EAE7B5gC,EAAS+0C,EAAmBl5B,0BAE5B65B,EAAsBxS,cAC1B,CAAC,CAAEyS,WAAW,IAAMC,aAAa,EAAG31C,UAAUD,iBAAS,GAAI9L,cAA2C,CACpG,GAAI,CAAC+L,EAAS,CACD/L,GAAA,MAAAA,EAAA,CAAEqqC,UAAW,GAAOt+B,QAAS,KACxC,MACF,CAEYo1B,UAAUoK,OAAOoW,YAAY,SAAY,CACjC,MAAMlC,EAAkBhvB,kBAAkB1kB,CAAO,GAG1D61C,qBAAcL,EAAYpgB,OAAO,EAGxC,MAAMse,EAAkB1vB,sBACb/vB,GAAA,MAAAA,EAAA,CAAEqqC,UAAW,GAAMt+B,QAASA,GAAW,MACzC,EAAE21C,IAAe,IACnBE,qBAAcL,EAAYpgB,OAAO,EACxB9e,IAAE,2BAA2B,CAAC,EACnCriB,GAAA,MAAAA,EAAA,CAAEqqC,UAAW,GAAOt+B,QAASA,GAAW,OAEpD01C,CAAQ,CAEb,GAAC31C,EAAQuW,EAAGo9B,CAAiB,CAC/B,EAEArN,mBAAU,IACD,IAAM,CACJwP,qBAAcL,EAAYpgB,OAAO,GAEzC,CAAE,GAEE,CAAEqgB,sBAAqB/yB,eAChC,sCC5CMozB,GAAoBA,IAAM,CACxB,MAAEx/B,KAAMqqB,EAAe,SAAS,EAChC3gC,EAAU4lC,GAAc,SAAS,GAAKzwC,OACtCgwC,EAAW4O,KACXF,EAAWC,KACXnR,EAAWD,KACX,CAAE+S,sBAAqB/yB,gBAAiB6yB,GAAe,EAE7DlP,mBAAU,IAAM,CACMoP,EAAA,CAClBC,SAAU,IACVC,WAAY,EACZ31C,UACA/L,SAAUA,CAAC,CAAEqqC,YAAWt+B,aAAc,CAC/Bs+B,IAEIhoB,IAAE,0BAA0B,EAAG,SAAS,EAG7CtW,EAAQrD,WAAW,GAAG,GAAKqD,EAAQrD,WAAW,GAAG,EAE1CyoC,IAAqBD,EAAU,IAAI,CAAC,EAEpCC,IAAqBD,EAAU,SAAS,CAAC,EAEtD,EACD,CAEH,EAAG,CAAE,GAEH5E,MAAC,MAAI,WAAWQ,GAAOgV,OACpBrzB,WACE6d,EAAA,UAAI7d,SAAaA,CAAA,GAGhBue,OAAAqU,WAAA,WAAA/U,EAAA,IAACa,GAAO,IACPb,EAAA,UAAIjqB,SAAEA,EAAA,8BAA8B,CAAE,GACzC,EAEJ,EAEJ,qECxCM0/B,GAAuCA,CAAC,CAAEr4C,OAAMiqC,oBAA0B,IAAM,CAC9E,MAAEtxB,GAAMqqB,EAAe,SAAS,EAChCgC,EAAWD,KASXtlC,EAAQkZ,EAAE,oBAAoB3Y,CAAI,EAAE,EACpCzK,EAAUojB,EAAE,oBAAoB3Y,CAAI,UAAU,EAEpD0oC,mBAAU,IAAM,CACd,MAAM4P,EAAiB,CAAE7iD,MAAO,QAAS4mC,QAAS,SAAUkc,QAAS,QAASv4C,CAAI,EAElFglC,EAASzvC,EAAS+iD,CAAc,CAC/B,GAACtT,EAAUzvC,EAASyK,CAAI,CAAC,SAGzB,MACC,WAAA4iC,EAAA,IAAC,KAAG,WAAWQ,GAAO3jC,MAAQA,SAAMA,EAAA,EACnCmjC,EAAA,SAAE,UAAWQ,GAAO7tC,QAAUA,SAAQA,EAAA,QACtC,MACC,UAAAqtC,EAAA,IAACuG,GAAO,MAAOxwB,EAAE,gBAAgB,EAAG,QAASsxB,EAAoB,MAAM,UAAU,QAAQ,YAAY,KAAK,QAAQ,UAAS,KAC7H,CACF,GAEJ,+TC7BMuO,GAA+BA,IAAM,CACnCzC,QAAoBphD,EAAU0uB,EAAiB,EAE/C,CAAE1K,KAAMqqB,EAAe,MAAM,EAC7B5e,EAAQ5J,EAA2B+O,qBAAMpZ,OAANoZ,cAAYnF,MAAK,EACpD,CAACW,EAAcuyB,CAAe,EAAIjS,EAAiB,WACnD6Q,EAAWC,KACX3O,EAAW4O,KAEXK,EAAenR,cAAY,IAAM,CAC5BmC,IAAqBD,EAAU,IAAI,EAAG,CAAE7vC,QAAS,GAAM,GAC/D,CAAC6vC,EAAU0O,CAAQ,CAAC,EACjBuC,EAAmC,SAAY,CAC/C,IACEr0B,IACI2xB,QAAkBtwB,cAAcrB,EAAO,EAAE,EACtCqjB,IAAqBD,EAAU,cAAc,CAAC,QAElC,CACP7uB,IAAE,4BAA4B,CAAC,CACjD,GAGF,OACG2qB,OAAA,OAAI,UAAWF,GAAOsV,cACpB3zB,UACCA,GAAA6d,EAAA,IAAC,MAAI,WAAWQ,GAAOsB,aACrB,eAACF,GAAa,SAAQ,QAASzf,UAAa,GAC9C,QAED,KAAG,WAAWqe,GAAOsT,QAAU/9B,WAAE,+CAA+C,EAAE,QAClF,IAAE,WAAWyqB,GAAO4T,UAAYr+B,WAAE,8CAA8C,EAAE,EAClF2qB,EAAA,YAAI,UAAWF,GAAOuV,yBACrB,UAAA/V,EAAA,IAACuG,EACC,MAAK,SACL,QAASsP,EACT,UAAWrV,GAAOwG,OAClB,MAAM,UACN,UAAS,GACT,MAAOjxB,EAAE,sCAAsC,EAAE,QAElDwwB,EAAO,MAAK,SAAS,QAASsN,EAAc,UAAWrT,GAAOwG,OAAQ,QAAQ,OAAO,UAAS,GAAC,MAAOjxB,EAAE,gBAAgB,EAAE,GAC7H,CACF,GAEJ,ECzDMigC,GAAiB7P,GAA0B8G,gBAAoB,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,GAAyB8G,gBAAoB,OAAQ,CAAE,KAAM,eAAgB,EAAG,iHAAiH,CAAE,CAAC,ECA1UgJ,GAAa9P,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,o5BAAo5B,CAAE,CAAC,qQCsBnlCiJ,GAAqCA,CAAC,CAC1Cz6B,kBACA3B,iBACAutB,qBACA8O,wBACAC,sBACA9H,aACA+H,eACF,IAAM,CACE,MAAEtgC,KAAMqqB,EAAe,SAAS,EAChCgC,EAAWD,KAGXmU,EAAoBx8B,iBAAgBxf,KAAiBvH,KAAO0nB,aAAe,QAC3E87B,EAAsBz8B,iBAAgBxf,KAAiBvH,KAAO0nB,aAAe,UAEnFqrB,mBAAU,IAAM,CACduQ,GAAiBjU,EAASrsB,EAAE,0BAA0B,EAAG,SAAS,CACjE,GAACsgC,EAAejU,EAAUrsB,CAAC,CAAC,EAI3B2qB,EAAA,KAAAqU,WAAA,WAAA/U,MAAC,MAAG,UAAWQ,GAAO3jC,MAAQkZ,WAAE,gCAAgC,EAAE,EACjEsgC,EAEG3V,EAAA,KAAAqU,WAAA,WAAA/U,MAAC,KAAE,UAAWQ,GAAO/G,QAAU1jB,WAAE,gCAAgC,EAAE,EACnEiqB,MAACuG,EAAO,OAAOxwB,EAAE,yBAAyB,EAAG,QAASsxB,EAAoB,MAAM,UAAU,UAAS,MACrG,EAGE3G,OAAAqU,EAAA,oBAACrU,EAAA,YAAI,UAAWF,GAAOgW,qBACpBF,YACE5V,EAAA,YAAI,UAAWF,GAAO7jB,cACrB,UAAAqjB,MAAC,SACC,UAAWQ,GAAOiW,MAClB,KAAK,QACL,KAAK,gBACL,MAAOH,EAAkB15C,GACzB,GAAG,OACH,QAAS6e,IAAoB66B,EAAkB15C,GAC/C,SAAUu5C,EAAsB,SAEjC,QAAM,WAAW3V,GAAOkW,mBAAoB,QAAQ,OACnD,UAAC1W,MAAAqN,EAAA,CAAK,KAAMsJ,EAAW,GACtB5gC,EAAE,qBAAqB,GAC1B,GACF,EACE,KACHwgC,EACC7V,EAAA,KAAC,MAAI,WAAWF,GAAO7jB,cACrB,UAAAqjB,MAAC,SACC,UAAWQ,GAAOiW,MAClB,KAAK,QACL,KAAK,gBACL,MAAOF,EAAoB35C,GAC3B,GAAG,SACH,QAAS6e,IAAoB86B,EAAoB35C,GACjD,SAAUu5C,EAAsB,SAEjC,QAAM,WAAW3V,GAAOkW,mBAAoB,QAAQ,SACnD,UAAC1W,MAAAqN,EAAA,CAAK,KAAMuJ,EAAO,GAAG,IAAE7gC,EAAE,gBAAgB,GAC5C,GACF,EACE,MACN,EACCiqB,EAAA,WAAKoW,SAAsBA,MAAwB,KAAK,EACxD9H,GAAetO,EAAA,IAAAoB,GAAA,CAAe,sBAAqB,GAAC,OAAM,GAAG,GAChE,CAEJ,GAEJ,sCCjFMwV,GAA0BA,CAAC,CAAE5I,WAAUn7C,OAAM,IAAM,CACjD,MAAEkjB,GAAMqqB,EAAe,SAAS,EAEtC,OACGM,OAAA,OAAI,UAAWF,GAAOqW,OACpBhkD,YAASmtC,MAAA4B,GAAA,CAAa,QAAQ,QAAS/uC,UAAM,GAAkB,KAC/DmtC,EAAA,SAAGjqB,SAAE,gCAA8B,CAAE,GACrCiqB,EAAA,IAAAuG,EAAA,CAAO,MAAOxwB,EAAE,mBAAmB,EAAG,QAAQ,YAAY,MAAM,UAAU,KAAK,QAAQ,QAASi4B,EAAU,UAAS,IACtH,GAEJ,yECJM8I,GAAyBA,CAAC,CAAEC,gBAAelkD,QAAOuK,MAAK,IAAM,CAC3D,MAAE2Y,KAAMqqB,EAAe,SAAS,EAChC4W,EAAqB7R,SAAO,IAAI,EAChC8R,EAAc9R,WAEpBW,mBAAU,IACJ,CAACkR,EAAmBniB,SAAW,CAACkiB,EAAcG,QAChD,SAGqB,SAAY,OAC3BC,QAAW,MAAMC,GAAcL,CAAa,EAE9CC,EAAmBniB,UACTA,UAAUsiB,EAASr3C,OAAO1C,CAAI,GAC9By3B,sBAASwiB,MAAML,EAAmBniB,SAChD,KAKK,IAAM,QACXoiB,IAAYpiB,UAAZoiB,QAAqBK,SAAQ,GAE9B,CAACP,EAAe35C,CAAI,CAAC,EAGrBsjC,OAAA,OAAI,UAAWF,GAAO+W,MACpB1kD,YAASmtC,MAAA4B,GAAA,CAAa,QAAQ,QAAS/uC,UAAM,GAAkB,WAC/D,MAAI,WAAW2tC,GAAO7uC,UAAW,IAAKqlD,EAAmB,EACzDhX,MAAAuG,EAAA,CACC,MAAOxwB,EAAE,mBAAmB,EAC5B,QAAQ,YACR,MAAM,UACN,KAAK,QACL,QAAS,IAAM,CACD8e,WAAWoiB,EAAYpiB,QAAQ2iB,OAAO,GAEpD,UAAS,IAEb,GAEJ,ECpCA,SAAwBC,GAAoB,CAAEC,gBAAet6C,OAAMu6C,kBAAiB9kD,QAAO4oB,iBAAuB,EAAG,CAC7G03B,QAAoBphD,EAAU0uB,EAAiB,EAC/C8zB,EAAqBxiD,EAAU2oB,EAAkB,EAEjDk9B,EAAYzE,EAAkBltB,aAC9B,CAAElQ,KAAMqqB,EAAe,SAAS,EAChCgC,EAAWD,KACXmR,EAAWC,KACX3O,EAAW4O,KACX,CAAC0D,EAASW,CAAU,EAAIpV,EAA8B,WAEtD+R,EAAiBnP,GAAc,gBAAgB,EAC/CyS,EAAW,CAAC,CAACtD,EACbG,EAAoB9P,EAAqBD,EAAU,wBAAwB,EAE3EmT,EAAyB9S,GAAiB,MAAOuP,GAA2B,CAC5E,IACFkD,EAAc,EAAI,EAElB,MAAMnD,EAAmBj2B,4BAA4B,CAAEk2B,eAAgBM,UAAUN,CAAc,GAAK/4B,CAAe,EACnH,MAAM03B,EAAkB1vB,oBAAoB,CAAEC,MAAO,GAAI,EAEzDg0B,EAAc,EAAK,EAEV3hC,IAAE,0BAA0B,EAAG,SAAS,EACjDu9B,EAASqB,CAAiB,QACnB9hD,EAAgB,CACvB6kD,EAAc,EAAK,EAEf7kD,aAAiBT,QACnBulD,EAAgB9kD,EAAMF,OAAO,EACpBkyC,IAAqBD,EAAU,gBAAgB,EAAG,CAAE7vC,QAAS,GAAM,EAEhF,EACD,EAED+wC,YAAU,IAAM,CACT0O,GAELuD,EAAuBvD,CAAc,GACpC,CAACuD,EAAwBvD,CAAc,CAAC,EAE3C1O,YAAU,IAAM,CACd,GAAIgS,EAAU,QAEQ,SAAY,CAChCJ,EAAc,EAAI,EAEd,IACF,MAAMR,EAAU,MAAM3C,EAAmB/3B,0BAA0ByiB,OAAOtF,OAAQ,EAAK,EAEvFke,EAAWX,CAAO,QACXrkD,EAAgB,CACnBA,aAAiBT,OACnBulD,EAAgB9kD,EAAMF,OAAO,CAEjC,CAEA+kD,EAAc,EAAK,KAGP,EACb,CAACA,EAAeC,EAAiBG,EAAUxE,EAAU1O,EAAU2P,CAAkB,CAAC,EAErF,MAAMvG,EAAWtL,cACf,MAAO/b,EAAuBqxB,IAAgD,CACxE,GAACrxB,EAAMzjB,QAEP,KACFw0C,EAAc,EAAI,EAClBC,EAAgB/iD,MAAS,EAEnB2nB,QAAYwoB,GAA2B,iBAAkB,CAAEtpB,gBAAiB,GAAGA,CAAe,GAAI,EAClG/T,EAAS,MAAM6sC,EAAmBl2B,uBAAuBsI,EAAMvoB,KAAKue,cAAelB,EAAiBc,CAAS,EAE/G,WAAY7U,GACdswC,EAAatwC,EAAO+kB,MAAM,EAG5B,MAAM0mB,EAAkB1vB,oBAAoB,CAAEC,MAAO,EAAG,EAExD4vB,EAASqB,EAAmB,CAAE5/C,QAAS,GAAM,QACtClC,EAAgB,CACnBA,aAAiBT,OACnBulD,EAAgB9kD,EAAMF,OAAO,CAEjC,CAEA+kD,EAAc,EAAK,IAErB,CAACpE,EAAU73B,EAAiBk5B,EAAmBgD,EAAiBD,EAAevE,EAAmBoB,CAAkB,CACtH,EAEM0D,EAAkCrD,UACtC,KAAO,CACLsC,UACAgB,cAAe,GACfC,YAAaP,EAAY,OAAS,OAClCQ,UAAWR,EAAY5oD,GAAwBC,GAC/CopD,4BAA6B,CAC3Bjd,KAAM,CACJkd,cAAe,GACfC,mBAAoB,EACtB,CACF,EACAC,oBAAqB,MAAO7xB,GAAoC,CAC1D,IACF+wB,EAAc,EAAI,EAElB,MAAMnD,EAAmB13B,qBAAqB8J,EAAMvoB,KAAK0e,QAASrB,CAAe,EAEjF63B,EAASqB,EAAmB,CAAE5/C,QAAS,GAAM,QACtClC,EAAgB,CACnBA,aAAiBT,QACnBulD,EAAgB9kD,EAAMF,OAAO,EAC7B+kD,EAAc,EAAK,EAEvB,CACF,EACA1J,SAAUA,CAACrnB,EAAuB8xB,IAA6BzK,EAASrnB,EAAO8xB,EAAUT,YAAY,EACrGpE,QAAU/gD,GAAiB8kD,EAAgB9kD,EAAMF,OAAO,CAC1D,GACA,CAACukD,EAASU,EAAWF,EAAej8B,EAAiB63B,EAAUqB,EAAmBgD,EAAiB3J,EAAUuG,CAAkB,CACjI,EAEA,OAAQvU,MAAA8W,GAAA,CAAM,cAAemB,EAAoB,KAAA76C,EAAY,MAAAvK,CAAgB,EAC/E,CCtIA,MAAM6lD,GAAsBA,CAAC,CAAErR,oBAA0B,IAAM,CACvDkN,QAAqBxiD,EAAU2oB,EAAkB,EAEjD27B,EAAgBhR,GAAc,GAAG,IAAM,yBACvCsT,EAA4BtT,GAAc,iBAAiB,EAC3DuT,EAAwBD,EAA4BzjD,SAASyjD,CAAyB,EAAI/jD,OAE1FqjB,EAAgBL,EAA2B+O,KAAM1O,aAAa,EAC9DgG,EAAmBhG,iBAAerb,GAClC,CAACi8C,EAAclB,CAAe,EAAIlV,WAA6B7tC,MAAS,EACxE,CAAC6mB,EAAiBq9B,CAAkB,EAAIrW,WAA6BmW,CAAqB,EAE1F9+B,EAAiBP,GAA4BoN,KAAM7M,cAAc,EAEjE,CAACi/B,EAAYrB,CAAa,EAAIjV,WAAkB,EAAK,EAE3DqD,YAAU,IAAM,CACdyO,EAAmB/4B,kBAAkB,GACpC,CAAC+4B,CAAkB,CAAC,EAEjByE,QAA6B9rD,GAA+C,CAChF,MAAM+rD,EAAoB/jD,SAAShI,EAAMwe,OAAOrV,KAAK,EAErDyiD,EAAmBG,CAAiB,EACpCtB,EAAgB/iD,MAAS,GAGrBskD,EAAqB,SAAY,CACrCxB,EAAc,EAAI,EAEd,IACFC,EAAgB/iD,MAAS,EAEnBqoB,QAAa8nB,GAA2B,wBAAwB,EAChE7nB,EAAa6nB,GAA2B,qBAAqB,EAC7D5nB,EAAY4nB,GAA2B,mBAAmB,EAC1D3nB,EAAW2nB,GAA2B,eAAe,EAErD5mC,EAAW,MAAMo2C,EAAmBv2B,0BACxCf,EACAC,EACAC,EACAC,EACA3B,EACAwC,CACF,EAEI9f,IACKymC,gBAASI,KAAO7mC,EAASmf,mBAE3BzqB,EAAgB,CACnBA,aAAiBT,OACnBulD,EAAgB9kD,EAAMF,OAAO,CAEjC,CACA+kD,EAAc,EAAK,GAGftB,EAAsBA,IAAM,CAChC,MAAMz5B,EAAgB7C,iBAAgBxf,KAAiBvH,KAAO6J,KAAO6e,GAEjEkB,wBAAelC,cAAe,OAE9BulB,EAAA,IAACyX,GACC,iBAAiB96B,EAAc/f,GAC/B,gBAAA+6C,EACA,cAAAD,EACA,MAAOmB,EACP,KAAK,MACL,IAEKl8B,iBAAelC,cAAe,eAC/Bm8B,GAAO,UAAUsC,EAAoB,MAAOL,GAAgB,IAAQ,GAGvE,MAIT,OAAK/+B,EASHkmB,EAAA,IAACkW,GACC,oBAAA7O,EACA,eAAAvtB,EACA,gBAAA2B,EACA,sBAAuBu9B,EACvB,oBAAA5C,EACA,cAAAC,EACA,WAAY0C,CACZ,GAfA/Y,EAAA,IAAC,OAAI,MAAO,CAAEmJ,OAAQ,KACpB,SAAAnJ,MAACoB,GAAe,QAAM,IACxB,EAeN,+ECrGM+X,GAAuCA,CAAC,CAAE/C,sBAAqB9H,aAAY8K,UAAS,IAAM,CACxF,MAAErjC,GAAMqqB,IAAe,CAAC,SAAU,MAAM,CAAC,EAC/C,cACG,MACC,WAACJ,MAAA,OAAI,UAAWQ,GAAO3jC,MACrB,eAAC,KAAIkZ,YAAE,+BAA+B,EAAE,CAC1C,GACCiqB,EAAA,WAAKoW,SAAsBA,MAAwB,KAAK,EACxDpW,MAAAuG,EAAA,CAAO,QAAS6S,EAAU,UAAW5Y,GAAO6Y,aAAc,UAAS,GAAC,MAAOtjC,EAAE,kCAAkC,CAAE,GACjHu4B,GAAetO,EAAA,IAAAoB,GAAA,CAAe,sBAAqB,GAAC,OAAM,GAAG,CAChE,GAEJ,ECdMkY,GAAsCA,CAAC,CAAEjjD,QAAOkjD,WAAU1mD,QAAO,GAAGszC,CAAa,IAAM,CACrF,MAAEpwB,KAAMqqB,EAAe,MAAM,EAC7BoZ,EAA+DvsD,GAAA,CACnE,MAAMwsD,EAAaxsD,EAAEye,OAAOrV,MAAMtB,QAAQ,OAAQ,EAAE,EAChDwkD,IACFtsD,EAAEye,OAAOrV,MAAQojD,EAAWnkD,MAAM,EAAG,CAAC,EACtCikD,EAAStsD,CAAC,EACZ,EAEF,aACG+kD,GACC,OAAOj8B,EAAE,uBAAuB,EAChC,aAAYA,EAAE,uBAAuB,KACjCowB,EACJ,MAAO,CAAC,CAACtzC,EACT,WAAYA,GAAgB,KAC5B,KAAK,UACL,UAAU,yBACV,KAAK,OACL,MAAAwD,EACA,SAAUmjD,EACV,QAAQ,OACR,YAAY,MACZ,aAAa,SACb,SAAQ,EACR,EAEN,EC3BME,GAAyCA,CAAC,CAAErjD,QAAOkjD,WAAU1mD,QAAO,GAAGszC,CAAa,IAAM,CACxF,MAAEpwB,KAAMqqB,EAAe,SAAS,EAChCuZ,EAA0E1sD,GAAA,CAC9E,IAAIwsD,EAAaxsD,EAAEye,OAAOrV,MAAMtB,QAAQ,OAAQ,EAAE,EAE9C0kD,EAAWlkD,SAAW,EACpBuwB,OAAO2zB,CAAU,EAAI,IACvBA,EAAa,IAAMA,GAEZA,EAAWlkD,SAAW,GAC3BuwB,OAAO2zB,CAAU,EAAI,KACVA,EAAA,MAIbA,EAAWlkD,QAAU,EACvBtI,EAAEye,OAAOrV,MAAQ,GAAGojD,EAAWnkD,MAAM,EAAG,CAAC,CAAC,IAAImkD,EAAWnkD,MAAM,EAAG,CAAC,CAAC,GAEpErI,EAAEye,OAAOrV,MAAQojD,EAEfF,GACFA,EAAStsD,CAAC,CACZ,EAEF,OACG+yC,MAAAgS,GAAA,CACC,MAAOj8B,EAAE,iCAAiC,EAC1C,GAAIowB,EACJ,KAAK,aACL,UAAU,uBACV,MAAA9vC,EACA,MAAO,CAAC,CAACxD,EACT,WAAYA,GAAgB,KAC5B,SAAU8mD,EACV,KAAK,OACL,QAAQ,OACR,YAAY,QACZ,aAAa,SACb,SAAQ,EACR,EAEN,wDCtCMC,GAAyC,CAC7CC,KAAM,4BACNC,WAAY,kCACZC,QAAS,+BACTC,KAAM,4BACNC,SAAU,gCACVC,OAAQ,8BACRC,WAAY,8BACZC,SAAU,gCACVC,MAAO,4BACT,EAEMC,GAAyCA,CAAC,CAAEjkD,QAAOxD,QAAO0mD,WAAUgB,SAAQ,GAAGpU,CAAa,IAAM,CAChG,MAAEpwB,KAAMqqB,EAAe,SAAS,EAChC,CAACoa,EAAYC,CAAa,EAAIhY,WAA6B,IAAI,EAE/DiY,EAA4EztD,GAAA,SAChF,MAAM0tD,EAASC,GAAQC,IAAIC,UAAS7tD,IAAEye,SAAFze,cAAUoJ,KAAK,EAC7CojD,GAAaxsD,IAAEye,SAAFze,cAAUoJ,MAAMtB,QAAQ,OAAQ,IAE/CgmD,MASJ,OAPEnB,eAAce,GACZ3a,MAAC,OAAI,UAAWQ,GAAOwa,gBACrB,SAAChb,MAAA,OAAI,IAAK4Z,GAAYe,CAAM,EAAG,IAAKA,EAAQ,OAAO,IAAI,GACzD,EACE,IACN,EAEQA,EAAM,CACZ,IAAK,OACHI,EAAY,GAAGtB,EAAWnkD,MAAM,EAAG,CAAC,CAAC,IAAImkD,EAAWnkD,MAAM,EAAG,EAAE,CAAC,IAAImkD,EAAWnkD,MAAM,GAAI,EAAE,CAAC,GAC5F,MACF,IAAK,aACHylD,EAAY,GAAGtB,EAAWnkD,MAAM,EAAG,CAAC,CAAC,IAAImkD,EAAWnkD,MAAM,EAAG,EAAE,CAAC,IAAImkD,EAAWnkD,MAAM,GAAI,EAAE,CAAC,GAC5F,MACF,QACcylD,EAAA,GAAGtB,EAAWnkD,MAAM,EAAG,CAAC,CAAC,IAAImkD,EAAWnkD,MAAM,EAAG,CAAC,CAAC,IAAImkD,EAAWnkD,MAAM,EAAG,EAAE,CAAC,IAAImkD,EAAWnkD,MAAM,GAAI,EAAE,CAAC,GACtH,KACJ,CAEIikD,IACA7tC,SAAOrV,MAAQ0kD,EAAU3mB,KAAK,EAChCmlB,EAAStsD,CAAC,EACZ,EAGF,OACG+yC,MAAAgS,GAAA,CACC,MAAA37C,EACA,KAAK,aACL,MAAO0f,EAAE,4BAA4B,EACrC,UAAU,6BACV,SAAU2kC,EACV,OAAAH,EACA,MAAO,CAAC,CAAC1nD,EACT,WAAYA,GAAgB,KAC5B,QAAQ,UACJszC,EACJ,KAAK,OACL,YAAY,sBACZ,aAAcqU,EACd,aAAa,YACb,SAAQ,EACR,EAEN,iFC/CMS,GAAuCA,CAAC,CAAE7B,WAAU8B,wBAAuB,IAAM,qBAC/E/H,QAAoBphD,EAAU0uB,EAAiB,EAC/C2hB,EAAWD,KAEX,CAAEpsB,KAAMqqB,EAAe,SAAS,EAChC,CAAE+T,OAAQgH,EAAmBjH,aAAcR,GAAYP,EAAkBxvB,iBAAiB,EAC1F,CAAE1L,eAAc,EAAIL,EAAgB,CAAC,CAAEK,oBAAqB,CAAEA,kBAAkBmjC,EAAO,EAEvFr+B,EAAc6wB,GAAiC,CACnDC,cAAe,CAAErT,eAAgB,GAAI3W,WAAY,GAAIw3B,WAAY,GAAIvgB,QAAS,GAAIJ,aAAc,GAAIE,YAAa,EAAG,EACpHkT,iBAAkB3iC,GAAO,EAAEC,MAAM,CAC/BovB,eAAgBnvB,EAAO,EAAEpZ,SAAS,EAClC4xB,WAAYxY,IACTpZ,WACAuI,KAAK,yBAA0Bub,EAAE,8BAA8B,EAAc1f,GACrEukD,GAAQC,IAAIS,mBAAmBjlD,CAAgB,CACvD,EACHglD,WAAYhwC,IACTpZ,WACAuI,KAAK,yBAA0Bub,EAAE,8BAA8B,EAAc1f,GACrEukD,GAAQC,IAAIU,mBAAmBllD,CAAgB,CACvD,EACHykC,QAASzvB,IACNpZ,WACAuI,KAAK,iBAAkBub,EAAE,6BAA6B,EAAc1f,GAAA,OACnE,MAAMskD,EAASC,GAAQC,IAAIC,UAAS/9B,mBAAa5C,SAAb4C,cAAqB8G,UAAU,EAEnE,OAAO+2B,GAAQC,IAAIW,gBAAgBnlD,EAAiBskD,CAAM,EAC3D,EACHjgB,aAAcrvB,EAAO,EAAEpZ,SAAS,EAChC2oC,YAAavvB,EAAO,EAAEpZ,SAAS,EAChC,EACD87C,eAAgB,GAChBC,SAAU,SAAY,CACpBkN,EAAuB,EAAI,EAEzBC,EAAA,CACEv3B,SAAU7G,EAAY5C,OAAOqgB,eAC7B3W,WAAY9G,EAAY5C,OAAO0J,WAAW9uB,QAAQ,OAAQ,EAAE,EAC5D+uB,IAAK5uB,SAAS6nB,EAAY5C,OAAO2gB,OAAO,EACxC/W,SAAU7uB,SAAS6nB,EAAY5C,OAAOugB,YAAY,EAClD1W,QAAS9uB,SAAS6nB,EAAY5C,OAAOygB,WAAW,EAChD3W,UAAUhM,iBAAegM,WAAY,IAEvC,CACEw3B,UAAWA,IAAMrC,EAAS,EAC1BzF,UAAWA,IAAM,CACN59B,IAAE,+BAA+B,EAAG,SAAS,CACxD,EAEJ,CACF,EACD,EAED+vB,mBAAU,IAAM,CACV/oB,KAAY5C,OAAOkhC,WAAY,CACjC,MAAMK,EAASd,GAAQC,IAAIc,cAAc5+B,EAAY5C,OAAOkhC,UAAU,EAClEK,EAAOxkB,OACTna,EAAYiyB,SAAS,eAAgB0M,EAAOxkB,MAAMx7B,UAAU,EAE1DggD,EAAOvkB,MACTpa,EAAYiyB,SAAS,cAAe0M,EAAOvkB,KAAKz7B,UAAU,CAE9D,CAEC,GAACqhB,EAAY5C,OAAOkhC,UAAU,CAAC,EAG/B3a,OAAA,OAAI,UAAWF,GAAOob,YACrB,UAAC5b,EAAA,WACC,SAACA,MAAAgS,GAAA,CACC,MAAOj8B,EAAE,2BAA2B,EACpC,KAAK,iBACL,OAAOgH,mBAAa5C,SAAb4C,cAAqByd,eAC5B,SAAUzd,iBAAakyB,aACvB,OAAQlyB,iBAAasyB,WACrB,YAAat5B,EAAE,2BAA2B,EAC1C,aAAa,UACb,SAAQ,IAEZ,GACAiqB,MAAC,OACC,SAACA,MAAAsa,GAAA,CACC,OAAOv9B,sBAAa5C,SAAb4C,cAAqB8G,aAArB9G,cAAiCrhB,WACxC,OAAOqhB,mBAAa/U,SAAb+U,cAAqB8G,WAC5B,OAAQ9G,iBAAasyB,WACrB,SAAUtyB,iBAAakyB,aAAa,CAExC,GACCvO,EAAA,YAAI,UAAWF,GAAOqb,QACrB,UAAA7b,MAAC,OACC,SAACA,EAAA,IAAA0Z,GAAA,CACC,OAAO38B,mBAAa5C,SAAb4C,cAAqBs+B,WAC5B,OAAQt+B,iBAAasyB,WACrB,SAAUtyB,iBAAakyB,aACvB,OAAOlyB,mBAAa/U,SAAb+U,cAAqBs+B,UAAW,GAE3C,QACC,MACC,UAAArb,EAAA,IAACsZ,IACC,OAAOv8B,mBAAa5C,SAAb4C,cAAqB+d,QAC5B,OAAQ/d,iBAAasyB,WACrB,SAAUtyB,iBAAakyB,aACvB,OAAOlyB,mBAAa/U,SAAb+U,cAAqB+d,OAAQ,GAExC,GACF,EACAkF,MAAC,OACC,SAACA,EAAA,IAAAuG,EAAA,CACC,SAAU2N,EACV,MAAOn+B,EAAE,eAAe,EACxB,QAAQ,YACR,QAASgH,EAAY2yB,aACrB,KAAK,SACL,MAAM,UACN,KAAK,QACL,UAAS,IAEb,EACF,GAEJ,ECpJMoM,GAAkBA,IAAM,CAC5B,MAAMlX,EAAW4O,KACXF,EAAWC,KACX,CAACwI,EAAqBb,CAAsB,EAAIzY,WAAS,EAAK,EAE9D0J,EAAeA,IAAM,CAChBtH,IAAqBD,EAAU,IAAI,EAAG,CAAE7vC,QAAS,GAAO,GAG7DqhD,EAAsBA,IAClBpW,MAAAib,GAAA,CAAoB,SAAU9O,EAAc,uBAAA+O,CAAkD,GAGxG,aAAQ/B,GAAoB,UAAUhN,EAAc,oBAAAiK,EAA0C,WAAY2F,CAAuB,EACnI,+OCSMC,GAAoCA,CAAC,CACzChO,WACAuL,WACAgB,SACA0B,uBACAC,sBACA7lD,QACA2R,SACAsmC,aACA6N,kBACA36B,QACA46B,oBACK,IAAM,CACL,MAAErmC,GAAMqqB,IAAe,CAAC,UAAW,MAAM,CAAC,EAE9C,OAAAM,EAAA,KAAC,QAAK,SAAAsN,EAAoB,cAAaL,OAAgC,WAAU,GAC9E3lC,UAAO8H,cACL8xB,GAAa,SAAQ,QAAQ,QAAS,CAACua,EACrCn0C,WAAO8H,IACV,GAEDkwB,MAAA,MAAG,UAAWQ,GAAO3jC,MAAQo/C,SAA8ClmC,EAA9CkmC,GAAwBC,EAAwB,4BAAiC,sBAAN,CAA8B,GACtID,GAAwBC,GACvBxb,OAAC,IAAE,WAAWF,GAAO4T,UAClBr+B,YAAE,uCAAwC,CAAEyL,QAAc,EAC3Dwe,MAAC,KAAE,UAAWQ,GAAO6b,WAAY,QAASD,EACvCrmC,SAAEA,EAAA,0BAA0B,CAC/B,IACF,EAEDkmC,GAAwB,CAACC,GACxBlc,MAAC0S,IACC,MAAOr8C,EAAM4sB,YACb,SAAAs2B,EACA,OAAAgB,EACA,MAAOxkC,EAAE,oBAAoB,EAC7B,YAAaA,EAAE,oBAAoB,EACnC,MAAO,CAAC,CAAC/N,EAAOib,YAChB,KAAK,cACL,eAAgB,GAChB,eAAgB,GAChB,aAAa,mBACb,SAAQ,GAEX,EACAi5B,GACElc,MAAAgS,GAAA,CACC,UAAWxR,GAAOyR,UAClB,MAAO57C,EAAMgtB,oBAAsB,GACnC,SAAAk2B,EACA,OAAAgB,EACA,MAAOxkC,EAAE,4BAA4B,EACrC,YAAaA,EAAE,4BAA4B,EAC3C,KAAK,qBACL,KAAK,OACL,aAAa,GACb,SAAQ,EAEX,GAEDiqB,MAAC0S,GACC,OAAOr8C,EAAMyrB,SACb,SAAAy3B,EACA,OAAAgB,EACA,MAAOxkC,EAAE,oBAAoB,EAC7B,YAAaA,EAAE,gBAAgB,EAC/B,MAAO,CAAC,CAAC/N,EAAO8Z,SAChB,KAAK,WACL,aAAa,eACb,SAAQ,KAGVke,MAAC0S,GACC,OAAOr8C,EAAMimD,qBACb,SAAA/C,EACA,OAAAgB,EACA,MAAOxkC,EAAE,2BAA2B,EACpC,YAAaA,EAAE,2BAA2B,EAC1C,MAAO,CAAC,CAAC/N,EAAOs0C,qBAChB,KAAK,uBACL,aAAa,eACb,eAAgB,GAChB,SAAQ,WAGT/V,EAAO,MAAK,SAAS,UAAW/F,GAAOwG,OAAQ,UAAS,GAAC,MAAM,UAAU,SAAUsH,EAAY,MAAOv4B,EAAE,eAAe,EAAE,EACzHu4B,GAAetO,EAAA,IAAAoB,GAAA,CAAe,sBAAqB,GAAC,OAAM,GAAG,CAChE,GAEJ,ECxGMmb,GAAgBA,CAAC,CAAEn/C,MAAuB,IAAM,CAC9C+1C,QAAoBphD,EAAU0uB,EAAiB,EAE/C,CAAE1K,GAAMqqB,EAAe,SAAS,EAChCgC,EAAWD,KACXyC,EAAW4O,KACXF,EAAWC,KACXiJ,EAA0BnX,GAAc,oBAAoB,EAC5DoX,EAAapX,GAAc,OAAO,EAClC7jB,EAAQ5J,EAA2B+O,qBAAMpZ,OAANoZ,cAAYnF,MAAK,EACpDjU,EAAOqK,EAAgBrT,WAAWgJ,KAElCmvC,EAAsE,MAAOxrC,EAAU,CAAEs9B,YAAWD,mBAAoB,CACtH,MAAEtrB,cAAanB,WAAUw6B,uBAAsBj5B,oBAAuBnS,IAC5E,GAAI4Q,IAAaw6B,EACL,OAAA9N,EAAA,CAAE1+B,KAAMiG,EAAE,8BAA8B,EAAG,EAE9Cw4B,EAAc,EAAK,EAE5B,IAAIoO,EAAaH,EACbn5B,IACWA,KAEX,IACE9V,MAAQ,CAACovC,EACX,MAAMxJ,EAAkBnwB,8BAA8BC,GAAe,GAAInB,EAAUw6B,CAAoB,MAClG,CACL,GAAI,CAACK,EACO,OAAAnO,EAAA,CAAE1+B,KAAMiG,EAAE,oBAAoB,EAAG,EAEpCw4B,EAAc,EAAK,EAE5B,MAAM4E,EAAkB/vB,wBAAwBq5B,GAAc,GAAI36B,EAAU66B,EAAYL,CAAoB,CAC9G,CAESvmC,IAAE,8BAA8B,EAAG,SAAS,EACrD,MAAMo9B,EAAkBlyB,SACf4jB,IAAqBD,EAAU,OAAO,CAAC,QACzC/xC,EAAgB,CACnBA,aAAiBT,QACfS,EAAMF,QAAQC,SAAS,wBAAwB,EACvC47C,EAAA,CAAE1sB,SAAU/L,EAAE,wBAAwB,EAAG,EAC1CljB,EAAMF,QAAQC,SAAS,iCAAiC,EACvD47C,EAAA,CAAE1+B,KAAMiG,EAAE,0BAA0B,EAAG,EACxCljB,EAAMF,QAAQC,SAAS,gCAAgC,EACtD47C,EAAA,CAAE1+B,KAAMiG,EAAE,yBAAyB,EAAG,EACvCljB,EAAMF,QAAQC,SAAS,6BAA6B,EACnD47C,EAAA,CAAE1+B,KAAMiG,EAAE,mCAAmC,EAAG,EACjDljB,EAAMF,QAAQC,SAAS,2BAA2B,GACjD47C,EAAA,CAAE1+B,KAAMiG,EAAE,qBAAqB,EAAG,EAGlD,CACAw4B,EAAc,EAAK,GAGfqO,EAAehP,GAA8B,CACjDC,cAAe,CAAE/rB,SAAU,GAAIw6B,qBAAsB,EAAG,EACxDxO,iBAAkB3iC,GAAO,EAAEC,MAAM,CAC/BoW,MAAOnW,EAAO,EACd4X,YAAa5X,EAAO,EACpByW,SAAUzW,EAAO,EACdwxC,QAAQ,gCAAiC9mC,EAAE,+BAA+B,CAAC,EAC3E9jB,SAAS8jB,EAAE,uBAAwB,CAAEmd,MAAOnd,EAAE,gBAAgB,EAAG,CAAC,EACrEumC,qBAAsBjxC,EAAO,EAAEpZ,SAAS,EACxCoxB,mBAAoBhY,EAAO,EAC5B,EACD0iC,eAAgB,GAChBC,SAAU0O,EACX,EAEKI,EAA0B,SAAY,CACtC,IACEt7B,GACI2xB,QAAkBtwB,cAAcrB,EAAO,EAAE,OAE1B,CACvBo7B,EAAapO,UAAU,CAAE1+B,KAAMiG,EAAE,gCAAgC,EAAG,CACtE,GAGF,aACGimC,GACC,OAAOY,EAAaziC,OACpB,WAAYyiC,EAAatO,WACzB,SAAUsO,EAAa3N,aACvB,OAAQ2N,EAAavN,WACrB,OAAQuN,EAAa50C,OACrB,SAAU40C,EAAalN,aACvB,gBAAiBkN,EAAanO,sBAC9B,qBAAsB,CAAC,EAAElhC,GAAQ,CAACivC,GAClC,oBAAqBp/C,IAAS,OAAU,CAACmQ,GAAQ,CAACivC,EAClD,MAAOC,GAAcj7B,EACrB,mBAAoBs7B,CACpB,EAEN,iJC3FMC,GAAyCA,CAAC,CAAEjlC,eAAcW,WAAU5lB,QAAOy7C,aAAY0O,YAAWlS,SAAe,IAAM,CACrH,MAAE/0B,IAAGoB,QAASipB,EAAe,SAAS,EAE5C,cACG,MACEvtC,aAASmtC,MAAA4B,GAAA,CAAa,QAAQ,QAAS/uC,UAAM,GAAkB,WAC/D,KAAG,WAAW2tC,GAAO3jC,MAAQkZ,WAAE,4CAA4C,EAAE,QAC7E,IAAE,WAAWyqB,GAAO4T,UAAYr+B,WAAE,gCAAgC,EAAE,EACpE2qB,EAAA,YAAI,UAAWF,GAAOyc,QACrB,UAAAvc,OAAC,IACC,WAACV,MAAA,UAAQloB,WAAa0gB,UAAW,GAAS,UAAE,KAAE,IAC7CziB,EAAE,0CAA2C,CAAE9S,KAAM8zB,GAAoB,IAAItiC,KAAKqjB,EAAaqgB,UAAY,GAAI,EAAGhhB,EAAK9T,QAAQ,EAAG,GACrI,EACCq9B,EAAA,UAAE,UAAWF,GAAOlK,MACnB,UAAC0J,MAAA,UAAQ3J,YAAYve,EAAa4lB,iBAAkB5lB,EAAa8lB,oBAAqBnlB,EAASkD,OAAO,CAAE,UACvG,QAAM,eAAE5F,EAAE,WAAW+B,EAAayC,MAAM,EAAE,GAAE,GAC/C,GACF,EACAylB,MAACuG,GACC,UAAW/F,GAAO0c,cAClB,MAAM,UACN,QAAQ,YACR,MAAOnnC,EAAE,uCAAuC,EAChD,QAASinC,EACT,UAAS,GACT,SAAU1O,EACV,KAAK,SAAQ,EAEftO,MAACuG,GAAO,MAAOxwB,EAAE,8BAA8B,EAAG,QAAS+0B,EAAS,UAAS,IAC/E,GAEJ,oCCnCMqS,GAAuCA,CAAC,CAAErS,UAASryB,WAAUX,cAAoB,IAAM,CACrF,MAAE/B,IAAGoB,QAASipB,EAAe,SAAS,EACtCn9B,EAAO8zB,GAAoB,IAAItiC,KAAKqjB,EAAaqgB,UAAY,GAAI,EAAGhhB,EAAK9T,QAAQ,EACjFizB,EAAQD,GAAYve,EAAa4lB,iBAAkB5lB,EAAa8lB,oBAAqBnlB,EAASkD,OAAO,EAE3G,cACG,MACC,WAAAqkB,MAAC,MAAG,UAAWQ,GAAO3jC,MAAQkZ,WAAE,4BAA4B,EAAE,QAC7D,IAAE,WAAWyqB,GAAO4T,UAAYr+B,WAAE,+BAAgC,CAAE9S,OAAMqzB,OAAO,GAAE,EACpF0J,MAACuG,GAAO,MAAOxwB,EAAE,sCAAsC,EAAG,QAAS+0B,EAAS,UAAS,IACvF,GAEJ,ECdMsS,GAAoBA,IAAM,CACxBjK,QAAoBphD,EAAU0uB,EAAiB,EAE/C6yB,EAAWC,KACX3O,EAAW4O,KACX,CAAEz9B,KAAMqqB,EAAe,SAAS,EAChCgC,EAAWD,KACX,CAAErqB,eAAcvK,MAAK,EAAIqK,EAAgB,CAAC,CAAEE,eAAcvK,WAAY,CAAEuK,eAAcvK,SAAS6tC,EAAO,EACtG,CAACiC,EAASC,CAAU,EAAI7a,WAAS,EAAK,EACtC,CAAC6L,EAAYC,CAAa,EAAI9L,WAAS,EAAK,EAC5C,CAAC5vC,EAAO0qD,CAAQ,EAAI9a,WAAwB,IAAI,EAEhD+a,EAAkC,SAAY,CAClDjP,EAAc,EAAI,EAClBgP,EAAS,IAAI,EAET,IACIpK,QAAkB5vB,mBAAmB,QAAQ,EAC1CxN,IAAE,4BAA4B,EAAG,SAAS,EACnDunC,EAAW,EAAI,OACQ,CACdvnC,IAAE,2CAA2C,CAAC,CACzD,CAEAw4B,EAAc,EAAK,GAGfpC,EAAeA,IAAM,CAChBtH,IAAqBD,EAAU,IAAI,EAAG,CAAE7vC,QAAS,GAAM,GAGlE,MAAI,CAAC+iB,GAAgB,CAACvK,EAAa,KAGjCmzB,OAACqS,GAAM,SAAN,CACEsK,kBACEF,GAAoB,SAAShR,EAAc,aAAAr0B,EAA4B,SAAUvK,CAAK,GAEvFyyB,EAAA,IAAC+c,GACC,cAAAjlC,EACA,SAAUvK,EACV,MAAA1a,EACA,UAAW2qD,EACX,QAASrR,EACT,WAAAmC,EAEH,EACAA,EAAatO,EAAA,IAACoB,GAAe,QAAM,EAAG,GAAG,IAC5C,GAEJ,iFCjDMqc,GAA0CA,CAAC,CAAET,YAAW5D,WAAUvmD,QAAOy7C,YAAkB,IAAM,CAC/F,MAAEv4B,KAAMqqB,EAAe,SAAS,EAEtC,cACG,MACEvtC,aAASmtC,MAAA4B,GAAA,CAAa,QAAQ,QAAS/uC,UAAM,GAAkB,WAC/D,KAAG,WAAW2tC,GAAO3jC,MAAQkZ,WAAE,2BAA2B,EAAE,QAC5D,IAAE,WAAWyqB,GAAO4T,UAAYr+B,WAAE,iCAAiC,EAAE,EACtEiqB,MAACuG,GACC,UAAW/F,GAAO0c,cAClB,MAAOnnC,EAAE,iCAAiC,EAC1C,MAAM,UACN,QAAQ,YACR,QAASinC,EACT,UAAS,GACT,SAAU1O,EACV,KAAK,SAAQ,EAEftO,MAACuG,EAAO,OAAOxwB,EAAE,+BAA+B,EAAG,QAAQ,WAAW,QAASqjC,EAAU,UAAS,IACpG,GAEJ,oCCxBMsE,GAAyCA,CAAC,CAAEC,cAAa7S,SAAe,IAAM,CAC5E,MAAE/0B,GAAMqqB,EAAe,SAAS,EAEtC,OACGM,OAAA,OAAI,UAAWF,GAAOkd,sBACrB,UAAA1d,MAAC,MAAG,UAAWQ,GAAO3jC,MAAQkZ,WAAE,8BAA8B,EAAE,QAC/D,IAAE,WAAWyqB,GAAO4T,UAAYr+B,WAAE,iCAAkC,CAAE9S,KAAM06C,CAAa,GAAE,EAC5F3d,MAACuG,EAAO,OAAOxwB,EAAE,0CAA0C,EAAG,QAAQ,WAAW,QAAS+0B,EAAS,UAAS,IAC9G,GAEJ,ECRM8S,GAAqBA,IAAM,CACzBzK,QAAoBphD,EAAU0uB,EAAiB,EAE/C,CAAE1K,IAAGoB,QAASipB,EAAe,SAAS,EACtCgC,EAAWD,KACXmR,EAAWC,KACX3O,EAAW4O,KACX17B,EAAeF,EAAuB2oB,KAAEzoB,YAAY,EACpD,CAAC+lC,EAAWC,CAAY,EAAIrb,WAAS,EAAK,EAC1C,CAAC6L,EAAYC,CAAa,EAAI9L,WAAS,EAAK,EAC5C,CAAC5vC,EAAO0qD,CAAQ,EAAI9a,WAAwB,IAAI,EAChDsb,EAA0BjmC,WAAcqgB,UAAYpB,GAAoB,IAAItiC,KAAKqjB,EAAaqgB,UAAY,GAAI,EAAGhhB,EAAK9T,QAAQ,EAAI,GAElI26C,EAAmC,SAAY,CACnDzP,EAAc,EAAI,EAClBgP,EAAS,IAAI,EAET,IACIpK,QAAkB5vB,mBAAmB,WAAW,EAElDw6B,GACF3b,EAASrsB,EAAE,iCAAkC,CAAE9S,KAAM86C,EAAyB,EAAG,SAAS,EAG5FD,EAAa,EAAI,OACM,CACd/nC,IAAE,4CAA4C,CAAC,CAC1D,CAEAw4B,EAAc,EAAK,GAGfpC,EAAeA,IAAM,CAChBtH,IAAqBD,EAAU,IAAI,EAAG,CAAE7vC,QAAS,GAAM,GAG9D,OAAC+iB,EAGH4oB,OAACqS,GAAM,SAAN,CACE8K,YACE7d,EAAA,IAAA0d,GAAA,CAAsB,YAAaK,EAAyB,QAAS5R,EAAgB,EAErFnM,EAAA,IAAAyd,GAAA,CAAuB,UAAWO,EAAkC,SAAU7R,EAAc,WAAAmC,EAAwB,MAAAz7C,EACtH,EACAy7C,EAActO,MAAAoB,GAAA,CAAe,sBAAqB,GAAC,OAAM,EAAG,GAAG,IAClE,IAVwB,IAY5B,+FCjDM6c,GAAqCA,CAAC,CAAE7E,WAAU8E,UAAS5P,YAAkB,IAAM,CACjF,MAAEv4B,KAAMqqB,EAAe,SAAS,EACtC,cACG,MACC,WAAAJ,MAAC,MAAG,UAAWQ,GAAO3jC,MAAQkZ,WAAE,sBAAsB,EAAE,QACvD,IAAE,WAAWyqB,GAAO1rC,KAAOihB,WAAE,YAAY,EAAE,QAC3CwwB,EAAO,SAAS2X,EAAS,UAAW1d,GAAOwG,OAAQ,UAAS,GAAC,MAAM,UAAU,MAAOjxB,EAAE,WAAW,EAAG,KAAK,SAAS,SAAUu4B,EAAW,EACxItO,MAACuG,GAAO,QAAS6S,EAAU,UAAS,GAAC,MAAOrjC,EAAE,UAAU,EAAE,CAC5D,GAEJ,+FCDMooC,GAAsCA,CAAC,CAAEnQ,WAAUuL,WAAUljD,QAAO2R,SAAQsmC,aAAYiM,QAAc,IAAM,CAC1G,MAAExkC,KAAMqqB,EAAe,SAAS,EAGpC,OAAAM,EAAA,KAAC,QAAK,SAAAsN,EAAoB,cAAaL,OAAgC,WAAU,GAC/E,UAAA3N,MAAC,MAAG,UAAWQ,GAAO3jC,MAAQkZ,WAAE,uBAAuB,EAAE,EACxD/N,EAAO8H,KAAQkwB,MAAA4B,GAAA,CAAa,QAAQ,QAAS55B,WAAO8H,KAAK,EAAkB,WAC3E,IAAE,WAAW0wB,GAAO1rC,KAAOihB,WAAE,mBAAmB,EAAE,EAClDiqB,EAAA,IAAAgS,GAAA,CACC,MAAO37C,EAAMmrB,MACb,SAAA+3B,EACA,OAAAgB,EACA,MAAOxkC,EAAE,aAAa,EACtB,YAAaA,EAAE,aAAa,EAC5B,MAAO,CAAC,CAAC/N,EAAOwZ,OAAS,CAAC,CAACxZ,EAAO8H,KAClC,WAAY9H,EAAOwZ,MACnB,KAAK,QACL,KAAK,QACL,aAAa,QACb,SAAQ,WAET+kB,EAAO,MAAK,SAAS,UAAW/F,GAAOwG,OAAQ,UAAS,GAAC,MAAM,UAAU,SAAUsH,EAAY,MAAOv4B,EAAE,gBAAgB,EAAE,CAC7H,GAEJ,6JC/BMqoC,GAAoCA,CAAC,CAAE58B,QAAO68B,gBAAeC,UAAgB,IAAM,CACjF,MAAEvoC,KAAMqqB,EAAe,SAAS,EAChCwE,EAAW4O,KAEjB,OACG9S,OAAA,OAAI,UAAWF,GAAO+d,mBACrB,UAAAve,MAAC,MAAG,UAAWQ,GAAO3jC,MAAQkZ,WAAE,iBAAiB,EAAE,QAClD,IAAE,WAAWyqB,GAAO1rC,KAAOihB,WAAE,uBAAwB,CAAEyL,OAAc,GAAE,EACvEwe,EAAA,IAAAuG,EAAA,CAAO,QAAS8X,EAAe,UAAW7d,GAAOwG,OAAQ,UAAS,GAAC,MAAM,UAAU,MAAOjxB,EAAE,kBAAkB,EAAE,EAChH,CAACuoC,GACC5d,EAAA,KAAAqS,GAAM,SAAN,CACC,UAAA/S,MAAC,QAAK,UAAWQ,GAAOge,QAAUzoC,WAAE,gBAAgB,EAAE,EACrDiqB,MAAAye,GAAA,CAAK,UAAWje,GAAO7+B,KAAM,GAAIkjC,EAAqBD,EAAU,iBAAiB,EAC/E7uB,SAAEA,EAAA,iBAAiB,CACtB,IACF,CAEJ,GAEJ,ECXMwmC,GAAgCA,CAAC,CAAEn/C,MAAW,IAAM,CAClD+1C,QAAoBphD,EAAU0uB,EAAiB,EAE/C,CAAE1K,GAAMqqB,EAAe,SAAS,EAChCkT,EAAWC,KACX3O,EAAW4O,KACX,CAACkL,EAAyBC,CAA0B,EAAIlc,WAAkB,EAAK,EAE/E,CAAEhyC,oCAAqC0iD,EAAkBhyB,cACzD,CAAE1I,SAAUlL,CAAK,EAAIqK,EACzB,CAAC,CAAErK,WAAY,CACbkL,SAAUlL,IAEZ6tC,EACF,EACMwD,EAAqBA,IAAM,CACtB/Z,IAAqBD,EAAU,IAAI,CAAC,GAGzCia,EAA0B,SAAY,CAExCvL,EAAA,CACE1wC,SAAU,IACVqH,OAAQ,WAEV,CAAElV,QAAS,GACb,EAEIwY,GACF,MAAM4lC,EAAkBlyB,QAC1B,EAGI69B,EAA4B,SAAY,CACtCh8B,QAAW,GAAG11B,EAAIO,cAAc,oBAClC,IACE,KAAC4f,WAAMiU,OAAO,CAChBnoB,GAAS,gBAAiB,qBAAqB,EAC/C,MACF,CAEAslD,EAA2B,EAAI,EAE/B,MAAMxL,EAAkBtwB,cAActV,EAAKiU,MAAOsB,CAAQ,EAE1D67B,EAA2B,EAAK,EACvB9Z,IAAqBD,EAAU,mBAAmB,CAAC,QACrD/xC,EAAgB,CACvB2G,GAAS,gBAAiB,2BAA4B,CAAE3G,QAAO,CACjE,GAGIksD,EAAqE,MAAO7tC,EAAU,CAAEs9B,YAAWD,mBAAoB,CACrHzrB,QAAW,GAAG11B,EAAIO,cAAc,oBAElC,IACF,MAAMwlD,EAAkBtwB,cAAc3R,EAASsQ,MAAOsB,CAAQ,EAErD+hB,IAAqBD,EADhBn0C,EAAmC,gBAAkB,mBACtB,CAAC,QACvCoC,EAAgB,CACnBA,aAAiBT,QACfS,EAAMF,QAAQwD,YAAcvD,WAAS,qBAAqB,EAClD47C,EAAA,CAAEhtB,MAAOzL,EAAE,mBAAmB,EAAG,EAEjCy4B,EAAA,CAAE1+B,KAAMjd,EAAMF,QAAS,EAGvC,CACA47C,EAAc,EAAK,GAGfyQ,EAAYpR,GAAgC,CAChDC,cAAe,CAAErsB,MAAO,EAAG,EAC3BssB,iBAAkB3iC,GAAO,EAAEC,MAAM,CAC/BoW,MAAOnW,IACJmW,MAAMzL,EAAE,gCAAgC,CAAC,EACzC9jB,SAAS8jB,EAAE,uBAAwB,CAAEmd,MAAOnd,EAAE,aAAa,EAAG,CAAC,EACnE,EACDg4B,eAAgB,GAChBC,SAAU+Q,EACX,EAGC,OAAAre,OAACqS,GAAM,SAAN,CACE31C,UAASA,IAAA,eAAY6gD,GAAkB,YAAYS,EAAyB,SAAUE,EAAoB,QAASE,CAA6B,GAChJ1hD,IAAS,UACP4iC,MAAAme,GAAA,CACC,MAAOa,EAAU7kC,OACjB,WAAY6kC,EAAU1Q,WACtB,SAAU0Q,EAAU/P,aACpB,OAAQ+P,EAAUh3C,OAClB,SAAUg3C,EAAUtP,aACpB,OAAQsP,EAAU3P,UAErB,GACAjyC,IAAS,gBAAmB4iC,EAAA,IAAAoe,GAAA,CAAiB,SAAU,CAAC,CAAC7wC,EAAM,OAAOA,iBAAMiU,QAASw9B,EAAU7kC,OAAOqH,MAAO,cAAeq9B,EAA2B,GACtJG,EAAU1Q,YAAcoQ,IAA4B1e,MAACoB,IAAe,sBAAqB,GAAC,OAAM,GAAG,CACvG,GAEJ,ECzGM6d,GAAcA,CAAC,CAAEC,uBAAsBC,uCAAsCC,+BAA8BC,8BAAoC,IAAM,CACnJlM,QAAoBphD,EAAU0uB,EAAiB,EAC/C8zB,EAAqBxiD,EAAU2oB,EAAkB,EAEjD,CAAEb,QAAOF,gBAAeG,iBAAgBE,UAAS,EAAIT,GAAiB,CAAC,CAAEM,QAAOF,gBAAeG,iBAAgBE,eAAgB,CACnIH,QACAF,gBACAG,iBACAE,UACA,IAEIsiB,EAAuB3iB,GAAiBge,GAAYhe,CAAa,EAAI,OAAS,OAE9E4B,EAAkBm4B,GAAyD,CAC/E4L,YAAa,CAAC,iBAAiB,EAC/BC,WAAY,MAAO,CAAErgD,WAAY,CAAC,CAACA,GAASq1C,EAAmBh5B,gBAAgBrc,CAAK,EACrF,EAEK4c,EAAc43B,GAA2E,CAC7F4L,YAAa,CAAC,aAAa,EAC3BC,WAAY,MAAO,CAAE9jC,kBAAiBM,gBAAiB,CACjD,MAAClC,GAAS,CAAC4B,GAEf,OAAO,MAAM84B,EAAmBz4B,YAAYjC,EAAO4B,EAAiBM,CAAU,CAChF,EACA43B,UAAWuL,EACZ,EAEKM,EAA8B9L,GAAuD,CACzF4L,YAAa,CAAC,6BAA6B,EAC3CC,WAAYhL,EAAmBv4B,sBAC/B23B,UAAW,SAAY,CACrB,MAAMR,EAAkB1vB,oBAAoB,CAAEC,MAAO,GAAI,EACpBy7B,GACvC,EACD,EAEKM,EAAsB/L,GAI1B,CACA4L,YAAa,CAAC,qBAAqB,EACnCC,WAAYhL,EAAmBv3B,cAC/B22B,UAAWyL,EACZ,EAEKM,EAAsBhM,GAA0G,CACpI4L,YAAa,CAAC,qBAAqB,EACnCC,WAAYhL,EAAmBn4B,sBAC/Bu3B,UAAW0L,EACZ,EAEDvZ,YAAU,IAAM,CACVnsB,GAAiB,CAACE,GAAS,CAAC0B,EAAgB24B,WAAa,CAAC34B,EAAgBokC,SAC5EpkC,EAAgB44B,OAAO,CAAEj1C,MAAOya,EAAe,CAEhD,GAACA,EAAeE,EAAO0B,CAAe,CAAC,EAG1CuqB,YAAU,IACD,IAAM9rB,EAAS,IAAI,EACzB,CAACA,CAAQ,CAAC,EAEP4lC,QACJrkC,EAAgB24B,WAChBp4B,EAAYo4B,WACZsL,EAA4BtL,WAC5BuL,EAAoBvL,WACpBwL,EAAoBxL,UAEf,OACLv6B,gBACA2iB,YACAxiB,iBACAD,QACA+lC,eACA9jC,cACA0jC,8BACAC,sBACAC,sBAEJ,EClGMG,GAAgB1Z,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,wEAAwE,CAAE,CAAC,0DCY1Q6S,GAAoCA,CAAC,CAAElZ,SAAe,IAAM,CAC1D,MAAE7wB,KAAMqqB,EAAe,EAE7B,OACGJ,MAAAkN,GAAA,CAAW,QAAAtG,EAAkB,UAAWpG,GAAOuf,iBAAkB,aAAYhqC,EAAE,aAAa,EAC3F,SAAAiqB,MAACqN,EAAK,MAAM2S,GAAU,CACxB,EAEJ,wCCZMC,GAAiBC,aAA6B,CAAC,CAAEC,SAAQ,EAAGC,UAE7D,MAAI,WAAW5f,GAAO6f,QACrB,eAACC,GAAU,KAAAF,EAAU,QAASD,EAAS,KAAM,YAAa,MAAM,SAAS,MAAM,OAAM,CACvF,EAEH,qyBC6BKI,GAAgCA,CAAC,CACrC9kC,kBACA3B,iBACAD,QACA3a,QACAo9B,YACAkkB,oBACArK,wBACAtjD,QACA4tD,iBACAC,mBACAC,kBACAC,oBACAC,uBACAC,sBACAC,yBACAC,qBACAC,4BACAlhB,WACAuO,aACA4S,iBACAC,cACF,IAAM,mBACE,MAAEprC,KAAMqqB,EAAe,SAAS,EAEhCghB,EAAiBA,IAKdliD,EAAQ6W,EAAE,WAAW7W,EAAMqb,MAAM,EAAE,EAAI,GAG1C8mC,EAAoBniD,IAAiB,CACzC,GAAIA,GAAMoiD,SACR,OAAOvrC,EAAE,sBAAuB,CAAEgwB,MAAO7mC,GAAMoiD,SAAU,EAC3D,GAAWpiD,GAAMy5B,YAAa,CAK5B,MAAMpe,EAASxE,EAAE,WAAW7W,GAAMqb,MAAM,GAAI,CAAEwrB,MAAO7mC,GAAMy5B,YAAa,EAExE,OAAO5iB,EAAE,yBAA0B,CAAEgwB,MAAO7mC,GAAMy5B,YAAape,SAAQ,CACzE,CAEO,aAGH+7B,EAAoBx8B,iBAAgBxf,KAAiBvH,OAAO0nB,aAAe,QAC3E87B,EAAsBz8B,iBAAgBxf,KAAiBvH,OAAO0nB,aAAe,UAE7E8mC,EAAajlB,IAAc,OAAUp9B,EAAMqb,SAAW,QAAUxE,EAAE,kBAAkB,EAAIA,EAAE,iBAAiB,EAAK7W,EAAMs5B,WAC5H,cACG,MACE3lC,aAASmtC,MAAA4B,GAAA,CAAa,QAAQ,QAAS/uC,UAAM,GAAkB,WAC/D,KAAG,WAAW2tC,GAAO3jC,MAAQkZ,WAAE,yBAAyB,EAAE,EAC1D2qB,EAAA,YAAI,UAAWF,GAAO3mB,MACrB,UAAC6mB,EAAA,YAAI,UAAWF,GAAOghB,UACrB,UAAAxhB,EAAA,IAAC,IAAE,WAAWgB,EAAWR,GAAO+gB,WAAY,CAAE,CAAC/gB,GAAOihB,gBAAgB,EAAGnlB,IAAc,OAAQ,EAAIilB,SAAWA,EAAA,IAC7G1nC,IAAMqgB,WAANrgB,cAAgBzc,QAAS,QAAW4iC,EAAA,SAAE,UAAWQ,GAAOkhB,iBAAmBL,WAAiBniD,CAAK,EAAE,EAAO,MAC7G,EACCwhC,EAAA,YAAI,UAAWF,GAAOmhB,WACrB,UAAC3hB,MAAA,QAAM3J,YAAYn3B,EAAMs4B,qBAAsB3d,EAAMoK,SAAU/kB,EAAMw4B,eAAe,CAAE,GACrF4E,IAAc,QAAUoE,OAAC,QAAM,eAAE0gB,EAAe,GAAE,GACrD,GACF,EACAphB,EAAA,IAAC,MAAI,WAAWQ,GAAOohB,WACpBnB,SACCA,EAAA/f,OAAC,OAAK,UAAUsgB,EAAoB,WAAU,GAC5C,UAACtgB,EAAA,YAAI,UAAWF,GAAOqhB,aACrB,UAAC7hB,MAAAkN,GAAA,CAAW,aAAW,oBAAoB,QAAS6T,EAClD,SAAC/gB,MAAAqN,EAAA,CAAK,KAAMI,GAAM,CACpB,GACCzN,EAAA,aACC,UAAWQ,GAAOshB,YAClB,KAAK,aACL,KAAK,OACL,YAAY,cACZ,MAAOpB,EACP,SAAUI,EAAoB,EAEhC9gB,MAACuG,GAAO,QAAQ,WAAW,MAAM,QAAQ,KAAK,SAAS,SAAUsa,CAAqB,IACxF,EACCF,EAAmB3gB,MAAA4B,GAAA,CAAa,QAAQ,QAAS+e,UAAgB,GAAkB,KACnFC,QAAqBhf,GAAa,SAAQ,UAAW7rB,SAAEA,EAAA,yBAAyB,CAAE,GAAkB,IACvG,IAECiqB,EAAA,IAAAuG,EAAA,CAAO,QAAQ,WAAW,MAAOxwB,EAAE,wBAAwB,EAAG,QAASkrC,EACzE,CACH,SAEC,MACC,UAAAvgB,EAAA,KAAC,QAAM,WAAWF,GAAOuhB,YACvB,UAAArhB,OAAC,QACE7mB,gBAAMqgB,WAANrgB,QAAgBsgB,WAAWtgB,IAAMqgB,WAANrgB,cAAgBzc,QAAS,gBAClD,KACC,WAACsjC,EAAA,WAAG,UAAWF,GAAOwhB,WACnBjsC,YAAE,0BAA0B,QAC5B,KAAE,IACF,CAAC,CAAC7W,EAAMqb,QAAU+hB,IAAc,QAC/B0D,MAAC,QACEjqB,YAAE,2BAA4B,CAC7BgwB,OAAOlsB,IAAMqgB,WAANrgB,cAAgBugB,QACvB7f,OAAQxE,EAAE,WAAW7W,EAAMqb,MAAM,GAAI,CAAEwrB,OAAOlsB,IAAMqgB,WAANrgB,cAAgBugB,QAAS,CACxE,GACH,GAEJ,EACC4F,EAAA,UAAI3J,SAAYA,GAAA,CAACxc,EAAMof,eAAeE,gBAAkB,EAAItf,EAAM0f,SAAU1f,EAAMoK,SAAU/kB,EAAMw4B,eAAe,EAAE,GACtH,EACE,MACH7d,IAAMqgB,WAANrgB,QAAgBsgB,WAAWtgB,IAAMqgB,WAANrgB,cAAgBzc,QAAS,eAClD,KACC,WAAA4iC,MAAC,MAAG,UAAWQ,GAAOwhB,WAAajsC,WAAE,8BAA8B,EAAE,EACrEiqB,MAAC,KAAI3J,aAAY,CAACn3B,EAAMs4B,qBAAsB3d,EAAMoK,SAAU/kB,EAAMw4B,eAAe,CAAE,IACvF,EACE,KACH7d,EAAMof,eAAeI,iBAAmB,UACtC,KACC,WAAC2G,EAAA,UAAIjqB,SAAEA,EAAA,6BAA6B,CAAE,GACtCiqB,MAAC,KAAI3J,aAAYxc,EAAMof,eAAeI,iBAAkBxf,EAAMoK,SAAU/kB,EAAMw4B,eAAe,CAAE,IACjG,GAEJ,SACC,QACC,WAAAgJ,OAAC,KACC,WAACV,EAAA,UAAIjqB,SAAEA,EAAA,sBAAsB,CAAE,GAC/BiqB,MAAC,MAAI3J,SAAYxc,KAAMmf,WAAYnf,EAAMoK,SAAU/kB,EAAMw4B,eAAe,CAAE,IAC5E,EACC7d,EAAMof,eAAeK,SAAW,UAC9B,KACC,WAAC0G,MAAA,MAAIjqB,WAAE,0BAA2B,CAAEwjB,QAAS7H,KAAKwE,MAAMrc,EAAM0f,QAAU,GAAG,CAAG,GAAE,EAChFyG,MAAC,KAAI3J,aAAYxc,EAAMof,eAAeK,SAAUzf,EAAMoK,SAAU/kB,EAAMw4B,eAAe,CAAE,IACzF,GAEJ,GACF,CACF,GACC,CAAC,CAACwpB,GAAkBlhB,MAACigB,IAAe,QAASiB,EAAgB,IAAKC,EAAgB,EAClFnhB,MAAA,MAAG,UAAWQ,GAAOyhB,OAAQ,GAC7BpoC,EAAM2f,uBACLkH,OAAC,MAAI,WAAWF,GAAO1mB,eACpBw8B,YACE5V,EAAA,YAAI,UAAWF,GAAO7jB,cACrB,UAACqjB,MAAA,SACC,UAAWQ,GAAOiW,MAClB,KAAK,QACL,KAAK,kBACL,MAAOH,EAAkB15C,GACzB,GAAG,OACH,QAAS6e,IAAoB66B,EAAkB15C,GAAGlB,SAAS,EAC3D,SAAUy6C,EAAsB,SAEjC,QAAM,WAAW3V,GAAOkW,mBAAoB,QAAQ,OACnD,UAAC1W,MAAAqN,EAAA,CAAK,KAAMsJ,EAAW,GAAG,IAAE5gC,EAAE,sBAAsB,GACtD,GACF,EACE,KACHwgC,EACC7V,EAAA,KAAC,MAAI,WAAWF,GAAO7jB,cACrB,UAACqjB,MAAA,SACC,UAAWQ,GAAOiW,MAClB,KAAK,QACL,KAAK,kBACL,MAAOF,EAAoB35C,GAC3B,GAAG,SACH,QAAS6e,IAAoB86B,EAAoB35C,GAAGlB,SAAS,EAC7D,SAAUy6C,EAAsB,SAEjC,QAAM,WAAW3V,GAAOkW,mBAAoB,QAAQ,SACnD,UAAC1W,MAAAqN,EAAA,CAAK,KAAMuJ,EAAO,GAAG,IAAE7gC,EAAE,iBAAiB,GAC7C,GACF,EACE,MACN,EACE,KACHgqB,EAAWC,MAAC,MAAKD,YAAS,EAAS,KACnCuO,GAAetO,EAAA,IAAAoB,GAAA,CAAe,sBAAqB,GAAC,OAAM,GAAG,EAC9DpB,MAAC8f,GAAiB,SAASU,CAAkB,EAC/C,GAEJ,4DCrNM0B,GAAqCA,CAAC,CAAElU,WAAUn7C,OAAM,IAAM,CAC5D,MAAEkjB,GAAMqqB,EAAe,SAAS,EAEtC,OACGM,OAAA,OAAI,UAAWF,GAAO2hB,kBACpBtvD,YAASmtC,MAAA4B,GAAA,CAAa,QAAQ,QAAS/uC,UAAM,GAAkB,KAC/DmtC,EAAA,SAAGjqB,SAAE,8BAA4B,CAAE,GACnCiqB,EAAA,IAAAuG,EAAA,CAAO,MAAOxwB,EAAE,mBAAmB,EAAG,QAAQ,YAAY,MAAM,UAAU,KAAK,QAAQ,QAASi4B,EAAU,UAAS,IACtH,GAEJ,uHCMMoU,GAA+BA,CAAC,CAAEC,qBAAoB,IAAM,CAC1D,MAAEtsC,KAAMqqB,EAAe,SAAS,EAEhC,CAAEjmB,SAAQnS,SAAQgnC,WAAUC,eAAcI,aAAYK,gBAAiB9B,GAAyB,CACpGC,cAAe,CAAErT,eAAgB,GAAI3W,WAAY,GAAIw3B,WAAY,GAAIvgB,QAAS,GAAIJ,aAAc,GAAIE,YAAa,EAAG,EACpHkT,iBAAkB3iC,KACflZ,WACAmZ,MAAM,CACLovB,eAAgBnvB,EAAO,EAAEpZ,SAAS,EAClC4xB,WAAYxY,IACTpZ,WACAuI,KAAK,yBAA0Bub,EAAE,8BAA8B,EAAc6kC,MAAQC,IAAIS,mBAAmBjlD,EAAgB,EAC/HglD,WAAYhwC,IACTpZ,WACAuI,KAAK,yBAA0Bub,EAAE,8BAA8B,EAAc6kC,MAAQC,IAAIU,mBAAmBllD,EAAgB,EAC/HykC,QAASzvB,IACNpZ,WACAuI,KAAK,iBAAkBub,EAAE,6BAA6B,EAAG,CAAC1f,EAAOuR,IAAY,CAC5E,MAAM+yC,EAASC,GAAQC,IAAIC,SAASlzC,EAAQ06C,OAAOz+B,UAAU,EAE7D,OAAO+2B,GAAQC,IAAIW,gBAAgBnlD,EAAiBskD,CAAM,EAC3D,EACHjgB,aAAcrvB,EAAO,EAAEpZ,SAAS,EAChC2oC,YAAavvB,EAAO,EAAEpZ,SAAS,EAChC,EACH87C,eAAgB,GAChBC,SAAUqU,EACX,EAEDvc,mBAAU,IAAM,CACd,GAAI3rB,EAAOkhC,WAAY,CACrB,MAAMK,EAASd,GAAQC,IAAIc,cAAcxhC,EAAOkhC,UAAU,EACtDK,EAAOxkB,OACT8X,EAAS,eAAgB0M,EAAOxkB,MAAMx7B,SAAU,GAE9CggD,EAAOvkB,MACT6X,EAAS,cAAe0M,EAAOvkB,KAAKz7B,SAAU,EAElD,GAEC,CAACye,EAAOkhC,UAAU,CAAC,EAGnBrb,MAAA,OAAI,UAAWQ,GAAOob,YACrB,SAAClb,OAAA,QAAK,SAAUgP,EAAc,cAAa/B,OAAwB,WAAU,GAC1E3lC,YAAO8H,KACNkwB,MAAC,MAAI,WAAWQ,GAAO+hB,UACrB,SAACviB,MAAA4B,GAAA,CAAa,QAAQ,QAAS55B,SAAO8H,MAAK,EAC7C,GACE,KACJkwB,MAAC,MACC,UAAAA,MAACgS,GACC,OAAOj8B,EAAE,2BAA2B,EACpC,KAAK,iBACL,MAAOoE,EAAOqgB,eACd,SAAUyU,EACV,OAAQI,EACR,YAAat5B,EAAE,2BAA2B,EAC1C,aAAa,UACb,SAAQ,IAEZ,SACC,MACC,UAAAiqB,MAACsa,GAAsB,OAAOngC,EAAO0J,WAAWnoB,WAAY,MAAOsM,EAAO6b,WAAY,OAAQwrB,EAAY,SAAUJ,CAAa,GACnI,EACCvO,EAAA,YAAI,UAAWF,GAAOqb,QACrB,UAAA7b,EAAA,IAAC,MACC,UAAAA,EAAA,IAAC0Z,GAAsB,OAAOv/B,EAAOkhC,WAAY,OAAQhM,EAAY,SAAUJ,EAAc,MAAOjnC,EAAOqzC,UAAW,GACxH,EACCrb,EAAA,WACC,SAACA,EAAA,IAAAsZ,GAAA,CAAmB,MAAOn/B,EAAO2gB,QAAS,OAAQuU,EAAY,SAAUJ,EAAc,MAAOjnC,EAAO8yB,OAAQ,GAC/G,GACF,QACC,MACC,UAAAkF,EAAA,IAACuG,GAAO,MAAOxwB,EAAE,mBAAmB,EAAG,QAAQ,YAAY,MAAM,UAAU,KAAK,SAAS,KAAK,QAAQ,UAAS,KACjH,EACF,EACF,EAEJ,ECrFA,SAAwBysC,GAAoB,CAAEC,mBAAkBrlD,OAAMu3C,oBAAmBz4B,UAASwmC,iBAAuB,EAAG,CACpHvP,QAAoBphD,EAAU0uB,EAAiB,EAC/C8zB,EAAqBxiD,EAAU2oB,EAAkB,EACjD,CAAE3E,GAAMqqB,IAAe,CAAC,UAAW,OAAO,CAAC,EAC3CgC,EAAWD,KAEX,CAACtvC,EAAO0qD,CAAQ,EAAI9a,EAAiB,WACrC,CAACyU,EAASW,CAAU,EAAIpV,EAA8B,WAEtDmV,EAAYzE,EAAkBltB,aAC9BqtB,EAAWC,KAEjBzN,YAAU,IAAM,EACQ,SAAY,CAChC2c,EAAiB,EAAI,EAEjB,IACF,MAAMvL,EAAU,MAAM3C,EAAmB/3B,0BAA0ByiB,OAAOtF,MAAM,EAEhFke,EAAWX,CAAO,QACXrkD,EAAgB,CACnBA,aAAiBT,OACnBmrD,EAAS1qD,EAAMF,OAAO,CAE1B,CAEA8vD,EAAiB,EAAK,KAGV,EACb,CAACA,EAAkBlO,CAAkB,CAAC,EAEzC,MAAMvG,EAAWtL,cACf,MAAO/b,EAAuBqxB,IAAgD,CACxE,GAACrxB,EAAMzjB,QAEP,KAIF,GAHAu/C,EAAiB,EAAI,EACrBlF,EAAS3oD,MAAS,EAEdsnB,IAAYtnB,OAAW,CAChBmhB,IAAE,2BAA2B,CAAC,EACvC,MACF,CAEMkG,QAAe,MAAMymC,IAErBnmC,EAAY7hB,GAAUukC,OAAO2F,SAASI,KAAM,CAChDF,EAAG,mBACH5oB,UACD,EACKxU,EAAS,MAAM6sC,EAAmB73B,oBAAoBiK,EAAMvoB,KAAKue,cAAeJ,EAAWN,CAAY,EAEzG,WAAYvU,GACdswC,EAAatwC,EAAO+kB,MAAM,EAG5B,MAAM0mB,EAAkB1vB,oBAAoB,CAAEC,MAAO,GAAI,EAChD3N,IAAE,kCAAkC,EAAG,SAAS,EACzDu9B,EAASqB,EAAmB,CAAE5/C,QAAS,GAAM,QACtClC,EAAgB,CACnBA,aAAiBT,OACnBmrD,EAAS1qD,EAAMF,OAAO,CAE1B,CAEA8vD,EAAiB,EAAK,EACxB,EACA,CAACA,EAAkBvmC,EAASq4B,EAAoBpB,EAAmB/Q,EAAUrsB,EAAGu9B,EAAUqB,EAAmB+N,CAAe,CAC9H,EAEMzK,EAAkCrD,UACtC,KAAO,CACLsC,UACAgB,cAAe,GACfC,YAAaP,EAAY,OAAS,OAClCQ,UAAWR,EAAY5oD,GAAwBC,GAC/CopD,4BAA6B,CAC3Bjd,KAAM,CACJkd,cAAe,GACfC,mBAAoB,EACtB,CACF,EACAC,oBAAqB,MAAO7xB,GAAoC,CAC1D,IACF87B,EAAiB,EAAI,EAEfrkD,QAAOuoB,EAAMvoB,KAAK0e,QAClBy3B,QAAmB13B,qBAAqBX,EAAS9d,CAAI,EAElD2X,IAAE,kCAAkC,EAAG,SAAS,EACzDu9B,EAASqB,EAAmB,CAAE5/C,QAAS,GAAM,QACtClC,EAAgB,CACnBA,aAAiBT,QACnBmrD,EAAS1qD,EAAMF,OAAO,EACtB8vD,EAAiB,EAAK,EAE1B,CACF,EACAzU,SAAUA,CAACrnB,EAAuB8xB,IAA6BzK,EAASrnB,EAAO8xB,EAAUT,YAAY,EACrGpE,QAAU/gD,GAAiB0qD,EAAS1qD,EAAMF,OAAO,CAEnD,IAACukD,EAASU,EAAW6K,EAAkBlO,EAAoBr4B,EAASkmB,EAAUrsB,EAAGu9B,EAAUqB,EAAmB3G,CAAQ,CACxH,EAEA,OAAQhO,MAAA8W,GAAA,CAAM,cAAemB,EAAoB,KAAA76C,EAAY,MAAAvK,CAAgB,EAC/E,CC5HA,MAAM8vD,GAAeA,IAAM,CACnBxB,QAAehc,SAAkB,IAAI,EACrC+b,EAAiBnhD,EAAe,CAAC,CAAEE,qBAAcA,WAAOwT,SAAPxT,QAAeihD,gBAAkBjhD,IAAOwT,SAAPxT,cAAeihD,eAA4BtsD,OAAU,EACvI8tD,EAAkBzd,GAAiB,SAAaic,iBAAkB,OAAMC,IAAatsB,UAAbssB,cAAsByB,iBAAmBhuD,OAAsB,EAEtI,OAAEusD,eAAcD,iBAAgBwB,kBACzC,ECQMG,GAAWA,IAAM,WACrB,MAAMje,EAAW4O,KACXF,EAAWC,KACX,CAACuP,EAAeC,CAAgB,EAAItgB,WAAS,EAAK,EAElD,CAACge,EAAgBuC,CAAiB,EAAIvgB,WAAS,EAAK,EACpD,CAACwgB,EAAuBC,CAAwB,EAAIzgB,WAAS,EAAK,EAClE,CAAE1sB,KAAMqqB,EAAe,SAAS,EAChCgC,EAAWD,KAEXghB,EAAiBte,EAAqBD,EAAU,cAAc,EAC9Dwe,EAAave,EAAqBD,EAAU,SAAS,EACrDye,EAAgBxe,EAAqBD,EAAU,IAAI,EAEnD,CAAEuc,eAAcD,iBAAgBwB,mBAAoBC,GAAa,EAEjEW,EAAyBA,IAAMhQ,EAAS6P,CAAc,EAEtD,CAAExpC,gBAAe2iB,YAAWxiB,iBAAgBD,QAAO+lC,eAAc9jC,cAAa0jC,8BAA6BC,sBAAqBC,uBACpIT,GAAY,CACVC,qBAAsBA,IAAM,CAAC,CAACnjC,GAAcmnC,EAAyB,EAAI,EACzE/D,qCAAsCA,KAC3BppC,IAAE,0BAA0B,EAAG,SAAS,EAE1Cu9B,EAAShX,IAAc,OAAS8mB,EAAaC,EAAe,CAAEtuD,QAAS,GAAM,GAEtFqqD,6BAA8BA,CAAC,CAAE9hC,iBAAkB,CACjD2hB,OAAO2F,SAASI,KAAO1nB,CACzB,EACA+hC,6BAA8BA,IAAM/L,EAASzO,EAAqBD,EAAU,qBAAqB,EAAG,CAAE7vC,QAAS,GAAM,EACtH,EAEG,CACJolB,OAAQ,CAAE4B,aAAYN,iBAAgB,EACtCuzB,WACAV,WAAYuS,EACZ74C,SACAinC,eACAS,gBACE9B,GAAQ,CACVC,cAAe,CAAE9xB,WAAY,GAAIN,gBAAiBjB,GAAwBV,CAAc,CAAE,EAC1Fk0B,SAAUA,CAAC,CAAEjyB,aAAYN,uBACvBynC,EAAyB,EAAK,EAEvBpnC,EAAYynC,YAAY,CAAExnC,aAAYN,gBAAiBvmB,SAASumB,EAAe,EAAG,GAE3FwyB,gBAAiBA,CAAC,CAAElyB,gBAAuBmnC,EAAyB,CAAC,CAACnnC,CAAU,EAChFmyB,cAAeA,CAAC,CAAEr7C,WAAY,QACxBA,aAAiBqnB,MAAuBrnB,KAAMmV,OAAO6R,QAAbhnB,SAAoBD,SAAS,iBAAiBinB,iBAAOjd,EAAE,gBACxFioC,IAAqBD,EAAU,cAAc,EAAG,CAAE7vC,QAAS,GAAM,CAE9E,EACD,EAEKikD,EAA6B9rD,GAA+C,CAChF+hD,EAAa/hD,CAAK,EAGlB4uB,EAAYynC,YAAY,CAAExnC,aAAYN,gBAAiBvmB,SAAShI,EAAMwe,OAAOrV,KAAK,EAAG,GAsBvF,GAnBAyvC,YAAU,IAAM,CACd,GAAI,CAACnsB,EACH,OAAO25B,EAAS6P,EAAgB,CAAEpuD,QAAS,GAAM,CAElD,GAACu+C,EAAU6P,EAAgBxpC,CAAa,CAAC,EAG5CmsB,YAAU,IAAM,CACThsB,WAAgBvkB,QAEZy5C,EAAA,kBAAmBx0B,GAAwBV,CAAc,CAAC,GAClE,CAACA,EAAgBk1B,CAAQ,CAAC,EAG7BlJ,YAAU,IACD,IAAMod,EAAyB,EAAK,EAC1C,CAAE,GAGD,CAACvpC,GAAiB,CAACE,GAAS,CAACC,GAAkB,CAACwiB,EAEhD,OAAA0D,EAAA,IAAC,OAAI,MAAO,CAAEmJ,OAAQ,KACpB,SAAAnJ,MAACoB,GAAe,QAAM,IACxB,GAIEjkB,SAAY4nB,GAA2B,mBAAmB,EAC1D7nB,EAAa6nB,GAA2B,sBAAuB,CAAEtlC,QAASka,iBAAela,QAAS,EAClG2d,EAAW2nB,GAA2B,eAAe,EACrDye,EAAmBlnB,IAAc,OAASpf,EAAaxiB,GAAUukC,OAAO2F,SAASI,KAAM,CAAEF,EAAG,GAAI,EAChGxoB,EAAW2iB,OAAO2F,SAASI,KAE3BroB,EAAgB7C,iBAAgBxf,KAAMvH,GAAWA,EAAO6J,KAAO1H,SAASumB,CAAe,GACvF0mC,GAAoB,EAACtoC,WAAO2f,wBAC5BiqB,IAAkB9mC,iBAAelC,cAAe,SAAUkC,iBAAeqb,YAAa,SACtF0rB,IAAiB/mC,iBAAelC,cAAe,SAAUkC,iBAAe6e,kBAAmB,QAC3FmoB,IAAkBhnC,iBAAelC,cAAe,SAEtD,cACG8lC,GACC,OAAA1mC,EACA,MAAOF,EACP,UAAA2iB,EACA,MAAOt0B,EAAO8H,KACd,kBAAmBwzC,EACnB,eAAAxpC,EACA,gBAAA2B,EACA,sBAAuBu9B,EACvB,mBAAoBtJ,EACpB,oBAAqBT,EACrB,0BAA2B,IAAM+T,EAAkB,EAAI,EACvD,uBAAwB,IAAMA,EAAkB,EAAK,EACrD,iBAAkBjnC,EAClB,eAAA0kC,EACA,kBAAmBwC,EACnB,qBAAApC,EACA,gBAAiB74C,EAAO+T,WACxB,WAAY6jC,GAAgBkD,EAC5B,eAAA5B,EACA,aAAAC,EAECgB,UACCA,IAAAniB,EAAA,IAACkiB,GACC,UAAU,SAAY,CACdjmC,QAAe,MAAMymC,IAE3B,OAAOlD,EAA4B+D,YAAY,CAAEtnC,eAAc,CAEjE,UAAOujC,KAA4B3sD,QAA5B2sD,eAAmC7sD,UAAW,IAExD,GACA8wD,UACErB,GACC,qBAAqB,MAAO/lC,GAC1B,MAAMqjC,EAAoB6D,YAAY,CAAElnC,qBAAoBC,WAAUC,UAAWW,CAAY,GAGlG,EACAwmC,IAEG1jB,MAAA+U,EAAA,mBAAA/U,MAACwiB,GACC,mBAAmBlmB,IAAc,OAAS8mB,EAAaC,EACvD,iBAAkBN,EAClB,QAASlpC,EAAMjd,GACf,KAAK,OACL,gBAAA8lD,CAAiC,GAErC,EAEDiB,IACC3jB,EAAA,IAAC4W,GACC,UAAU,SAAY,CACd36B,QAAe,MAAMymC,IAE3BjD,EAAoBtL,OAAO,CAAEl3B,WAAYumC,EAAkBtmC,aAAYC,aAAWC,WAAUrB,aAAYE,eAAc,CAExH,UAAOwjC,KAAoB5sD,QAApB4sD,eAA2B9sD,UAAW,IAEhD,EACH,GAEJ,EC9KMixD,GAAYA,IAAM,CAChBrP,QAAqBxiD,EAAU2oB,EAAkB,EACjDy4B,EAAoBphD,EAAU0uB,EAAiB,EAE/C,CAAEzhB,cAAaya,qBAAoBC,2BAA0BF,sBAAqB,EAAID,GAC1F,CAAC,CAAEva,cAAaya,qBAAoBC,2BAA0BF,2BAA4B,CACxFxa,cACAya,qBACAC,2BACAF,yBAEF4hC,EACF,EAEM,CAAElH,UAAW2P,GAA4BC,GAAe,CAC5DC,SAAU,CAAC,mBAAoBvqC,CAAoB,EACnDwqC,QAASzP,EAAmBv5B,iBAC7B,EAEKM,EAAco4B,GAAY,CAC9B4L,YAAa,CAAC,aAAa,EAC3BC,WAAYhL,EAAmBj5B,YAChC,EAEKoC,EAAqBg2B,GAAY,CACrC4L,YAAa,CAAC,oBAAoB,EAClCC,WAAYhL,EAAmB72B,mBAC/Bi2B,UAAWA,IAAMR,EAAkB1vB,oBAAoB,CAAEe,MAAO,IAAMd,MAAO,GAAI,EAClF,EAEKugC,EAAiBjlD,EAAYzJ,OAAS,EACtC2uD,EAAwBzqC,EAAmBlkB,OAAS,EACpD4uD,EAAmB3qC,EAAqBva,KAAMmlD,GAAeA,EAAWjlD,OAAO,EAC/EklD,GAAyB5qC,EAAmBlkB,OAAS,GAAKmkB,EAAyBnkB,OAAS,IAAM0uD,GAAkB,CAACE,EACrHG,EAA8BH,GAAoB,CAACD,EAAwB,OAAS,OAEnF,OACLhQ,UAAW2P,GAA2BvoC,EAAY44B,UAClDl1C,cACAya,qBACAC,2BACA4B,cACAoC,qBACA2mC,wBACAC,mBAEJ,ECrDMC,GAAkBpe,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,qHAAqH,CAAE,CAAC,+eCsBzTuX,GAAoCA,CAAC,CAAEtlD,QAAOulD,WAAUlL,UAAwB,IAAM,CACpF,MAAExjC,KAAMqqB,EAAe,SAAS,EAEhCihB,EAAoBniD,GAAiB,CACzC,GAAIA,EAAMoiD,SACR,OAAOvrC,EAAE,wCAAyC,CAAEgwB,MAAO7mC,EAAMoiD,SAAU,EAC7E,GAAWpiD,EAAMy5B,YAAa,CAK5B,MAAMpe,EAASxE,EAAE,WAAW7W,EAAMqb,MAAM,GAAI,CAAEwrB,MAAO7mC,EAAMy5B,YAAa,EAExE,OAAO5iB,EAAE,2CAA4C,CAAEgwB,MAAO7mC,EAAMy5B,YAAape,SAAQ,CAC3F,CAEO,aAGHmqC,EAAiBA,CAAC5vD,EAAc40B,WACnC,KACC,WAAAsW,MAACqN,GAAK,KAAA3jB,EAAW,EAChB50B,EACAkrC,EAAA,YAAK,UAAU,SAAS,SAAC,KAC5B,IAGI2kB,EAAeA,CAAC,CAAE9nD,QAAO+nD,eAAcC,eAAgF,IAC1HnkB,EAAA,YAAI,UAAWF,GAAOthC,MAAO,kBAAiB,SAASA,EAAMO,OAAO,GACnE,UAACugC,MAAA,SACC,UAAWQ,GAAOiW,MAClB,SAAA8C,EACA,KAAK,QACL,KAAM,kBACN,MAAOr6C,EAAMO,QACb,GAAIP,EAAMO,QACV,QAASglD,EACT,eAAoBvlD,EAAMO,QAAbkuC,OAAsB,GAErC3N,MAAC,OAAI,UAAWQ,GAAOljC,MACrB,SAACojC,EAAA,cAAM,QAASxhC,EAAMO,QACpB,UAACugC,MAAA,MAAG,UAAWQ,GAAOhI,WAAY,GAAI,SAASt5B,EAAMO,OAAO,GACzD5C,SACHA,CAAA,GACCmjC,EAAA,YAAK,UAAU,SAAS,SAAC,YACzB,KAAG,WAAWQ,GAAOskB,aAAc,cAAa,GAAK,EACrDpkB,EAAA,WAAG,UAAWF,GAAOukB,cACnB7lD,UAAMoiD,YAAYpiD,EAAMy5B,YAAc+rB,EAAerD,EAAiBniD,CAAK,GAAK,GAAI8lD,EAAW,EAAI,KACnG,CAAC,CAACH,GAAiBH,EAAeG,EAAeG,EAAW,EAC5DN,EAAe3uC,EAAE,4CAA4C,EAAGivC,EAAW,GAC9E,EACChlB,MAAA,OAAI,UAAWQ,GAAOtQ,IAAK,GAC3BwQ,EAAA,YAAI,UAAWF,GAAOtH,WACpB3B,aAAcr4B,CAAK,EAAE,IAAE,CAAC,CAAC0lD,GAAgBlkB,OAAC,QAAM,eAAEkkB,GAAa,GAClE,GACF,CACF,EACF,IAGEjtB,MAAYz4B,CAAK,EAAG,CAChB+lD,QAAY/lD,EAAMqb,SAAW,QAEnC,OAAOoqC,EAAa,CAClB9nD,MAAmBkZ,EAAZkvC,EAAc,uBAA4B,qBAAN,EAC3CJ,cAAe9uC,EAAE,sCAAsC,EACvD6uC,aAA0B7uC,EAAZkvC,EAAc,gBAAqB,cAAN,CAAoB,CAChE,CACH,CAEA,OAAON,EAAa,CAClB9nD,MAAOqC,EAAMs5B,WACbqsB,cACI3lD,EAAMgmD,gBAAoBhmD,EAAMimD,eAC9BpvC,EAAE,2BAA4B,CAAEwE,OAAQrb,EAAMgmD,eAAgBnf,MAAO7mC,EAAMimD,cAAgB,GAC3FvwD,OACP,CACH,EAaMwwD,GAAmCA,CAAC,CAAEjrC,SAAQnS,SAAQsmC,aAAY9uC,SAAQ6lD,sBAAqB9L,WAAUvL,WAAUsX,0BAAgC,IAAM,CAC7J,MAAMplD,EAAWH,EAAsBwgC,KAAEtgC,OAAOC,QAAQ,EAClD,CAAE6V,KAAMqqB,EAAe,SAAS,EAChC,CAAEmlB,oBAAmBC,iBAAoBrrC,IAG7C,OAAAumB,EAAA,KAAC,QAAK,SAAAsN,EAAoB,cAAaL,OAA6B,WAAU,GAC3E2X,YAA4BtlB,EAAA,IAAA8f,GAAA,CAAiB,QAASwF,CAAyB,GAAM,WACrF,KAAG,WAAW9kB,GAAO3jC,MAAQkZ,WAAE,oBAAoB,EAAE,QACrD,IAAE,WAAWyqB,GAAOilB,SAAW1vC,WAAE,sCAAuC,CAAE7V,UAAU,GAAE,EACtF8H,EAAO8H,KAAQkwB,MAAA4B,GAAA,CAAa,QAAQ,QAAS55B,WAAO8H,KAAK,EAAkB,KAC3Eu1C,GACC3kB,EAAA,KAAC,MAAI,WAAWF,GAAOklB,iBACrB,UAAA1lB,EAAA,IAAC,QACC,WAAWQ,GAAOiW,MAClB,SAAA8C,EACA,KAAK,QACL,KAAK,oBACL,GAAG,OACH,MAAM,OACN,QAASgM,IAAsB,OAAO,EAEvCvlB,EAAA,aAAM,UAAWgB,EAAWR,GAAOljC,MAAOkjC,GAAOmlB,eAAe,EAAG,QAAQ,OACzE5vC,WAAE,2BAA2B,EAChC,QACC,QACC,WAAWyqB,GAAOiW,MAClB,SAAA8C,EACA,KAAK,QACL,KAAK,oBACL,GAAG,OACH,MAAM,OACN,QAASgM,IAAsB,OAAO,EAEvCvlB,EAAA,aAAM,UAAWgB,EAAWR,GAAOljC,MAAOkjC,GAAOmlB,eAAe,EAAG,QAAQ,OACzE5vC,WAAE,4BAA4B,EACjC,GACF,EAEDiqB,EAAA,WAAI,UAAWQ,GAAOhhC,OACpB,SAACA,EAAOjK,OAGPiK,EAAOzD,IAAemD,GAAA8gC,EAAA,IAACwkB,GAA6B,OAAAtlD,EAAc,SAAUsmD,IAAoBtmD,EAAMO,QAAS,SAAA85C,CAA1Er6C,IAAMO,OAAuF,CAAG,EAFpIugC,EAAA,SAAGjqB,SAAEA,EAAA,mCAAmC,CAAE,GAI/C,EACCu4B,GAAetO,EAAA,IAAAoB,GAAA,CAAe,sBAAqB,GAAC,OAAM,GAAG,QAC7DmF,EAAO,OAAOxwB,EAAE,uBAAuB,EAAG,SAAUu4B,GAAc,CAAC9uC,EAAOjK,OAAQ,QAAQ,YAAY,MAAM,UAAU,KAAK,SAAS,UAAS,IAChJ,GAEJ,ECrJMqwD,GAAcA,IAAM,CACxB,MAAMtS,EAAWC,KACX3O,EAAW4O,KACX,CAAEz9B,GAAMqqB,EAAe,SAAS,EAChCylB,EAAWxgB,GAAc,GAAG,IAAM,uBAClCygB,EAAiBluC,EAAgB,CAAC,CAAES,mBAAoB,CAAEytC,eAAgB,CAAC,CAACztC,CAAe,IAE3F,CAAE67B,YAAWl1C,cAAaya,qBAAoBC,2BAA0B4qC,mBAAkBD,wBAAuB/oC,cAAaoC,sBAClIkmC,GAAU,EAENmC,EAAclhB,EAAqBD,EAAU,UAAU,EACvDohB,EAAoBnhB,EAAqBD,EAAU,8BAA8B,EACjFqhB,EAAoBphB,EAAqBD,EAAU,8BAA8B,EACjFshB,EAAkBrhB,EAAqBD,EAAU,4BAA4B,EAE7E,CAAEzqB,SAAQnS,SAAQsmC,aAAYU,WAAUU,eAAcT,gBAAiBrB,GAA6B,CACxGC,cAAe,CAAE0X,kBAAmBjB,EAAkBkB,gBAAiB5wD,MAAU,EACjFk5C,iBAAkB3iC,GAAO,EAAEC,MAAM,CAC/Bo6C,gBAAiBjyC,GAAc,EAAEthB,SAAS8jB,EAAE,6BAA6B,CAAC,EAC1EwvC,kBAAmBhyC,GAAiB,EAAEthB,SAAS8jB,EAAE,6BAA6B,CAAC,EAChF,EACDi4B,SAAU,MAAO,CAAEuX,oBAAmBC,qBAAsB,CACtD,IAACD,GAAqB,CAACC,EAAiB,OAE5C,MAAMtmD,EAAQinD,EAAc7rD,KAAM4E,GAAUA,EAAMO,UAAY+lD,CAAe,EAE7E,GAAKtmD,IAECoc,QAAYioC,YAAYrkD,CAAK,EAE/B2mD,GACK,aAAMnoC,EAAmB6lC,aAEpC,EACAtV,gBAAiB,SAAY,CAC3B,GAAI4X,GAAYC,EAAuBxS,SAAS0S,CAAiB,EAC7DH,KAAiBvS,SAAS2S,CAAiB,EAE/C3S,EAASyS,CAAW,CACtB,EACA7X,cAAeA,IAAMoF,EAAS4S,CAAe,EAC9C,EAEKC,EAAgBhsC,EAAOorC,oBAAsB,OAASvmD,EAAc6mD,EAAWnsC,EAA2BD,EAiBhH,OAfAqsB,YAAU,IAAM,OACVoO,MAAa,CAACiS,EAAc5wD,OAAQ,OAExC,MAAMkK,GAAU0mD,IAAcA,EAAc5wD,OAAS,CAAC,IAAtC4wD,cAAyC1mD,QAEzDuvC,EAAS,kBAAmBvvC,CAAO,GAClC,CAAC0mD,EAAehsC,EAAOorC,kBAAmBvW,EAAUkF,CAAS,CAAC,EAEjEpO,YAAU,IAAM,CACVoO,GAAa,CAACoQ,GAElBtV,EAAS,oBAAqBsV,CAAgB,CAC7C,GAACpQ,EAAWoQ,EAAkBtV,CAAQ,CAAC,EAGtCkF,EAEAlU,EAAA,IAAC,OAAI,MAAO,CAAEmJ,OAAQ,KACpB,SAAAnJ,MAACoB,GAAe,QAAM,IACxB,GAKDpB,MAAAolB,GAAA,CACC,SAAU1V,EACV,SAAUT,EACV,OAAA90B,EACA,OAAAnS,EACA,WAAAsmC,EACA,OAAQ6X,EACR,oBAAqB9B,CACrB,EAEN,8MC5EM+B,GAASA,CAAC,CACdn0D,WACA8uC,YACA2F,WACA2f,eACAl6D,UACAm6D,eACAzV,UAAU,GACVx6C,QACAkjD,WACA38C,KACApK,OACAK,QACAm+C,eACA5zC,OACA,GAAGuG,CACE,IAAM,CACLsrC,QAAgB/hD,GAAgD,CACpE,GAAI,CAAC2jD,EACH,OAAO3jD,EAAMg/C,iBAEfqN,WAAWrsD,EAAK,EAIZykD,EAAqB3Q,EACzBR,GAAO7uC,UACP,CACE,CAAC6uC,GAAO3tC,KAAK,EAAGA,EAChB,CAAC2tC,GAAOkG,QAAQ,EAAGA,GAErB3F,CACF,EAEMoK,EAAiB,CACrB,gBAAiB,CAAC,CAACl5C,EACnB,eAAgBuE,GAAQvE,GAAYY,GAASwD,IAAU,IACvD,mBAAoB26C,GAGhBS,EAA8B,CAClC70C,KACApK,OACA6D,QACAqwC,WACA3F,UAAWP,GAAO+lB,OAClBzU,SAAU,CAACjB,EACX5+C,WACA,GAAGk5C,EACH,GAAGxnC,GAIH,OAAAq8B,MAAC,MAAI,WAAWgB,EAAW,CAAE,CAAC2Q,CAAkB,EAAGd,EAAS,EAC1D,SAAAnQ,OAAC,UAAW+Q,KAAY,SAAUxC,EAC/BoX,aACErmB,EAAA,cAAO,UAAWgB,EAAWR,GAAOgmB,OAAQF,CAAY,EAAG,MAAM,GAAG,SAAUr0D,EAC5Eo0D,SACHA,EAAA,EAEDl6D,GACCA,EAAQ4P,IAAKyqD,GACVxmB,MAAA,UACC,UAAWgB,EAAWR,GAAOgmB,OAAQF,CAAY,EAEjD,MAAO,OAAOE,GAAW,SAAWA,EAASA,EAAOnwD,MAEnD,SAAOmwD,UAAW,SAAWA,EAASA,EAAOlpD,KAHzC,SAAOkpD,GAAW,SAAWA,EAASA,EAAOnwD,KAIpD,CACD,EACL,EACF,EAEJ,EC3EMowD,GAA4BA,CAAC,CACjCj0D,OACAuuC,YACAzjC,QACAzK,QACA69C,aACAG,UAAU,GACV5+C,WAAW,GACX6uC,OAAO,SACP6M,SACA+Y,OACA,GAAGjV,CACL,IAEIzR,EAAA,IAAC2Q,GACC,WAAA5P,EACA,MAAAluC,EACA,WAAA69C,EACA,MAAApzC,EACA,SAAArL,EACA,QAAA4+C,EACA,OAAAlD,EACA,KAAAn7C,EACA,KAAAsuC,EACA,KAAA4lB,EACA,YAA6BxU,GAAAlS,MAAComB,GAAO,MAAA5zD,EAAY,SAAAP,EAAoB,QAAA4+C,EAAkB,MAAAh+C,EAAc,KAAAiuC,EAAY,GAAIoR,EAAY,GAAIT,CAAc,EACnJ,mGC1BAkV,GAA4BA,CAAC,CACjC5lB,YACAzjC,QACAspD,gBACAp0D,OACA+mD,WACA1I,UAAU,GACVx6C,QACAq6C,aACA79C,QACAZ,WACAy0D,OACA5lB,OACA,GAAGn9B,CACL,IAAM,CACEkjD,QAAiB7lB,EAAWR,GAAOsmB,SAAU,CAAE,CAACtmB,GAAO3tC,KAAK,EAAGA,GAASkuC,CAAS,EACjFkO,EAAsE/hD,GAAA,CAC1E,GAAI,CAAC2jD,EACH,OAAO3jD,EAAMg/C,iBAEfqN,WAAWrsD,EAAK,EAIhB,OAAA8yC,EAAA,IAAC2Q,GACC,WAAWkW,EACX,KAAAr0D,EACA,MAAA8K,EACA,QAAAuzC,EACA,SAAA5+C,EACA,MAAAY,EACA,WAAA69C,EACA,YAAa,CAAC,CAAE9zC,KAAIo0C,kBAClBtQ,OAAC,MAAI,WAAWF,GAAOumB,IACrB,UAAA/mB,EAAA,IAAC,SACC,KAAAxtC,EACA,KAAK,WACL,GAAAoK,EACA,MAAAvG,EACA,gBAAepE,EACf,mBAAkB++C,EAClB,GAAIrtC,EACJ,SAAUsrC,EACV,SAAU,CAAC4B,EAAQ,EAEpBnQ,EAAA,cAAM,QAAS9jC,EAAI,KAAA8pD,EACjBz0D,kBACE,OAAK,MAAK,eAAe,cAAY,OAAM,aAE5C,EAEA,GAED20D,GACH,EACF,EAEF,EAEN,iEC3DMI,GAAyBA,CAAC,CAAEx0D,OAAM+mD,WAAUj8C,QAAOjH,QAAOw6C,UAAU,GAAM/P,OAAM3mB,SAAQu2B,aAAY79C,QAAOZ,WAAUy0C,WAAUggB,OAAM,GAAG/iD,CAAK,IAAM,CACvJ,MAAMsrC,EAAsE/hD,GAAA,CAC1E,GAAI,CAAC2jD,EACH,OAAO3jD,EAAMg/C,iBAEfqN,WAAWrsD,EAAK,EAIhB,OAAA8yC,EAAA,IAAC2Q,IACC,KAAAn+C,EACA,MAAA8K,EACA,MAAAzK,EACA,WAAA69C,EACA,SAAAz+C,EACA,YAAa,CAAC,CAAE2K,KAAIo0C,kBACjBhR,MAAA,OAAI,GAAApjC,EACFud,WAAOpe,IAAI,CAAC,CAAE1F,MAAO4wD,EAAa3pD,MAAO4pD,GAAenhD,IACvD26B,OAAC,OAAI,UAAWM,EAAWR,GAAOiW,MAAO,CAAE,CAACjW,GAAO3tC,KAAK,EAAGA,EAAO,EAAe,KAAA6zD,EAC/E,UAAA1mB,MAAC,SACC,MAAOinB,EACP,KAAAz0D,EACA,KAAK,QACL,GAAIoK,EAAKmJ,EACT,SAAUkpC,EACV,QAAS54C,IAAU4wD,EACnB,SAAAh1D,EACA,SAAAy0C,EACA,mBAAkBsK,EAClB,GAAIrtC,EAAK,EAEVq8B,EAAA,aAAM,QAASpjC,EAAKmJ,EAAQmhD,SAAYA,EAAA,CAb+BnhD,IAc1E,CACD,CACH,EAEF,EAEN,qVCrCMohD,GAAmBC,GAAmC,CACtD,IAACA,EAAmB,YAElBnkD,QAAO,IAAIxO,KAAK2yD,CAAU,EAEhC,OAAOC,MAAMpkD,EAAKsd,QAAS,GAAI,KAAOtd,CACxC,EAEMqkD,GAAWjxD,GACRA,EAAQ,GAAKA,EAAQ,GAAK,IAAIA,CAAK,GAAKA,EAAMqF,WAGjD6rD,GAAQA,CAAClxD,EAAemxD,EAAaC,IAAgB/1B,KAAK81B,IAAIC,EAAK/1B,KAAK+1B,IAAID,EAAKnxD,CAAK,CAAC,EAEvFqxD,GAAiBA,CAACrxD,EAAemxD,EAAaC,IAAgB,CAClE,MAAME,EAASJ,GAAMryD,SAASmB,CAAK,EAAGmxD,EAAKC,CAAG,EAC1CJ,aAAMM,CAAM,EAAU,GAEnBtxD,EAAMd,OAAS,GAAKoyD,EAAS,GAAKL,GAAQK,CAAM,EAAIA,EAAOjsD,UACpE,EAEMksD,GAAkBA,CAACvxD,EAAemxD,EAAaC,IAAgB,CACnE,MAAME,EAASJ,GAAMryD,SAASmB,CAAK,EAAGmxD,EAAKC,CAAG,EAC1CJ,aAAMM,CAAM,EAAU,GAEnBtxD,EAAMd,OAAS,GAAKoyD,EAAS,GAAKL,GAAQK,CAAM,EAAIA,EAAOjsD,UACpE,EAEMmsD,GAA6BA,CAAC,CAClC9mB,YACAzjC,QACAzK,QACA69C,aACAr6C,QACAkjD,WACA7iB,SAAS,aACTlkC,OACAq+C,UACA6V,OACAz0D,WACA61D,UACAna,QACK,IAAM,CACLoa,QAAaZ,GAAgB9wD,CAAK,EAElC,CAAC8jB,EAAQk0B,CAAS,EAAI5L,WAAS,CACnCx/B,MAAM8kD,iBAAYC,UAAUtsD,aAAc,GAC1Cw7B,MAAO6wB,GAAcA,EAAWE,WAAa,GAAGvsD,WAAa,GAC7Dy7B,MAAM4wB,iBAAYG,cAAcxsD,aAAc,GAC/C,EAEKkB,EAAKyzC,GAAY,aAAc79C,CAAI,EACnCw+C,EAAeX,GAAY,cAAe79C,CAAI,EAE9C21D,EAAiBhjB,SAAyB,IAAI,EAE9CijB,EAAqBpnB,EACzBR,GAAO6nB,UACP,CACE,CAAC7nB,GAAO3tC,KAAK,EAAGA,GAElBkuC,CACF,EAEMunB,EAAep7D,GAA8C,CACjEA,EAAMq7D,cAAchC,SACpBuB,WAAU56D,EAAK,EAGXs7D,EAAiBt7D,GAAiD,OAClEA,KAAMgO,MAAQ,aAAeif,EAAOjtB,EAAMq7D,cAAc/1D,IAAiC,IAAM,GAChGtF,WAAMq7D,cAAcE,yBAApBv7D,QAA4Dw9C,QAEtDx9C,EAAMg/C,iBAGX,IAAC,UAAU1xC,KAAKtN,EAAMgO,GAAG,GAAKhO,EAAMgO,MAAQ,OAAShO,EAAMgO,MAAQ,YACrE,OAAOhO,EAAMg/C,gBACf,EAGImD,EAAcniD,GAA8C,CAC1D,MAAEsF,OAAM6D,SAAUnJ,EAAMwe,OAE9B2iC,EAAuBxZ,GAAA,CACf5xB,QAAOzQ,IAAS,OAASk1D,GAAerxD,EAAO,EAAG,EAAE,EAAIw+B,EAAQ5xB,KAChEi0B,EAAQ1kC,IAAS,QAAUk1D,GAAerxD,EAAO,EAAG,EAAE,EAAIw+B,EAAQqC,MAClEC,EAAO3kC,IAAS,OAASk1D,GAAerxD,EAAO,KAAM,IAAI,EAAIw+B,EAAQsC,KAEpE,OAAEl0B,OAAMi0B,QAAOC,OAAK,CAC5B,GAGGuxB,EAAqBA,CAACzlD,EAAci0B,EAAeC,IAAiB,SACxE,MAAMwxB,GAAyB1sD,SAAO2sD,yBAAyB3pB,OAAOiQ,iBAAiB9tB,UAAW,OAAO,IAA1EnlB,cAA6ET,IAEtGqtD,EAAW5lD,GAAQi0B,GAASC,EAAOT,EAAO3hC,QAAQ,OAAQoiC,CAAI,EAAEpiC,QAAQ,KAAMmiC,CAAK,EAAEniC,QAAQ,KAAMkO,CAAI,EAAI,GAEzFqe,gBAAK6mC,EAAetzB,QAASg0B,GAE/CC,QAAa,IAAIC,MAAM,QAAS,CAAEC,QAAS,GAAM,GAExCn0B,sBAASo0B,cAAcH,EAAU,EAG5C7Z,EAAgB/hD,GAA+C,OAC7D,MAAEsF,OAAM6D,SAAUnJ,EAAMwe,OACxBw9C,GAAch8D,IAAMq7D,gBAANr7D,cAAqBi8D,mBAEnClmD,EAAOzQ,IAAS,OAASo1D,GAAgBvxD,EAAO,EAAG,EAAE,EAAI8jB,EAAOlX,KAChEi0B,EAAQ1kC,IAAS,QAAUo1D,GAAgBvxD,EAAO,EAAG,EAAE,EAAI8jB,EAAO+c,MAClEC,EAAO3kC,IAAS,OAASo1D,GAAgBvxD,EAAO,EAAG,IAAI,EAAEf,MAAM,EAAG,CAAC,EAAI6kB,EAAOgd,KAE1EkX,EAAA,CAAEprC,OAAMi0B,QAAOC,OAAM,EAEZl0B,IAAMi0B,EAAOC,CAAI,GAE/B+xB,GAAe12D,IAAS,SAAW0kC,EAAM3hC,SAAW,GAAO/C,IAAS,QAAUyQ,EAAK1N,SAAW,IACjGxB,WAAW,IAAMm1D,EAAYxe,MAAM,EAAG,CAAC,CACzC,EAGF,aACGiG,GACC,WAAWyX,EACX,KAAA51D,EACA,WAAAk+C,EACA,MAAA79C,EACA,MAAAyK,EACA,QAAAuzC,EACA,KAAA6V,EACA,SAAAz0D,EACA,OAAA07C,EACA,YAAa,WACV,MAAI,WAAWnN,GAAO7uC,UAErB,UAAAquC,MAAC,QACC,KAAKmoB,EACL,GAAI,GAAGvrD,CAAE,UACT,UAAW4jC,GAAO4oB,YAClB,KAAA52D,EACA,SAAA+mD,EACA,eAAc1mD,EACd,mBAAkBm+C,EAAa,EAEhChR,EAAA,aACC,UAAWQ,GAAOlZ,MAClB,KAAK,OACL,YAAY,KACZ,MAAOnN,EAAOlX,KACd,QAASqlD,EACT,OAAQjZ,EACR,SAAUJ,EACV,UAAWuZ,EACX,UAAW,EACX,KAAK,SACL,GAAI,GAAG5rD,CAAE,QACT,aAAa,WAAU,EAExB,MACAojC,EAAA,aACC,UAAWQ,GAAOlZ,MAClB,KAAK,QACL,YAAY,KACZ,MAAOnN,EAAO+c,MACd,QAASoxB,EACT,OAAQjZ,EACR,SAAUJ,EACV,UAAWuZ,EACX,UAAW,EACX,KAAK,SACL,GAAI,GAAG5rD,CAAE,SACT,aAAa,aAAY,EAE1B,MACAojC,EAAA,aACC,UAAWQ,GAAOlZ,MAClB,KAAK,OACL,YAAY,OACZ,MAAOnN,EAAOgd,KACd,QAASmxB,EACT,OAAQjZ,EACR,SAAUJ,EACV,UAAWuZ,EACX,UAAW,EACX,KAAK,SACL,GAAI,GAAG5rD,CAAE,QACT,aAAa,YAAW,EAE5B,EAEF,EAEN,iECrLMysD,GAAuCA,CAAC,CAAExb,gBAAeG,WAAUsb,SAAQC,YAAWC,mBAAkBC,iBAAgBC,gBAAsB,IAAM,eAClJ,MAAE3zC,KAAMqqB,EAAe,SAAS,EAEhC,CAAE4O,WAAUU,eAAcT,eAAc90B,SAAQnS,SAAQymC,wBAAuBH,cAAeV,GAAiC,CACnIC,gBACAG,WACD,EAEK2b,EAAiBA,CAAC,CAAEtzD,QAAO6E,MAAK0uD,WAAU33D,WAAUyiC,aAA0C,CAClG,GAAI,CAACA,EACI,YAGT,MAAMva,EAAS9jB,iBAAOgE,MAAM,KAAK0B,IAAK6tD,GAAa,CACjD,KAAM,CAACvzD,EAAOiH,EAAQjH,CAAK,EAAIuzD,EAASvvD,MAAM,GAAG,EAE1C,OAAEhE,QAAOiH,QAAM,GAGlB6oC,EAAQ,CACZ3zC,KAAM0I,EACNq+C,SAAUiQ,EACV32D,MAAO,CAAC,CAAC62D,EAAexuD,CAAG,EAC3Bw1C,WAAYgZ,EAAexuD,CAAG,EAC9BjJ,WACAiJ,OASF,OAAIif,EAAO5kB,SAAW,GAAK4kB,EAAO,CAAC,EAAE9jB,QAAU,GACtC2pC,MAACgS,IAAU,MAAOyX,EAAevuD,CAAG,EAAG,MAAO0uD,EAAU,GAAIzjB,CAAS,GACnEhsB,EAAO5kB,SAAW,EACpByqC,EAAA,IAAC2mB,IAAS,QAAS,CAAC,CAAC8C,EAAevuD,CAAG,EAAG,MAAOif,EAAO,CAAC,EAAE9jB,MAAO,MAAOuzD,EAAU,cAAezvC,EAAO,CAAC,EAAE7c,MAAO,GAAI6oC,CAAS,GAC9HhsB,EAAO5kB,SAAW,EACpByqC,EAAA,IAACgnB,GAAM,QAAQ7sC,EAAQ,MAAOsvC,EAAevuD,CAAG,EAAG,MAAO0uD,EAAU,GAAIzjB,CAAS,GAC/EhsB,EAAO5kB,OAAS,EACjByqC,MAAAymB,GAAA,CAAS,QAAStsC,EAAQ,MAAOsvC,EAAevuD,CAAG,EAAG,MAAO0uD,EAAU,aAAc7zC,EAAE,gCAAgC,EAAOowB,IAAS,GAG1I,MAIP,OAAAzF,OAAC,QAAK,SAAUgP,EAAc,cAAa/B,OAAiC,WAAU,GACpF,UAAA3N,MAAC,MAAG,UAAWQ,GAAO3jC,MAAQkZ,WAAE,wBAAwB,EAAE,EACzD/N,EAAO8H,KACNkwB,MAAC4B,GAAa,SAAQ,QAAQ,QAAS,CAAC6M,EACrCzmC,SAAO8H,OACV,EACE,MACHw5C,IAAOO,oBAAPP,QAA0B50B,QACxBgM,OAAAqS,GAAM,SAAN,CACC,UAAA/S,MAACgS,GACC,OAAO73B,EAAO4L,UACd,SAAUkpB,EACV,MAAOl5B,EAAE,4BAA4B,EACrC,YAAaA,EAAE,4BAA4B,EAC3C,MAAO,CAAC,CAAC/N,EAAO+d,UAChB,WAAY/d,EAAO+d,UACnB,SAAUujC,EAAOO,kBAAkB53D,SACnC,KAAK,YACL,aAAa,YAAY,GAE1B+tC,MAAAgS,GAAA,CACC,MAAO73B,EAAO6L,SACd,SAAUipB,EACV,MAAOl5B,EAAE,4BAA4B,EACrC,YAAaA,EAAE,4BAA4B,EAC3C,MAAO,CAAC,CAAC/N,EAAOge,SAChB,WAAYhe,EAAOge,SACnB,SAAUsjC,EAAOO,kBAAkB53D,SACnC,KAAK,WACL,aAAa,aAAa,IAE9B,EACE,MACHq3D,IAAOQ,cAAPR,QAAoB50B,QACnBsL,EAAA,IAACgS,IACC,MAAO73B,EAAO2vC,YACd,SAAU7a,EACV,MAAOl5B,EAAE,+BAA+B,EACxC,YAAaA,EAAE,+BAA+B,EAC9C,MAAO,CAAC,CAAC/N,EAAO8hD,YAChB,WAAY9hD,EAAO8hD,YACnB,SAAUR,EAAOQ,YAAY73D,SAC7B,KAAK,cACL,aAAa,cAAc,GAE3B,MACHq3D,IAAOS,UAAPT,QAAgB50B,QACdgM,OAAAqS,GAAM,SAAN,CACC,UAAA/S,MAACgS,GACC,OAAO73B,EAAO4vC,QACd,SAAU9a,EACV,MAAOl5B,EAAE,0BAA0B,EACnC,YAAaA,EAAE,0BAA0B,EACzC,MAAO,CAAC,CAAC/N,EAAO+hD,QAChB,WAAY/hD,EAAO+hD,QACnB,SAAUT,EAAOS,QAAQ93D,SACzB,KAAK,UACL,aAAa,eAAe,GAE9B+tC,MAACgS,GACC,OAAO73B,EAAO6vC,SACd,SAAU/a,EACV,MAAOl5B,EAAE,2BAA2B,EACpC,YAAaA,EAAE,2BAA2B,EAC1C,MAAO,CAAC,CAAC/N,EAAOgiD,SAChB,WAAYhiD,EAAOgiD,SACnB,KAAK,WACL,aAAa,eAAe,GAE7BhqB,MAAAgS,GAAA,CACC,MAAO73B,EAAO8vC,KACd,SAAUhb,EACV,MAAOl5B,EAAE,uBAAuB,EAChC,YAAaA,EAAE,uBAAuB,EACtC,MAAO,CAAC,CAAC/N,EAAOiiD,KAChB,WAAYjiD,EAAOiiD,KACnB,SAAUX,EAAOS,QAAQ93D,SACzB,KAAK,OACL,aAAa,gBAAgB,GAE9B+tC,MAAAgS,GAAA,CACC,MAAO73B,EAAOwM,MACd,SAAUsoB,EACV,MAAOl5B,EAAE,wBAAwB,EACjC,YAAaA,EAAE,wBAAwB,EACvC,MAAO,CAAC,CAAC/N,EAAO2e,MAChB,WAAY3e,EAAO2e,MACnB,SAAU2iC,EAAOS,QAAQ93D,SACzB,KAAK,QACL,aAAa,gBAAgB,GAE9B+tC,MAAAgS,GAAA,CACC,MAAO73B,EAAO+vC,SACd,SAAUjb,EACV,MAAOl5B,EAAE,4BAA4B,EACrC,YAAaA,EAAE,4BAA4B,EAC3C,MAAO,CAAC,CAAC/N,EAAOkiD,SAChB,WAAYliD,EAAOkiD,SACnB,SAAUZ,EAAOS,QAAQ93D,SACzB,KAAK,WACL,aAAa,aAAa,IAE9B,EACE,MACHq3D,IAAOa,cAAPb,QAAoB50B,QACnBsL,EAAA,IAACgS,IACC,MAAO73B,EAAOgwC,YACd,SAAUlb,EACV,MAAOl5B,EAAE,+BAA+B,EACxC,YAAaA,EAAE,+BAA+B,EAC9C,MAAO,CAAC,CAAC/N,EAAOmiD,YAChB,WAAYniD,EAAOmiD,YACnB,SAAUb,EAAOa,YAAYl4D,SAC7B,KAAK,aAAa,GAElB,MACHq3D,IAAOc,YAAPd,QAAkB50B,QACjBsL,MAAC6nB,IACC,MAAO1tC,EAAOiwC,UACd,YAAqBpb,EAAS,YAAa9hD,EAAMq7D,cAAclyD,KAAK,EACpE,MAAO0f,EAAE,6BAA6B,EACtC,MAAO,CAAC,CAAC/N,EAAOoiD,UAChB,WAAYpiD,EAAOoiD,UACnB,SAAUd,EAAOc,UAAUn4D,SAC3B,KAAK,WAAW,GAEhB,KACHs3D,EAAUxtD,IAAkB4tD,KAAeC,CAAQ,CAAC,EACrD5pB,MAACuG,GACC,UAAW/F,GAAO6pB,SAClB,KAAK,SACL,MAAOt0C,EAAE,2BAA2B,EACpC,QAAQ,YACR,MAAM,UACN,KAAK,QACL,SAAUu4B,EACV,UAAS,KAEVA,GAAetO,EAAA,IAAAoB,GAAA,CAAe,sBAAqB,GAAC,OAAM,GAAG,CAChE,GAEJ,ECxMMkpB,GAAiBA,CAACr4D,EAAmBU,IAClCV,EAAWoZ,IAASpZ,SAASU,CAAO,EAAI4gB,KAAQJ,cAGnDo3C,GAAkBA,IAAM,CACtBpX,QAAoBphD,EAAU0uB,EAAiB,EAE/C6yB,EAAWC,KACX3O,EAAW4O,KACX,CAAEz9B,KAAMqqB,EAAe,SAAS,EAChC1hC,EAAcqB,EAAsBwgC,KAAE7hC,WAAW,EACjD,CAAEN,OAAM81C,WAAc4P,KAAS,gBAAiB3Q,EAAkB1wB,gBAAgB,EAClF,CAAEzjB,eAAgB4kD,GAAU,EAC5BK,EAAiBjlD,EAAYzJ,OAAS,EACtC,CAACk0D,EAAgBe,CAAiB,EAAI/nB,WAAiC,CAAE,GACzE,CAACinB,EAAgBe,CAAiB,EAAIhoB,WAAiC,CAAE,GAEzE6mB,EAAS1U,UAAQ,IAAM34C,OAAO2Q,aAAYxO,iBAAM2C,SAAShF,IAAc9F,GAAA,CAACA,EAAKiF,IAAKjF,CAAI,KAAM,EAAE,EAAG,CAACmI,CAAI,CAAC,EAEvGmrD,EAAY3U,UAChB,KAAOx2C,iBAAM2C,SAAS7E,OAAiBjG,GAAA,CAAC,CAAEA,EAAoC2zD,YAA8C,CAC5H,GAACxrD,CAAI,CACP,EAEMssD,EAAWhoB,cAAY,IAAM,CACjC,MAAMioB,EAAYjsD,IAAgBlQ,GAAaG,MAAS+P,IAAgBlQ,GAAaE,SAAWu1D,EAEhG3Q,EAASzO,EAAqBD,EAAU+lB,EAAY,eAAiB,SAAS,EAAG,CAAE51D,QAAS,GAAM,GACjG,CAACu+C,EAAU1O,EAAUlmC,EAAaulD,CAAc,CAAC,EAEpDne,YAAU,IAAM,CACT1nC,KAED,CAACA,EAAKm2B,kBAAoB,CAACn2B,EAAKo2B,2BACzBk2B,IAGPnB,GACgBttD,SAAO2Q,YAAY28C,EAAUxtD,IAAK6tD,GAAa,CAACA,EAAS1uD,IAAK,EAAE,CAAC,CAAC,CAAC,EAEtF,GAACkD,EAAMssD,EAAUnB,CAAS,CAAC,EAExB1b,QAAyC+G,UAAQ,IAAM,CAC3D,KAAM,CAAC7uB,EAAWC,CAAQ,GAAK,IAAM,SAC/BsjC,QAAOO,oBAAPP,QAA0B50B,QAAS,CAC/Bm1B,SAAoBP,IAAOO,oBAAPP,cAA0B70B,OACpD,MAAO,EAACo1B,iBAAmB9jC,YAAa,IAAI8jC,iBAAmB7jC,WAAY,EAAE,CAC/E,CAEO,OAAC,GAAI,EAAE,MAGT,OACLD,YACAC,WACAokC,UAAW,GACXN,YAAa,GACbK,YAAa,GACbJ,QAAS,GACTC,SAAU,GACVC,KAAM,GACNtjC,MAAO,GACPujC,SAAU,GACVvuC,QAAS,GACX,EACC,CAAC2tC,CAAM,CAAC,EAELsB,EAAyB19D,GAA+C,CACtEmJ,QAAQnJ,EAAMwe,OAAOtO,OAAS,YAAc,CAAClQ,EAAMwe,OAAOyjC,QAAU,GAAKjiD,EAAMwe,OAAOrV,MAE5Fm0D,EAAgC31B,IAAA,CAAE,GAAGA,EAAS,CAAC3nC,EAAMwe,OAAOlZ,IAAI,EAAG6D,CAAQ,KAGvEw0D,EAAiE,MAAO35C,EAAU,CAAEs9B,YAAWD,gBAAeG,2BAA0Bx4B,cAAe,0BACrJ40C,QAAkB/0C,EAAE,yCAAyC,EAC7D9K,EAASE,GAAO,EAAEC,MAAM,CAC5B2a,UAAWukC,GAAe,CAAC,GAAChB,IAAOO,oBAAPP,QAA0Br3D,UAAU64D,CAAe,EAC/E9kC,SAAUskC,GAAe,CAAC,GAAChB,IAAOO,oBAAPP,QAA0Br3D,UAAU64D,CAAe,EAC9EC,SAAUT,GAAe,CAAC,GAAChB,IAAOS,UAAPT,QAAgBr3D,UAAU64D,CAAe,EACpEd,SAAUM,GAAe,CAAC,GAAChB,IAAOS,UAAPT,QAAgBr3D,UAAU64D,CAAe,EACpEZ,SAAUI,GAAe,CAAC,GAAChB,IAAOS,UAAPT,QAAgBr3D,UAAU64D,CAAe,EACpEnkC,MAAO2jC,GAAe,CAAC,GAAChB,IAAOS,UAAPT,QAAgBr3D,UAAU64D,CAAe,EACjEb,KAAMK,GAAe,CAAC,GAAChB,IAAOS,UAAPT,QAAgBr3D,UAAU64D,CAAe,EAChEhB,YAAaQ,GAAe,CAAC,GAAChB,KAAOQ,cAAPR,SAAoBr3D,UAAU64D,CAAe,EAC3EV,WAAWd,IAAOc,YAAPd,QAAkBr3D,SACzBoZ,IACGpZ,SAAS64D,CAAe,EACxBjO,QAAQ,oBAAqB9mC,EAAE,uCAAuC,CAAC,EAC1ExC,KAAQJ,YAAY,EACxBg3C,YAAaG,GAAe,CAAC,GAAChB,IAAOa,cAAPb,QAAoBr3D,UAAU64D,CAAe,EAC5E,EAEK9iD,EAAiC,GAWnC,GATJuhD,EAAUrwD,QAAsB0wD,GAAA,CAC1BA,EAASl1B,SAAWk1B,EAAS33D,UAAY,CAACw3D,EAAeG,EAAS1uD,GAAG,IACvE8M,EAAO4hD,EAAS1uD,GAAG,EAAI6a,EAAE,yCAAyC,EACpE,CACD,EAED00C,EAAkBziD,CAAM,EAGpB,CAACkO,EAASjL,CAAM,GAAKhP,OAAOwI,KAAKuD,CAAM,EAAEzS,OAAQ,CACnDg5C,EAAc,EAAK,EACnBG,EAAyB,EAAI,EAC7B,MACF,CAEI,IACIsc,QAAe35B,GACnBp1B,OAAO2Q,YACL3Q,OAAOwI,KAAK4sB,CAAG,EACZn1B,OAAgBm1B,MAAIn2B,EAAG,IAAM,EAAE,EAC/Ba,IAAab,IAAA,CAACA,GAAKm2B,EAAIn2B,EAAG,CAAC,CAAC,CACjC,EACI+vD,EAAgB1B,EAAUxtD,IAE3B6tD,IAAA,CACCA,SAAUA,EAASA,SACnBsB,WAAYtB,EAAS1uD,IACrB7E,MAAOozD,EAAeG,EAAS1uD,GAAG,CAExC,IAEMi4C,QAAkBzwB,qBAAqBsoC,EAAY,CAAE,GAAG95C,EAAU+5C,eAAe,EAAC,EAE/EP,UACF73D,EAAgB,CACnBA,aAAiBT,OACTo8C,EAAA,CAAE1+B,KAAMjd,EAAMF,QAAS,CAErC,CAEA47C,EAAc,EAAK,GAGrB,OAAI2F,EAEAlU,EAAA,IAAC,OAAI,MAAO,CAAEmJ,OAAQ,KACpB,SAAAnJ,MAACoB,GAAe,QAAM,IACxB,GAKFpB,EAAA,IAACqpB,GACC,eAAAxb,EACA,OAAAyb,EACA,UAAAC,EACA,iBAAkBqB,EAClB,eAAAnB,EACA,eAAAC,EACA,SAAUmB,CACV,EAEN,ECtKA,SAAwBM,GAAmBxwD,EAAa,CAChDw4C,QAAoBphD,EAAU0uB,EAAiB,EAE/C,CAAEriB,OAAMvL,SAAUixD,GAAS,CAAC,aAAcnpD,CAAG,EAAG,IAAMw4C,EAAkB/tB,mBAAmBzqB,CAAG,EAAG,CACrG+5B,QAASye,EAAkBhyB,cAAcpwB,cACzC2yB,MAAO,GACR,EAEK0nC,EAAOxW,UAAQ,IACdx2C,EAEEA,EAAKmB,OAAO,CAAC6N,EAAKzS,KAAS,CAAE,GAAGyS,EAAK,GAAGzS,IAAQ,CAAsB,GAF3D,KAGjB,CAACyD,CAAI,CAAC,EAELvL,UAAS,CAACu4D,EACL,KAGFA,CACT,CCEA,MAAMC,GAA0DA,CAAC,CAAEjuD,OAAM/G,QAAQ,GAAIiH,QAAOnR,UAAS0kD,UAAS6V,OAAM,GAAGvgB,CAAM,IAAM,CAC3H,MAAEpwB,IAAGoB,QAASipB,EAAe,EAE7BkrB,EAAc1W,UAAQ,IACtBx3C,GAAQ,CAAC,UAAW,UAAU,EAAExK,SAASwK,CAAI,EACjCnB,OAAOwI,KAAK0S,EAAKo0C,kBAAkBp0C,EAAK9T,SAAUjG,CAAI,CAAC,EAExDrB,IAAekC,IAAA,CAC1B5H,MAAO4H,EACPX,MAAOyY,EAAE,GAAG3Y,CAAI,IAAIa,CAAI,EAAE,CAC1B,IAGA9R,EACK8P,OAAOhB,QAAQ9O,CAAO,EAAE4P,IAAI,CAAC,CAAC1F,EAAOiH,CAAK,KAAO,CAAEjH,QAAOiH,OAAQ,IAGpE,GACN,CAACF,EAAMjR,EAASgrB,EAAMpB,CAAC,CAAC,EAE3B,OAAQ3Y,EAAI,CACV,IAAK,QACH,OAAQ4iC,EAAA,IAAAgS,GAAA,CAAU,GAAI7L,EAAO,MAAO9zC,OAAOgE,CAAK,EAAG,MAAAiH,EAAc,OAAQqwC,MAAyB,GACpG,IAAK,QACH,aAAQqZ,GAAM,IAAI7gB,EAAO,MAAA7oC,EAAc,OAAQguD,EAAa,MAAOj5D,OAAOgE,CAAK,EAAG,cAAas3C,OAAuB,KAAA+Y,CAAc,GACtI,IAAK,SACL,IAAK,UACL,IAAK,WAED,OAAA1mB,EAAA,IAACymB,IACKtgB,KACJ,QAASmlB,EACT,MAAOj5D,OAAOgE,CAAK,EACnB,MAAAiH,EACA,aAAc6oC,EAAMlY,YACpB,OAAQ0f,OACR,KAAA+Y,CACA,GAEN,IAAK,aACH,OAAQ1mB,EAAA,IAAA6nB,GAAA,CAAU,GAAI1hB,EAAO,MAAO9zC,OAAOgE,CAAK,EAAG,MAAAiH,EAAc,OAAQqwC,MAAyB,GACpG,QACE,aAAQgZ,GAAaxgB,MAAO,cAAe7oC,EAAO,QAASlH,GAAyBC,CAAK,EAAG,cAAas3C,OAAuB,KAAA+Y,CAAc,EAClJ,CACF,kCCvDMjI,GAAwBA,CAAC,CAAEngB,KAAI0G,OAAMjF,WAAUgB,YAAW6F,UAASl7B,SAAQ,GAAG/H,CAAY,IAAM,CACpG,MAAM6nD,EAAgBxqB,EAAWR,GAAO7+B,KAAMo/B,CAAS,EAEvD,OAAIzC,EAEA0B,MAACyrB,IAAW,GAAAntB,EAAQ,UAAWktB,EAAe,QAAA5kB,EAAsBjjC,KACjEo8B,UACH,SAKD,IACC,MAAAiF,EACA,UAAWwmB,EACX,QAAA5kB,EACA,OAAAl7B,EACA,IAGEA,IAAW,SAAW,aAAe9W,OAEnC+O,KAEHo8B,UACH,EAEJ,2NCHM2rB,GAAoCA,CAAC,CACzC1d,WACAuL,WACAgB,SACApgC,SACAnS,SACAsmC,aACA6N,kBACAtkC,UACAM,oBACAwzC,gBACAC,kBACAC,gBACA3K,iBACAC,cACK,IAAM,CACL,MAAEprC,IAAGoB,QAASipB,EAAe,SAAS,EACtCwE,EAAW4O,KAEX4M,EAAMjb,SAAuB,IAAI,EACjC2mB,EAAW30C,EAAK9T,WAAajW,EAAIM,qBAAuBN,EAAIM,qBAAuBkH,OAEnFm3D,EAAsBzuD,GAAwC,CAC5D0uD,QAAiBC,GAAUC,SAAS5uD,CAAK,EACzC6uD,EAAiB,cAAc3xD,KAAKwxD,CAAc,EAClDI,EAAkB,gBAAgB5xD,KAAKwxD,CAAc,EAE3D,OAAIG,GAAkBC,EACbpsB,EAAA,IAAC,QAAK,wBAAyB,CAAEqsB,OAAQ/uD,CAAW,IAGtDA,GAGTwoC,mBAAU,IAAM,OACV99B,EAAO8H,QACTswC,IAAIvrB,UAAJurB,QAAakM,eAAe,CAAEC,SAAU,SAAUC,MAAO,QAASlrB,OAAQ,YAC5E,EACC,CAACt5B,EAAO8H,IAAI,CAAC,EAGd4wB,EAAA,KAAC,QAAK,SAAAsN,EAAoB,cAAaL,OAA6B,WAAU,GAC5E,UAAA3N,MAAC,MAAI,KAAAogB,EACFp4C,SAAO8H,aACL8xB,GAAa,SAAQ,QAAQ,QAAS,CAACua,EACrCn0C,SAAO8H,OACV,EACE,KACN,QACC,KAAG,WAAW0wB,GAAO3jC,MAAQkZ,WAAE,sBAAsB,EAAE,EACvDiqB,MAAAgS,GAAA,CACC,MAAO73B,EAAOqH,MACd,SAAA+3B,EACA,OAAAgB,EACA,MAAOxkC,EAAE,oBAAoB,EAC7B,YAAaA,EAAE,oBAAoB,EACnC,MAAO,CAAC,CAAC/N,EAAOwZ,MAChB,WAAYxZ,EAAOwZ,MACnB,KAAK,QACL,KAAK,QACL,aAAa,QACb,SAAQ,KAEVwe,MAAC0S,GACC,OAAOv4B,EAAO2H,SACd,SAAAy3B,EACA,OAAAgB,EACA,MAAOxkC,EAAE,uBAAuB,EAChC,YAAaA,EAAE,uBAAuB,EACtC,MAAO,CAAC,CAAC/N,EAAO8Z,SAChB,KAAK,WACL,aAAa,eACb,SAAQ,KAET3J,GACE6nB,MAAA,OAAI,UAAWQ,GAAOisB,aAAc,cAAY,oBAC9Ct0C,SAAkBpc,MAAiBgyB,GAAA,CAClC,MAAM2+B,EAAeb,EAAcvxD,KAAgBzH,OAAUk7B,EAAQv7B,IAAI,EAEzE,aACG64D,GAEC,MAAMt9B,EAAQ3wB,KACd,KAAM2wB,EAAQv7B,KACd,QAASu7B,EAAQ5hC,QACjB,MAAO4/D,EAAmBh+B,EAAQzwB,KAAK,EACvC,YAAaywB,EAAQE,YACrB,MAAO09B,EAAc59B,EAAQv7B,IAAI,GAAK,GACtC,SAAUu7B,EAAQ97B,SAClB,MAAO,CAAC,CAACy6D,EACT,WAAYA,EAAe32C,EAAE,6BAA6B,EAAInhB,OAC9D,SAAUg3D,EACV,KAAME,GAXD/9B,EAAQv7B,IAYb,CAEL,GACH,EAED,CAAC,CAAC0uD,GAAkBlhB,MAACigB,IAAe,QAASiB,EAAgB,IAAKC,EAAgB,EACnFnhB,MAACuG,GACC,UAAW/F,GAAO6pB,SAClB,KAAK,SACL,MAAOt0C,EAAE,uBAAuB,EAChC,QAAQ,YACR,MAAM,UACN,KAAK,QACL,SAAUu4B,EACV,UAAS,KAEV5N,EAAA,UAAE,UAAWF,GAAOqM,OAClB92B,YAAE,8BAA8B,EAAE,IAACiqB,MAACye,IAAK,GAAI5Z,EAAqBD,EAAU,OAAO,EAAI7uB,SAAEA,EAAA,eAAe,CAAE,IAC7G,GACE8B,GAAWy2B,IAAetO,MAACoB,IAAe,sBAAqB,GAAC,OAAM,GAAG,CAC7E,GAEJ,EC3IMurB,GAAeA,IAAM,CACnBxZ,QAAoBphD,EAAU0uB,EAAiB,EAE/C6yB,EAAWC,KACX3O,EAAW4O,KACX,CAAEz9B,KAAMqqB,EAAe,SAAS,EAChCgC,EAAWD,KACX,CAACwpB,EAAeiB,CAAgB,EAAInqB,WAA2C,CAAE,GACjF,CAACopB,EAAegB,CAAgB,EAAIpqB,WAAmB,CAAE,GAEzD,CAAEtqB,oBAAmBC,2BAA0BP,SAAQ,EAAID,EAAgB,CAAC,CAAEO,oBAAmBC,2BAA0BP,cAAe,CAC9IM,oBACAC,2BACAP,SACA,IAEI,CAAEspC,eAAcD,iBAAgBwB,mBAAoBC,GAAa,EAEjEmK,EAAkFA,CAAC,CAAEvE,mBAAoB,CAC7G,GAAI,CAACA,EAAe,OAEd,MAAE/1D,OAAM4K,MAASmrD,IACjBlyD,EAAQ+G,IAAS,WAAcmrD,EAAmCpZ,QAAUoZ,EAAclyD,MAEhGu2D,EAA+B/3B,IAAA,CAC7B,GAAGA,EACH,CAACriC,CAAI,EAAG6D,CACR,IAGFw2D,EAAkB7kD,GAAWA,EAAO9L,OAAcjP,OAAMuF,CAAI,CAAC,GAG/DszC,YAAU,IAAM,CACd,GAAI,CAAC3tB,EAAmB,CACtBg7B,EAAkB3wB,qBAAqB,EAEvC,MACF,CAEiBoO,KAAqBzY,CAAiB,CAAC,GACvD,CAACg7B,EAAmBh7B,CAAiB,CAAC,EAEzC,MAAM40C,EAAkB5B,GAAmBpmB,GAA2B,kBAAkB,CAAC,EAEnF,CAAE2K,eAAcT,eAAcI,aAAYl1B,SAAQnS,SAAQymC,wBAAuBH,cAAeV,GAA8B,CAClIC,cAAe,CAAErsB,MAAO,GAAIM,SAAU,EAAG,EACzCgsB,iBAAkB3iC,GAAO,EAAEC,MAAM,CAC/BoW,MAAOnW,IACJmW,MAAMzL,EAAE,uCAAuC,CAAC,EAChD9jB,SAAS8jB,EAAE,8BAA+B,CAAEmd,MAAOnd,EAAE,oBAAoB,EAAG,CAAC,EAChF+L,SAAUzW,EAAO,EACdwxC,QAAQ,gCAAiC9mC,EAAE,gCAAiC,CAAEmd,MAAOnd,EAAE,uBAAuB,CAAG,EAAC,EAClH9jB,SAAS8jB,EAAE,8BAA+B,CAAEmd,MAAOnd,EAAE,uBAAuB,EAAG,CAAC,EACnFkG,aAAc5Q,EAAO,EAAE8H,YAAY,EACpC,EACD46B,eAAgB,GAChBC,SAAU,MAAO,CAAExsB,QAAOM,cAAe,CACjC,MAAEiP,gBAAmBD,KAAwB3Y,GAAqB,GAAIwzC,CAAa,EAEzF,GAAI56B,EAAex7B,OACjBs3D,QAAiB97B,CAAc,EACzB,IAAI3+B,MAAM2jB,EAAE,6BAA6B,CAAC,EAG5CkG,QAAe,MAAMymC,IAErBvP,QAAkBrmD,SAAS00B,EAAOM,EAAUmd,OAAO2F,SAASI,KAAMnU,GAAyB1Y,EAAmBwzC,CAAa,EAAG1vC,CAAY,CAClJ,EACAgyB,gBAAiBA,IAAM,CACZl4B,IAAE,sBAAsB,EAAG,SAAS,EACpC8uB,IAAqBD,EAAU,kBAAkB,CAAC,CAC7D,EACD,EAGC,OAAA5E,MAAC0rB,IACC,SAAUhc,EACV,SAAUT,EACV,gBAAiB6d,EACjB,OAAQzd,EACR,OAAAl1B,EACA,OAAAnS,EACA,cAAA6jD,EACA,gBAAiBpd,EACjB,WAAAH,EACA,cAAAqd,EACA,kBAAAxzC,EACA,QAASN,GAAWO,EACpB,gBAAA20C,EACA,eAAA7L,EACA,aAAAC,CACA,EAEN,yHC7EM6L,GAA6BA,CAAC,CAAEhf,WAAUuL,WAAUp/B,SAAQnS,SAAQm0C,kBAAiB7N,aAAYpuC,UAAgB,IAAM,CAC3H,KAAM,CAAC2yC,EAAcC,CAAkB,EAAIlD,GAAU,EAC/C,CAAE75B,KAAMqqB,EAAe,SAAS,EAChCwE,EAAW4O,KAGf,OAAA9S,EAAA,KAAC,QAAK,SAAAsN,EAAoB,cAAaL,OAAsB,WAAU,GACpE3lC,UAAO8H,OACLkwB,MAAA4B,GAAA,CAAa,QAAQ,QAAQ,QAAS,CAACua,EACrCn0C,SAAO8H,OACV,EACE,WACH,KAAG,WAAW0wB,GAAO3jC,MAAQkZ,WAAE,eAAe,EAAE,EAChDiqB,EAAA,IAAAgS,GAAA,CACC,MAAO73B,EAAOqH,MACd,SAAA+3B,EACA,MAAOxjC,EAAE,aAAa,EACtB,YAAaA,EAAE,aAAa,EAC5B,MAAO,CAAC,CAAC/N,EAAOwZ,MAChB,WAAYxZ,EAAOwZ,MACnB,KAAK,QACL,KAAK,QACL,SAAQ,GACR,OAAO,oBACP,aAAa,QAAO,EAEtBwe,MAACgS,GACC,OAAO73B,EAAO2H,SACd,SAAAy3B,EACA,MAAOxjC,EAAE,gBAAgB,EACzB,YAAaA,EAAE,gBAAgB,EAC/B,MAAO,CAAC,CAAC/N,EAAO8Z,SAChB,WAAY9Z,EAAO8Z,SACnB,KAAK,WACL,KAAM+wB,EAAe,OAAS,WAC9B,aACE7S,EAAA,IAACkN,GAAW,cAAYn3B,EAAE,qBAAqB,EAAG,QAAS,IAAM+8B,EAAmB,EAAG,eAAcD,EACnG,eAACxF,EAAK,MAAMwF,EAAeG,GAAaC,EAAc,GACxD,EAEF,SAAQ,GACR,OAAO,uBACP,aAAa,kBAAkB,GAEhC3E,GAAetO,EAAA,IAAAoB,GAAA,CAAe,sBAAqB,GAAC,OAAM,GAAG,EAC7DpB,MAAAye,GAAA,CAAK,UAAWje,GAAO7+B,KAAM,GAAIkjC,EAAqBD,EAAU,iBAAiB,EAC/E7uB,SAAEA,EAAA,uBAAuB,CAC5B,SACCwwB,EAAO,MAAK,SAAS,MAAOxwB,EAAE,eAAe,EAAG,QAAQ,YAAY,MAAM,UAAU,KAAK,QAAQ,SAAUu4B,EAAY,UAAS,KAChI5N,EAAA,UAAE,UAAWF,GAAOqM,OAClB92B,YAAE,uBAAwB,CAAE7V,WAAU,EAAE,IAAC8/B,MAACye,IAAK,GAAI5Z,EAAqBD,EAAU,gBAAgB,EAAI7uB,SAAEA,EAAA,eAAe,CAAE,IAC5H,CACF,GAEJ,ECzEMk3C,GAAQA,IAAM,CACZ9Z,QAAoBphD,EAAU0uB,EAAiB,EAE/C,CAAEvgB,UAAaH,IAAsBwgC,KAAEtgC,MAAM,EAC7CqzC,EAAWC,KACX3O,EAAW4O,KACX,CAAEz9B,KAAMqqB,EAAe,SAAS,EAChCgC,EAAWD,KAEX4qB,EAAkB5B,GAAmBlsB,OAAO2F,SAASI,KAAK3qC,MAAM,GAAG,EAAE,CAAC,CAAC,EAEvE,CAAE8f,SAAQnS,SAAQsmC,aAAYG,wBAAuBiB,eAAcT,gBAAiBrB,GAAuB,CAC/GC,cAAe,CAAErsB,MAAO,GAAIM,SAAU,EAAG,EACzCgsB,iBAAkB3iC,GAAO,EAAEC,MAAM,CAC/BoW,MAAOnW,IACJmW,MAAMzL,EAAE,gCAAgC,CAAC,EACzC9jB,SAAS8jB,EAAE,uBAAwB,CAAEmd,MAAOnd,EAAE,aAAa,EAAG,CAAC,EAClE+L,SAAUzW,EAASpZ,WAAS8jB,EAAE,uBAAwB,CAAEmd,MAAOnd,EAAE,gBAAgB,EAAG,CAAC,EACtF,EACDi4B,SAAUA,CAAC,CAAExsB,QAAOM,cAAeqxB,EAAkBtxB,MAAML,EAAOM,EAAUmd,OAAO2F,SAASI,IAAI,EAChGiJ,gBAAiBA,IAAM,CACZl4B,IAAE,uBAAuB,EAAG,SAAS,EACrC8uB,IAAqBD,EAAU,IAAI,CAAC,CAC/C,EACAsJ,cAAeA,CAAC,CAAEyB,gBAAiBA,EAAW,UAAU,EACzD,EAED,OACG3P,MAAAgtB,GAAA,CACC,OAAA7yC,EACA,gBAAiBs0B,EACjB,OAAAzmC,EACA,WAAAsmC,EACA,SAAApuC,EACA,gBAAA6sD,EACA,SAAUrd,EACV,SAAUT,CACV,EAEN,sCCrBMie,GAAe,CAAC,QAAS,iBAAkB,kBAAmB,iBAAkB,oBAAqB,eAAe,EAgCpHC,GAAeA,IAAM,CACzB,MAAM7Z,EAAWC,KACX3O,EAAW4O,KACX4Z,EAAY/nB,GAAc,GAAG,EAC7BgoB,EAAeloB,SAAOioB,CAAS,EAC/Bz6D,EAAU0yC,GAAc,SAAS,EACjC,CAAExtB,UAAStK,MAAK,EAAIqK,EAAgB,CAAC,CAAEC,UAAStK,WAAY,CAAEsK,UAAStK,SAAS6tC,EAAO,EACvFn7C,EAASF,EAAsBwgC,KAAEtgC,MAAM,EACvC,CACJK,OAAQ,CAAEwU,QAAO,EACjB5U,UACED,IACEqtD,EAAeF,GAAaF,GAAat6D,SAASw6D,CAAS,EAE3DG,EAAUtoB,GAAiB,IAAM,CAC5BJ,IAAqBD,EAAU,OAAO,CAAC,EACjD,EAGK4oB,EAAO5Y,UAAQ,KACfwY,MAAwBv4B,QAAUu4B,GAC/BC,EAAax4B,SACnB,CAACu4B,CAAS,CAAC,EAEdtnB,YAAU,IAAM,CACRsnB,GAAa,CAACv1C,GAAW,CAACtK,GAAQ,CAAC+/C,GAC/BC,GACV,EACC,CAACH,EAAWv1C,EAASy1C,EAAc//C,EAAMggD,CAAO,CAAC,EAE9CphB,QAAelH,GAAiB,IAAM,CAC1CqO,EAAS3O,GAAsBC,EAAU,CAAEE,EAAG,KAAMnyC,QAAS,IAAM,EAAC,EACrE,EAEK86D,EAAaA,IAAM,CACvB,GAAI,CAAClgD,GAAQsK,GAAW,CAACy1C,EAErB,OAAAttB,EAAA,IAAC,OAAI,MAAO,CAAEmJ,OAAQ,KACpB,SAAAnJ,MAACoB,GAAe,QAAM,IACxB,GAIJ,OAAQosB,EAAI,CACV,IAAK,QACH,aAAQP,GAAQ,IAClB,IAAK,iBACH,aAAQN,GAAe,IACzB,IAAK,mBACH,aAAQpC,GAAkB,IAC5B,IAAK,eACH,aAAQ3E,GAAc,IACxB,IAAK,YACH,aAAQ9J,GAAkB,IAC5B,IAAK,uBACH,aAAQ8J,GAAc,IACxB,IAAK,6BACH,OAAQ5lB,MAAAyV,GAAA,CAAoB,KAAK,QAAQ,mBAAoBtJ,CAAgB,GAC/E,IAAK,+BACH,OAAQnM,MAAAyV,GAAA,CAAoB,KAAK,UAAU,mBAAoBtJ,CAAgB,GACjF,IAAK,+BACH,OAAQnM,MAAAyV,GAAA,CAAoB,KAAK,UAAU,mBAAoBtJ,CAAgB,GACjF,IAAK,WACH,aAAQ0W,GAAW,IACrB,IAAK,gBACH,aAAQrb,GAAc,MAAK,QAAQ,QAAA70C,EAAkB,mBAAoBw5C,CAAgB,GAC3F,IAAK,oBACH,aAAQ3E,GAAc,MAAK,YAAY,QAAA70C,EAAkB,mBAAoBw5C,CAAgB,GAC/F,IAAK,UACH,aAAQ/E,GAAQ,oBAAoB+E,EAAc,qBAAsBA,EAAc,SAAAjsC,CAAsB,GAC9G,IAAK,iBACI,OAAA8/B,EAAA,IAACuc,GAAc,MAAK,OAAU,GACvC,IAAK,kBACI,OAAAvc,EAAA,IAACuc,GAAc,MAAK,QAAW,GACxC,IAAK,eACI,OAAAvc,EAAA,IAAC0tB,GAAa,MAAK,KAAQ,GACpC,IAAK,iBACL,IAAK,8BACH,aAAQxa,GAAqB,IAC/B,IAAK,2BACH,aAAQ0C,GAA+B,IACzC,IAAK,oBACI,OAAA5V,EAAA,IAACuc,GAAc,MAAK,cAAiB,GAC9C,IAAK,gBACH,aAAQmR,GAAe,IACzB,IAAK,cACH,aAAQ9P,GAAqB,IAC/B,IAAK,qBACH,aAAQR,GAAoB,IAC9B,IAAK,iBACL,IAAK,yBACI,OAAApd,EAAA,IAAC0Y,GAAoB,oBAAoBvM,CAAgB,GAClE,IAAK,sBACH,aAAQoJ,GAAoB,IAC9B,IAAK,mBACH,aAAQjB,GAAkB,GAC9B,GAGIqZ,EAAmB,CAAC,CAAC,iBAAkB,8BAA+B,YAAa,0BAA0B,EAAE/6D,SAAS46D,GAAQ,EAAE,EAClII,EAAa,CAAC,6BAA6B,EAAEh7D,SAAS46D,GAAQ,EAAE,EAAI,QAAU,QAGlF,OAAA9sB,OAACgN,IAAO,KAAMkgB,EAAY,KAAM,CAAC,CAACR,EAAW,QAASjhB,EACnDwhB,aAAoB74C,GACnBkrB,MAAC,MAAI,WAAWQ,GAAO1rB,OACrB,SAACkrB,MAAA,OAAI,IAAKlrB,EAAQ,IAAI,EAAE,GAC1B,EAED24C,EAAW,CACd,GAEJ,EC5KaI,GAAc,CACzBC,QAAS,CACPlxD,GAAI,WACJU,MAAO,aACT,EACAywD,QAAS,CACPnxD,GAAI,WACJU,MAAO,UACT,EACA0wD,mBAAoB,CAClBpxD,GAAI,WACJU,MAAO,qBACT,EACA2wD,YAAa,CACXrxD,GAAI,WACJU,MAAO,oBACT,EACA4wD,UAAW,CACTtxD,GAAI,WACJU,MAAO,sBACT,EACA6wD,aAAc,CACZvxD,GAAI,WACJU,MAAO,eACT,EACA8wD,cAAe,CACbxxD,GAAI,WACJU,MAAO,gBACT,EACA+wD,yBAA0B,CACxBzxD,GAAI,WACJU,MAAO,wBACT,EACAgxD,KAAM,CACJ1xD,GAAI,WACJU,MAAO,aACT,CACF,EC7BMixD,GAAmDV,GACC,CAExD,GAAG5xD,OAAOke,OAAOo0C,EAAO,EAAExyD,IAAI,CAAC,CAAEa,KAAIU,OAAM,KAAO,CAAEjH,MAAOuG,EAAIU,MAAO,GAAGV,EAAGrH,OAAS,EAAI,WAAaqH,CAAE,MAAMU,CAAK,EAAG,EAAE,CAAC,ECN3H,MAAMkxD,GAAwBz8D,EAAUs0B,EAAa,EAUxCooC,GAAkBA,CAAC9zD,EAAa+zD,IAA6B,CACxE,MAAMnvB,EAAcovB,KACd,CAAEx3C,QAASipB,EAAe,EAE1Btf,EAAsBA,IAAMye,EAAYqvB,kBAAkB,CAAE7K,SAAU,CAAC,cAAc,EAAG,EAExF,CAAE3lD,OAAM81C,YAAWrhD,QAAOg8D,YAAWC,WAAYhL,GACrD,cACA,IAAM0K,GAAsB3nC,cAAclsB,EAAKwc,EAAK9T,SAAUyd,CAAmB,EACjF,CACEiuC,gBAAiB,GACjBrrC,MAAO,EACP+3B,UAAsB9zC,GAAA,CACpBtO,GAAS,YAAa,0BAA2B,CAAE,GAAGsO,EAAO,EAC7D+mD,EAAQ/mD,iBAAO1H,MAAM,CACvB,EACA+uD,UAAW9+D,GACXyvC,UAAWxvC,GAEf,EAEO,OACLiO,OACA81C,YACArhD,QACAg8D,YACAC,UAEJ,EC5CaG,GAAuBhvD,GAAmB,CAC/CivD,QAAOrsB,SAAS0J,cAAc,OAAO,EACrC,CAAEj4B,iBAAgBjB,kBAAiBkB,oBAAqBtU,EAAOa,SAAW,GAC1EquD,EAAW/hE,EAAIW,cACfqhE,EAAchiE,EAAIY,kBAExB,GAAKkhE,EAUL,IARAA,EAAKz4B,MAAM44B,YAAY,oBAAqB/6C,GAAkB,MAAM,EACpE46C,EAAKz4B,MAAM44B,YAAY,6BAA8B/6C,EAAiB5e,GAAuB4e,CAAc,EAAI,MAAM,EAEjHC,IACGkiB,QAAM44B,YAAY,sBAAuB96C,CAAgB,EAC9D26C,EAAKz4B,MAAM44B,YAAY,0BAA2B35D,GAAuB6e,CAAgB,CAAC,GAGxFlB,EAAiB,CACbi8C,QAAY55D,GAAuB2d,CAAe,EACnDojB,QAAM44B,YAAY,0BAA2Bh8C,CAAe,EAC5DojB,QAAM44B,YAAY,eAAgBC,CAAS,EAE5CA,IAAc,YAEX74B,QAAM44B,YAAY,qBAAsB,MAAM,EAE9C54B,QAAM44B,YAAY,gCAAiC,SAAS,EAE5D54B,QAAM44B,YAAY,yBAA0B,SAAS,EAE9D,CAEIF,GACG14B,QAAM44B,YAAY,qBAAsBF,CAAQ,EAGnDC,GACG34B,QAAM44B,YAAY,yBAA0BD,CAAW,EAEhE,6GCzBMG,GAAsCA,CAAC,CAAEznB,OAAMjrC,QAAOwS,OAAM2tC,YAAWlS,UAASnE,MAAY,IAAM,CAChG,MAAE5wB,KAAMqqB,EAAe,QAAQ,EAErC,OACGM,OAAAgN,GAAA,CAAO,KAAA5F,EAAY,QAAAgD,EAAkB,KAAK,cACzC,UAAA9K,EAAA,IAAC,KAAG,WAAWQ,GAAO3jC,MAAQA,SAAMA,EAAA,EACnCmjC,EAAA,SAAE,UAAWQ,GAAOnxB,KAAOA,SAAKA,EAAA,EACjC2wB,MAACuG,GACC,UAAW/F,GAAO0c,cAClB,MAAOnnC,EAAE,6BAA6B,EACtC,QAAS,YACT,MAAO4wB,EAAO,UAAY,UAC1B,QAASqW,EACT,UAAS,GACT,SAAUrW,EACV,KAAAA,EAAW,EAEZ3G,EAAA,IAAAuG,EAAA,CAAO,MAAOxwB,EAAE,2BAA2B,EAAG,QAAQ,WAAW,QAAS+0B,EAAS,UAAS,GAAC,SAAUnE,CAAK,EAC/G,GAEJ,EChCM6oB,GAA0BA,IAAM,CACpC,MAAM38D,EAAQ48D,KAEP,OAAAzvB,MAACE,IAAU,MAAArtC,CAAgB,EACpC,0ECFM68D,GAAW,IAAIC,GAAOC,SAC5BF,GAAS/tD,KAAO,CAACqjC,EAAcnoC,EAAe/H,IAAiB,CAC7D,MAAM+6D,EAAe,uBAAuBr1D,KAAKwqC,GAAQ,EAAE,EACrD8qB,EAAaD,EAAe,kBAAoBj7D,OAChDm7D,EAAUF,EAAe,iBAAmBj7D,OAC5Co7D,EAAYnzD,EAAQ,UAAUA,CAAK,IAAMjI,OACzCq7D,EAAa,CAACH,EAAYC,EAASC,CAAS,EAAE9zD,OAAO1F,OAAO,EAE3D,kBAAYwuC,CAAI,KAAKirB,EAAW10D,KAAK,GAAG,CAAC,IAAIzG,CAAI,MAC1D,EAGA,MAAMo7D,GAAiB,IAAIP,GAAOC,SAAS,CAAEO,IAAK,EAAM,CAAC,EACzDD,GAAejsD,MAAQ,IAAM,GAC7BisD,GAAevuD,KAAO+tD,GAAS/tD,KAS/B,MAAMyuD,GAAqCA,CAAC,CAAEC,iBAAgBtvB,YAAWxmC,MAAM,MAAO+mC,SAAS,EAAM,IAAM,CACnGgvB,QAAsB1b,UAAQ,IAAM,CACxC,MAAM2b,EAAkBjvB,EAASquB,GAAOa,YAAYH,EAAgB,CAAEX,SAAUQ,GAAgB,EAAIP,GAAO34C,MAAMq5C,EAAgB,CAAEX,YAAU,EAEtIzD,UAAUC,SAASqE,EAAiB,CAAEE,SAAU,CAAC,QAAQ,EAAG,GAClE,CAACnvB,EAAQ+uB,CAAc,CAAC,EAEpBtd,UAAMlK,cAActuC,EAAK,CAC9Bm2D,wBAAyB,CAAErE,OAAQiE,CAAoB,EACvDvvB,UAAWC,EAAWR,GAAOmwB,SAAUrvB,GAAUd,GAAOc,OAAQP,CAAS,EAC1E,CACH,oCCnCM6vB,GAAQA,UA4BJR,GAAkB,WAAW5vB,GAAOqwB,MAAO,eA3B9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBA2B8D,GCrB/EC,GAAkB9gC,GAA4B,EAAE,EAEzC+gC,GAA0BA,CAAC,CACtC3zD,OACAC,YACAgD,SACAq0B,UACAs8B,qBACAvoD,SAAS,CAAC,EACV82B,cACAl8B,UAUF,IAAM,CACE8I,QAAapa,EAAUsQ,EAAU,EAEhC,OACLqyB,QAAS,CAAC,CAACr3B,GAAaq3B,EACxBqvB,SAAU,CAAC,WAAY3mD,EAAMC,EAAWoL,EAAQpF,CAAQ,EACxD2gD,QAAS,SAAY,OACf5mD,OAAS/L,GAAqBC,SAAU,CAC1C,MAAMA,EAAW,MAAM6a,EAAW9B,gBAAgBhN,EAAWoL,EAAQpF,CAAQ,EAGnE/R,6CAAU4H,QAA0BpC,GAAA,CAC5CyoC,EAAY0xB,aAAa,CAAC,QAASn6D,EAAagH,OAAO,EAAGhH,CAAY,IAGjExF,UACE8L,IAAS/L,GAAqBI,aAGhCgS,OAFa,MAAM0I,EAAWzB,eAAe,CAAErK,SAAQzD,GAAIS,EAAWgG,WAAU,CAI3F,EACAytD,gBAAiBzzD,GAAa2zD,EAAqBF,GAAkBl8D,OACrEm6D,gBAAkB3wD,GACXA,IAEehI,GAAyBgI,EAAK0wD,OAAO,GAAK1wD,EAAK9M,SAAS2N,KAAKlI,EAAsB,GAElF,IAAO,GAJV,GAMpB2sB,MAAO,GAEX,EAEwBwtC,YACtB7zD,EACAoL,EAA4B,GAC5BisB,EAAmB,GACnBs8B,EAA8B,GAC9B5zD,EAAoB/L,GAAqBC,SACzC,CAEM,MAAE6lB,QAASipB,EAAe,EAC1B/8B,EAAW8T,EAAK9T,SAEhBk8B,EAAcovB,KACdtuD,EAASN,EAA0B4mB,KAAM1mB,OAAOI,MAAM,EAEtD8wD,EAAeJ,GAAwB,CAAE3zD,OAAMC,YAAWgD,SAAQoI,SAAQ82B,cAAa7K,UAASs8B,qBAAoB3tD,WAAU,EAEpI,OAAOygD,GAAyCqN,CAAY,CAC9D,CClEA,MAAMC,GAAkBh0D,GAA8C,CAAChP,GAAgB6Q,KAAMoyD,GAAUA,IAAUj0D,CAAI,EAE/Gk0D,GAAeA,CAAC/wD,EAAoBgxD,EAAiC38D,SAAc,CACjF0Q,QAAavW,GAAe2M,WAC5B6jC,EAAcovB,KAEdtuD,EAASN,EAA0B4mB,KAAM1mB,OAAOI,MAAM,EACtD7O,EAAYgtB,GAA6BmI,KAAM9N,aAAa,EAC5D9K,EAAe2K,GAAgCiO,KAAM9N,aAAa,EAGlE,CAAE1B,QAASipB,EAAe,EAE1BoxB,EAAkBC,GACtBlxD,EAAQxE,IAAI,CAAC,CAAEsB,YAAWD,QAAQ2I,IAC5BqrD,GAAeh0D,CAAI,EACd2zD,GAAwB,CAC7Br8B,QAAS,CAAC68B,GAAcA,EAAaxrD,EACrC3I,OACAiD,SACAhD,YACAkiC,cACAyxB,mBAAoB,GACpBvoD,OAAQ,CAAEnD,YAAW,EACrBjC,SAAU8T,EAAK9T,SAChB,EAGI,CAAEqxB,QAAS,GACnB,CACH,EAgBOhtB,OAd2BnH,EAAQxE,IAAI,CAAC,CAAEqB,QAAQ2I,IAAU,CAC7D3I,OAASnP,GAAcE,UAAkB,OAAEiQ,KAAM5M,EAAW0iD,UAAW,GAAO2a,UAAW,IACzFzxD,OAASnP,GAAcC,iBAAyB,OAAEkQ,KAAM2P,EAAcmmC,UAAW,GAAO2a,UAAW,IAEjG,MAAEzwD,OAAMywD,YAAWh8D,QAAO6+D,qBAAsBF,EAAgBzrD,CAAK,EAEpE,OACL3H,OACAywD,YACAh8D,QACA6+D,oBACF,CACD,CAGH,EC/DaC,GAAqBz2D,GAAgB,CAC1C,MAAEic,QAASipB,EAAe,EAEhC,MAAO,GAAGllC,CAAG,IAAIic,EAAK9T,QAAQ,EAChC,ECLMuuD,GAAkBzrB,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,+CAA+C,CAAE,CAAC,ECAnP4kB,GAAmB1rB,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,gDAAgD,CAAE,CAAC,ECI9O6kB,GAAkCA,CAACC,EAA4Br+D,IAAyD,CAC/H,OAAOq+D,EAAWrkC,iBAAqB,IACzCqkC,EAAWC,YAAYt+D,CAAQ,EAEpBg6B,mBAAiB,SAAUh6B,CAAQ,CAElD,EAOau+D,GAAqCA,CAACF,EAA4Br+D,IAAyD,CAClI,OAAOq+D,EAAWnmB,oBAAwB,IAC5CmmB,EAAWG,eAAex+D,CAAQ,EAEvBk4C,sBAAoB,SAAUl4C,CAAQ,CAErD,ECpBMy+D,GAAiCC,WAAW,+BAA+B,EAC3EC,GAAiCD,WAAW,sDAAsD,EAClGE,GAAiCF,WAAW,uDAAuD,EACnGG,GAAiCH,WAAW,wDAAwD,EAE9FI,WACVC,eACAC,eACAC,eACAC,eACAC,eALUL,WAgBZ,MAAMM,GAAgBA,IAChBX,GAAetV,QAAgB2V,EAC/BH,GAAexV,QAAgB2V,EAC/BF,GAAezV,QAAgB2V,EAC/BD,GAAe1V,QAAgB2V,EACvBA,EAGRO,GAAgBA,IAAkB,CACtC,KAAM,CAACC,EAAYC,CAAa,EAAIxwB,WAAqB,IAAMqwB,IAAe,EAE9EhtB,mBAAU,IAAM,CACd,MAAMotB,EAAqBA,IAAYD,EAAcH,GAAe,GAEpEhB,UAAgCK,GAAgBe,CAAkB,EAClEpB,GAAgCO,GAAgBa,CAAkB,EAClEpB,GAAgCQ,GAAgBY,CAAkB,EAClEpB,GAAgCS,GAAgBW,CAAkB,EAE3D,IAAM,CACXjB,GAAmCE,GAAgBe,CAAkB,EACrEjB,GAAmCI,GAAgBa,CAAkB,EACrEjB,GAAmCK,GAAgBY,CAAkB,EACrEjB,GAAmCM,GAAgBW,CAAkB,EAEzE,EAAG,CAAE,GAEEF,CACT,ECpDMG,GAAWhtB,GAA0B8G,gBAAoB,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,GAAyB8G,gBAAoB,OAAQ,CAAE,KAAM,eAAgB,EAAG,6OAA6O,CAAE,CAAC,ECAhcmmB,GAAYjtB,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAK,EAAoB8G,gBAAoB,OAAQ,CAAE,EAAG,gBAAiB,KAAM,MAAQ,GAAmBA,EAAmB,cAAC,OAAQ,CAAE,EAAG,qIAAuI,EAAC,oCCatZomB,GAAWA,CAAC14D,EAAa24D,IACtB54D,GAAUC,EAAK,CAAE24D,IAAG,EAGvB1xD,OAAY2xD,IAEZC,GAAkB,MAAOC,EAAgBttD,IAAkB,CACzDutD,QAAaL,GAASI,EAAQttD,CAAK,EACzC,IAAIxL,EAAM+4D,EAEN9xD,MAAM+xD,IAAID,CAAU,EACf9xD,UAAM6P,IAAIiiD,CAAU,EAGzB,IACIv1D,QAAW,MAAMoJ,MAAMmsD,CAAU,EAGnCv1D,EAASy1D,aACXj5D,EAAMwD,EAASxD,IAAI5F,QAAQ,QAAS,IAAIoR,CAAK,EAAE,GAG3C3K,OAAIk4D,EAAY/4D,CAAG,QAClB9H,EAAO,CACdyG,GAAQ,QAAS,wBAAyB,CAAEzG,QAAO8H,MAAK,CAC1D,CAEOA,QACT,EAEMk5D,GAAQ3T,aAAoC,CAAC,CAAEnf,YAAW98B,QAAO6vD,SAAQC,MAAM,GAAI5tD,QAAQ,GAAI,EAAGi6C,IAAQ,CAC9G,KAAM,CAACh6C,EAAK4tD,CAAM,EAAIvxB,WAAwB,IAAI,EAoB9C,OAlBJqD,YAAU,IAAM,CACd,GAAI,CAAC7hC,EAAO,QAEM,SAAY,CAC5B,MAAMgwD,EAAgB,MAAMT,GAAgBvvD,EAAOkC,CAAK,EAExD6tD,EAAOC,CAAa,EACXH,GAAA,MAAAA,GAAA,IASV,GAAC7vD,EAAOkC,EAAO2tD,CAAM,CAAC,EAEpB1tD,EAEG45B,EAAA,UAAI,KAAAogB,EAAU,UAAW,GAAGrf,CAAS,IAAIP,GAAOv8B,KAAK,GAAI,IAAAmC,EAAU,IAAA2tD,CAAY,GAFtE,IAGnB,CAAC,EAEDG,GAAenhB,GAAMohB,KAAKN,EAAK,w+BCnDlBO,GAAiBhhE,OAAO,MAAM,EAqB3C,SAASihE,GAAK,CACZC,UACAhpD,WACArV,OACAu7B,eAAe,OACf1hC,WAAW,GACX42C,WAAW,GACX7uB,UAAU,GACV08C,YAAY,GACZ91D,WAAW,GACX+1D,eACAC,eAAe,EACf95D,MACA+5D,WAAW,CACF,EAAgB,CACnB,MAAE73D,QAAO2J,WAAUvM,gBAAemL,eAAcP,UAAWZ,EAAOjN,cAAaG,gBAAmBlB,IAClG,CACJ8f,IACAoB,KAAM,CAAE9T,UAAS,CACf+8B,IAAe,CAAC,SAAU,OAAO,CAAC,EAGhCu0B,EAAgB3zB,EAAWR,GAAOpF,KAAM,CAC5C,CAACoF,GAAO1wC,QAAQ,EAAGA,EACnB,CAAC0wC,GAAOkG,QAAQ,EAAGA,EACpB,EACKkuB,EAAmBpjC,EAAegP,GAAO,SAAShP,EAAaz8B,QAAQ,IAAK,EAAE,CAA6B,IAAIH,OAC/GigE,EAAmB7zB,EAAWR,GAAOs0B,OAAQF,EAAkB,CACnE,CAACp0B,GAAO3L,OAAO,EAAG0/B,EACnB,EAEKQ,EAAeh7D,GAAS9D,CAAI,EAC5B++D,EAASh+D,IAAgBP,GAAYC,MAAQ+D,GAAcxE,CAAI,EAC/Dg/D,EAAcj+D,IAAgBP,GAAYG,UAE1Cs+D,EAAYA,IAAM,CAClBr9C,MAAW,CAAChb,EAAc,YAE9B,GAAIk4D,EACF,aAAQ,MAAI,WAAWv0B,GAAOjmC,IAAMwb,WAAE,cAAc,CAAE,MAC7C9b,EACF,OAAA+lC,MAAC,OAAI,UAAWQ,GAAOjmC,IAAMo8B,SAAuBvxB,KAAcnL,CAAa,CAAE,MAC/EuM,EACT,aAAQ,MAAI,WAAWg6B,GAAOjmC,IAAMm7B,YAAkBlvB,EAAU,CAAEovB,oBAAqB7f,EAAE,6BAA6B,CAAG,EAAE,MAClHi/C,EACF,OAAAh1B,EAAA,IAAC,MAAI,WAAWgB,EAAWR,GAAOjmC,IAAKimC,GAAO7wC,IAAI,EAAIomB,SAAEA,EAAA,MAAM,CAAE,MAC9Dk/C,EACT,OACGv0B,OAAA,OAAI,UAAWF,GAAOjmC,IACrB,UAAAylC,EAAA,IAACqN,EAAK,MAAM8nB,GAAO,UAAW30B,GAAO40B,UAAU,EAC9Cr/C,EAAE,WAAW,CAChB,GAEJ,EAGI+9B,EAAUf,GAAMlK,cAAc,IAAI4rB,CAAY,GAAI,CAAE1zB,UAAWC,EAAWR,GAAO3jC,MAAO,CAAE,CAAC2jC,GAAO3oB,OAAO,EAAGA,EAAS,GAAKA,EAAU,GAAKhb,CAAK,EAGlJ,OAAA6jC,EAAA,KAAC+d,GACC,MAAK,SACL,GAAI9jD,EACJ,UAAWg6D,EACX,QAASjuB,EAAkBz5C,KAAEi/C,iBAAmBt3C,OAChD,aAAc0/D,EACd,SAAU5tB,EAAW,GAAKguB,EAC1B,cAAa/mB,OAEZ,WAAC79C,GACA4wC,OAAC,MAAI,WAAWF,GAAO60B,eACpBvhB,YACA,CAAC,CAAC38C,GAAkBN,GAAYZ,CAAI,GACnC+pC,MAAC,MAAI,WAAWgB,EAAWR,GAAOrpC,eAAgB,CAAE,CAACqpC,GAAO3oB,OAAO,EAAGA,CAAS,GAAIgf,SAAwB1/B,KAAgBkM,CAAQ,CAAE,IAEzI,EAEFq9B,OAAC,MAAI,WAAWm0B,EACd,UAAC70B,MAAA6zB,GAAA,CAAM,UAAWrzB,GAAO80B,YAAa,MAAArxD,EAAc,MAAOnU,EAAW,IAAM,IAAK,IAAI,EAAE,GACtF,CAAC+nB,GACA6oB,OAAC,MAAI,WAAWF,GAAO+0B,KACpBzlE,UAAYgkD,KACZpT,EAAA,YAAI,UAAWF,GAAOpmC,KACpBqE,mBACE,MAAI,WAAWuiC,EAAWR,GAAOjmC,IAAKimC,GAAOg1B,IAAI,EAAG,aAAYz/C,EAAE,WAAW,EAAG,KAAK,MACpF,eAACs3B,EAAK,MAAMooB,EAAK,GACnB,EAEDP,EAAU,GACb,GACF,EAEDX,GAAcv0B,MAAA,OAAI,UAAWQ,GAAOg0B,aAAeA,SAAaA,EAAA,EAChElpD,EACE00B,MAAA,OAAI,UAAWQ,GAAOk1B,kBACrB,SAAA11B,EAAA,IAAC,MAAI,WAAWQ,GAAOm1B,YAAa,MAAO,CAAExvD,MAAO,GAAGurB,KAAKwE,MAAM5qB,EAAW,GAAG,CAAC,IAAM,EACzF,GACE,MACN,CACF,GAEJ,CAEA,MAAe6oD,UAAKnuB,GAA0BouB,GAAgBC,EAAI,CAAC,kSCzHtDuB,GAA+B,CAC1C,CAACpD,EAAWC,EAAE,EAAG,EACjB,CAACD,EAAWE,EAAE,EAAG,EACjB,CAACF,EAAWG,EAAE,EAAG,EACjB,CAACH,EAAWI,EAAE,EAAG,EACjB,CAACJ,EAAWK,EAAE,EAAG,CACnB,EAEagD,GAAuC,CAClD,CAACrD,EAAWC,EAAE,EAAG,EACjB,CAACD,EAAWE,EAAE,EAAG,EACjB,CAACF,EAAWG,EAAE,EAAG,EACjB,CAACH,EAAWI,EAAE,EAAG,EACjB,CAACJ,EAAWK,EAAE,EAAG,CACnB,EAEaiD,GAAkB1iE,OAAO,OAAO,EAoBvC2iE,GAAQA,CAAC,CACbzkE,WACA8L,OACA44D,cACAn5D,QACAkR,eACAje,WAAW,GACX+nB,UAAU,GACVhlB,QAAQ,KACR6L,cACAC,aACAC,kBACA4yB,eACAykC,oBAAoB,CACV,IAAM,CAChB,MAAMjD,EAAyBD,KACzB,CAAEh9C,KAAMqqB,EAAe,QAAQ,EAC/B81B,GAAuBpmE,EAAW+lE,GAAwB7C,CAAU,EAAI4C,GAAgB5C,CAAU,GAAKiD,EAEvGE,EAAazzB,cACjB,CAAC,CAAEzsC,OAAMmgE,eAA4D,CAC7D,MAAEt4D,QAASlB,EAAIC,OAAU5G,IACzB0E,EAAMgC,GAAS,CAAEC,KAAIC,QAAOC,WAAYxL,EAASwS,OAAQ/G,KAAMK,IAASnP,GAAcC,iBAAkB,EAE9G,OACG8xC,MAAAq0B,GAAA,CAEC,SAAUtmD,EAAeA,EAAa9X,EAAK6H,OAAO,EAAIlJ,OACtD,QAAS,OAAOohE,GAAgB,WAAa,IAAMA,EAAY//D,CAAI,EAAIrB,OACvE,SAAA9E,EACA,SAAU,CAACsmE,EACX,QAAAv+C,EACA,SAAUpZ,GAASC,EAAaC,EAAYC,EAAiB3I,CAAI,EACjE,aAAAu7B,EACA,KAAAv7B,EACA,IAAA0E,GATK1E,EAAK6H,OAUV,CAGN,GAACiQ,EAAcioD,EAAalmE,EAAU+nB,EAASnZ,EAAaC,EAAYC,EAAiB4yB,EAAclgC,EAASwS,OAAQ1G,CAAI,CAC9H,EAEMi5D,EAAoC3zB,cACxC,CAAC,CAAEkE,aACA5G,EAAA,cAAO,UAAWQ,GAAO81B,QAAS,aAAYvgD,EAAE,YAAY,EAAG,QAAA6wB,EAC9D,SAAA5G,EAAA,IAACqN,GAAK,KAAMkpB,EAAa,GAC3B,EAEF,CAACxgD,CAAC,CACJ,EAEMygD,EAAmC9zB,cACvC,CAAC,CAAEkE,aACA5G,EAAA,cAAO,UAAWQ,GAAO81B,QAAS,aAAYvgD,EAAE,gBAAgB,EAAG,QAAA6wB,EAClE,SAAA5G,EAAA,IAACqN,GAAK,KAAMopB,EAAY,GAC1B,EAEF,CAAC1gD,CAAC,CACJ,EAEM2gD,EAAqCA,CAAC,CAAElnE,OAAMmnE,WAAY,CACxDnsD,QAAQnP,MAAM6uC,KAAK,CAAE30C,OAAQohE,CAAS,GAACx6D,EAAGy6D,IAAcA,CAAS,EAEvE,OAEIl2B,EAAA,KAAAqU,WAAA,WAAA/U,MAAC,OAAI,YAAU,SAAS,UAAU,SAC/BjqB,WAAE,kBAAmB,CAAEvmB,KAAMA,EAAO,EAAGmnE,OAAO,GACjD,EACC7mE,GACEkwC,MAAA,OAAI,cAAY,OAAO,UAAWQ,GAAOq2B,KACvCrsD,SAAMzO,SACJikC,MAAA,QAAmB,UAAWgB,EAAWR,GAAOs2B,IAAK,CAAE,CAACt2B,GAAO7Q,MAAM,EAAGngC,IAASqlC,EAAS,GAAhFA,CAAkF,CAC9F,EACH,CAEJ,KAIAhiC,UAAS,EAACvB,WAAUA,gBAAkB,KAAG,WAAWkvC,GAAO3tC,MAAO,SAAoB,gCAGvF,MAAI,WAAWmuC,EAAWR,GAAOu2B,KAAK,EACpCjnE,YAAW,KAAO+nB,EAAUmoB,MAAC,MAAI,WAAWQ,GAAOw2B,YAAa,GAAOh3B,MAAA,MAAG,UAAWgB,EAAWR,GAAO3jC,KAAK,EAAIA,YAASvL,EAASuL,MAAM,QACxIo6D,GACC,WAAWz2B,GAAO02B,OAClB,MAAO5lE,EAASA,SAChB,YAAA4kE,EACA,UAAWiB,GACX,aAAc,CAACt/C,EACf,QAAS,GACT,kBAAA2+C,EACA,mBAAAH,EACA,iBAAAK,EACA,WAAAP,EAAuB,CAE3B,GAEJ,EAEAiB,GAAepxB,GAA0B8vB,GAAiBC,EAAK,kECvJzDsB,GAAuBA,UAExB,MAAI,WAAW72B,GAAO82B,qBACrB,SAAAt3B,MAACa,IAAO,EACV,GCKE02B,GAAwBA,CAAC,CAAEx2B,YAAW+G,OAAO,GAAMthC,WAAW,IAAKge,QAAQ,EAAGujB,qBAAoBC,sBAAqBC,cAAalI,UAAS,IAAM,CAEjJ2I,QAAa,WADHliC,EAAW,GACU,gBAE/BqhC,EAAetpC,IAAmC,CACtDmqC,aACAoE,QAASvuC,IAAW,WAAaA,IAAW,OAAS,EAAI,EACzDi5D,WAAY,YAGd,OACGx3B,MAAA4H,GAAA,CACC,UAAA7G,EACA,YAAcxiC,GAAmBspC,EAAYtpC,CAAM,EACnD,KAAAupC,EACA,SAAAthC,EACA,MAAAge,EACA,mBAAAujB,EACA,oBAAAC,EACA,YAAAC,EAEClI,UACH,EAEJ,ECpCa03B,GAAkBA,CAAC9tC,EAAQ,IAAK+tC,EAAM,GAAIne,IAAyC,CACxFoe,QAAe1yB,GAAiB,IAAM,CAE1C,MAAM2yB,GADe/0B,SAASg1B,kBAAoBh1B,SAASxzB,MACvBs4B,UAC9Br8B,EAAWomB,KAAK+1B,IAAI,EAAG/1B,KAAK81B,IAAI,GAAIoQ,EAAiBjuC,IAAU+tC,EAAM/tC,EAAM,CAAC,EAElF4vB,EAASjuC,CAAQ,EAClB,EAEDw6B,YAAU,IAAM,CACR,MAAE+xB,mBAAkBC,kBAAiBzoD,MAASwzB,WAC9Ck1B,EAAkBF,GAAoBA,IAAqBC,GAAmBD,IAAqBxoD,EAAOwoD,EAAmB54B,OAEnHvR,0BAAiB,SAAUiqC,EAAc,CAAEK,QAAS,GAAM,EACnE,IAAM,CACKpsB,sBAAoB,SAAU+rB,CAAY,EAC5D,EACC,CAACA,CAAY,CAAC,CACnB,0zBCRMM,GAA8CA,CAAC,CAAEnjE,OAAMojE,eAAcn3B,WAAU,IAEjFf,EAAA,IAAC,OACC,UAAWgB,EAAWR,GAAO23B,cAAep3B,CAAS,EACrD,MAAO,CACLq3B,UAAW,gBAAgBF,CAAY,IACvCG,gBAAiBH,EACjBI,UAAWJ,EACXK,QAAS,eAGX,SAACv4B,MAAAowB,GAAA,CAAkB,eAAgBt7D,EAAM,OAAM,IACjD,GCFE0jE,GAAsB,CAAC,OAAiB,WAAqB,EAW7DC,GAAmD3hE,GAAA,CACjD,MAAE4H,eAAgBqB,EAAe,EACjC,CAAEwN,OAAMuK,cAAa,EAAIF,EAC7B,CAAC,CAAErK,OAAMuK,mBAAoB,CAC3BvK,OACAuK,iBAEFsjC,EACF,EAEM7G,EAAqBxiD,EAAU2oB,GAAoB,EAAK,EAExDg+C,EAAgB5hE,GAAgB,CAAC2H,GAASC,EAAa,CAAC,CAAC6O,EAAM,CAAC,CAACuK,EAAchhB,CAAY,EAC3FkI,GAAclI,iBAAckI,cAAe,GAG3C25D,EAA0BlH,GAC9BzyD,EAAYjD,IAAI,CAAC,CAAE0D,cAAe,CAChCskD,SAAU,CAAC,eAAgBtkD,CAAO,EAClCukD,QAASA,IAAMzP,iBAAoBh2B,gBAAgB,CAAE9e,YACrDi1B,QAAS,CAAC,CAAC59B,GAAgB,CAAC,CAACyW,GAAQ,CAAC,CAACA,EAAK3Q,IAAM,CAAC,CAAC6C,GAAW,CAACi5D,EAChEE,eAAgB,SAChBJ,wBACA,CACJ,EAGMK,EAAkB,CAAC,CAACtrD,GAAQorD,EAAwB15D,KAAehJ,qBAAK44D,aAAc54D,OAAKmI,OAALnI,cAA2B4lB,eAA3B5lB,cAAyCmuB,eAAa,EAC5I00C,EAA4B,CAACD,GAAmBF,EAAwB15D,KAAMhJ,GAASA,EAAKi+C,SAAS,EAIpG,OAAE6kB,WAFU,CAAC,CAACjiE,IAAiB4hE,GAAiBG,GAElCC,4BAA2B95D,cAClD,EClEMg6D,GAAW7yB,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,gCAAgC,CAAE,CAAC,qFCyB7NgsB,GAAwCA,CAAC,CAAEhjE,OAAMijE,UAASxyB,WAAW,GAAOE,SAAQ,IAAM,CACxF,MAAE7wB,KAAMqqB,EAAe,OAAO,EAC9BkT,EAAWC,KACX3O,EAAW4O,KACXwf,EAAaD,KAGbr0D,EAAcqB,EAA0B4mB,KAAMjoB,WAAW,EAEzDC,EAAa,CAAC,CADPiZ,EAA2B+O,KAAMpZ,IAAI,EAI5CqB,EAAmB8J,GAAsBiO,GAAU1wB,GAAQ0wB,EAAMzX,QAAQjZ,CAAI,CAAC,EAC9EsY,EAAgBK,iBAAkBtD,SAGlCyO,EAA0BR,GAAwBgnB,KAAExmB,uBAAuB,EAC3E,CAAEg/C,aAAY/5D,eAAgBy5D,GAAexiE,CAAI,EACjDguD,EAAiB,CAAC,CAACjlD,EAAYzJ,OAE/B4jE,EAAqBvkB,UAAQ,IAC0B7+B,EAAvDgjD,EAAmB,OAAOxqD,GAAkB,SAAa,oBAAyB,iBAClF01C,EAAyB,MACxBtlD,EAEI,6BAFiB,2BAFsD,EAK/E,CAACo6D,EAAYp6D,EAAYslD,EAAgB11C,EAAewH,CAAC,CAAC,EAEvDqjD,EAA2B12B,cAAY,IAAM,CACjD,GAAIq2B,EAAY,CACd,GAAInyB,EAAS,CACHA,IACR,MACF,CACOsyB,UAAW5lB,EAAS4lB,CAAO,CACpC,CACA,OAC2B5lB,EADtB30C,EACDslD,EAAgCpf,EAAqBD,EAAU,cAAc,EAEjE,cAHiBC,EAAqBD,EAAU,gBAAgB,CACE,CAErD,EAC5B,CAACm0B,EAAYG,EAAS5lB,EAAU30C,EAAYimC,EAAUqf,EAAgBrd,CAAO,CAAC,EAUjF,OARAd,YAAU,KAER/rB,EAAwB/a,CAAW,EAE5B,IAAM+a,EAAwB,EAAE,GACtC,CAAC/a,EAAa+a,CAAuB,CAAC,EAGrCrb,IAAgBlQ,GAAaC,MAAQ,CAACsqE,EACjC,WAINxyB,EACC,OAAM,UACN,QAAQ,YACR,KAAK,QACL,MAAO4yB,EACP,UAAWJ,EAAa/4B,MAACqN,EAAK,MAAMgsB,GAAK,EAAMzkE,OAC/C,QAASwkE,EACT,UAAWpG,EAAaR,EAAWG,GACnC,SAAAjsB,EAECn4B,WACEyxB,EAAA,WAAI,UAAWQ,GAAO84B,aACrB,SAACt5B,MAAA,OAAI,UAAWQ,GAAOl1B,SAAU,MAAO,CAAEnF,MAAO,GAAGoI,EAAgB,GAAG,GAAI,EAAE,CAC/E,GACE,IACN,EAEJ,EChFMgrD,GAAoBA,CAAC,CACzBtjE,OACA4hB,UACA/a,aACA25B,QACAsL,QAOF,IAAM,CACJ,MAAMuR,EAAWC,KACX,CAAEx9B,KAAMqqB,EAAe,QAAQ,EAE/Bo5B,EADazG,KACWP,EAAWE,GAErC,IAACz8D,EAAa,YAElB,MAAMwjE,EACJ,CAACzjE,GAAcC,EAAM9G,GAAmBM,GAAG,GAAK,CAACuG,GAAcC,EAAM9G,GAAmBG,WAAW,GAAK,CAAC0G,GAAcC,EAAM9G,GAAmBK,IAAI,EAGhJkqE,EAFWzjE,EAAK8N,QAAQzJ,KAAM+b,GAAWA,EAAOzP,KAAKvR,QAAQ,OAAO,EAAI,IAAMghB,EAAOzP,KAAKvR,QAAQ,MAAM,EAAI,EAAE,GAExEokE,GAAe,CAACD,EAE5D,OACG94B,EAAA,YACC,UAAWF,GAAOx0B,SAClB,cAAa2hC,OACb,MAAO,CAAE,GAAGlX,EAAOkjC,WAAY53B,EAAS,SAAWntC,MACnD,gBAAamtC,EAAS,OAASntC,OAE/B,UAAAorC,EAAA,IAAC,KAAG,WAAWgB,EAAWnpB,EAAU2oB,GAAOw2B,aAAex2B,GAAO3jC,KAAK,EAAI,UAACgb,IAAW5hB,iBAAM4G,OAAM,QACjGo7D,GAAc,MAAMhiE,iBAAMkK,YAAa,aAAc,EAAE,SACvD,MACEu5D,cAA4B15B,EAAA,IAAAi5B,GAAA,CAAoB,KAAAhjE,EAAY,QAAS0G,GAAS,CAAEC,GAAI3G,EAAK6H,QAASjB,MAAO5G,EAAK4G,MAAOC,aAAYC,KAAM,EAAM,GAAK,EACnJijC,MAACuG,GACC,MAAOxwB,EAAE,kBAAkB,EAC3B,QAAS,IAAMu9B,EAAS32C,GAAS,CAAEC,GAAI3G,EAAK6H,QAASjB,MAAO5G,EAAK4G,MAAOC,aAAY,CAAC,EACrF,UAAYkjC,MAAAqN,EAAA,CAAK,KAAMkpB,GAAgB,EACvC,KAAK,QACL,QAASmD,EAA0B9kE,OAAY,YAC/C,MAAO8kE,EAA0B9kE,OAAY,UAAU,GAE3D,CACF,GAEJ,EC1DMglE,GAAsBA,CAAC,CAC3B3jE,OACAwgC,QACAsL,SACA83B,iBAMF,IAAM,CACA,IAAC5jE,EAAa,YAElB,MAAMgO,EAAQhO,iBAAM+O,gBAGlB,OAAAg7B,EAAA,IAAC,OACC,MAAO,CAAE,GAAGvJ,EAAOkjC,WAAY53B,EAAS,SAAWntC,QACnD,cAAamtC,EAAS,OAASntC,OAE/B,gBAAAilE,EAEA,eAAChG,GAAM,WAAWrzB,GAAOv8B,MAAO,MAAAA,EAAc,MAAO,KAAM,IAAKhO,iBAAM4G,KAAM,IAHvE5G,EAAK6H,OAIZ,CAEJ,EAEAg8D,GAAe/mB,GAAMohB,KAAKyF,EAAmB,EC5BvCG,GAAmBA,CAACttB,EAAqCutB,EAAmBj0D,EAAek0D,EAAeC,IAAsB,CACpI,MAAMC,EAAkB1tB,IAAc,OAChC2tB,EAAmB3tB,IAAc,QAEjC4tB,EAAc,CAClBC,aAAcN,IAAcj0D,EAAQk0D,EAAQ,GAAKG,EACjDG,SAAUP,IAAcj0D,EAAQk0D,EAChCO,WAAYR,IAAcj0D,EAAQk0D,EAAQ,EAC1CQ,cAAeT,IAAcj0D,EAAQk0D,EAAQ,GAAKE,EAClDO,UAAWV,IAAcj0D,EAAQk0D,EACjCU,YAAaX,IAAcj0D,EAAQk0D,EAAQ,GAG7C,OAAII,EAAYC,cAAgBD,EAAYI,cAAsBP,EAC9DG,EAAYE,SAAiBH,EAAmB,EAAID,EAAkB,EAAID,EAC1EG,EAAYK,UAAkBP,EAAkB,EAAIC,EAAmB,EAAIF,EAC3EG,EAAYG,WAAmBL,EAAkBD,EAAY,EAC7DG,EAAYM,YAAoBP,EAAmBF,EAAY,EAE5D,CACT,EAYMU,GAAsBA,CAAC,CAAEtpE,WAAUyU,MAAO80D,EAASpuB,YAAWquB,UAAWC,EAAaC,WAAUf,QAAQ,EAAGgB,oBAAoB,GAAW,IAAM,CAC9I,MAAEllD,KAAMqqB,EAAe,QAAQ,EAC/B86B,EAAmBjB,EAAQ,EAC3Bl0D,EAAQ80D,EAAUK,EAClBJ,EAAYC,EAAcG,EAE1BC,EAA2BvmB,UAAQ,IAAM,CACvCwmB,QAAwB//D,MAAM6uC,KAAK,CAAE30C,OAAQ2lE,EAAkB,EAAEn/D,IAAI,IAAM,EAAK,EAEtF,MAAO,CAAC,GAAGq/D,EAAc,GAAG9pE,EAASA,SAAU,GAAG8pE,CAAY,CAC7D,GAAC9pE,EAASA,SAAU4pE,CAAgB,CAAC,EAExC,OAEIx6B,EAAA,KAAAqU,WAAA,WAAA/U,MAAC,OAAI,YAAU,SAAS,UAAU,SAC/BjqB,WAAE,kBAAmB,CAAEvmB,KAAMqrE,EAAU,EAAGlE,MAAOrlE,EAASA,SAASiE,MAAQ,GAC9E,EACCyqC,EAAA,WAAI,UAAWQ,GAAOq2B,KACrB,SAAC72B,MAAA,MAAG,UAAWQ,GAAO66B,SACnBF,WAAyBp/D,IAAI,CAAC84B,EAASmlC,IAAc,CACpD,GAAIA,EAAYj0D,EAAQk0D,EAAQ,GAAKD,EAAYj0D,EAAQk0D,EAAQ,EACxD,YAET,GAAI,CAACplC,EACI,OAAAmL,MAAC,MAAG,UAAWgB,EAAWR,GAAO86B,cAAc,EAAmB,cAAY,QAAvBtB,CAAgC,EAIhG,MAAMuB,EAAgB7pC,KAAK8pC,IAAIz1D,EAAQ+0D,CAAS,EAD3B,GAGfnyB,EAAY,cADD8D,IAAc,OAAS8uB,EAAgB9uB,IAAc,QAAU,EAAI8uB,EAAgB,CAC5D,MAClC7yB,EAAa+D,EACf,aAAawuB,CAAiB,eAAeA,EAAoB,CAAC,aAAaA,EAAoB,CAAC,eAAeA,EAAoB,CAAC,KACxI,GAEEn6B,EAAOi5B,GAAiBttB,EAAWutB,EAAWj0D,EAAOk0D,EAAO,EAAG,EAC/DwB,EAAe,SAAS36B,CAAI,IAC5B46B,EAAgBjvB,EAClB,SAASwuB,CAAiB,uBAAuBA,CAAiB,0BAA0BA,CAAiB,cAC7G,GAEE1G,EAAYyF,IAAcj0D,EAC1Bg8B,EAASjB,IAAS,EAClB66B,EAAY55B,EAASntC,OAAYmhB,EAAE,WAAY,CAAE9f,KAAM+jE,EAAYkB,EAAmB,EAAG1wD,MAAOlZ,EAASA,SAASiE,OAAQ,EAG9H,OAAAyqC,EAAA,IAAC,KAA0B,eAAa+B,GAAUntC,OAAW,eAAc2/D,GAAa3/D,OACtF,SAACorC,EAAA,cACC,UAAWgB,EAAWR,GAAOs2B,IAAKkD,IAAcc,GAAat6B,GAAOo7B,UAAW,CAACnvB,GAAautB,IAAcj0D,GAASy6B,GAAOo7B,SAAS,EACpI,MAAO,CAAEjzB,YAAWD,cACpB,aAAYizB,EACZ,SAAU55B,GAAUntC,OACpB,QAASmtC,GAAUwyB,EAAY3/D,OAAY,IAAMomE,EAAShB,EAAYkB,CAAgB,EAEtF,SAAAl7B,EAAA,IAAC,OAAI,MAAO,CAAE2I,UAAW8yB,EAAc/yB,WAAYgzB,CAAgB,IACrE,CATO7mC,mBAAS/2B,OAUlB,EAEH,EACH,CACF,EACF,GAEJ,ECjFM+9D,GAAkBA,CAAC,CACvBC,cACAC,eACAC,aACAC,iBACAC,kBACAzvB,YACA0vB,mBACAC,cACAC,cACK,IAAM,CACX,MAAMC,EAAcn3B,SAAO,CAAEo3B,EAAG,EAAGC,EAAG,EAAG7yC,MAAOl1B,KAAKC,IAAI,EAAG,EACtD+nE,EAAet3B,SAA8B,IAAI,EACjD,CAACu3B,EAAaC,CAAc,EAAIl6B,WAAoC,IAAI,EAExE+2B,EADazG,MACYP,EAAWE,GAEpCkK,EAAmB33B,GAAkB/3C,GAAsB,CAC3Du/C,IACJ6vB,EAAYznC,QAAU,CAAE0nC,EAAGrvE,EAAM2vE,QAAQ,CAAC,EAAEC,QAASN,EAAGtvE,EAAM2vE,QAAQ,CAAC,EAAEE,QAASpzC,MAAOl1B,KAAKC,IAAI,GAClGioE,EAAe,IAAI,GACpB,EAEKK,EAAkB/3B,GAAkB/3C,GAAsB,CAE1D,GADAu/C,GACA,CAACgwB,EAAa5nC,QAAS,OAE3B,MAAMooC,EAAoB/vE,EAAMgwE,eAAe,CAAC,EAAEJ,QAAUR,EAAYznC,QAAQ0nC,EAC1EY,EAAoBjwE,EAAMgwE,eAAe,CAAC,EAAEH,QAAUT,EAAYznC,QAAQ2nC,EAC1EY,EAAqB1rC,KAAK8pC,IAAIyB,CAAS,EAAIvrC,KAAK8pC,IAAI2B,CAAS,EAAI,QAAU,SAG7EC,GADCV,GAAaC,EAAeS,CAAkB,EAC/CA,IAAuB,UAAYV,IAAgB,SAAU,OAGjExvE,EAAMg/C,eAAe,EACrBh/C,EAAMmwE,gBAAgB,EAGtB,MAAMC,EAAUvB,EAAe,CAAC98B,OAAOs+B,WAAa,EAC9CC,EAAW1B,EAAc78B,OAAOs+B,WAAa,EAC7CE,EAAmB/rC,KAAK+1B,IAAI/1B,KAAK81B,IAAIyV,EAAWO,CAAQ,EAAGF,CAAO,EAExEb,EAAa5nC,QAAQ4B,MAAMkS,UAAY,cAAc80B,CAAgB,MACxD5oC,UAAQ4B,MAAMiS,WAAa,OACzC,EAEKg1B,EAAiBz4B,GAAkB/3C,GAAsB,CAG7D,GAFIu/C,GACA,CAACgwB,EAAa5nC,SACd6nC,IAAgB,SAAU,OAE9B,MAAMO,EAAYX,EAAYznC,QAAQ0nC,EAAIrvE,EAAMgwE,eAAe,CAAC,EAAEJ,QAC5Da,EAAWjsC,KAAKwE,MAAO+mC,GAAaxoE,KAAKC,IAAQ4nE,IAAYznC,QAAQlL,OAAU,GAAG,EAClFi0C,EAAmB,GAErB7B,IAAiBkB,EAAYh+B,OAAOs+B,WAAa,GAAKI,EAAWC,GACtDvB,IACJP,IAAgBmB,EAAY,CAACh+B,OAAOs+B,WAAa,GAAKI,EAAW,CAACC,GAC/DxB,KAECvnC,UAAQ4B,MAAMiS,WAAa,0BAC3B7T,UAAQ4B,MAAMkS,UAAY,iBAEzCg0B,EAAe,IAAI,EACpB,EAEDv3B,yBAAgB,IAAM,CACfq3B,EAAa5nC,UACdsnC,GAAoB1vB,IAAc,QACvB5X,UAAQ4B,MAAMiS,WAAa,0BAC3B7T,UAAQ4B,MAAMkS,UAAY,oBAC9BwzB,GAAoB1vB,IAAc,SAC9B5X,UAAQ4B,MAAMiS,WAAa,0BAC3B7T,UAAQ4B,MAAMkS,UAAY,sBAE1B9T,UAAQ4B,MAAMkS,UAAY,gBAC1B9T,UAAQ4B,MAAMiS,WAAa,QAC1C,EACC,CAAC+D,EAAW0vB,CAAgB,CAAC,EAEhCr2B,YAAU,IAAM,CACd,MAAMn0C,EAAY8qE,EAAa5nC,QAC/B,GAAKljC,EAEK+7B,0BAAiB,aAAckvC,CAAgB,EAC/ClvC,mBAAiB,YAAasvC,EAAiB,CAAEhF,QAAS,GAAO,EACjEtqC,mBAAiB,WAAYgwC,CAAc,EAE9C,IAAM,CACD9xB,sBAAoB,aAAcgxB,CAAgB,EAClDhxB,sBAAoB,YAAaoxB,CAAe,EAChDpxB,sBAAoB,WAAY8xB,CAAc,EAEzD,GAACd,EAAkBI,EAAiBU,CAAc,CAAC,EAGpDh9B,EAAA,KAAC,MAAI,KAAK+7B,EAAc,UAAWz7B,EAAWR,GAAOq9B,YAAarE,GAAYh5B,GAAOs9B,iBAAiB,EACnG7B,YAAeS,IAAgB,OAAO,EACtCV,EAAW,EACXE,EAAgBQ,IAAgB,OAAO,CAC1C,GAEJ,ECrGMqB,GAAYA,CAAC,CAAEzsE,WAAUumB,UAAU,GAAOhlB,QAAQ,IAAY,IAAM,CACxE,KAAM,CAACkT,EAAOi1D,CAAQ,EAAIv4B,WAAS,CAAC,EAC9B,CAACq4B,EAAWkD,CAAY,EAAIv7B,WAAS,CAAC,EACtC,CAAE1sB,KAAMqqB,EAAe,QAAQ,EAE/Bo5B,EADazG,MACYP,EAAWE,GACpCuL,EAAY94B,SAAuB,IAAI,EACvC,CAACsH,EAAWyxB,CAAY,EAAIz7B,WAAkC,IAAI,EAClE,CAAC07B,EAAgBC,CAAiB,EAAI37B,WAA0C,IAAI,EACpF,CAAC05B,EAAkBkC,CAAmB,EAAI57B,WAAS,EAAK,EAE9Dg1B,GAAgB,GAAI+B,EAAW,IAAM,IAAMluD,GAAqB,CAC1D2yD,EAAUppC,UAAmBA,UAAQ4B,MAAMqW,QAAU,GAAGpb,KAAK+1B,IAAI,EAAIn8C,EAAUkuD,EAAW,EAAI,EAAG,CAAC,IACvG,EAED,MAAM8E,EAAUA,CAACC,EAAiBC,EAAY,KAAU,CAClDL,IAEJH,EAAaO,CAAO,EACPA,IAAUx4D,EAAQ,QAAU,MAAM,EAC/Cq4D,EAAkB,MAAM,EACxBC,EAAoBG,CAAS,IAGzBC,EAAkBA,IAAMH,EAAQv4D,EAAQ,CAAC,EACzC24D,EAAmBA,IAAMJ,EAAQv4D,EAAQ,CAAC,EAC1C44D,EAAkBA,IAAML,EAAQv4D,EAAQ,EAAG,EAAI,EAC/C64D,EAAmBA,IAAMN,EAAQv4D,EAAQ,EAAG,EAAI,EAEhD84D,EAAuDn8B,cAChDx1C,GAAA,CAELA,EAAM4xE,eAAiB,aAAeX,IAAmB,SAC3DC,EAAkB,KAAK,CACzB,EAEF,CAACD,CAAc,CACjB,EAEAr4B,YAAU,IAAM,CACd,GAAK2G,EACL,IAAI0xB,IAAmB,OAAQ,CAC7BC,EAAkB,OAAO,EACzB,MACF,CACID,IAAmB,QACrBnD,EAASF,CAAS,EAClBoD,EAAa,IAAI,EACjBE,EAAkB,IAAI,EACtBC,EAAoB,EAAK,GAE1B,GAACF,EAAgB1xB,EAAWquB,CAAS,CAAC,EAEnCiE,QAAcZ,IAAmB,SAAWA,IAAmB,MAC/Da,EAAkBvyB,IAAc,OAAS,EAAIA,IAAc,QAAU,GAAK,EAE1EwyB,EAAsBC,GAA4B,CAChDC,QAAc3F,EAAW,GAAK,GAEpC,OAAI0F,GAAQ,OACH,CACLv2B,UAAW,yBAAyBw1B,IAAmB,OAASgB,EAAc,GAAK,CAAC,MACpFryB,QAASiyB,EAAc,EAAI,EAC3Br2B,WAAYq2B,EAAc,iDAAmD,QAG7EG,GAAQ,QACH,CACLv2B,UAAW,yBAAyBw1B,IAAmB,OAASgB,EAAc,CAAC,MAC/EryB,QAASiyB,EAAc,EAAI,EAC3Br2B,WAAYq2B,EAAc,iDAAmD,QAG1E,CACLp2B,UAAW,yBAAyBo2B,EAAcI,EAAcH,EAAkB,CAAC,MACnFlyB,QAASiyB,EAAc,EAAI,EAC3Br2B,WAAYq2B,EAAc,WAAWvF,EAAW,GAAM,EAAG,qCAAuC,OAClG,EAGI4F,EAAmBA,CAACF,EAAyBV,EAAY,KACzDU,IAAS,OACJ,CACLvyB,KAAM6xB,GAAarC,EAAmB,QAAUgC,IAAmB,OAAS,IAAM,EAClFrxB,QAAS0xB,GAAarC,GAAoB4C,EAAc,EAAI,EAC5Dr2B,WAAYq2B,EAAc,4CAA8C,OACxEM,cAAe,QAGfH,IAAS,QACJ,CACLvyB,KAAM6xB,GAAarC,EAAmB,OAASgC,IAAmB,OAAS,GAAK,EAChFrxB,QAAS0xB,GAAarC,GAAoB4C,EAAc,EAAI,EAC5Dr2B,WAAYq2B,EAAc,4CAA8C,OACxEM,cAAe,QAGZ,CACL1yB,KAAMoyB,GAAetyB,EAAY,GAAKuyB,EAAkB,EACxDlyB,QAASiyB,EAAc,EAAI,EAC3Br2B,WAAYq2B,EAAc,8CAAgD,OAC1EM,cAAeN,EAAc,OAAS,WAIpC9oE,EAAO3E,EAASA,SAASyU,CAAK,EAC9Bu5D,EAAWhuE,EAASA,SAASwpE,EAAY/0D,EAAQ+0D,EAAY/0D,EAAQ,CAAC,GAAK,KAC3Ew5D,EAAYjuE,EAASA,SAASwpE,EAAY/0D,EAAQ+0D,EAAY/0D,EAAQ,CAAC,GAAK,KAE5Ey5D,EAAerB,IAAmB,MAAQloE,EAAOw2C,IAAc,QAAU6yB,EAAWC,EAEtF1sE,UAAS,EAACvB,WAAUA,gBAAkB,KAAG,WAAWkvC,GAAO3tC,MAAO,SAAoB,gCAGvF,MAAI,WAAWmuC,EAAWR,GAAOu2B,KAAK,EACrC,UAAAr2B,OAAC,MAAI,WAAWF,GAAOs0B,OAAQ,IAAKmJ,EAClC,UAAAv9B,OAAC,MAAI,WAAWF,GAAOi/B,WAAY,GAAG,aACpC,UAAAz/B,MAAC45B,IACC,KAAM0F,EACN,MAAOL,EAAmB,MAAM,EAEhC,OAAQxyB,IAAc,SADjB+yB,iBAAc1hE,YAAYwhE,iBAAUxhE,SAAU,YAAcwhE,iBAAUxhE,OAC9C,EAE/BkiC,MAAC45B,GAAoB,MAAM4F,EAAc,MAAOP,EAAkD,kBAAiBJ,GAAxCW,iBAAc1hE,OAAuD,QAC/I87D,GACC,MAAM2F,EACN,MAAON,EAAmB,OAAO,EAEjC,OAAQxyB,IAAc,UADjB+yB,iBAAc1hE,YAAYyhE,iBAAWzhE,SAAU,aAAeyhE,iBAAWzhE,OAChD,EAE/BkiC,MAAA,OAAI,UAAWQ,GAAOk/B,IAAK,IAC9B,EACC1/B,MAAA,OAAI,UAAWQ,GAAOm/B,KAAM,IAC/B,EACA3/B,MAAC,SACC,WAAWgB,EAAWR,GAAO81B,QAAS91B,GAAOo/B,WAAW,EACxD,aAAY7pD,EAAE,gBAAgB,EAC9B,SAAU,CAACupD,EACX,QAASA,EAAWb,EAAkB7pE,OAEtC,SAACorC,EAAA,IAAAqN,EAAA,CAAK,KAAMopB,GAAY,CAC1B,SACCoF,GACC,WAAApvB,EACA,iBAAA0vB,EACA,QAAAtkD,EACA,YAAa8mD,EACb,aAAcC,EACd,YAAa,CAAC,CAACU,EACf,aAAc,CAAC,CAACC,EAChB,eAAiBf,GACfx+B,MAACu5B,IACC,QAAA1hD,EACA,KAAMynD,EACN,WAAYhuE,EAASwS,OACrB,MAAOs7D,EAAiB,OAAQZ,CAAS,EAEzC,OAAQ/xB,IAAc,QAAU,CAAC+xB,CAD5BgB,oBAAc1hE,YAAYwhE,iBAAUxhE,SAAU,YAAcwhE,iBAAUxhE,SAI/E,WAAY,IACTkiC,EAAA,IAAAu5B,GAAA,CAAkB,QAAA1hD,EAAkB,KAAM2nD,EAAc,WAAYluE,EAASwS,OAAoC,MAAOs7D,EAAiB,GAA/CI,iBAAc1hE,SAE3G,gBAAkB0gE,SACfjF,GACC,SAAA1hD,EACA,KAAM0nD,EACN,WAAYjuE,EAASwS,OACrB,MAAOs7D,EAAiB,QAASZ,CAAS,EAE1C,OAAQ/xB,IAAc,SAAW,CAAC+xB,IAD7BgB,iBAAc1hE,YAAYyhE,iBAAWzhE,SAAU,aAAeyhE,iBAAWzhE,OAClC,EAE9C,EAEJkiC,MAAC,SACC,WAAWgB,EAAWR,GAAO81B,QAAS91B,GAAOq/B,YAAY,EACzD,aAAY9pD,EAAE,YAAY,EAC1B,SAAU,CAACwpD,EACX,QAASA,EAAYb,EAAmB9pE,OAExC,SAACorC,EAAA,IAAAqN,EAAA,CAAK,KAAMkpB,GAAa,CAC3B,GACAv2B,MAAC46B,IAAoB,SAAAtpE,EAAoB,MAAAyU,EAAc,SAAUu4D,EAAS,UAAAxD,EAAsB,UAAWruB,GAAa,EAAM,EAChI,GAEJ,2JCxLMqzB,GAAuB,EACvBC,GAAoB,EAMpBC,GAAYA,CAAC,CAAEnuB,MAAY,IAAM,CAC/B,MAAEnzC,aAAY,EAAIqB,EAAe,CAAC,CAAErB,kBAAmB,CAAEA,gBAAgB08C,EAAO,EAChF,CAACmW,EAAY0O,CAAa,EAAIx9B,WAASq9B,EAAoB,EAC3D,CAAE/pD,KAAMqqB,EAAe,OAAO,EAC9B8/B,EAAiBvO,GAAkB,OAAO,EAE1CwO,EAAyBznD,GAAgCiO,KAAM3N,yBAAyB,EAGxF,CAAEzL,OAAMuK,cAAa,EAAIF,EAAgB,CAAC,CAAErK,OAAMuK,mBAAoB,CAAEvK,OAAMuK,iBAAiBsjC,EAAO,EAItGglB,EAAY9O,GAAazf,EAAM0f,CAAU,EAU/C,OARAzrB,YAAU,IAED,IAAMm6B,EAAcH,EAAoB,EAC9C,CAACjuB,CAAI,CAAC,EAGiBuuB,EAAU3wB,MAAM,CAAC,CAAErxC,OAAMywD,WAAgBA,qBAAa,GAACzwD,mBAAM9M,WAAN8M,QAAgB7I,QAAM,EAG9FyqC,MAACE,IAAU,MAAOnqB,EAAE,uBAAuB,EAAG,QAASA,EAAE,2BAA2B,CAAK,SAI/F,MAAI,WAAWyqB,GAAO6/B,UACrB,SAAArgC,EAAA,IAACsgC,IACC,MAAO,CAAEl3B,SAAU,QAAS,EAC5B,SAAU,IAAM62B,EAAeprC,GAAYA,EAAUkrC,EAAiB,EACtE,QAASxO,EAAa1f,EAAKt8C,OAC3B,OAASyqC,MAAAq3B,GAAA,GAAyB,UAClC,UAAW,GAEVxlB,SAAKv8C,QAAM,EAAGi8D,CAAU,EAAEx1D,IAAI,CAAC,CAAEqB,OAAMtN,WAAU+M,QAAO4W,UAAU1N,IAAU,OACrE,MAAE3H,KAAM9M,EAAUogE,oBAAmB7+D,SAAUutE,EAAUr6D,CAAK,EAEpE,GAAI,GAACzU,mBAAUA,WAAVA,QAAoBiE,QAAe,YAExC,MAAMi8B,EAAeF,GAAiBhgC,EAASiZ,sBAAwBjZ,EAASivE,qBAAqB,EAC/FtK,EAAoB1kC,GAAgBC,CAAY,EAGhDgvC,GADkB/sD,iBAASysD,MAAoB5uE,iBAAW4uE,KACrBrjE,IAASvL,iBAAUuL,OAExD4jE,GAAShtD,iBAAQitD,cAAe9wE,GAAkBC,MAAQkW,IAAU,EACpE46D,EAAa,CAACF,KAAWhtD,iBAAQitD,cAAe9wE,GAAkBE,UAAYA,GAEpF,OACGkwC,MAAA,WAEC,UAAWgB,EAAWR,GAAOogC,eAAgB,CAAE,CAACpgC,GAAO3wC,IAAI,EAAG4wE,EAAQ,CAACjgC,GAAO1wC,QAAQ,EAAG6wE,EAAY,EACrG,eAA6BF,KAAS,OAASE,EAAa,WAAavjE,IAAS,WAAaX,GAAQ+jE,CAAe,EAAIpjE,IAA7GuwC,QACb,aAAY6yB,EAEZ,SAAAxgC,EAAA,IAACu3B,GAAK,UAAU,IAAK,MAAOxxD,EAAQ,GAAI,KAAI,GACzC06D,SACCA,EAAAzgC,MAAC+9B,GAAU,SAASrM,EAAmB,MAAA7+D,EAAc,SAAAvB,CAAA,CAAmB,EAExE0uC,EAAA,IAAC+1B,GACC,SAASrE,EACT,MAAA7+D,EACA,KAAAuK,EACA,SAAA9L,EACA,aAAc8L,IAASnP,GAAcC,iBAAmBiyE,EAAyBvrE,OACjF,MAAO4rE,EACP,SAAUG,EACV,YAAAjiE,EACA,WAAY,CAAC,CAAC6O,EACd,gBAAiB,CAAC,CAACuK,EACnB,aAAA0Z,EACA,kBAAAykC,CAEH,GACH,GAxBK,GAAGlwD,CAAK,IAAIzU,EAASsL,EAAE,EAyB9B,EAEH,EACH,CACF,EAEJ,EC1GMikE,GAAOA,IAAM,CACX,MAAE5gE,QAAO,EAAIF,EAAe,CAAC,CAAEE,SAAQvB,kBAAmB,CAAEuB,SAAQvB,gBAAgB08C,EAAO,EAC3F76C,EAAqBN,iBAAQM,QAC7B,CAAEwV,GAAMqqB,EAAe,QAAQ,EAErC,OAEIM,EAAA,KAAAqU,WAAA,WAAA/U,MAAC,KAAG,WAAU,iBAAkBjqB,WAAE,MAAM,EAAE,EAC1CiqB,MAACggC,GAAU,MAAMz/D,CAAQ,EAC3B,GAEJ,ECRaugE,GAAaphE,GAAqB,UAAW,KAAO,CAC/DqhE,YAAa,GACbC,aAAc,GACdC,aAAc,GACdC,YAAa,GACbC,iBAAkB,EACpB,EAAE,ECfIC,GAAiBA,IAAM,CACrBC,QAAiBl8B,SAAO,EAAI,EAElCW,mBAAU,IAAM,CACdu7B,EAAexsC,QAAU,EAC3B,EAAG,CAAE,GAEEwsC,EAAexsC,OACxB,ECPMysC,GAAc,CAAwC5tE,EAAa6tE,IAAiB,CACxF,MAAMr8B,EAAQC,WACRq8B,EAAcr8B,SAClB1xC,GAAS,IAAIkQ,IAAS,CAChBuhC,EAAMrQ,SAAeA,UAAQ,GAAGlxB,CAAI,GACvC49D,CAAI,CACT,EAEAz7B,mBAAU,IAAM,CACdZ,EAAMrQ,QAAUnhC,GACf,CAACA,CAAQ,CAAC,EAEN8tE,EAAY3sC,OACrB,ECVM4sC,GAAwBA,IAAM,CAClC,MAAMnuB,EAAWC,KAEXmuB,EAAmBJ,GAAa35D,GAAkB,CACtD2rC,EAAS,MAAMquB,mBAAmBh6D,CAAK,CAAC,EAAE,GACzC,GAAG,EACAi6D,EAAoBl/B,cACvB/6B,GAAkB,CACjBm5D,GAAW1nD,SAAS,CAClB2nD,YAAap5D,EACd,EACD+5D,EAAiB/5D,CAAK,GAExB,CAAC+5D,CAAgB,CACnB,EACMG,EAAmBn/B,cAAY,IAAM,CACnCo/B,QAAahB,GAAWv8D,WAAWw9D,cAEzCjB,GAAW1nD,SAAS,CAClB2nD,YAAa,GACbgB,cAAentE,OAChB,EAED0+C,EAASwuB,GAAc,GAAG,GACzB,CAACxuB,CAAQ,CAAC,EAEN,OAAEsuB,oBAAmBC,mBAC9B,ECrBM/Q,GAAkB9gC,GAA4B,EAAE,EAEhDgyC,GAAsBA,CAAC,CAAE3hE,SAAQq0B,UAAS/sB,OAA2D,IAAM,CACzGwE,QAAapa,EAAUsQ,EAAU,EAiBhC4/D,OAfuEne,GAC5E,CAAC,aAAcn8C,CAAK,EACpB,SACuB,MAAMwE,EAAWxB,iBAAiB,CAAEtK,SAAQoI,OAAQ,CAAEoC,WAAYlD,CAAM,EAAG,EAIlG,CACEmpD,gBAAiBp8B,EAAUo8B,GAAkBl8D,OAC7C8/B,UACAiL,UAAWxvC,GACX6+D,UAAW9+D,GAEf,CAGF,EAEagyE,GAAav6D,GAAkB,SACpC,MAAE1H,QAAO,EAAIF,EAAe,CAAC,CAAEE,aAAc,CAAEA,WAAWm7C,EAAO,EAEjE/6C,EAASJ,iBAAQI,OACjB0T,GAAiB9T,mBAAQ+K,WAAR/K,cAAkB8T,eACnCouD,EAAsB/rE,IAAyB6J,mBAAQwT,SAARxT,cAAgBmiE,gBAAgB,EAE/EC,EAAgBnR,GAAYn9C,GAAkB,GAAI,CAAE9J,OAAQtC,GAAS,EAAM,GAACw6D,EAAqB,CAAC,CAACx6D,CAAK,EAExGs6D,EAAwBD,GAAoB,CAAE3hE,SAAQq0B,QAASytC,EAAqBx6D,QAAO,EAEjG,OAAOw6D,EACH,CAAE/jE,KAAM6jE,EAAsB7jE,KAAMkkE,WAAYL,EAAsBK,WAAYzvE,MAAOovE,EAAsBpvE,OAC/G,CACEyvE,WAAYD,EAAcC,WAC1BzvE,MAAOwvE,EAAcxvE,MACrBuL,KAAMikE,EAAcjkE,KAE5B,2DCvCMmkE,GAA0BruE,GAAS,SAAUsuE,EAA6B,CAC9EA,EAAelW,eAAe,CAAEC,SAAU,SAAUC,MAAO,SAAU,CACvE,EAAG,GAAG,EAGAiW,GAAa,CAAsB,CAAE1hC,YAAW2hC,cAAatkE,OAAMukE,aAAYC,YAAwB,IAAM,CACjH,KAAM,CAACC,EAAiBC,CAAkB,EAAIrgC,WAAS,CAAC,EAClD,CAACsgC,EAAoBC,CAAqB,EAAIvgC,WAAS,CAAC,EACxDwgC,EAAU99B,SAAuB,IAAI,EACrC+9B,EAAWxxC,KAAKmE,KAAKz3B,EAAK7I,OAASmtE,CAAW,EAE9CS,EAAgBA,CAACC,EAAkBC,IAAwB,CAC/D,MAAMC,EAAWzgC,SAAS0gC,eAAe,eAAeH,CAAQ,IAAIC,CAAW,EAAE,EAE3EG,GADmBF,iBAAU/2B,cAAc,uDACN+2B,EAE3CR,EAAmBM,CAAQ,EAC3BJ,EAAsBK,CAAW,EAE5BG,IAELA,EAAe94B,MAAM,CAAE+4B,cAAe,GAAM,EAC5ClB,GAAwBiB,CAAc,IAGlChb,EAAgBvjB,GAAkB/3C,GAA+C,CAC/E,MAAEgO,MAAKwoE,SAAYx2E,IAEzB,GAAI,CAAC,CAAC,YAAa,aAAc,UAAW,YAAa,OAAQ,MAAO,SAAU,UAAU,EAAE0F,SAASsI,CAAG,EAAG,OAE7GhO,EAAMg/C,eAAe,EAErB,MAAMy3B,EAAST,EAAW,EACpBU,EAAkBb,IAAuB,EACzCc,EAAiBd,IAAuBL,EAAc,EACtDoB,EAAejB,IAAoB,EACnCkB,EAAclB,IAAoBc,EAClCK,GAAmB5lE,EAAK7I,OAASmtE,GAAeA,GAAe,EAC/DlF,EAAWuG,EAAcC,EAAkBtB,EAAc,EAEzDuB,EAAevyC,KAAK81B,IAAIqb,EAAkB,EAAGc,CAAM,EACnDO,EAAmBxyC,KAAK+1B,IAAIob,EAAkB,EAAG,CAAC,EAExD,OAAQ3nE,EAAG,CACT,IAAK,YACC0oE,UAAmB,CAACE,EAEfX,EAAce,EAAkBxB,EAAc,CAAC,EAEjDS,EAAcN,EAAiBnxC,KAAK+1B,IAAIsb,EAAqB,EAAG,CAAC,CAAC,EAC3E,IAAK,aACCc,UAAkB,CAACE,EAEdZ,EAAcc,EAAc,CAAC,EAE/Bd,EAAcN,EAAiBnxC,KAAK81B,IAAIub,EAAqB,EAAGvF,CAAQ,CAAC,EAClF,IAAK,UACI2F,SAAce,EAAkBnB,CAAkB,EAC3D,IAAK,YACII,SAAcc,EAAcA,IAAiBN,EAASjyC,KAAK81B,IAAIub,EAAoBiB,CAAe,EAAIjB,CAAkB,EACjI,IAAK,OACH,OACSI,EADLO,EACmB,EAEFb,EAFK,CAAC,EAG7B,IAAK,MACH,OAAIa,EACKP,EAAcQ,EAAQK,CAAe,EAEvCb,EAAcN,EAAiBrF,CAAQ,EAChD,IAAK,SACI2F,SAAce,EAAkBnB,CAAkB,EAC3D,IAAK,WACII,SAAcc,EAAcA,IAAiBN,EAASjyC,KAAK81B,IAAIwc,EAAiBjB,CAAkB,EAAIA,CAAkB,EACjI,QACE,MACJ,EACD,EAGDj9B,YAAU,IAAM,OAEd,GAAI,GAACm9B,IAAQpuC,UAARouC,QAAiBh3B,SAASpJ,SAAS4H,gBACtC,OAGF,MAAMu5B,GAAmB5lE,EAAK7I,OAASmtE,GAAeA,GAAe,EAEjEK,KAAqBL,EAAc,EAC9BS,SAAcN,EAAiBH,EAAc,CAAC,EAGvD,GAAIG,IAAoBK,EAAW,GAAKH,EAAqBiB,EACpDb,SAAcN,EAAiBmB,CAAe,CACvD,EAGC,CAACtB,CAAW,CAAC,EAEVyB,QAAgBvvB,UAAQ,KAAO,CAAEzuC,MAAO,GAAGurB,KAAKC,MAAO,IAAM+wC,EAAe,GAAG,EAAI,GAAG,MAAQ,CAACA,CAAW,CAAC,EAEjH,OACG1iC,MAAA,OAAI,KAAK,OAAO,IAAKijC,EAAS,gBAAeC,EAAU,UAAAniC,EAAsB,UAAWynB,EACtFntD,eAAM6uC,KAAK,CAAE30C,OAAQ2tE,EAAU,EAAEnnE,IAAI,CAACI,EAAGinE,IACvCpjC,MAAA,OAAI,KAAK,MAAqB,gBAAeojC,EAAW,EAAG,UAAW5iC,GAAOumB,IAC3E3oD,SAAK9I,QAAM8tE,EAAWV,EAAaU,EAAWV,EAAcA,CAAW,EAAE3mE,IAAI,CAAC9F,EAAMotE,UAClF,MACC,MAAK,WACL,GAAI,eAAeD,CAAQ,IAAIC,CAAW,GAE1C,gBAAeA,EAAc,EAC7B,UAAW7iC,GAAO4jC,KAClB,MAAOD,EAENxB,WAAW1sE,EAAM4sE,IAAoBO,GAAYL,IAAuBM,EAAc,EAAI,EAAE,GALxFT,EAAW3sE,CAAI,CAMtB,CACD,CAZkBmtE,GAarB,CACD,CACH,EAEJ,iWCvHMiB,GAAoB,EACpBC,GAAkB,EAIlBC,GAA2B,CAC/B,CAAC/R,EAAWC,EAAE,EAAG,EACjB,CAACD,EAAWE,EAAE,EAAG,EACjB,CAACF,EAAWG,EAAE,EAAG,EACjB,CAACH,EAAWI,EAAE,EAAG,EACjB,CAACJ,EAAWK,EAAE,EAAG,CACnB,EAEa2R,GAAqBpxE,OAAO,WAAW,EAmB9CwvE,GAAc3sE,GAAuBA,EAAK6H,QAEhD,SAAS2mE,GAAS,CAChBnzE,WACAyc,eACAmmC,YAAY,GACZwwB,OAAOH,GACPI,kBACAC,mBACAlmE,cACAC,aACAC,kBACAimE,UACAC,SACAC,WACA/O,cACAvB,cACa,EAAG,CAChB,MAAMzB,EAAyBD,KACzBvhC,EAAeF,GAAiBhgC,EAASiZ,sBAAwBjZ,EAASivE,qBAAqB,EAC/FyE,EAAgBN,EAAK1R,CAAU,EAAIzhC,GAAgBC,CAAY,EAC/D,CAAC0xC,EAAU+B,CAAW,EAAIxiC,WAAS4hC,EAAiB,EAEpDa,EAAkBA,IAAMD,EAAapwC,GAAYA,EAAUyvC,EAAe,EAC1Ea,EAAiBjC,EAAW8B,EAAe1zE,EAASA,SAASiE,OAEnEuwC,YAAU,IAAM,CAEdm/B,EAAYZ,EAAiB,GAC5B,CAAC/yE,EAASwS,MAAM,CAAC,EAEpB,MAAM6+D,EAAajgC,cACjB,CAAC5rC,EAA4B49D,IAC3B10B,MAACq0B,GACC,UAAAK,EACA,SAAU3mD,EAAeA,EAAajX,EAAagH,OAAO,EAAIlJ,OAC9D,IAAKkwE,EAAOhuE,CAAY,EACxB,QAAS,OAAOk/D,GAAgB,WAAa,IAAMA,EAAYl/D,CAAY,EAAIlC,OAC/E,QAASs/C,EACT,UAAWywB,GAAmBA,EAAgB7mE,UAAYhH,EAAagH,QACvE,aAAc8mE,EACd,SAAUnmE,GAASC,EAAaC,EAAYC,EAAiB9H,CAAY,EACzE,aAAA06B,EACA,KAAM16B,EACN,aAAA29D,CAAA,GAGJ,CAAC/1D,EAAaimE,EAAiBC,EAAkBE,EAAQlmE,EAAiB61D,EAAcvgB,EAAWv1C,EAAYq3D,EAAaxkC,EAAczjB,CAAY,CACxJ,EAGE,OAAAiyB,MAACsgC,IACC,UAAW,EACX,SAAUyE,GAAYG,EACtB,QAASL,GAAWM,EACpB,OAASnlC,MAAAq3B,GAAA,GAAyB,UAClC,UAAW,GAEX,SAACr3B,MAAAyiC,GAAA,CACC,UAAWzhC,EAAWR,GAAO7uC,UAAW6uC,GAAO,QAAQwkC,CAAY,EAAE,CAAC,EACtE,KAAMD,EAAWzzE,EAASA,SAAWA,EAASA,SAASgE,MAAM,EAAG4tE,EAAW8B,CAAY,EACvF,YAAaA,EACb,WAAArC,EACA,WAAAC,EAAuB,EAE3B,EAEJ,CAEA,MAAAwC,GAAep/B,GAA0Bw+B,GAAoBC,EAAQ,4ICjG/DY,GAASA,IAAM,CACb,MAAEtvD,KAAMqqB,EAAe,QAAQ,EAC/B,CAAEngC,SAAQvB,aAAY,EAAIqB,EAAe,CAAC,CAAEE,SAAQvB,kBAAmB,CAAEuB,SAAQvB,gBAAgB08C,EAAO,EACxG,CAAEl7C,WAAU8K,UAAa/K,IACzBqlE,EAAYj1B,GAAY,gBAAgB,EAExCk1B,EAAcnE,KACdL,EAAcD,GAAsBn6C,KAAMo6C,WAAW,EACrD,CAAEa,qBAAsBH,GAAsB,EAE9C95D,EADS69D,KACM,GAAG,EAClB,CAAElD,aAAYzvE,QAAOuL,KAAM9M,GAAa4wE,GAAUv6D,GAAS,EAAE,EAG7D,CAAE4F,OAAMuK,cAAa,EAAIF,EAAgB,CAAC,CAAErK,OAAMuK,mBAAoB,CAAEvK,OAAMuK,iBAAiBsjC,EAAO,EAEtGqqB,EAAU3uE,GACd6F,GAAS,CACPC,GAAI9F,EAAagH,QACjBjB,MAAO/F,EAAa+F,MACpBC,WAAYkO,iBAAU+I,eACvB,EAEGlX,EAAQ+3C,UAAQ,IAChB0tB,EAAmBvsD,EAAE,SAAS,EAC7BpO,EACArW,WAAUA,SAASiE,OAEjBwgB,EAAE,QAAS,CAAEgwB,MAAOz0C,EAASA,SAASiE,OAAQoS,QAAO,EAFrBoO,EAAE,qBAAsB,CAAEpO,QAAO,EADrDoO,EAAE,cAAc,EAIlC,CAACusD,EAAYhxE,iBAAUA,SAASiE,OAAQoS,EAAOoO,CAAC,CAAC,EAsBpD,OAnBA+vB,YAAU,IAAM,CACTy/B,GAID59D,GAASA,IAAUo5D,GACrBa,EAAkBj6D,CAAK,GAExB,CAAC49D,EAAa59D,EAAOo5D,EAAaa,CAAiB,CAAC,EAEvD97B,YAAU,IACD,IAAM,CACXg7B,GAAW1nD,SAAS,CAClB2nD,YAAa,GACbC,aAAc,GACf,GAEF,CAAE,IAEAnuE,GAAS,CAACvB,IAAa,CAACgxE,EAExB5hC,OAAAR,GAAA,CAAU,MAAOnqB,EAAE,eAAe,EACjC,UAAAiqB,MAAC,MAAG,UAAWQ,GAAOklC,WAAa3vD,WAAE,kBAAkB,EAAE,EACxDiqB,EAAA,SAAGjqB,SAAEA,EAAA,mBAAmB,CAAE,EAC7B,IAICpO,EAIArW,WAAUA,SAASiE,OAqBrBmrC,OAAA,OAAI,UAAWF,GAAOv2B,OACrB,UAAC+1B,EAAA,IAAA2lC,GAAA,CACC,gBAAC,QACE9oE,aAAM,MAAIqD,GACb,CACF,GACC8/B,MAAA,UAAO,UAAWQ,GAAOolC,OACxB,SAAC5lC,EAAA,UAAG,GAAIslC,EAAW,YAAWhD,EAAa1tE,OAAY,SACpDiI,UACH,GACF,QACC4nE,GACC,mBAAiBa,EACjB,OAAQG,EACR,SAAAn0E,EACA,UAAWi0E,EACX,YAAA7mE,EACA,WAAY,CAAC,CAAC6O,EACd,gBAAiB,CAAC,CAACuK,EAAa,CAEpC,IAtCI4oB,EAAA,KAAAqU,WAAA,WAAC/U,EAAA,IAAA2lC,GAAA,CACC,gBAAC,QACE9oE,aAAM,MAAIqD,GACb,CACF,GACAwgC,OAACR,IAAU,MAAArjC,EACT,UAAAmjC,MAAC,MAAG,UAAWQ,GAAOklC,WAAa3vD,WAAE,aAAa,EAAE,SACnD,KACC,WAACiqB,EAAA,UAAIjqB,SAAEA,EAAA,SAAS,CAAE,GACjBiqB,EAAA,UAAIjqB,SAAEA,EAAA,SAAS,CAAE,GACjBiqB,EAAA,UAAIjqB,SAAEA,EAAA,WAAW,CAAE,IACtB,GACF,CACF,IAnBKiqB,MAACE,IAAU,MAAArjC,CAAgB,EA8CtC,EC9HMgpE,GAAoB1/B,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,gQAAgQ,CAAE,CAAC,ECAtc64B,GAAoB3/B,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,sTAAsT,CAAE,CAAC,ECA5f84B,GAAW5/B,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,wLAAwL,CAAE,CAAC,ECArX+4B,GAAe7/B,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,gLAAgL,CAAE,CAAC,6GCiBjXg5B,GAAyBA,CAAC,CAAEn+B,OAAMn1C,UAASm4C,UAAS+jB,YAAWqX,kBAAiBC,eAAqB,IAAM,CACzG,MAAEpwD,KAAMqqB,EAAe,QAAQ,EAC/BklC,EAAYj1B,GAAY,eAAe,EAG3C,OAAA3P,OAACgN,IAAO,KAAA5F,EAAY,QAAAgD,EAAkB,KAAK,cAAc,aAAW,OAAO,kBAAiBw6B,EAC1F,UAAAtlC,EAAA,IAAC,KAAG,IAAIslC,EAAW,UAAW9kC,GAAO3jC,MAClCspE,SAAkBtX,GAAY94C,EAAZ84C,EAAc,gBAAqB,aAAN,EAClD,EACC7uB,EAAA,SAAE,UAAWQ,GAAOnxB,KAAO1c,SAAQA,EAAA,EACnCuzE,GAAmBlmC,MAACuG,EAAO,OAAOxwB,EAAE,aAAa,EAAG,QAAQ,WAAW,QAAS+0B,EAAS,UAAS,EAAG,EACxG,GAEJ,2HCAO,SAASs7B,GAA6C,CAC3DrlC,YACAslC,uBACA/oE,QACAgpE,aACAC,aACAltB,eACArL,WACAztC,UACAuxC,WAAW,EACsB,EAA2D,CACtF00B,QAAYn2B,GAAY/yC,CAAK,EAC7B,CACJmpE,UAAW,CAAEtsD,SAAQusD,kBAAiB1+D,OAAQ2+D,EAAYC,QAAO,EACjEC,eACA3yB,YACAkF,YACE/W,aAAWykC,EAAW,EAEpBC,EAAYP,IAAcE,EAE1BntB,EAAW7W,cACf,CAAC,CAAE6lB,mBAA6E,CAC9E,GAAI,CAACA,EAAe,OAEd,MAAE/1D,OAAM4K,MAASmrD,IACjBlyD,EAAQ+G,IAAS,WAAcmrD,EAAmCpZ,QAAUoZ,EAAclyD,MAE3F0wE,GACM3tB,IAGXytB,EAA2BG,GAAA,CACzB,MAAM53B,EAAY,CAAE,GAAG43B,EAAS7sD,QAG3B9f,eAAM,GAAG,EAAEkF,OAAO,CAAC+iD,EAAQpvB,EAAOntB,EAAOkhE,KACxClhE,IAAUkhE,EAAI1xE,OAAS,EACzB+sD,EAAOpvB,CAAK,EAAI78B,EAEhBisD,EAAOpvB,CAAK,EAAI,CAAE,GAAGovB,EAAOpvB,CAAK,GAG5BovB,EAAOpvB,CAAK,GAClBkc,CAAS,EAEL,CACL,GAAG43B,EACH7sD,OAAQi1B,EACRs3B,gBAAiBF,EACnB,CACD,GAEH,CAACO,EAAW3tB,EAAUotB,EAAWK,CAAY,CAC/C,EAEMn3B,EAAehN,cACnB,eAA4Bx1C,EAAyB,OAGnD,GAFAA,GAASA,EAAMg/C,iBAEX8B,EAAU,CACR7vC,MAEA,IACF0oE,EAAoBtmC,IACX,CAAE,GAAGA,EAAGqmC,OAAQ,GAAM5+D,OAAQ,IACtC,EACU7J,EAAA,MAAM6vC,EAAS7zB,CAAM,QACzBtnB,EAAgB,CACZsL,EAAA,CAAE6J,OAAQ3M,MAAM0Z,GAAGliB,aAAiBT,MAAQS,EAAMF,QAAWE,CAAgB,EAC1F,CAGIsL,uBAAU6J,SAAV7J,QAAkB5I,OAAQ,CAC5BsxE,EAAoBtmC,IACX,CACL,GAAGA,EACHv4B,OAAQ7J,iBAAU6J,OAClB4+D,OAAQ,IAEX,EAED,MACF,CACF,CAEAC,EAAoBtmC,IACX,CACL,GAAGA,EACHmmC,gBAAiB9xE,OACjBgyE,OAAQ,IAEX,CAEH,GAAC54B,EAAU64B,EAAc1sD,CAAM,CACjC,EAEM+sD,EAASxkC,cACb,UAAkB,CACXqkC,IACM3tB,IACTytB,EAAoBtmC,IACX,CACL,GAAGA,EACHmmC,gBAAiBF,GAEpB,IAGL,CAACO,EAAW3tB,EAAUotB,EAAWK,CAAY,CAC/C,EAEA,OACGnmC,OAAA,WAAQ,kBAAiB8lC,EAAW,UAAAzlC,EACnC,UAACf,MAAA,OAAI,UAAWqmC,EACd,SAAArmC,EAAA,IAAC,MAAG,GAAIwmC,EAAYlpE,WAAM,CAC5B,GACCspE,GAAUG,GAAc/mC,EAAA,IAAAoB,GAAA,CAAe,sBAAqB,GAAG,EAC/D7gC,GACCy/B,EAAA,IAAC,OAAK,WAAWQ,GAAO2mC,QAAS,WAAU,GAAC,SAAWj6E,GAAUA,EAAMg/C,iBACpE3rC,SAAQA,EAAA,CACP4Z,SACA4sD,YACAH,SACArtB,WACA,GAAIwtB,EAAY,CAAE/+D,OAAQ2+D,GAAe,CAAC,CAC3C,GACH,GAEAJ,GAAcD,GAAcjtB,IAC5BrZ,MAAC,OAAI,UAAWQ,GAAO4mC,SACpBL,WAEIR,6BAAcA,GAAAvmC,EAAA,IAACuG,GAAO,MAAOggC,EAAY,KAAK,SAAS,QAAS72B,EAAc,SAAUwE,CAAa,GACrGmF,GAAiBrZ,EAAA,IAAAuG,EAAA,CAAO,MAAO8S,EAAc,KAAK,QAAQ,QAAQ,OAAO,QAASD,CAAY,IACjG,EAEA,CAACtH,GACDw0B,IACC,OAAOA,GAAe,SACpBA,EAEDtmC,MAACuG,EAAO,OAAO+/B,EAAsB,KAAK,SAAS,QAASY,EAAQ,SAAUhzB,KAGpF,CAEJ,GAEJ,CCxJa4yB,SAAc5kC,gBAA0DttC,MAAS,EAE9F,SAASyyE,GAAsC,CAAEnzB,YAAWrG,gBAAeqQ,UAASne,UAAuB,EAAgB,CACzH,KAAM,CAACpZ,EAAOvN,CAAQ,EAAIqpB,WAA2B,CACnDtoB,OAAQ0zB,EACR64B,gBAAiB9xE,OACjB0yE,QAAS,GACTV,OAAQ,GACT,EAEKxtB,EAAW1W,cACf,UAAoB,CAClBtpB,EAAgBmnB,IACP,CACL,GAAGA,EACHpmB,OAAQ0zB,EACRy5B,QAAS,GACTZ,gBAAiB9xE,OACjB6kC,QAAS,GACTzxB,OAAQpT,QAEX,EACDspD,GAAWA,EAAQ,GAErB,CAACrQ,EAAeqQ,CAAO,CACzB,EAEApY,mBAAU,IAAM,CAETnf,EAAM+/C,iBACTttD,EAAgBmnB,IACP,CACL,GAAGA,EACHpmB,OAAQ0zB,GAEX,CAEF,GAACA,EAAelnB,EAAM+/C,eAAe,CAAC,EAGtC1mC,MAAA8mC,GAAY,SAAZ,CACC,MAAO,CACL5yB,YACAkF,WACAqtB,UAAW9/C,EACXkgD,aAAcztD,CAGf2mB,4BAAUhkC,IAAI,CAACoqC,EAAOohC,IACpBvnC,MAAAomC,GAAA,CAA+BjgC,MAAPohC,CAAa,EAE1C,EAEJ,wHClCMC,GAAUA,CAAC,CAAEC,iBAAgBpB,uBAAsB91E,iBAAiB,EAAY,IAAmB,UACjG4iD,QAAoBphD,EAAU0uB,EAAiB,EAE/C,CAAE1K,IAAGoB,QAASipB,EAAe,MAAM,EACnCgC,EAAWD,KACXmR,EAAWC,KACX3O,EAAW4O,KACX,CAACX,EAAcC,CAAkB,EAAIlD,GAAU,EAC/C83B,EAAah0B,GAAYP,EAAkBhuB,iBAAiB,EAC5D,CAACwiD,EAAgBC,CAAiB,EAAInlC,WAAS,EAAK,EACpDolC,EAAoBH,EAAW7Y,UAAY94C,EAAE,6BAA6B,EAAIA,EAAE,2BAA2B,EAC3G+1C,EAAW30C,EAAK9T,WAAajW,EAAIM,qBAAuBN,EAAIM,qBAAuBkH,OAEzFkxC,YAAU,IAAM,EACV4hC,EAAW7Y,WAAa6Y,EAAW/nB,UACrCioB,EAAkB,EAAI,GAEvB,CAACF,EAAW7Y,UAAW6Y,EAAW/nB,OAAO,CAAC,EAEvC,MAAElnC,WAAUP,mBAAkBC,mBAAkB,EAAIP,EACxD,CAAC,CAAErK,OAAM2K,mBAAkBC,wBAAyB,CAClDM,SAAUlL,EACV2K,mBACAC,sBAEFijC,EACF,EAEM,CAAE3qD,mCAAkCE,uBAAsBC,oBAAqBuiD,EAAkBhyB,cAEjG2mD,GAAiBrvD,oBAAUzM,WAAVyM,eAAoBsvD,gBACrCC,EAAiBF,GAAkBA,IAAmB,YAAe,GACrEG,EAAqBD,GAAiB,GAACvvD,mBAAUzM,WAAVyM,QAAoByvD,eAAiB,GAGlFpiC,YAAU,IAAM,CACd,GAAI,CAAC3tB,EAAmB,CACtBg7B,EAAkB3wB,qBAAqB,EAEvC,MACF,GACC,CAAC2wB,EAAmBh7B,CAAiB,CAAC,EAEzC,KAAM,CAACgwD,EAAeC,CAAgB,EAAIxzB,UAAQ,IAAM,CACtD,MAAM3hB,EAA2B,GAC3Bo1C,EAA8B,GAEpClwD,kBAAmBjf,QAAqB60B,GAAA,CAClC,EAACA,WAAS3wB,QAAQ2wB,iBAAS3wB,QAAS,WACtC61B,EAAMtpB,KAAKokB,CAAO,EAElBs6C,EAAS1+D,KAAKokB,CAAO,CACvB,GAGK,CAACkF,EAAOo1C,CAAQ,GACtB,CAAClwD,CAAiB,CAAC,EAEhB+J,EAAW0yB,UAAQ,IAAMjkB,GAAexY,EAAmBD,CAAgB,EAAG,CAACC,EAAmBD,CAAgB,CAAC,EAEnH+J,EAAiB2yB,UAAQ,IAAMrkB,GAAoBpY,EAAmBD,CAAgB,EAAG,CAACC,EAAmBD,CAAgB,CAAC,EAE9H21B,EAAgB+G,UACpB,KAAO,CACL,GAAGn8B,EACHyJ,WACAD,iBACAqmD,qBAAsB,EAExB,IAAC7vD,EAAUyJ,EAAUD,CAAc,CACrC,EAEM8pC,EAAsBzuD,GAAwC,CAC5D0uD,QAAiBC,GAAUC,SAAS5uD,CAAK,EACzC6uD,EAAiB,cAAc3xD,KAAKwxD,CAAc,EAClDI,EAAkB,gBAAgB5xD,KAAKwxD,CAAc,EAE3D,OAAIG,GAAkBC,EACbpsB,EAAA,IAAC,QAAK,wBAAyB,CAAEqsB,OAAQ/uD,CAAW,IAGtDA,GAGT,SAASirE,EAAgBvgE,EAA+B,CACtD,MAAM2+D,EAAyB,GAG3B6B,6BAAev7E,EAAEoN,MAAM,GAAG,GAC3BnB,QAAmBrG,GAAA,CACVA,SAAMuhC,KAAM,GAClB,IAAK,sBACQtkB,OAAOiG,EAAE,iCAAiC,EAC1CyL,QAAQzL,EAAE,oCAAoC,EACzD,MACF,IAAK,gCACQjG,OAAOiG,EAAE,iCAAiC,EAC1CyL,QAAQzL,EAAE,6BAA6B,EAClD,MACF,IAAK,uCACQjG,OAAOiG,EAAE,iCAAiC,EAC1CyL,QAAQzL,EAAE,yCAAyC,EAC9D,MACF,IAAK,+BAAgC,CACxBjG,OAAOiG,EAAE,iCAAiC,EAC1CuyD,uBAAuBvyD,EAAE,iCAAiC,EACrE,KACF,CACA,IAAK,wCAAyC,CACjCjG,OAAOiG,EAAE,iCAAiC,EAC1CgQ,YAAYhQ,EAAE,oCAAoC,EAC7D,KACF,CACA,IAAK,uCAAwC,CAChCjG,OAAOiG,EAAE,iCAAiC,EAC1CiQ,WAAWjQ,EAAE,mCAAmC,EAC3D,KACF,CACA,IAAK,6BAA8B,CACtBjG,OAAOiG,EAAE,2CAA2C,EAC/D,KACF,CACA,IAAK,mCAAoC,CAC5BjG,OAAOiG,EAAE,kCAAkC,EACtD,KACF,CACA,QAAS,CACIjG,OAAOiG,EAAE,8BAA8B,EAClDvc,GAAS,UAAW,gBAAiB,CAAE3G,QAAO,EAC9C,KACF,CACF,IAGG8zE,CACT,CAEA,SAAS8B,EAAYtiC,EAA2D,CACvE,OACL,GAAGA,EACHpF,UAAW0mC,EACXpB,uBACAE,WAAYxwD,EAAE,cAAc,EAC5BsjC,aAActjC,EAAE,gBAAgB,EAChCxV,QAAUzM,GAAiE,OAEnE6yE,QAAa4B,EAAgBz0E,EAAKkU,MAAM,EAG9C,OAEK2+D,wCAAY72D,KAAQkwB,MAAA4B,GAAA,CAAa,QAAQ,QAAS+kC,WAAW72D,KAAK,EAAkB,MACpFq2B,IAAM5lC,UAAN4lC,qBAAgB,CAAE,GAAGryC,EAAMkU,OAAQ2+D,GACtC,GAEJ,EAEJ,CAEA,MAAM+B,EAA2B,SAAY,CAC3C,GAAKjwD,EAGL,IAAIuvD,GAAiBC,EACnB,aAAM90B,EAAkBtwB,cAAcpK,EAAS+I,MAAO,EAAE,EACjD8xB,EAASzO,EAAqBD,EAAU,cAAc,CAAC,EAGhE0O,EAASzO,EAAqBD,EAAUn0C,EAAmC,gBAAkB,gBAAgB,CAAC,IAGhH,OAEIiwC,EAAA,KAAAqU,WAAA,WAAA/U,MAAC,KAAG,WAAU,iBAAkBjqB,WAAE,aAAa,EAAE,EAEhDiqB,MAAAqnC,GAAA,CAAK,cAAAx5B,EACH,UACC46B,EAAY,CACVnrE,MAAOyY,EAAE,mBAAmB,EAC5BuwD,WAAYvwD,EAAE,0BAA0B,EACxCi4B,SAAU,MAAO7zB,GAAW,CACpB+H,QAAW2O,GAAyB1Y,EAAmB,CAAE,GAAGgC,EAAOnO,SAAU,GAAGmO,EAAO8H,eAAgB,EAEvG9jB,EAAW,MAAMg1C,EAAkBjyB,WAAW,CAClD6E,UAAW5L,EAAO4L,WAAa,GAC/BC,SAAU7L,EAAO6L,UAAY,GAC7Bha,SAAU,CACR,GAAGmO,EAAOnO,SACV,GAAGmlB,GAA+BjP,CAAQ,EAC1CA,SAAU7T,KAAKC,UAAU4T,CAAQ,CACnC,EACD,EAEDkgB,SAASrsB,EAAE,yBAA0B,CAAE4yD,QAAS5yD,EAAE,mBAAmB,EAAG,EAAG,SAAS,EAE7E5X,CACT,EACAoC,yBAEImgC,SAAA,KAAAqU,EAAA,oBAAA/U,EAAA,IAACgS,GACC,MAAK,YACL,MAAOj8B,EAAE,mBAAmB,EAC5B,MAAO4yD,EAAQxuD,OAAO4L,WAAa,GACnC,SAAU4iD,EAAQpvB,SAClB,MAAO,CAAC,GAACovB,IAAQ3gE,SAAR2gE,QAAgB5iD,WACzB,YAAY4iD,IAAQ3gE,SAAR2gE,cAAgB5iD,UAC5B,SAAU4iD,EAAQ/B,OAClB,QAAS+B,EAAQ5B,UACjB,aAAa,aACb,KAAMjb,EAAS,EAEhB9rB,EAAA,IAAAgS,GAAA,CACC,KAAK,WACL,MAAOj8B,EAAE,kBAAkB,EAC3B,MAAO4yD,EAAQxuD,OAAO6L,UAAY,GAClC,SAAU2iD,EAAQpvB,SAClB,MAAO,CAAC,GAACovB,IAAQ3gE,SAAR2gE,QAAgB3iD,UACzB,YAAY2iD,KAAQ3gE,SAAR2gE,eAAgB3iD,SAC5B,SAAU2iD,EAAQ/B,OAClB,QAAS+B,EAAQ5B,UACjB,aAAa,cACb,KAAMjb,EAAS,GAEnB,EAEH,GACD2c,EAAY,CACVnrE,MAAOyY,EAAE,eAAe,EACxBi4B,SAAU,MAAO7zB,GAAW,CAC1B,GAAI,CAACA,EAAOqH,OAAS,CAACrH,EAAOmuD,qBACrB,UAAIl2E,MAAM,kCAAkC,EAE9C+L,QAAW,MAAMg1C,EAAkBjyB,WAAW,CAClDM,MAAOrH,EAAOqH,OAAS,GACvB8mD,qBAAsBnuD,EAAOmuD,qBAC9B,EAEDlmC,SAASrsB,EAAE,yBAA0B,CAAE4yD,QAAS5yD,EAAE,eAAe,EAAG,EAAG,SAAS,EAEzE5X,CACT,EACAmoE,WAAYvwD,EAAE,sBAAsB,EACpC+7B,SAAU,CAACvhD,EACXgQ,yBAEImgC,SAAA,KAAAqU,EAAA,oBAAA/U,EAAA,IAACgS,GACC,MAAK,QACL,MAAOj8B,EAAE,eAAe,EACxB,MAAO4yD,EAAQxuD,OAAOqH,OAAS,GAC/B,SAAUmnD,EAAQpvB,SAClB,MAAO,CAAC,GAACovB,IAAQ3gE,SAAR2gE,QAAgBnnD,OACzB,YAAYmnD,IAAQ3gE,SAAR2gE,cAAgBnnD,MAC5B,SAAUmnD,EAAQ/B,OAClB,QAAS+B,EAAQ5B,UACjB,aAAa,QACb,SAAQ,KAET4B,EAAQ5B,WACP/mC,MAACgS,GACC,MAAK,uBACL,MAAOj8B,EAAE,0BAA0B,EACnC,MAAO4yD,EAAQxuD,OAAOmuD,qBACtB,SAAUK,EAAQpvB,SAClB,MAAO,CAAC,GAACovB,IAAQ3gE,SAAR2gE,QAAgBL,sBACzB,YAAYK,KAAQ3gE,SAAR2gE,eAAgBL,qBAC5B,KAAMz1B,EAAe,OAAS,WAC9B,SAAU81B,EAAQ/B,OAClB,aAAa,mBACb,aACE5mC,MAACkN,GAAW,cAAYn3B,EAAE,uBAAuB,EAAG,QAAS,IAAM+8B,IAAsB,eAAcD,EACrG,SAAA7S,MAACqN,EAAK,MAAMwF,EAAeG,GAAaC,EAAc,GACxD,EAEF,SAAQ,EAEX,IACH,EAEH,GACDw1B,EAAY,CACVnrE,MAAOyY,EAAE,kBAAkB,EAC3BuwD,WACGtmC,EAAA,IAAAuG,EAAA,CACC,MAA2BxwB,EAApBkyD,EAAsB,uBAA4B,uBAAN,EACnD,KAAK,SACL,QAAS,IAAOxvD,EAAWiwD,IAA6B,KAAM,CAGnE,GACDD,EAAY,CACVnrE,MAAOyY,EAAE,4BAA4B,EACrCwwD,WAAYxwD,EAAE,yBAAyB,EACvCi4B,SAAU,MAAO7zB,GAAW,CACpBhc,QAAW,MAAMg1C,EAAkB/wB,eAAeyO,GAAyB1Y,EAAmBgC,EAAO8H,cAAc,CAAC,EAE1HmgB,SAASrsB,EAAE,yBAA0B,CAAE4yD,QAAS5yD,EAAE,4BAA4B,EAAG,EAAG,SAAS,EAEtF5X,CACT,EACAoC,WAEK4nE,4CAAepsE,IAAI,CAACgyB,EAAShoB,IAC3Bi6B,oBAAA2mB,GAAA,CAEC,KAAM,kBAAkB54B,EAAQv7B,IAAI,GACpC,QAAS4D,IAAyBuyE,IAAQxuD,OAAO8H,iBAAf0mD,cAAgC56C,EAAQv7B,KAAK,EAC/E,SAAUm2E,EAAQpvB,SAClB,cAAewS,EAAmBh+B,EAAQzwB,KAAK,EAC/C,SAAUywB,EAAQ97B,UAAY02E,EAAQ/B,OACtC,SAAU74C,EAAQ97B,SAClB,KAAM65D,CAPD/lD,MAUX,GAEH,GACDqiE,iBAAkB7yE,SAChBkzE,EAAY,CACVnrE,MAAOyY,EAAE,oCAAoC,EAC7CwwD,WAAYxwD,EAAE,yBAAyB,EACvCi4B,YAAsBmF,EAAkB/wB,eAAeyO,GAAyB1Y,EAAmBgC,EAAO8H,cAAc,CAAC,EACzH1hB,QACEooE,GAAA3oC,EAAA,IAAC,MAAI,WAAWQ,GAAOisB,aAAc,cAAa9e,OAC/Cy6B,SAAiBrsE,MAChBgyB,GAAAiS,EAAA,IAACqrB,GAEC,MAAMt9B,EAAQ3wB,KACd,KAAM,kBAAkB2wB,EAAQv7B,IAAI,GACpC,QAASu7B,EAAQ5hC,QACjB,MAAO4/D,EAAmBh+B,EAAQzwB,KAAK,EACvC,YAAaywB,EAAQE,YACrB,MAAO06C,EAAQxuD,OAAO8H,eAAe8L,EAAQv7B,IAAI,EACjD,SAAWu7B,EAAQ3wB,OAAS,YAAc2wB,EAAQ97B,UAAa02E,EAAQ/B,OACvE,SAAU+B,EAAQpvB,SAClB,SAAUxrB,EAAQ97B,QATb87B,IAAQv7B,IASc,CAE9B,CACH,GAEH,EACH7B,GACE83E,EAAY,CACVnrE,MAAOyY,EAAE,2BAA2B,EACpCxV,QACEooE,GAAAjoC,OAAC,MAAI,WAAWF,GAAOooC,wBACrB,UAAA5oC,MAAC,OACC,SAACA,EAAA,IAAA6oC,GAAA,CAAM,EAAA9yD,EAAM,QAAQ,2BAA2B,OAAQ,CAAEyL,MAAOmnD,EAAQxuD,OAAOqH,OAAQ,CAC1F,GACCwe,EAAA,WACC,SAACA,MAAAuG,EAAA,CACC,MAAOxwB,EAAE,2BAA2B,EACpC,KAAK,SACL,SAAU2xD,EAAWxzB,UACrB,QAAS,SAAY,CACnBwzB,EAAWvzB,OAAO,GAClB,CAEN,IACF,EAEH,EACHvjD,GACE63E,EAAY,CACVnrE,MAAOyY,EAAE,8BAA8B,EACvCxV,QAASA,IACPmgC,OAAC,MAAI,WAAWF,GAAOooC,wBACrB,UAAC5oC,EAAA,WAAKjqB,SAAEA,EAAA,6BAA6B,CAAE,GACtCiqB,EAAA,WACC,SAACA,MAAAuG,EAAA,CACC,MAAOxwB,EAAE,8BAA8B,EACvC,KAAK,SACL,QAAQ,SACR,QAAS,IAAM,CACbu9B,EAASzO,EAAqBD,EAAUqjC,EAAoB,2BAA6B,gBAAgB,CAAC,GAC1G,CAEN,IACF,CAEH,EAAC,EACJ/rE,OAAO3F,EAAQ,EACnB,EACC5F,GACCqvC,EAAA,IAACimC,GAAM,MAAM0B,EAAgB,QAASE,EAAmB,QAAS,IAAMD,EAAkB,EAAK,EAAG,UAAWF,EAAW7Y,UACzH,CACH,GAEJ,sCC9ZM6V,GAAoB,CACxB,CAAClS,EAAWC,EAAE,EAAG,EACjB,CAACD,EAAWE,EAAE,EAAG,EACjB,CAACF,EAAWG,EAAE,EAAG,EACjB,CAACH,EAAWI,EAAE,EAAG,EACjB,CAACJ,EAAWK,EAAE,EAAG,CACnB,EAEM1kE,GAAYA,CAAC,CAAEmD,WAAUoN,cAAaE,kBAAiBo3D,cAAa8S,uBAA6B,IAAmB,CAClH,MAAE/yD,KAAMqqB,EAAe,MAAM,EAC7BqlC,EAAU3uE,GAA+B6F,GAAS,CAAEC,GAAI9F,EAAagH,QAASjB,MAAO/F,EAAa+F,MAAOC,WAAYhG,EAAagN,OAAQ,EAEhJ,cACG,MACC,WAAC48B,EAAA,YAAI,UAAWF,GAAOolC,OACrB,UAAC5lC,EAAA,UAAIjqB,SAAEA,EAAA,iBAAiB,CAAE,GACzBzkB,EAASA,SAASiE,OAAS,EAAKyqC,MAAAuG,EAAA,CAAO,MAAOxwB,EAAE,iBAAiB,EAAG,QAAS+yD,EAAyB,EAAG,MAC5G,EACCx3E,EAASA,SAASiE,OAAS,QACzBkvE,GACC,QAAQgB,EACR,SAAAn0E,EACA,YAAA0kE,EACA,KAAA0O,GACA,UAAW,GACX,YAAAhmE,EACA,WAAY,GACZ,gBAAAE,CAAA,CACA,EAEDohC,MAAA,KAAGjqB,SAAEA,EAAA,wBAAwB,CAAE,EAEpC,GAEJ,EC/CagzD,GAAwBA,CACnCC,EACAxjB,EACA/sC,EACAwwD,IACG,CACG91B,QAAoBphD,EAAU0uB,EAAiB,EAC/C8zB,EAAqBxiD,EAAU2oB,EAAkB,EAEjDwuD,EAA6Bx1B,GAAYP,EAAkBjyB,WAAY,CAC3EyyB,UAAWA,IAAM,CACf/7B,EAAgBwB,SAAS,CACvBvB,QAAS,GACV,CACH,EACD,EAEM67B,UAAYa,EAAmB12B,mBAAoB,CACxD81B,UAAWA,IAAM,CACX,CAACq1B,GAAkBxjB,GACrB0jB,EAA2B/0B,OAAO,CAChCpuB,WAAWtN,iBAAUsN,YAAa,GAClCC,UAAUvN,iBAAUuN,WAAY,GAChCha,SAAU,CACR,CAAC,GAAGi9D,CAAoB,oBAAoB,EAAGzjB,CACjD,EACD,CAEL,EACD,CACH,kSCpCM2jB,GAAmBhjC,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,sIAAsI,CAAE,CAAC,khBCiB3Um8B,GAAcA,CAAC,CAAEC,iBAAgBC,0BAAyBpqE,QAAOulD,WAAUlL,WAAUphB,WAA4B,IAAM,CACrH,MAAEpiB,IAAGoB,MAASipB,IAAe,CAAC,OAAQ,SAAS,CAAC,EAChD,CAAE5I,uBAAsBC,mBAAkBld,QAAWrb,IAErDqqE,EAAqBD,IAA4BpqE,EAAMO,QAE7D,OACGihC,OAAA,OAAI,UAAWM,EAAWR,GAAOgpC,qBAAsB,CAAE,CAAChpC,GAAOipC,0BAA0B,EAAGhlB,CAAU,GACvG,UAAAzkB,EAAA,IAAC2mB,GAAS,UAAU4iB,EAAoB,KAAMrqE,EAAMO,QAAS,QAASglD,EAAU,SAAU,IAAMlL,EAASr6C,EAAMO,OAAO,EAAE,EACvHihC,EAAA,YAAI,UAAWF,GAAOkpC,yBACnBL,cAAkBE,IACjB7oC,OAAA,OAAI,UAAWM,EAAWR,GAAOmpC,mBAAoB,CAAE,CAACnpC,GAAOopC,wBAAwB,EAAGnlB,CAAU,GAClG4kB,UAAkBtzD,KAAE,2BAA2B,EAAE8zD,YAAY,EAC7DN,GAAsBxzD,EAAE,gCAAgC,EAAE8zD,YAAY,GACzE,EAEDnpC,EAAA,YAAI,UAAWF,GAAOspC,yBACrB,UAAC9pC,MAAA,OAAKjqB,WAAE,gBAAgBwE,IAAW,QAAU,UAAY,QAAQ,eAAe,CAAE,IAChF8uD,GAAkBE,IAAuBpxC,UACxC,MAAI,WAAWqI,GAAOupC,gBACpBV,UACCA,GAAA,CAACC,GACDvzD,EAAE,oCAAqC,CAAE9S,KAAM8zB,GAAoB,IAAItiC,KAAK0jC,EAAY,GAAI,EAAGhhB,EAAK9T,QAAQ,EAAG,EAChHkmE,GAAsBxzD,EAAE,4BAA6B,CAAE9S,KAAM8zB,GAAoB,IAAItiC,KAAK0jC,EAAY,GAAI,EAAGhhB,EAAK9T,QAAQ,EAAG,GAChI,GAEJ,GACF,EACCq9B,EAAA,YAAI,UAAWF,GAAOlK,MACpBD,UAAYmB,KAAsBC,EAAkB7iC,MAAS,EAC7D8rC,EAAA,aAAK,UAAWF,GAAOwpC,iBAAkB,cAAEj0D,EAAE,mBAAmBwE,CAAM,MAAM,GAAE,GACjF,CACF,GAEJ,upBCzBM0vD,GAAuB,EAsCvBrvB,GAAUA,CAAC,CACfl8C,cACAwrE,sBACAvlD,qBACAtM,eACAN,eACAU,WACAy7B,YACAuzB,iBACApB,uBACA8D,6BACAC,sBACAC,qBACA35E,uBAAuB,GACvBI,kBAAkB,GAClBD,yBACAy5E,6BACAC,yBACA/qE,SAAS,CAAE,EACX8pE,0BAA0B,GAC1BkB,yBACAC,oBACAjlB,kBACAklB,qBACA1B,iBACA2B,oBACAC,4BACAC,kBACAC,qBACK,IAAmB,QAClBC,QAAwB16B,GAAY,sBAAsB,EAC1D50B,EAAkB40B,GAAY,gBAAgB,EAC9C26B,EAAmB36B,GAAY,iBAAiB,EAChD,CAAEt6B,IAAGoB,MAASipB,IAAe,CAAC,OAAQ,SAAS,CAAC,EAChD6qC,EAA0BlzD,GAAeA,iBAAcxiB,QAAS00E,GAAuB,EACvFiB,GAAsBD,EAA0B,EAChD33B,EAAWC,KACX3O,EAAW4O,KACX23B,GAAwBxmD,iBAAoBpK,UAAW,UAEvDi/C,EADazG,OACaP,EAAWC,GAErC,CAAC2Y,GAAiBC,EAAkB,EAAI5oC,WAAS,EAAK,EAE5DqD,YAAU,IAAM,CACTslC,IACgBzmD,oBAAoB7G,cAAe,IAAI,CAE3D,GAAC6G,EAAoBymD,GAAiBV,CAAkB,CAAC,EAE5D5kC,YAAU,IAAM,CACdulC,GAAmB,EAAK,GACvB,CAAC1mD,iBAAoBpmB,OAAQomB,iBAAoBI,eAAe,CAAC,EAEpE+gB,YAAU,IAAM,WACV0f,GAAmBhmD,GACrBmrE,KACGnrE,KAAOlF,KAAM4E,IAAUA,GAAMO,UAAY+lD,CAAe,IAAxDhmD,eAA2Dg4B,uBAAwB,MACjFh4B,KAAOlF,SAAgB4E,GAAMO,WAAYklB,iBAAoB7G,YAAW,IAAxEte,eAA2Eg4B,uBAAwB,EACxG,GAED,CAACguB,EAAiBhmD,EAAQmlB,EAAoBgmD,CAAiB,CAAC,EAEnE,SAASW,IAA8B,CAC5BzmC,IAAqBD,EAAU,cAAc,CAAC,CACzD,CAEA,SAAS2mC,IAAyB,CACvB1mC,IAAqBD,EAAU,WAAW,CAAC,CACtD,CAEA,SAAS4mC,IAA4B,CAC1B3mC,IAAqBD,EAAU,aAAa,CAAC,CACxD,CAEA,SAAS6mC,IAA2B,CACzB5mC,IAAqBD,EAAU,oBAAoB,CAAC,CAC/D,CAEA,SAAS8mC,EAASnxD,GAAgC,CAChD,OAAQA,GAAM,CACZ,IAAK,QACH,OAAOxE,EAAE,mCAAmC,EAC9C,IAAK,OACH,OAAOA,EAAE,kCAAkC,EAC7C,IAAK,MACH,OAAOA,EAAE,iCAAiC,EAC5C,IAAK,OACH,OAAOA,EAAE,kCAAkC,EAC7C,IAAK,UACH,OAAOA,EAAE,mCAAmC,EAC9C,QACE,OAAOA,EAAE,oBAAoB,CACjC,CACF,CAEA,MAAM41D,GAAgC,CAACf,GAA6BL,GAA4B,CAACa,IAAmB,CAAC16E,EAErH,OAEIgwC,EAAA,KAAAqU,WAAA,WAAA/U,EAAA,IAACimC,GACC,WAAW,CAACuE,EAAuB7qB,QACnC,QACG6qB,EAAuB7qB,QAMpB5pC,EAAE,gCAAgC,EALlCizD,EACEjzD,EAAE,mCAAmC,EACrCA,EAAE,sCAAuC,CACvC9S,MAAM0hB,iBAAoBwT,YAAapB,GAAoB,IAAItiC,KAAKkwB,EAAmBwT,UAAY,GAAI,EAAGhhB,EAAK9T,QAAQ,CACxH,GAGT,KAAM+nE,KAAoBZ,EAAuB3b,WAAa2b,EAAuB7qB,SACrF,QAAS,IAAM,CACb6qB,EAAuB77B,MAAM,EAC7B08B,GAAmB,EAAK,GACxB,QAEH,KAAG,WAAU,iBAAkBt1D,WAAE,cAAc,EAAE,EACjDrX,IAAgBlQ,GAAaG,MAC5B+xC,OAAC,WAAQ,kBAAiBqqC,EAAuB,UAAWtD,EAC1D,UAAAznC,MAAC,MAAI,WAAWqmC,EACd,SAAArmC,EAAA,IAAC,MAAG,GAAI+qC,EAAwBK,SAAkBr1D,KAAE,2BAAgC,mCAAN,CAA2C,GAC3H,EACC4O,EACC+b,OAACqS,GAAM,SAAN,CACE,WAACq4B,IACA1qC,OAAC,MAAI,WAAWF,GAAOyc,QACrB,UAAAvc,OAAC,IACC,WAAAV,EAAA,IAAC,SAAQ0rC,YAAS/mD,EAAmBpK,MAAM,EAAE,EAAS,UAAE,KAAE,IACzDoK,EAAmBpmB,SAAW,UAAY,CAAC4sE,GAAyB,CAAC7B,EAClEvzD,EAAE,oCAAqC,CAAE9S,KAAM8zB,GAAoB,IAAItiC,KAAKkwB,EAAmBwT,UAAY,GAAI,EAAGhhB,EAAK9T,QAAQ,EAAG,EAClI0S,EAAE,uCAAwC,CAAE9S,KAAM8zB,GAAoB,IAAItiC,KAAKkwB,EAAmBwT,UAAY,GAAI,EAAGhhB,EAAK9T,QAAQ,EAAG,GACvIgV,GAAgBixD,IAA4B3kD,EAAmBpmB,SAAW,aACzEyhC,EAAA,YAAK,UAAWQ,GAAOorC,cACrB71D,WAAE,oCAAqC,CACtClZ,MAAO6uE,GAASrzD,iBAAckC,WAAU/a,KAAOlF,KAAgB4E,OAAMO,UAAY6pE,CAAuB,IAAhE9pE,eAAmE+a,SAAU,OAAO,CAC7H,GACH,GAEJ,EACC,CAAC4wD,GACAzqC,OAAC,IAAE,WAAWF,GAAOlK,MACnB,UAAC0J,MAAA,UAAQ3J,YAAY1R,EAAmB+Y,iBAAkB/Y,EAAmBiZ,oBAAqBnlB,EAASkD,OAAO,CAAE,UACnH,QAAM,eAAE5F,EAAE,mBAAmB4O,EAAmBpK,MAAM,EAAE,GAAE,GAC7D,IAlBiCoK,EAAmB5G,cAoBxD,EAED6sD,EACClqC,EAAA,KAAC,IAAE,WAAWF,GAAOqrC,YAClB91D,YAAE,uCAAwC,CAAE80D,kBAAiB,EAAG,IACjE7qC,MAACye,IAAK,KAAMqsB,EAAqB,OAAO,SACrC/0D,WAAE,8CAA8C,EACnD,GACF,EAEA41D,IACE3rC,MAACuG,GACC,UAAW/F,GAAOsrC,oBAClB,MAAO/1D,EAAE,kCAAkC,EAC3C,SAAU,CAACrlB,GAAwBi0B,EAAmBpmB,SAAW,YACjE,QAAS,IAAM,CACTiB,EAAOjK,OAAS,GAAK,CAAC7E,EACxB26E,GAAmB,EAAI,EAEMf,GAAA,MAAAA,GAC/B,EAEF,UAAW9Q,EACX,MAAM,UACN,cAAY,6BAGjB,GACC70C,EAAmBpmB,SAAW,UAAYomB,EAAmBpmB,SAAW,iBAC1E,CAAC4sE,GACD,CAACC,IACD16E,EACGsvC,MAAAuG,EAAA,CACC,MAAOxwB,EAAE,kCAAkC,EAC3C,QAASy1D,GACT,UAAWhS,EACX,cAAY,4BAA4B,GAExC9oE,EACDsvC,EAAA,IAAAuG,EAAA,CAAO,MAAOxwB,EAAE,iCAAiC,EAAG,QAAS01D,EAAyB,GACrF,KACN,GACEv3B,EAAY,KACbxT,EAAA,KAAAqS,GAAM,SAAN,CACC,UAAC/S,EAAA,SAAGjqB,SAAEA,EAAA,8BAA8B,CAAE,GACtCiqB,MAACuG,EAAO,SAAQ,YAAY,MAAM,UAAU,MAAOxwB,EAAE,oCAAoC,EAAG,QAASu1D,EAA4B,IACnI,EAEDF,IACC1qC,EAAA,KAAC,MAAI,WAAWF,GAAOurC,oBACpBvsE,YACEtD,OAAQ8vE,IAAMA,GAAEnzC,iBAAiB,EACjC98B,IACCmD,IAAA8gC,EAAA,IAACopC,GAEC,gBAAgBlqE,GAAMO,WAAYklB,iBAAoB7G,aACtD,wBAAAwrD,EACA,MAAApqE,GACA,SAAUsmD,IAAoBtmD,GAAMO,QACpC,SAAuBirE,MAAmBjrE,EAAO,EACjD,UAAWklB,iBAAoBwT,SAN1Bj5B,KAAMO,QAQd,EACFihC,EAAA,YAAI,UAAWF,GAAOyrC,kBACrB,UAAAjsC,EAAA,IAACuG,EACC,OAAOxwB,EAAE,mBAAmB,EAC5B,QAAS00D,EACT,SAAUjlB,KAAoB7gC,iBAAoB7G,cAAe0sD,EAAuBt2B,SAAU,GAEnGlU,MAAAuG,EAAA,CAAO,MAAOxwB,EAAE,qBAAqB,EAAG,QAAS,IAAMs1D,GAAmB,EAAK,EAAG,QAAQ,MAAM,IAChG1mD,iBAAoBpmB,UAAW,aAC7ByhC,EAAA,IAAAuG,EAAA,CACC,UAAW/F,GAAO0rC,uBAClB,MAAOn2D,EAAE,kCAAkC,EAC3C,QAASy1D,GACT,QAAQ,SACR,cAAY,6BAEf,GACH,GACF,GAEJ,EAED9qC,EAAA,gBAAQ,kBAAiBjlB,EAAiB,UAAWgsD,EACpD,UAACznC,EAAA,WAAI,UAAWqmC,EACd,SAACrmC,MAAA,MAAG,GAAIvkB,EAAkB1F,WAAE,6BAA6B,CAAE,GAC7D,EACCm0D,EACCA,EAAoBvtD,gBAAkB,gBACnC,MACC,WAAC+jB,EAAA,YAAI,UAAWF,GAAO2rC,OACrB,UAACnsC,MAAAqN,EAAA,CAAK,KAAMuJ,EAAO,GAAG,IAAE7gC,EAAE,wBAAwB,GACpD,EAECm0D,EAAoBjmD,QACvB,WAEC,MACC,WAAA+b,MAACgS,IACC,MAAOj8B,EAAE,0BAA0B,EACnC,KAAK,aACL,MAAO,kBAAkBm0D,EAAoBzuC,4BAA4BG,oBAAsB,EAAE,GACjG,aAAY7lB,EAAE,kCAAmC,CAAExK,OAAQ2+D,EAAoBzuC,4BAA4BG,kBAAoB,GAC/H,QAAS,GACT,aAAa,WAAW,GAEzB8E,EAAA,YAAI,UAAWF,GAAO4rC,YACrB,UAAApsC,EAAA,IAACgS,GACC,OAAOj8B,EAAE,0BAA0B,EACnC,KAAK,aACL,MAAOm0D,EAAoBzuC,4BAA4BI,mBACvD,QAAS,GACT,aAAa,SAAQ,QAEtBmW,GACC,OAAOj8B,EAAE,4BAA4B,EACrC,KAAK,mBACL,MAAO,SACP,QAAS,GACT,aAAYA,EAAE,mCAAmC,EACjD,aAAa,SAAQ,GAEzB,EACAiqB,MAACuG,EACC,WAAWvF,EAAW,CAAE,CAACR,GAAO6rC,QAAQ,EAAGx7E,EAAwB,EACnE,MAAOklB,EAAE,2BAA2B,EACpC,QAAQ,WACR,QAASw1D,GAAuB,IA9B1BrB,EAAoBttE,EAgC9B,EAGFojC,MAAC,MACC,UAAAA,MAAC,IAAG,WAACkU,GAAan+B,EAAE,iCAAiC,CAAE,GACzD,EAEDllB,GACEmvC,EAAA,IAAAuG,EAAA,CAAO,MAAOxwB,EAAE,qCAAqC,EAAG,KAAK,SAAS,QAAS,IAAMu9B,EAASzO,EAAqBD,EAAU,gBAAgB,CAAC,EAChJ,GACH,EACClE,EAAA,gBAAQ,kBAAiBsqC,EAAkB,UAAWvD,EACrD,UAACznC,EAAA,WAAI,UAAWqmC,EACd,SAACrmC,MAAA,MAAG,GAAIgrC,EAAmBj1D,WAAE,8BAA8B,CAAE,GAC/D,EACCgC,WAAcxiB,OACZmrC,EAAA,KAAAqS,GAAM,SAAN,CACEh7B,2BAAcziB,MAAM,EAAG80E,EAAsB,KAAOH,IAAsBluE,IAAKggC,IAC7E2E,OAAA,OAAI,UAAWF,GAAOyc,QACrB,UAACvc,EAAA,UAAE,UAAWF,GAAO8rC,gBACnB,UAACtsC,MAAA,UAAQjJ,SAAoBA,GAAA,IAAItiC,KAAKsnC,GAAYI,gBAAkB,GAAI,EAAGhlB,EAAK9T,QAAQ,CAAE,GAC1F28B,MAAC,OAAMjE,aAAYvD,UAAW,GAC9BwH,MAAC,OAAMjE,aAAYtW,aAAc,IACnC,EACCib,EAAA,YAAI,UAAWF,GAAO+rC,mBACrB,UAAAvsC,MAAC,OAAI,UAAWQ,GAAOgsC,iBACpB,SAACrB,IACAp1D,EAAE,+BAAgC,CAChCugB,MAAOD,GAAYo2C,WAAW1wC,GAAYiB,uBAAuB,EAAGjB,GAAYY,oBAAqBZ,GAAYrE,eAAe,EAChI3kC,OAAQgpC,GAAYpf,aACrB,GACL,EACC7rB,GACCkvC,EAAA,IAACkN,GAAA,CACC,aAAYn3B,EAAE,2BAA2B,EAGzC,QAAS,IAAM,CAACm+B,GAAam2B,GAAmBtuC,mBAAaK,WAAYL,GAAYtW,aAAa,EAElG,SAAAua,MAACqN,EAAK,MAAMq/B,EAAa,GAC3B,GAEJ,IAxBmC3wC,GAAYtW,aAyBjD,GAED,CAAC2kD,GAAuBc,GACtBxqC,OAAAqS,GAAM,SAAN,CACC,UAAC/S,MAAA,KAAGjqB,WAAE,mCAAoC,CAAEgwB,MAAOklC,CAAyB,GAAE,QAC7E1kC,EAAO,OAAOxwB,EAAE,uBAAuB,EAAG,QAASo0D,EAA2B,GACjF,EACE,IACN,IAECnqC,EAAA,WACC,SAACA,MAAA,KAAG,UAACkU,GAAan+B,EAAE,8BAA8B,EAAE,CACtD,IAEJ,EACCm+B,GAAalU,MAACoB,GAAe,QAAM,EAAG,EACzC,GAEJ,ECxXMurC,GAAwBA,CAACC,EAAwBnnD,IAA0B,CAC/E,GAAImnD,aAAmBC,KAAM,CACrBlyE,QAAMskC,OAAO6tC,IAAIC,gBAAgB,IAAIF,KAAK,CAACD,CAAO,CAAC,CAAC,EACpDjrE,EAAOkhC,SAASgG,cAAc,GAAG,EACvClnC,EAAKqjC,KAAOrqC,EACZgH,EAAKqrE,aAAa,WAAY,WAAWvnD,CAAa,MAAM,EACnDpW,cAAKg6B,YAAY1nC,CAAI,EAC9BA,EAAKsrE,MAAM,MACN,CACL,MAAMC,EAAYjuC,OAAO6I,KAAK,GAAI,WAAWriB,CAAa,GAAI,EAAE,EAC1D0nD,EAAaluC,OAAOI,KAAKutC,CAA6B,EAExDM,IACFA,EAAUE,OAAS,KACTvqC,WAASwqC,MAAMF,CAAU,EACnCD,EAAUrqC,SAAS8I,QAEvB,CACF,EAEM2hC,GAA2B,CAAC,eAAgB,gBAAiB,aAAa,EAC1EC,GAAsC,CAC1CC,MAAO,mCACPC,OAAQ,uDACRC,KAAM,4CACR,EAEMC,GAAmBA,IAAM,OACvBx6B,QAAoBphD,EAAU0uB,EAAiB,EAE/C6yB,EAAWC,KAEX,CAAE70C,aAAY,EAAIqB,EAAe,CAAC,CAAErB,kBAAmB,CAAEA,gBAAgB08C,EAAO,EAChF,CAAE7tC,KAAMkL,EAAUX,aAAc6M,EAAoB5M,eAAcE,gBAAeI,eAAcR,WAAYD,EAAgB,EAC3H,CAAE/mB,yBAAwBC,kBAAiBJ,wBAAyByiD,EAAkBhyB,cACtF,CAAE1H,qBAAoBC,4BAA6BkqC,GAAU,EAE7D,CAACwmB,EAAqBwD,CAAsB,EAAInrC,WAAS,EAAK,EAC9D,CAACorC,EAAkBC,CAAmB,EAAIrrC,WAAS,EAAK,EACxD,CAAC+iB,EAAiBklB,CAAkB,EAAIjoC,EAAwB9d,2BAAoB7G,cAAe,IAAI,EACvG,CAACkrD,EAAgB2B,CAAiB,EAAIloC,WAA8B7tC,MAAS,EAE7EgwC,EAAW4O,KAEXu6B,EAAiC,SAAYz6B,EAASzO,EAAqBD,EAAU,sBAAsB,CAAC,EAE5GopC,EAAyB,MAAOvoD,GAA0B,CAC9DqoD,EAAoB,EAAI,EAEpB,IACF,MAAMlB,EAAU,MAAMz5B,EAAkB3tB,WAAWC,CAAa,EAC5DmnD,GACFD,GAAsBC,EAASnnD,CAAa,QAEvC5yB,EAAgB,CACvB,MAAM,IAAIT,MAAM,4BAA8BS,aAAiBT,MAAQS,EAAMF,QAAU,GAAG,CAC5F,CAEAm7E,EAAoB,EAAK,GAGrBtD,EAAyBzB,GAAsBC,GAAkB,GAAOxjB,EAAiB/sC,EAAUkM,iBAAoB5G,cAAc,EAErI0sD,EAAoB,SAAY,CAChCjlB,IAAmB7gC,WAAoB5G,iBACzCysD,EAAuBr2B,OAAO,CAC5Br2B,YAAa0nC,EAAgBlwD,MAAM,CAAC,EACpCyoB,eAAgB,GAAG4G,EAAmB5G,cAAc,GACrD,CACH,EAGF,GAAI,CAACtF,EACH,aAAQ2oB,GAAiB,IAG3B,MAAMkoC,IAA2B7wD,IAASzM,WAATyM,cAAoB,GAAGkM,iBAAoB5G,cAAc,wBAAoC,GACxH6sD,EAA4B,CAAC,CAACjmD,GAAsB2oD,GAAyB16E,SAAS+xB,EAAmBhI,aAAa,EACtHkuD,GAAkBlmD,iBAAoBhI,cAActiB,MAAM,KAAK,KAAM,UACrEywE,EAAsByC,GAAY1C,EAAgB10E,YAAa,GAGnE,OAAA6pC,EAAA,IAAC4a,GACC,aAAAl8C,EACA,mBAAAimB,EACA,oBAAqB1M,EACrB,aAAAF,EACA,SAAAU,EACA,aAAAJ,EACA,UAAWR,GAAWg2D,EACtB,eAAgBrtC,GAAOytC,MACvB,qBAAsBztC,GAAO0tC,YAC7B,2BAA4B,IAAMN,EAAuB,EAAI,EAC7D,oBAAAxD,EACA,uBAAAv5E,EACA,qBAAAH,EACA,2BAA4Bq9E,EAC5B,uBAAwBr0D,EAAyBnkB,OAAS,EAC1D,gBAAAzE,EACA,mBAAoBk9E,EACpB,OAAQv0D,EACR,wBAAA6vD,EACA,uBAAAkB,EACA,kBAAAC,EACA,gBAAAjlB,EACA,mBAAqB/lD,GAA2BirE,EAAmBjrE,CAAO,EAC1E,eAAAupE,EACA,kBAAoBA,GAAwC2B,EAAkB3B,CAAc,EAC5F,0BAAA4B,EACA,gBAAAC,EACA,oBAAAC,CACA,EAEN,EC/GMqD,GAAOA,IAAmB,CACxBxtD,QAAsB5uB,EAAUgtB,EAAmB,EACnDo0B,EAAoBphD,EAAU0uB,EAAiB,EAE/C,CAAE/hB,cAAa8T,iBAAkBzS,EAC7BwgC,GAAA,cACN7hC,YAAa6hC,EAAE7hC,YACf8T,eAAe+tB,IAAEtgC,OAAO+K,WAATu1B,cAAmB/tB,gBAEpC4oC,EACF,EACM9H,EAAWC,KACX,CAAEx9B,KAAMqqB,EAAe,MAAM,EAC7B4yB,EAAaD,KACb,CAACqb,EAAoBC,CAAqB,EAAI5rC,WAAS,EAAK,EAE5D6rC,EAAgBtb,EAAaR,EAAWG,GACxC,CAAEplD,KAAMkL,EAAUX,eAAcD,WAAYD,EAAgB,EAC5D,CAAErnB,kBAAmB4iD,EAAkBhyB,cACvC3vB,EAAYgtB,GAA6BmI,KAAM9N,aAAa,EAE5D01D,EAAW7rC,cAAY,SAAY,CAEvC,MAAMyQ,EAAkBlyB,QAAO,EAC9B,CAACkyB,CAAiB,CAAC,EAQtB,OANArN,YAAU,IAAM,CACV,CAACjuB,GAAW,CAACY,GACf66B,EAAS,IAAK,CAAEv+C,QAAS,GAAM,CAEhC,GAACu+C,EAAU76B,EAAUZ,CAAO,CAAC,EAE3BY,EASFioB,OAAA,OAAI,UAAWF,GAAOjzB,KACpB+gE,UACCA,GAAAtuC,EAAA,IAAC,MAAI,WAAWQ,GAAOguC,WACrB,SAACxuC,EAAA,WAAI,UAAWQ,GAAOytC,MACrB,SAAAvtC,OAAC,KACC,WAACV,MAAA,MACC,eAACuG,EACC,IAAIxuC,GACJ,MAAOge,EAAE,aAAa,EACtB,QAAQ,OACR,UAAWiqB,MAACqN,GAAK,KAAMohC,GAAiB,EACxC,UAAWjuC,GAAOwG,OAAO,CAE7B,GAECx0B,SACE,KACC,UAAAwtB,EAAA,IAACuG,GACC,GAAIvuC,GACJ,MAAO+d,EAAE,eAAe,EACxB,QAAQ,OACR,gBAAYs3B,EAAK,MAAMqhC,EAAY,GACnC,UAAWluC,GAAOwG,OAAO,CAE7B,GAGDtoC,IAAgBlQ,GAAaC,MAC3BuxC,EAAA,UACC,eAACuG,EACC,IAAItuC,GACJ,MAAO8d,EAAE,cAAc,EACvB,QAAQ,OACR,UAAWiqB,EAAA,IAACqN,EAAK,MAAMshC,GAAiB,EACxC,UAAWnuC,GAAOwG,OAAO,CAE7B,GAGFhH,MAAC,KAAG,WAAWQ,GAAOouC,SACpB,eAACroC,EAAO,SAASgoC,EAAU,MAAOx4D,EAAE,YAAY,EAAG,QAAQ,OAAO,UAAWiqB,EAAA,IAACqN,EAAK,MAAMwhC,GAAQ,EAAE,UAAWruC,GAAOwG,OAAO,CAC9H,GACF,EACF,GACF,QAED,MAAI,WAAWxG,GAAOsuC,WACrB,gBAACC,GACC,WAAA/uC,EAAA,IAACgvC,GACC,MAAMj3E,GACN,QAAUioC,EAAA,IAAAivC,GAAA,CAAiB,eAAgBzuC,GAAOytC,MAAO,qBAAsBztC,GAAO0tC,YAAa,eAAA39E,IAAmC,EAEvIiiB,GACEwtB,MAAAgvC,GAAA,CACC,KAAMh3E,GACN,QAEI0oC,EAAA,KAAAqU,WAAA,WAAA/U,MAAC7xC,GACC,UAAUqD,EACV,sBAAuB,IAAM68E,EAAsB,EAAI,EACvD,YAAA3vE,EACA,gBAAiB,CAAC,CAACoZ,CAAa,GAEjCkoB,MAAAuvB,GAAA,CACC,KAAM6e,EACN,MAAOr4D,EAAE,iCAAiC,EAC1C,KAAMA,EAAE,gCAAgC,EACxC,UAAW,SAAY,CACrB,MAAM4K,EAAoBtB,QAC1BgvD,EAAsB,EAAK,CAE7B,UAAS,IAAMA,EAAsB,EAAK,CAAE,IAEhD,CAGL,GACAruC,EAAA,IAAAgvC,GAAA,CACC,KAAM/2E,GACN,QAASyG,IAAgBlQ,GAAaC,KAAOuxC,EAAA,IAAC2tC,KAAgB,EAAM3tC,MAACkvC,GAAS,IAAIn3E,KAA+B,EAEnHioC,MAACgvC,IAAM,KAAK,IAAI,QAAUhvC,MAAAkvC,GAAA,CAAS,GAAIn3E,IAA+B,IACxE,CACF,EACF,IA3FEioC,EAAA,IAAC,OAAI,UAAWQ,GAAOjzB,KACrB,SAACyyB,EAAA,IAAAoB,GAAA,CAAe,OAAM,IACxB,EA2FN,ECtJa+tC,GAAsBA,CAACz9E,EAAqBylB,IAA4D,CACnH,MAAMi4D,EAAW,GACX5oE,EAAWsvB,GAAepkC,EAAM8U,SAAU2Q,CAAI,EAEpD,OAAIzlB,EAAMwS,SAAkByF,OAAKtX,OAAO,IAAIoC,KAAK/C,EAAMwS,QAAU,GAAI,EAAEgkD,aAAa,CAAC,EACjF,CAAC/wC,EAAKk4D,eAAiB7oE,GAAU4oE,EAASzlE,KAAKnD,CAAQ,EACvD2Q,EAAKk4D,eAAwB1lE,OAAKwN,EAAKk4D,aAAa,EACpD39E,EAAM0+B,OAAgBzmB,OAAKjY,EAAM0+B,KAAK,EACtC1+B,EAAM2+B,QAAiB1mB,OAAKjY,EAAM2+B,MAAM,EAErC++C,CACT,EACaE,GAAyBA,CAACh+E,EAAoB+9E,IAA2B,CACpF,MAAMD,EAAW,GAEbC,UAAwB1lE,OAAK0lE,CAAa,EAC1C/9E,EAAS8+B,OAAgBzmB,OAAKrY,EAAS8+B,KAAgB,EACvD9+B,EAAS++B,QAAiB1mB,OAAKrY,EAAS++B,MAAiB,EAEtD++C,CACT,EACaG,GAA0BA,CAAC79E,EAAqBm9B,EAAgB1X,IAA+B,CAC1G,MAAMi4D,EAAW,GACXha,EAAYx+B,GAAoB/H,EAAQn9B,EAAMyF,eAAgBzF,EAAM0F,YAAY,EAChFoP,EAAWsvB,GAAepkC,EAAM8U,SAAU2Q,CAAI,EAEhDi+C,UAAoBzrD,OAAKyrD,CAAS,EAClC5uD,GAAmBmD,OAAKnD,CAAQ,EAChC9U,EAAM0+B,OAAgBzmB,OAAKjY,EAAM0+B,KAAK,EACtC1+B,EAAM2+B,QAAiB1mB,OAAKjY,EAAM2+B,MAAM,EAErC++C,CACT,EC5BwBI,YAAS9sE,EAAiBgyB,EAAmB,GAAsB,CACnFvoB,QAAapa,EAAUsQ,EAAU,EAGjC,CAAE8U,QAASipB,EAAe,EAC1B/8B,EAAW8T,EAAK9T,SAEfygD,UAAS,CAAC,QAASphD,EAASW,CAAQ,EAAG,IAAM8I,EAAW3E,aAAa,CAAE5K,GAAI8F,EAASW,WAAU,EAAG,CACtGqxB,QAAS,CAAC,CAAChyB,GAAWgyB,EACtBq6B,gBAAiBA,CAAC3wD,EAAMjC,IACjBiC,GAEerH,GAAuBqH,CAAI,EAE1B,IAAO,GAJV,GAMpBuhC,UAAW,GAAK,IAAO,GACxB,CACH,CC1BA,MAAM8vC,GAAkBtpC,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,mHAAmH,CAAE,CAAC,gICwBvTyiC,GAAoBA,CAAC,CAAEl9E,OAAM6D,QAAOgwD,eAAcl6D,UAAS6iD,WAAU2gC,gBAAgB,EAAM,IAAM,CAC/F,MAAE55D,KAAMqqB,EAAe,QAAQ,EAC/B4yB,EAAyBD,KAE3B,IAAC5mE,EAAQoJ,OACJ,YAET,MAAM05C,EAAgB/hD,GAAgD8hD,EAAS9hD,EAAMwe,OAAOrV,KAAK,EAE3Fu5E,EAAgB,CAACD,GAAiB3c,GAAcR,EAAWG,IAAMxmE,EAAQoJ,OAAS,EAExF,OACGyqC,MAAA+U,WAAA,CACE66B,SACCA,EAAAlvC,EAAA,KAAC,MAAI,WAAWF,GAAOqvC,UAAW,KAAK,UAAU,aAAY95D,EAAE,mBAAoB,CAAEvjB,MAAM,GACxFrG,YAAQ4P,IAAgByqD,GAAA,CACvB,MAAMU,EAAc,OAAOV,GAAW,SAAWA,EAASA,EAAOlpD,MAC3D2pD,EAAc,OAAOT,GAAW,SAAWA,EAASA,EAAOnwD,MAC3Ds5B,EAASt5B,IAAU4wD,EAEzB,OAAQjnB,MAAAuG,EAAA,CAAO,MAAO2gB,EAAa,QAAS,IAAMlY,EAASiY,CAAW,EAAqB,OAAAt3B,EAAgB,KAAK,SAAS,gBAAeA,GAA1Ds3B,CAAoE,EACnJ,QACA1gB,EAAO,OAAO8f,EAAc,QAAS,IAAMrX,EAAS,EAAE,EAAG,OAAQ34C,IAAU,GAAuB,KAAK,SAAS,gBAAeA,IAAU,IAArDgwD,CAAwD,CAC/I,UAEC,MAAI,WAAW7lB,GAAOsvC,eACrB,SAAA9vC,MAAComB,IACC,UAAW5lB,GAAOuvC,SAClB,KAAK,QACL,QAAA5jF,EACA,aAAAk6D,EACA,KAAA7zD,EACA,MAAA6D,EACA,SAAU44C,EACV,aAAYl5B,EAAE,mBAAoB,CAAEvjB,OAAM,CAAE,GAEhD,CAEJ,EAEJ,8MCrDMw9E,GAAOA,CAAC,CAAE/rE,QAAO87B,UAAgB,IAAM,CAC3C,MAAMg0B,EAAM,GACNkK,EAAY94B,SAAyB,IAAI,EAEzCq0B,EADazG,MACYP,EAAWE,GAE1C+E,UAAgB,GAAI+B,EAAW,IAAM,IAAMluD,GAAqB,CAC1D2yD,EAAUppC,UAAmBA,UAAQ4B,MAAMqW,QAAU,GAAGpb,KAAK+1B,IAAI,EAAIn8C,EAAU,EAAG,CAAC,IACxF,EAGEo1B,OAAA,OAAI,UAAWF,GAAO3wC,KACrB,UAACmwC,MAAA6zB,GAAA,CAAM,IAAKoK,EAAW,UAAWz9B,GAAOs0B,OAAQ,MAAA7wD,EAAc,MAAO,KAAM,IAAA8vD,CAAS,GACpF/zB,MAAA,OAAI,UAAWQ,GAAOyvC,UAAW,GACjCjwC,EAAA,WAAI,UAAWQ,GAAOmB,KAAO5B,WAAS,CACzC,GAEJ,ECzBMmwC,GAAYA,CAAC,CAAErzE,OAAyB,IACpCmjC,EAAA,UAAG,UAAWQ,GAAO3jC,MAAQA,SAAMA,CAAA,sPCWvCszE,GAAmCA,CAAC,CAAEr7E,OAAMisC,WAAiB,IAAM,CACvE,MAAMqvC,EAASjrC,WACT6tB,EAAaD,KACb,CAACsd,EAAcC,CAAe,EAAI7tC,WAAS,EAAK,EAChD,CAAC8tC,EAAUC,CAAW,EAAI/tC,WAAS,EAAK,EAExCk5B,EAAY4U,EAAW,WAAa,SAEpCE,EAAkB,EAClBrY,EAAY,GAElBtyB,mBAAU,IAAM,CACdsqC,EAAOv7C,SAAWy7C,EAAgBF,EAAOv7C,QAAQ67C,aAAeN,EAAOv7C,QAAQ87C,aAAeF,GAAmBrY,EAAYgY,EAAOv7C,QAAQ87C,YAAY,CACvJ,GAACvY,EAAWtjE,EAAMk+D,CAAU,CAAC,SAG7B,MAAI,WAAWhyB,EAAWR,GAAOowC,eAAe,EAC/C,UAAC5wC,MAAA,KACC,IAAKowC,EACL,GAAG,sBACH,UAAWpvC,EAAWR,GAAOqwC,cAAe9vC,EAAW,CAAE,CAACP,GAAOswC,SAAS,EAAG,CAACP,GAAYF,CAAc,GACxG,MAAO,CAAEjY,UAAWmY,EAAWH,EAAOv7C,QAAQ67C,aAAetY,CAAU,EAEvE,eAAChI,GAAkB,KAAI,OAAO,eAAgBt7D,EAAM,OAAM,IAC5D,GACCu7E,GACCrwC,MAACkN,GACC,cAAYyuB,EACZ,gBAAe4U,EACf,gBAAc,sBACd,UAAWvvC,EAAWR,GAAO81B,QAAS,CAAE,CAAC91B,GAAO+vC,QAAQ,EAAGA,CAAU,GACrE,QAAS,IAAMC,EAAY,CAACD,CAAQ,EAEpC,SAACvwC,EAAA,IAAAqN,EAAA,CAAK,KAAMkpB,GAAa,CAC3B,EAEJ,GAEJ,EC7CMwa,GAAkBA,CAAC,CAAEhwC,YAAW5gC,cAAa+3D,eAAe,CAAsE,IACvGnF,OACCP,EAAWC,SAGxC0d,GAAgB,MAAMhwE,EAAa,UAAW6gC,EAAWR,GAAOrgC,YAAa4gC,CAAS,CAAE,GAExFf,EAAA,IAAAi4B,GAAA,CAAc,KAAM93D,EAAa,aAAA+3D,EAA4B,UAAWl3B,EAAWR,GAAOrgC,YAAa4gC,CAAS,CAClH,4TCIGiwC,GAAeA,CAAC,CACpBn0E,QACAsD,cACA8wE,kBACAC,oBACAjtE,QACAktE,sBACAC,cACAC,iBACAC,gBACAvxC,UACK,IAEFW,OAAA,OAAI,cAAaiN,OAChB,UAAA3N,EAAA,IAAC,SAAO,WAAWQ,GAAO+wC,aAAc,cAAa5jC,OAAyB,GAAG,gBAC/E,SAACjN,OAAAsvC,GAAA,CAAK,MAAA/rE,EACJ,UAAA+7B,MAACkwC,IAAU,MAAArzE,EAAa,EACvB6jC,EAAA,YAAI,UAAWF,GAAOgxC,cACrB,UAAAxxC,EAAA,IAAC,MAAI,WAAWQ,GAAOywC,gBAAkBA,SAAgBA,EAAA,EACxDC,GAAsBlxC,MAAA,OAAI,UAAWQ,GAAO0wC,kBAAoBA,SAAkBA,EAAA,GACrF,EACClxC,EAAA,IAAA+wC,GAAA,CAAgB,UAAWvwC,GAAOrgC,YAAa,YAAAA,EAAyB,EACxEugC,EAAA,YAAI,UAAWF,GAAOixC,UACpBN,YACAG,EACAD,EACAD,GACH,GACF,CACF,GACCrxC,CACH,sQCjCE2xC,GAAsCA,CAAC,CAAE70E,QAAOsD,cAAa8wE,kBAAiBG,cAAaC,iBAAgBC,eAAc,IAAM,CAE7H9X,QADyBzG,OACCP,EAAWC,GAErCkf,EAAiB,OAAO90E,GAAU,SAAW,KAAO,MAGxD,OAAA6jC,EAAA,KAAC,OAAI,UAAWF,GAAO1jB,QAAS,cAAa6wB,OAC3C,UAAA3N,EAAA,IAAC2xC,EAAe,WAAWnxC,GAAO3jC,MAAQA,SAAMA,EAAA,EAC/C6jC,EAAA,YAAI,UAAWF,GAAOoxC,qBACrB,UAAA5xC,EAAA,IAAC,MAAI,WAAWQ,GAAOywC,gBAAkBA,SAAgBA,EAAA,EACxDvwC,EAAA,YAAI,UAAWF,GAAOixC,UACpBH,YACAD,EACAD,GACH,GACF,EACC5X,EACCx5B,EAAA,IAACmwC,GAAgB,MAAMhwE,EAAa,UAAWqgC,GAAOrgC,WAAY,SAEjEiwD,GAAkB,gBAAgBjwD,EAAa,UAAWqgC,GAAOrgC,YACnE,CACH,GAEJ,2jBCfA,SAAS0xE,GAAc,CAAEvd,UAAShpD,WAAUwmE,cAAa77E,OAAM0E,MAAKkd,UAAU,GAAOkvB,WAAW,GAAOtoC,WAAW,EAAyB,EAAgB,CACnJ,MAAE5B,QAAO2J,WAAUpB,eAAcnL,gBAAe4K,UAAWZ,EAAOjN,cAAaG,gBAAmBlB,IAElG,CACJ8f,IACAoB,KAAM,CAAE9T,UAAS,GACf+8B,EAAe,QAAQ,EACrB,CAAC2xC,EAAaC,CAAc,EAAIvvC,WAAS,EAAK,EAC9CwvC,EAAwBjxC,EAAWR,GAAO80B,YAAa,CAC3D,CAAC90B,GAAOqB,OAAO,EAAGkwC,EACnB,EAEKhd,EAAeh7D,GAAS9D,CAAI,EAC5B++D,EAASh+D,IAAgBP,GAAYC,MAAQ+D,GAAcxE,CAAI,EAC/Dg/D,EAAcj+D,IAAgBP,GAAYG,UAE1Cs+D,EAAYA,IAAM,CAClBr9C,MAAW,CAAChb,EAAc,YAE9B,GAAIk4D,EACF,aAAQ,MAAI,WAAWv0B,GAAOjmC,IAAMwb,WAAE,cAAc,CAAE,MAC7C9b,EACF,OAAA+lC,MAAC,OAAI,UAAWQ,GAAOjmC,IAAMo8B,SAAuBvxB,KAAcnL,CAAa,CAAE,MAC/EuM,EACT,aAAQ,MAAI,WAAWg6B,GAAOjmC,IAAMm7B,YAAkBlvB,EAAU,CAAEovB,oBAAqB7f,EAAE,6BAA6B,CAAG,EAAE,MAClHi/C,EACF,OAAAh1B,EAAA,IAAC,MAAI,WAAWgB,EAAWR,GAAOjmC,IAAKimC,GAAO7wC,IAAI,EAAIomB,SAAEA,EAAA,MAAM,CAAE,MAC9Dk/C,EACT,OACGv0B,OAAA,OAAI,UAAWF,GAAOjmC,IACrB,UAAAylC,EAAA,IAACqN,EAAK,MAAM8nB,GAAO,UAAW30B,GAAO40B,UAAU,EAC9Cr/C,EAAE,WAAW,CAChB,GAEJ,EAGF,cACG0oC,GAAK,MAAK,SAAS,GAAI9jD,EAAK,UAAW6lC,GAAO0xC,SAAU,aAAc5d,EAAS,SAAU,EAAG,cAAa3mB,OACxG,UAACjN,EAAA,YAAI,UAAWF,GAAO60B,eACrB,UAAAr1B,EAAA,IAAC,KAAG,WAAWQ,GAAO3jC,MAAQA,SAAMA,EAAA,EACnC,CAAC,CAAC1F,GAAmB6oC,MAAA,OAAI,UAAWQ,GAAOrpC,eAAiB0/B,YAAwB1/B,EAAgBkM,CAAQ,CAAE,IACjH,EACCq9B,EAAA,YAAI,UAAWF,GAAOs0B,OACrB,UAAA90B,MAAC6zB,GAAM,WAAWoe,EAAuB,MAAAhuE,EAAc,OAAQ,IAAM+tE,EAAe,EAAI,EAAG,MAAO,IAAK,IAAI,EAAE,GAC5GtxC,EAAA,YAAI,UAAWF,GAAOpmC,KACpBqE,mBACE,MAAI,WAAWuiC,EAAWR,GAAOjmC,IAAKimC,GAAOg1B,IAAI,EAAG,aAAYz/C,EAAE,WAAW,EAC5E,eAACs3B,EAAK,MAAMooB,EAAK,GACnB,EAEDP,EAAU,GACb,EACCnuB,GAAa/G,MAAA,OAAI,UAAWQ,GAAOsxC,YAAcA,SAAYA,EAAA,EAC7DxmE,EACE00B,MAAA,OAAI,UAAWQ,GAAOk1B,kBACrB,SAAA11B,EAAA,IAAC,MAAI,WAAWQ,GAAOm1B,YAAa,MAAO,CAAExvD,MAAO,GAAGurB,KAAKwE,MAAM5qB,EAAW,GAAG,CAAC,IAAM,EACzF,GACE,MACN,CACF,GAEJ,CAEA,MAAe6oD,UAAK0d,EAAa,yGC7D3B3M,GAAkBA,IAAM,CAAC,EAE/B,SAASiN,GAAU,CACjB7gF,WACAs0E,SACAwM,kBACAl+B,YAAY,GACZnmC,eACAskE,gBACAP,cACA/wC,YACAriC,cACAC,aACAC,kBACAimE,UACAE,WAAWG,GACXJ,QACK,EAAG,OACR,OACGpkC,OAAA,OAAI,UAAWM,EAAWR,GAAO7uC,UAAW,CAAC,CAACovC,GAAaA,CAAS,EAAG,cAAa4M,OAClF,WAAC,CAACi4B,GAAUA,EACZ5lC,EAAA,WAAI,UAAWQ,GAAOjgC,QACrB,SAACy/B,MAAAsgC,GAAA,CACC,QAAQ,KACR,UAAW,EACX,SAAUyE,GAAYG,GACtB,QAASL,GAAW,GACpB,UAAWrkC,GAAO98B,KAClB,OAAQs8B,MAACq3B,GAAyB,WAAQ,EAC1C,UAAW,GAEV/lE,UAAUA,4CAAUyK,IAAKjF,GACvBkpC,EAAA,UACC,eAAC6xC,GACC,KAAK/M,EAAOhuE,CAAY,EACxB,SAAUiX,EAAeA,EAAajX,EAAagH,OAAO,EAAIlJ,OAC9D,QAAS,IAAMw9E,GAAmBA,EAAgBt7E,CAAY,EAC9D,QAASo9C,EACT,SAAUm+B,IAAkBv7E,EAAagH,QACzC,YAAAg0E,EACA,SAAUrzE,GAASC,EAAaC,EAAYC,EAAiB9H,CAAY,EACzE,KAAMA,EAAa,CATdA,IAAagH,OAWtB,EAEJ,GACF,CACF,GAEJ,sqBCfMw0E,GAA+BA,CAAC,CACpCC,eACAnyE,SACA9O,WACAoN,cACAw1C,YACAv1C,aACA1I,OACA2I,kBAEA/B,QACAsD,cACA8D,QACAgtE,kBACAC,oBACAE,cACAC,iBACAF,sBACAG,gBAEAkB,eACAzkE,eACA+jE,cAEAW,UACAC,YACAC,iBACAC,gBAAgB,GAChBC,qBAAqB,GACrB9yC,WAEA8kC,UACAE,WACAU,QACF,IAAM,CACJ,MAAMzS,EAAaD,KACb+f,EAAW9f,IAAeR,EAAWE,IAAMM,IAAeR,EAAWG,GAErEogB,EAAaN,GAAWA,EAAQl9E,OAAS,EACzCy9E,EAAcD,GAAcL,EAE5BO,EAAiBtD,GACrBjvC,OAAC,OAAI,UAAWM,EAAWR,GAAOiyC,QAAS,CAAE,CAACjyC,GAAO0yC,aAAa,EAAGX,CAAc,GAChF,UAAC,EAACI,GAAkBJ,GAAgBvyC,MAAC,QAAK,UAAWQ,GAAOmyC,eAAiBA,SAAeA,CAAA,GAC5FK,GACChzC,EAAA,IAAC0vC,GAAO,MAAK,SAAS,MAAOkD,EAAe,aAAcC,EAAoB,QAASJ,EAAS,SAAUC,EAAW,cAAA/C,EACtH,CACH,IAGIwD,GAAsBA,CAACC,EAAO,KAC7B9hF,EAEE8hF,EAEH1yC,OAAAqU,EAAA,oBAAArU,EAAA,KAAC,MAAI,WAAWM,EAAWR,GAAO6yC,kBAAmB,CAAE,CAAC7yC,GAAO+xC,YAAY,EAAGA,CAAc,GAC1F,UAAAvyC,MAAC,KAAG,WAAWQ,GAAO8yC,uBAAyBd,YAAgB,IAAS,EACvEO,GAAcE,EAAcV,CAAY,GAC3C,EACCvyC,EAAA,IAAAykC,GAAA,CACC,SAAAnzE,EACA,UAAA4iD,EACA,aAAAnmC,EACA,YAAArP,EACA,WAAAC,EACA,gBAAiB1I,EACjB,iBAAkB67E,EAClB,gBAAAlzE,EACA,QAAAimE,EACA,SAAAE,EACA,OAAQU,EAAO,EAEnB,GAEAzlC,MAAC,MAAI,WAAWQ,GAAO+yC,kBACrB,SAACvzC,MAAAmyC,GAAA,CACC,OACEzxC,OAAC,MAAI,WAAWF,GAAOgzC,wBACpB32E,aAAUmjC,MAAA,MAAG,UAAWQ,GAAOizC,uBAAyBjB,SAAaA,EAAA,EACrEO,GAAcE,EAAc,EAAI,EACnC,GAEF,cAAeh9E,iBAAM6H,QACrB,YAAAg0E,EACA,SAAAxgF,EACA,aAAAyc,EACA,UAAAmmC,EACA,YAAAx1C,EACA,WAAAC,EACA,gBAAAC,EACA,QAAAimE,EACA,SAAAE,EACA,OAAQU,EAAO,CAEnB,GA3CoB,KA+CxB,OAAI8M,EAEA7xC,EAAA,KAAC,OAAI,UAAWF,GAAOkzC,kBAAmB,cAAa/lC,OACrD,UAAA3N,EAAA,IAAC,MAAI,WAAWQ,GAAOpgC,OAASA,SAAOA,EAAA,QACtC,MAAI,WAAWogC,GAAOmzC,mBACrB,SAAA3zC,MAAC0xC,IACC,MAAOR,GAAqBr0E,EAC5B,MAAM5G,iBAAMuQ,YAAa,EACzB,YAAArG,EACA,gBAAA8wE,EACA,YAAAG,EACA,eAAAC,EACA,cAAAC,CAA6B,GAEjC,EACC6B,GAAoBL,CAAQ,EAC5B/yC,CACH,IAKFW,EAAA,KAACswC,GACC,OAAAn0E,EACA,YAAAsD,EACA,MAAA8D,EACA,oBAAAktE,EACA,eAAAE,EACA,cAAAC,EACA,YAAAF,EACA,gBAAAH,EACA,kBAAAC,EAEC5/E,mBAAa,UAAQ,WAAWkvC,GAAOozC,cAAgBT,YAAoB,EAAI,EAAE,EACjFpzC,EACA3/B,CACH,GAEJ,EC1LMyzE,GAA4B,IAiBrBC,GAA0BA,CAAC1zE,EAAuCnK,EAAoB0Y,IAA8B,CACzHolE,QAAsB5uC,SAA8B,IAAI,EACxDvkB,EAAyB7uB,EAAUknB,EAAsB,EAGzD,CAAEjO,UAAajL,IAAsBwgC,KAAEtgC,MAAM,EAE7C+zE,EAAsB,CAAC,EADAhpE,iBAAUwB,sBAIjCynE,EAAyBvxC,cAAY,IAAM,CAC/C,GAAI,CAACsxC,GAAuB,CAACD,EAAoBl/C,QAAS,OAEpD,MAAE5+B,OAAM0Y,aAAYrD,YAAayoE,EAAoBl/C,QAGpCnmB,WAASzY,EAAM0Y,EAAYrD,CAAQ,EAG1DyoE,EAAoBl/C,QAAU,MAC7B,CAACm/C,EAAqBpzD,CAAsB,CAAC,EAG1CszD,EAAmBjvC,GAAkB/3C,GAA8B,OAEnEA,KAAMsZ,SAAW,EAAG,OAElB8E,QAAWwa,QAAQ54B,EAAM+7C,SAAW/7C,EAAMsZ,UAAU2tE,QAAQ,CAAC,CAAC,EAEhE,CAAC9sB,MAAM/7C,CAAQ,GAAK8oE,SAAS9oE,CAAQ,IACvCyoE,EAAoBl/C,QAAU,CAC5B5+B,OACA0Y,aACArD,WACA+oE,YAAWN,IAAoBl/C,UAApBk/C,cAA6BM,YAAa5/E,KAAKC,IAAI,GAI5DD,KAAKC,IAAI,EAAIq/E,EAAoBl/C,QAAQw/C,UAAYR,IAChCI,IAE3B,CACD,EAGDnuC,YAAU,IAAM,CACV,MAAC1lC,GAAU,CAAC4zE,GAETM,YAAG,OAAQJ,CAAgB,EAC3BI,KAAG,QAASL,CAAsB,EAClCK,KAAG,WAAYL,CAAsB,EACrCK,KAAG,SAAUL,CAAsB,EAEnC,IAAM,CACJM,MAAI,OAAQL,CAAgB,EAC5BK,MAAI,QAASN,CAAsB,EACnCM,MAAI,WAAYN,CAAsB,EACtCM,MAAI,SAAUN,CAAsB,IAE5C,CAAC7zE,EAAQ4zE,EAAqBC,EAAwBC,CAAgB,CAAC,EAE1EpuC,YAAU,IACD,IAAM,CAEYmuC,GAAA,EAExB,CAACh+E,iBAAM6H,QAASm2E,CAAsB,CAAC,EAG1C7uC,kBAAgB,IAAM,CACpB,MAAMovC,EAAqBA,IAAM3xC,SAAS4xC,kBAAoB,UAAYR,EAAuB,EAE1FvmD,+BAAiB,WAAYumD,CAAsB,EACnDvmD,wBAAiB,mBAAoB8mD,CAAkB,EAEvD,IAAM,CACJ5oC,2BAAoB,WAAYqoC,CAAsB,EACtDroC,2BAAoB,mBAAoB4oC,CAAkB,EACnE,EACC,CAACP,CAAsB,CAAC,CAC7B,ECxGaS,GAAkBA,CAACt0E,EAAuCnK,EAAoB0Y,IAA8B,CAEjH,MAAE3D,UAAajL,IAAsBwgC,KAAEtgC,MAAM,EAE7C+zE,EAAsB,CAAC,EADAhpE,iBAAUwB,sBAIfpM,KAAQnK,EAAM0Y,CAAU,EAG1CC,QAAmB8J,GAAsBiO,GAAa1wB,GAAQ+9E,EAAsBrtD,EAAMzX,QAAQjZ,CAAI,EAAIrB,MAAU,EAG1H,OAAOggD,UAAQ,IAAM,CACnB,MAAMrmC,EAAgBK,iBAAkBtD,SAExC,OAAIiD,GAAiBA,EAAgB3f,GAAoBC,KAAO0f,EAAgB3f,GAAoBE,IAC3Fyf,EAAgBtY,EAAKuQ,SAIvB,GACN,CAACvQ,EAAKuQ,SAAUoI,iBAAkBtD,QAAQ,CAAC,CAChD,EC1BaqpE,GAA0BA,CAACC,EAA+BC,IAAgC,CAC/FC,QAAyB7+E,GAAuB,CAChD,IAAC2+E,EAAsB3+E,SAIrB8+E,QAAY,CAACH,EAAeC,CAAW,EAAE34E,OAAO1F,OAAO,EAAE+E,KAAK,GAAG,EAEhE,OACL,GAAGtF,EACH++E,WAAYpgF,OACZmP,QAAS9N,EAAK8N,QAAQhI,IAAiBsa,IAAA,CACrC,GAAGA,EACHzP,KAAMlM,GAAU2b,EAAOzP,KAAM,CAC3BmP,EAAGg/D,EACJ,GACD,EACJ,EAGK9vC,UAAiB,MAAOhvC,GACtB6+E,EAAsB7+E,CAAI,CAClC,CACH,ECrBM/F,GAAa,GAAK,IAAO,GAKzB+kF,GAAyBA,CAAC,CAAEC,eAAcxgD,SAAuE,IAAM,CACrHvoB,QAAapa,EAAUsQ,EAAU,EAEjC,CAAE6xC,YAAW91C,QAAS0lD,GAAS,CAAC,cAAeoxB,CAAY,EAAG,SAAY/oE,EAAWtC,cAAcqrE,CAAY,EAAG,CACtHxgD,QAASA,GAAW,CAAC,CAACwgD,EACtBlmB,UAAW9+D,GACXyvC,UAAWzvC,GACZ,EAEM,OACLgkD,YACA91C,OAEJ,EAEa+2E,GAASA,CAAC,CAAEzyE,SAA6B,IAAM,CACpD,MAAEiS,WAAYugE,EAAcrgE,SAAUugE,EAAYpgE,iBAAgBJ,kBAAqB7U,IAAsBwgC,KAAEtgC,MAAM,EAIrHo1E,EAAkB,CAAC,CAACD,GAAcxgE,IAAqB,OAEvD,CAAExW,KAAMuW,EAAYu/B,UAAWohC,GAAwBL,GAAuB,CAAEC,eAAcxgD,QAAS,CAAC,CAACwgD,EAAc,EACvHrgE,EAAWwgE,EACZ,CACCE,OAAQ,OACRptD,SAAUztB,IAAUsa,iBAAgBC,MAAO,GAAI,CAC7CpR,SAAUnB,EACX,CAEH9N,SAEG,OACLs/C,UAAWmhC,EAAkB,GAAQC,EACrCl3E,KAAMi3E,EAAkBxgE,EAAWF,EAEvC,ECrCM6gE,GAAuB,CAC3Bp4E,EACAR,EACAlJ,EACA+U,EAA6C,GAC7CisB,EAAmB,GACnBo8B,IACG,OACG2kB,QAA4B1jF,EAAUod,EAAyB,EAC/DumE,EAAwB3jF,EAAUigB,EAAqB,EAEvD,CAAEE,WAAUyjE,gBAAexgE,oBAAmBhkB,MAAKykF,aAAYC,uBAAsB,EAAI91E,EAAe,CAAC,CAAEE,SAAQc,cAAgB,cACvImR,SAAUjS,EAAOrD,GACjB+4E,cAAe11E,EAAOiV,sBACtBC,kBAAmBlV,EAAOkV,kBAC1BhkB,IAAK8O,EAAOQ,aAAatP,IACzBykF,WAAYx/E,IAAyB6J,mBAAQwT,SAARxT,cAAgB21E,UAAU,EAC/DC,sBAAuB,CAAC,EAAC90E,WAAUyW,mBACnC,IAEI/H,EAAOkmE,iBAAelmE,KACtBhI,IAAc0N,mBAAmBC,MAAnBD,cAAwBE,mBAAmBsgE,iBAAeluE,aACxEquE,EAAiB,CAAC,CAACF,GAAc,CAAC,CAACnmE,GAAS,CAAC,CAAChI,GAAe,CAACgI,EAE9D,CAAErR,KAAMiJ,EAAO6sC,aAAc4P,GACjC,CAAC,QAAS1mD,EAAMR,EAAI6L,CAAM,EAC1B,SAAY,CAEV,GAAM7L,GAAQ6S,EAAM,CAEZqf,QAAW,MADS/8B,EAAU0uB,EAAiB,EACZJ,cACnC,CAAE5Q,OAAMhI,aAAgBkuE,IAE9B,OAAOF,EAA0BjmE,cAAcC,EAAM7S,EAAIkyB,iBAAUxf,IAAK7G,EAAQhB,CAAW,CAC7F,CAGA,GAAItW,GAAO+gB,GAActV,GAAMk5E,EACtBJ,SAAsBzjE,iBAAiBC,EAAUtV,CAAE,CAC5D,EAEF,CAAE83B,QAASohD,GAAkBphD,GAAW,CAAC,CAAC93B,GAAM,CAACi5E,EAAuBE,iBAAkB,GAAOp2C,UAAW,GAAK,GAAK,IACxH,EAEMq2C,EAAclyB,GAAwB,CAAC1mD,EAAMR,EAAI6L,EAAQpB,CAAK,EAAG,SAAY3T,EAAS2T,EAAOI,CAAW,EAAG,CAC/GitB,QAAS,CAAC,CAAC93B,GAAM83B,IAAY,CAACohD,GAAkB,CAAC,CAACzuE,GAClDypD,gBAAiBl0D,EAAKk0D,EAAkBl8D,OACxC8uB,MAAO,EACPoB,WAAY,IACZixD,iBAAkB,GACnB,EAEM,OACL,GAAGC,EACH9hC,UAAWA,GAAa8hC,EAAY9hC,UAExC,EC1DA,SAAwB+hC,GAAkBhgF,EAAoB,CACtDkW,QAAapa,EAAUsQ,EAAU,EACjCqe,EAAmB3uB,EAAU6tB,EAAgB,EAE7C,CAAEi2D,uBAAsB,EAAI91E,EAAe,CAAC,CAAEgB,eAAgB,CAClE80E,sBAAuB,CAAC,EAAC90E,WAAUyW,mBACnC,IAEI0+D,EAAyBV,GAAqB,QAASv/E,EAAK6H,QAAS,MAAOuJ,EAAOI,IAGnFouE,EACKn1D,EAAiBlZ,aAAavR,EAAK6H,OAAO,EAI5CqO,EAAW3E,aAAa,CAAE5K,GAAI3G,EAAK6H,QAASuJ,QAAOI,cAAa,CACxE,EAEK,CAAEysC,YAAW91C,KAAM+3E,GAAiBryB,GACxC,CAAC,QAAS,MAAO7tD,EAAK6H,OAAO,EAC7B,IAAM,OACEs4E,SAAOF,IAAuB93E,OAAvB83E,cAA6BnyE,QAAQzJ,KAAiB+b,KAAOzP,KAAKvR,QAAQ,OAAO,IAAM,IACpG,OAAI+gF,EACK7uE,MAAM6uE,EAAKxvE,KAAM,CAAE7T,OAAQ,OAAQ,EAAE+jB,KAAmB3Y,KAASI,SAAW,GAAG,EAEjF,IAET,CACEm2B,QAASwhD,EAAuBG,UAEpC,EAEO,OACL,GAAGH,EACHC,eACAjiC,UAAWgiC,EAAuBhiC,WAAaA,EAEnD,CC3CA,MAAMoiC,GAAoBA,CAACC,EAAmB17E,EAAiB6H,EAAiB8zE,IACvEA,EAAWv3E,KAAMw3E,GAAQF,IAAc,GAAG17E,CAAO,cAAc6H,CAAO,IAAI+zE,CAAG,EAAE,EAGlFC,GAAoBA,CAACH,EAAmB17E,EAAiB6H,EAAiB8zE,IACvEA,EAAWv3E,KAAMw3E,GAAQF,IAAc,GAAG17E,CAAO,mBAAmB6H,CAAO,IAAI+zE,CAAG,EAAE,EAGhFE,GAAaA,CAAC,CACzB1gF,OACA4E,UACAoF,SACAsN,OACAlF,UAOF,IAAM,CACE,MAAEtE,UAASjG,SAAY7H,IACvB,CAAE4e,WAAUxU,SAAQuU,kBAAqB3U,IAEzC22E,EAASrpE,iBAAM3Q,GACfi6E,EAAe,CAAC,CAAChiE,GAAYD,IAAqB,OAEjD7Q,SAAQhI,IAAKsa,GAAmB,CACrC,MAAM1b,EAAM,IAAImyE,IAAIz2D,EAAOzP,IAAI,EAEzB2vE,EAAY57E,EAAIqqC,KAEhB8xC,EAAgBJ,GAAkBH,EAAW17E,EAASiD,EAAS,CAAC,OAAQ,KAAK,CAAC,EAC9Ei5E,EAAgBT,GAAkBC,EAAW17E,EAASiD,EAAS,CAAC,OAAQ,KAAK,CAAC,EAC9Ek5E,EAAQr8E,EAAIsW,aAAa0iD,IAAI,KAAK,GAAKh5D,EAAIsW,aAAa0iD,IAAI,KAAK,EAGnEojB,UAAiBF,GAAgB,CAACG,GAEpCr8E,EAAIqqC,KAAO,GAAGnqC,CAAO,aAAawF,CAAM,UAAUvC,CAAO,aACrDmT,eAAazV,IAAI,eAAgBqZ,CAAQ,IAEnCkiE,GAAiBD,IAAkBF,GACzC3lE,eAAazV,IAAI,UAAWo7E,CAAM,EAKpCvuE,GACF4uE,GAA8B5gE,EAAQhO,CAAQ,EAGzCzB,OAAOjM,EAAIe,WACX2a,EACR,CACH,EAEA,SAAS4gE,GAA8B5gE,EAAgBhO,EAA0B,iBACtE6uE,WAAUC,EAAmB9uE,EAA0B,CACxD1N,QAAM,IAAImyE,IAAIqK,CAAS,EAC7B,OAAKx8E,EAAIsW,aAAa0iD,IAAI,OAAO,GAC3B1iD,eAAazV,IAAI,WAAY6M,CAAQ,EAEpC1N,EAAIe,UACb,CAEA,OAAI2a,WAAQjB,OACNiB,OAAOjB,MAAPiB,cAAY+gE,YAAZ/gE,QAAuB1b,MAClBya,MAAIgiE,UAAUz8E,IAAMu8E,EAAU7gE,EAAOjB,IAAIgiE,UAAUz8E,IAAK0N,CAAQ,IAErEgO,OAAOjB,MAAPiB,cAAYghE,WAAZhhE,QAAsB1b,MACjBya,MAAIiiE,SAAS18E,IAAMu8E,EAAU7gE,EAAOjB,IAAIiiE,SAAS18E,IAAK0N,CAAQ,IAEnEgO,OAAOjB,MAAPiB,cAAYihE,WAAZjhE,QAAsBkhE,gBACjBniE,MAAIkiE,SAASC,cAAgBL,EAAU7gE,EAAOjB,IAAIkiE,SAASC,cAAelvE,CAAQ,IAItFgO,CACT,CC3EO,MAAMmhE,GAAkBA,CAAC,CAAEvhF,OAAM4E,SAAiD,IAAgB,CACvG,MAAMoF,EAASF,EAAsBwgC,KAAEtgC,MAAM,EACvCsN,EAAOqK,EAAuB2oB,KAAEhzB,IAAI,EACpClF,EAAWqX,GAAsB6gB,KAAEl4B,QAAQ,EAE1CusC,iBAAQ,IAAM+hC,GAAW,CAAE1gF,OAAM4E,UAASoF,SAAQsN,OAAMlF,WAAU,EAAG,CAACpS,EAAM4E,EAASoF,EAAQsN,EAAMlF,CAAQ,CAAC,CACrH,4CCuBMovE,GAA0BA,CAAC,CAC/BxhF,OACAyhF,UACAhpB,UACAipB,SACAC,UACAC,aACAC,eACAC,iBACAC,eACAC,eACAC,WACAC,iBACAC,yBACAC,SACAC,cACAC,SACA3vD,YAAY,EACZ4vD,WACK,IAAM,CACLC,QAAmBtzC,SAAuB,IAAI,EAC9CuzC,EAAYvzC,WACZwzC,EAAaxzC,SAAO,EAAK,EACzByzC,EAAezzC,SAAO,EAAK,EAC3B,CAAC0zC,EAAWC,CAAY,EAAIr2C,WAAS,CAAC,CAACxD,OAAO85C,QAAQ,EACtDC,EAAe7zC,SAAOvc,CAAS,EAC/B7kB,EAAUyzE,GAAgB,CAAEvhF,OAAM4E,QAASzN,EAAIE,iBAAkB,EAEjE,CAAEyT,UAAS,EAAIhB,EAAgBwgC,IAAMA,EAAC,EAEtCt/B,EAAWF,EAASE,SACpBsW,EAAmBxW,EAASwW,iBAE5B0hE,EAAmBh0C,GAAiB+yC,CAAY,EAChDkB,EAAaj0C,GAAiB0yC,CAAM,EACpCwB,EAAcl0C,GAAiB2yC,CAAO,EACtCwB,EAAiBn0C,GAAiB4yC,CAAU,EAC5CwB,EAAmBp0C,GAAiB6yC,CAAY,EAChDwB,GAAqBr0C,GAAiB8yC,CAAc,EACpDwB,EAAmBt0C,GAAiB,IAAM,OAExCu0C,UAAkBd,IAAU7jD,UAAV6jD,cAAmBe,eACrCC,GAAkBF,mBAAiBjtC,cACvC,iFAEFmtC,aAAiBhvC,QAEFutC,GAAA,MAAAA,GAAA,CAChB,EACK0B,EAAe10C,GAAiBizC,CAAQ,EACxC0B,EAAqB30C,GAAiBkzC,CAAc,EACpD0B,EAA6B50C,GAAiBmzC,CAAsB,EACpE0B,EAAkB70C,GAAiBozC,CAAM,EACzC0B,GAAkB90C,GAAiB,IAAM,CAC7C2zC,EAAa/jD,QAAU,GACTyjD,GAAA,MAAAA,GAAA,CACf,EACK0B,GAAc/0C,GAAiB,IAAMypB,GAAWA,EAAQgqB,EAAU7jD,OAAO,CAAC,EAE1EolD,GAAev3C,cAAY,IAAM,4CAC3B7N,wBAASy/C,GAAG,QAAS0F,KACrBnlD,wBAASy/C,GAAG,aAAc2E,IAC1BpkD,sBAASy/C,GAAG,WAAY8E,IACxBvkD,wBAASy/C,GAAG,OAAQ4E,IACpBrkD,wBAASy/C,GAAG,QAAS6E,IACrBtkD,wBAASy/C,GAAG,aAAc+E,IAC1BxkD,wBAASy/C,GAAG,eAAgBgF,KAC5BzkD,wBAASy/C,GAAG,aAAciF,IAC1B1kD,wBAASy/C,GAAG,SAAUqF,IACtB9kD,wBAASy/C,GAAG,eAAgBsF,IAC5B/kD,wBAASy/C,GAAG,YAAawF,IACzBjlD,wBAASy/C,GAAG,YAAayF,KACzBllD,wBAASqlD,wBAAwBL,EAA0B,EACpE,CACDG,GACAf,EACAG,EACAF,EACAC,EACAE,EACAC,GACAC,EACAI,EACAC,EACAE,EACAD,EACAE,EAAe,CAChB,EAEKI,GAAez3C,cAAY,IAAM,6BAC3B7N,wBAAS0/C,IAAI,UACb1/C,wBAAS0/C,IAAI,eACb1/C,sBAAS0/C,IAAI,aACb1/C,wBAAS0/C,IAAI,SACb1/C,wBAAS0/C,IAAI,UACb1/C,wBAAS0/C,IAAI,eACb1/C,wBAAS0/C,IAAI,iBACb1/C,wBAAS0/C,IAAI,aACzB,EAAG,CAAE,GAELzuC,mBAAU,IAAM,CACd,GAAI,CAAC7G,OAAO85C,UAAY,CAACJ,EAAW9jD,QAAS,CAC3C8jD,EAAW9jD,QAAU,GAErB,MAAMulD,GAAY,GAAGhtF,EAAIE,gBAAgB,cAAc2T,CAAQ,MAErDm5E,KAAS,EAAEtjE,KAAK,IAAM,CAC9BgiE,EAAa,EAAI,EACjBH,EAAW9jD,QAAU,GACtB,CACH,GACC,CAAC5zB,CAAQ,CAAC,EAEb6kC,YAAU,IAAM,CAEdkzC,EAAankD,QAAUjM,GACtB,CAACA,CAAS,CAAC,EAEdkd,YAAU,IAAM,CACd,MAAMu0C,GAAeA,IAAM,WACzB,GAAI,CAACpkF,GAAQ,CAACyiF,EAAU7jD,QACtB,OAGIylD,SAAc5B,KAAU7jD,UAAV6jD,eAAmB6B,kBAGvC,GAAID,GAAeA,EAAYx8E,UAAY7H,EAAK6H,QAAS,CACvDxE,GAAQ,SAAU,iEAAiE,EACnF,MACF,CAGI,OAAOk/E,EAAc,OACvBE,KAAU7jD,UAAV6jD,SAAmB1lD,UAAU,CAAEwlD,eAIvB3jD,UAAQ2lD,KAAK,CAACppD,GAAS,CAAE,GAAGn7B,EAAMwkF,UAAWzB,EAAankD,QAAS/wB,OAAQy0E,CAAQ,EAAC,CAAC,GAG3FmC,GAAmBA,IAAM,CAC7B,GAAI,CAACz7C,OAAO85C,UAAY,CAACN,EAAiB5jD,QAAS,OAEnD6jD,EAAU7jD,QAAUoK,OAAO85C,SAASN,EAAiB5jD,OAAO,EAG5D,MAAM8lD,EAA4C,CAChDC,YAAa,CACX,GAAGlD,EAEHmD,cAAe,EACjB,EACAC,WAAY,CACVC,cAAe,EACjB,EACAC,YAAa,GACb5T,SAAU,GACV6T,aAAc,GACdC,eAAgB,GAChBC,mBAAoB,GACpBC,SAAU,CACRC,KAAM,OACR,EACAlyC,OAAQ,OACRmyC,KAAM,GACNC,qBAAsB,GACtBC,QAAS,WACTlqF,SAAU,CAAC8/B,GAAS,CAAE,GAAGn7B,EAAMwkF,UAAWzB,EAAankD,QAAS/wB,OAAQy0E,EAAQx0E,UAAS,CAAC,EAC1F03E,OAAQ,GACRC,KAAM,CAAC,EACPC,WAAY,UACZx1E,MAAO,QAIL,OAAOqyE,EAAc,MACvBmC,EAAcnC,UAAYA,GAIxBjhE,IACFojE,EAAcz/E,IAAMqc,GAEZsd,UAAQ5kB,MAAM0qE,CAAa,EAExBV,IAAA,EAGf,GAAIvB,EAAU7jD,QACZ,OAAOwlD,GAAa,EAGlBxB,GACe6B,IAElB,GAAC7B,EAAW5iF,EAAMkkF,GAAcF,GAAch5E,EAAUu3E,EAAWd,EAASngE,EAAkBxT,EAASw0E,CAAM,CAAC,EAEjHzyC,YAAU,IACD,IAAM,CACX,GAAI4yC,EAAU7jD,QAAS,CAGrB,GADaslD,KACTvB,EAAa/jD,QAAS,CACxB+jD,EAAa/jD,QAAU,GACvB,MACF,CACA6jD,EAAU7jD,QAAQhjB,QACpB,GAED,CAACsoE,GAAcvB,CAAY,CAAC,EAG5B54C,MAAA,OAAI,UAAWQ,GAAO7uC,UAAW,cAAag8C,OAC7C,SAAA3N,EAAA,IAAC,MAAI,KAAKy4C,EAAiB,CAC7B,EAEJ,kECzPYmD,YACVC,cAAc,cADJD,YAQZ,MAAME,GAA+BA,IAAM,CACnC,MAAE/lE,KAAMqqB,EAAe,OAAO,EACpC,OACGM,OAAA,OAAI,UAAWF,GAAO3tC,MACrB,UAAAmtC,MAAC,MAAG,UAAWQ,GAAO3jC,MAAQkZ,WAAE,gCAAgC,EAAE,EACjEiqB,EAAA,SAAGjqB,SAAEA,EAAA,sCAAsC,CAAE,EAChD,GAEJ,ECSMgmE,GAAmCA,CAAC,CACxC9lF,OACA0Y,aACA4pE,SACAZ,SACAC,UACAC,aACAC,eACAC,iBACAM,SACAC,cACA0D,kBACAC,oBACAC,oBACA1D,WACK,IAAM,CAEL,MAAEp6E,KAAMs5E,EAASxjC,UAAWioC,GAAiBhH,GAAO,CAAEzyE,QAASzM,iBAAM6H,QAAS,EAC9E,CAAEM,KAAMg+E,EAAcloC,YAAWiiC,gBAAiBF,GAAkBhgF,CAAI,EAExE,CAAComF,EAAgBC,CAAiB,EAAI75C,EAAmB,WAGzD7Z,EAAY8rD,GAAgB2H,EAAgBpmF,EAAM0Y,CAAU,EAG5DqrE,EAAct3C,cAAatiC,GAAsB,CACrDk8E,EAAkBl8E,CAAM,CAC1B,EAAG,CAAE,GAECm5E,EAAmB72C,cAAY,IAAM,CAIrCu5C,IACFI,WAAgBE,KAAK,GACvB,EACC,CAACN,EAAmBI,CAAc,CAAC,EAEhCxC,EAA6BlF,GAAwBuH,EAAmBF,CAAe,EAEzF,OAACI,GAAgBloC,GAAaioC,EACzBn8C,EAAA,IAACoB,GAAe,QAAM,EAAG,GAG9B+0C,EACMn2C,MAAA87C,GAAA,CAAY,MAAOF,GAAiBC,WAAe,GAI3D77C,MAACy3C,IACC,OAAAc,EACA,KAAM6D,EACN,QAAA1E,EACA,QAASsC,EACT,aAAcT,EACd,OAAA5B,EACA,QAAAC,EACA,WAAAC,EACA,aAAAC,EACA,eAAAC,EACA,OAAAM,EACA,YAAAC,EACA,uBAAwBuB,EACxB,UAAAjxD,EACA,UAAA4vD,CACA,EAEN,0MChEMgE,GAAgCA,CAAC,CACrCvmF,OACA0Y,aACAgpE,SACAC,UACAC,aACAU,SACA2D,oBACAF,kBACAC,oBACA9K,sBACAxyE,aACAo6D,aACAyf,YACAiE,WAAW,GACXx4B,gBACK,IAAM,CACX,MAAM/jD,EAAWH,EAAsBwgC,KAAEtgC,OAAOC,QAAQ,EAClD,CAAE6V,KAAMqqB,EAAe,EACvBkT,EAAWC,KACX3O,EAAW4O,KAEXkpC,EAA0BA,IAAM,CAC3B73C,IAAqBD,EAAU,OAAO,CAAC,GAG5C+3C,EAA4B5mE,EAAjBkuC,EAAmB,8BAAmC,iCAAN,EAEjE,OACGvjB,OAAA,OAAI,UAAWF,GAAO2tB,aACrB,UAACnuB,MAAAu3B,GAAA,CAAK,KAAM,CAACklB,GAAY,CAAC1jB,EACxB,SAACr4B,EAAA,YAAI,UAAWF,GAAOo8C,QACrB,UAAC58C,MAAA6zB,GAAA,CAAM,UAAWrzB,GAAOs0B,OAAQ,MAAO7+D,EAAK+O,gBAAiB,IAAK/O,EAAK4G,MAAO,MAAO,IAAK,GAC1F,CAACk8D,GAEEr4B,OAAAqU,EAAA,oBAAA/U,EAAA,IAACqN,EAAK,MAAMooB,GAAM,UAAWj1B,GAAOg1B,KAAK,EACxCx1B,EAAA,UAAG,UAAWQ,GAAO3jC,MAAQ8/E,SAASA,EAAA,QACtC,OAAK,WAAWn8C,GAAO1rC,KAAOihB,WAAE,8CAA+C,CAAE7V,UAAU,GAAE,EAC7FixE,EACA,CAACxyE,GAAeqhC,MAAAuG,EAAA,CAAO,QAASm2C,EAAyB,MAAO3mE,EAAE,gBAAgB,EAAK,GAC1F,GAEJ,CACF,GACCgjD,GAAc0jB,GACZz8C,EAAA,IAAA+7C,GAAA,CACC,KAAA9lF,EACA,WAAA0Y,EACA,OAAA4pE,EACA,UAAAC,EACA,OAAAb,EACA,QAAAC,EACA,WAAAC,EACA,gBAAAmE,EACA,kBAAAC,EACA,kBAAAC,EAEH,CACH,GAEJ,ybC/DMW,GAA0BA,CAAC,CAC/B/0C,OACA7xC,OACA0Y,aACA9R,QACAo0E,kBACAC,oBACAyG,SACAC,UACAC,aACA/sC,UACAutC,SACAE,SACA2D,oBACAF,kBACAC,mBACK,IAAM,CACL,MAAElmE,KAAMqqB,EAAe,EAGvB,CAAC08C,EAAWC,CAAY,EAAIt6C,WAAS,EAAK,EAC1C,CAACu6C,EAAiBC,CAAkB,EAAIx6C,WAAS,EAAK,EACtD,CAACy6C,EAAYC,CAAa,EAAI16C,WAAS,EAAI,EAE3Cy2C,EAAax2C,cAAY,IAAM,CACnCq6C,EAAa,EAAI,EACjBpF,GAAUA,EAAO,GAChB,CAACA,CAAM,CAAC,EAELwB,EAAcz2C,cAAY,IAAM,CACpCq6C,EAAa,EAAK,EAClBnF,GAAWA,EAAQ,GAClB,CAACA,CAAO,CAAC,EAENwB,EAAiB12C,cAAY,IAAM,CACvCm1C,GAAcA,EAAW,GACxB,CAACA,CAAU,CAAC,EAETuF,EAAa16C,cAAY,IAAM,CACnC21C,GAAUA,EAAO,GAChB,CAACA,CAAM,CAAC,EAELgB,EAAmB32C,cAAY,IAAMy6C,EAAc,EAAI,EAAG,EAAE,EAC5D7D,EAAqB52C,cAAY,IAAMy6C,EAAc,EAAK,EAAG,EAAE,EAGrEr3C,mBAAU,IAAM,CACVgC,KAAoB,EAAI,GAC3B,CAACA,CAAI,CAAC,EAGN9H,EAAA,IAAA6K,GAAA,CAAM,KAAA/C,EAAY,4BAA6BtH,GAAO68C,gBAAiB,QAAAvyC,EAAkB,aAAY/0B,EAAE,aAAa,EACnH,SAAA2qB,OAAC,MAAI,WAAWF,GAAO88C,OACrB,UAAAt9C,EAAA,IAACu3B,GAAK,WAAW/2B,GAAO+8C,YAAa,KAAM,CAACT,GAAaI,GAAcF,EAAiB,YAAW,GACjG,SAAAh9C,EAAA,IAAC,OAAI,UAAWQ,GAAOg9C,cAAe,QAAS,IAAMP,EAAmB,EAAI,EAAG,OAAQ,IAAMA,EAAmB,EAAK,EACnH,SAAAv8C,EAAA,KAAC,MAAI,WAAWF,GAAOi9C,cACrB,UAAAz9C,EAAA,IAACkN,GAAW,cAAYn3B,EAAE,aAAa,EAAG,QAAS+0B,EAAS,UAAWtK,GAAOk9C,WAC5E,SAAA19C,MAACqN,EAAK,MAAM2S,EAAU,GACxB,SACC,MACC,WAAAhgB,EAAA,IAAC,KAAG,WAAWQ,GAAO3jC,MAAQA,SAAMA,EAAA,EACnC6jC,EAAA,YAAI,UAAWF,GAAOgxC,cACpBN,aAAsBlxC,MAAA,OAAI,UAAWQ,GAAO0wC,kBAAoBA,SAAkBA,EAAA,EAClFlxC,EAAA,WAAI,UAAWQ,GAAOywC,gBAAkBA,SAAgBA,EAAA,GAC3D,GACF,EACF,EACF,GACF,EACAjxC,MAAC+7C,IACC,KAAA9lF,EACA,WAAA0Y,EACA,OAAA4pE,EACA,UAAW,GACX,OAAQW,EACR,QAASC,EACT,WAAYC,EACZ,aAAcC,EACd,eAAgBC,EAChB,OAAQ8D,EACR,YAAatyC,EACb,gBAAAkxC,EACA,kBAAAC,EACA,kBAAAC,CAAqC,GAEzC,EACF,EAEJ,wHCtGMyB,GAAgCA,CAAC,CAAE1nF,OAAM6xC,OAAMjrC,QAAOiuC,SAAQ,IAAM,CACxE,KAAM,CAACgyC,EAAWC,CAAY,EAAIt6C,WAAkB,EAAK,EACnD,CAACy6C,EAAYC,CAAa,EAAI16C,WAAS,EAAI,EAE3Cy2C,EAAax2C,cAAY,IAAMq6C,EAAa,EAAI,EAAG,EAAE,EACrD5D,EAAcz2C,cAAY,IAAMq6C,EAAa,EAAK,EAAG,EAAE,EACvD1D,EAAmB32C,cAAY,IAAMy6C,EAAc,EAAI,EAAG,EAAE,EAC5D7D,EAAqB52C,cAAY,IAAMy6C,EAAc,EAAK,EAAG,EAAE,EAEjE,OAAClnF,EAGF+pC,MAAA6K,GAAA,CAAM,KAAA/C,EAAY,QAAAgD,EAAkB,kBAAgB,sBAAsB,SAAQ,GACjF,SAACpK,EAAA,YAAI,UAAWF,GAAO7uC,UACrB,UAAAquC,EAAA,IAACy3C,GACC,MAAAxhF,EACA,OAAQijF,EACR,QAASC,EACT,WAAYruC,EACZ,aAAcuuC,EACd,eAAgBC,EAChB,UAAS,YAEV/hB,GAAK,MAAM,CAACulB,GAAaI,EAAY,YAAW,GAC/C,UAAAl9C,EAAA,IAAC,MAAI,WAAWQ,GAAOg9C,cACrB,SAACx9C,MAAA,MAAG,GAAG,sBAAsB,UAAWQ,GAAO3jC,MAC5CA,UACH,GACF,EACAmjC,MAACuN,GAAiB,SAASzC,CAAQ,IACrC,EACF,EACF,GAvBgB,IAyBpB,EClDM8yC,GAAYz3C,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,yDAAyD,CAAE,CAAC,ECAvP4wC,GAAY13C,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,4bAA4b,CAAE,CAAC,ECDnnB6wC,GAAmBznF,GAAwB,CACtD,MAAMmsE,EAAiB3/B,SAAS4H,cAC1BszC,EAAel7C,SAASgG,cAAc,OAAO,EACnDk1C,EAAatnD,MAAMsW,OAAS,MAC5BgxC,EAAatnD,MAAMwS,SAAW,WAC9B80C,EAAatnD,MAAMkW,KAAO,QAC1BoxC,EAAa1nF,MAAQA,EACZgZ,cAAKg6B,YAAY00C,CAAY,EACtCA,EAAax3B,OAAO,EACpB1jB,SAASm7C,YAAY,MAAM,EAC3BD,EAAaE,KAAK,EACT5uE,cAAKm6B,YAAYu0C,CAAY,EACtCvb,WAAgB93B,OAClB,ECGMwzC,GAAcA,CAAC,CAAErhF,QAAOsD,cAAaxF,KAAW,IAAM,CACpD,MAAEob,KAAMqqB,EAAe,EACvB4yB,EAAaD,KACb,CAACorB,EAAWC,CAAY,EAAI37C,WAAkB,EAAK,EAEnD47C,EAAe,SAAY,CAC3B,UAAOC,UAAUC,OAAU,WAAY,CACzC,MAAMD,UAAUC,MAAM,CAAE1hF,QAAO/H,KAAMqL,EAAaxF,MAAK,EACvD,MACF,CAEgBskC,UAAO2F,SAASI,IAAI,EACpCo5C,EAAa,EAAI,EACjBrqF,WAAW,IAAMqqF,EAAa,EAAK,EAAG,GAAI,GAG5C,OACGp+C,MAAAuG,EAAA,CACC,MAAmBxwB,EAAZooE,EAAc,mBAAwB,aAAN,EACvC,UAAWA,EAAan+C,EAAA,IAAAqN,EAAA,CAAK,KAAMmxC,GAAM,EAAMx+C,EAAA,IAACqN,EAAK,MAAMoxC,EAAM,GACjE,QAASJ,EACT,OAAQF,EACR,UAAWnrB,EAAaR,EAAWG,EACnC,EAEN,ECxCM+rB,GAAqBv4C,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,6WAA6W,CAAE,CAAC,ECiBpjB0xC,GAAmCA,CAAC,CAAE1oF,MAAK,IAAM,CAC/C,MAAE8f,KAAMqqB,EAAe,EACvB4yB,EAAaD,KACbpyC,EAAsB5uB,EAAUgtB,EAAmB,EAEnD,CAAE6/D,aAAYhgE,eAAcH,WAAYD,GAA8BmI,IAAA,CAC1Ei4D,WAAY,CAAC,CAAC3oF,GAAQ0wB,EAAM9H,QAAQ5oB,CAAI,EACxC2oB,aAAc+H,EAAM/H,aACpBH,QAASkI,EAAMlI,OACf,IAEIogE,EAAwBn8C,cAAY,SAAY,CAC9C/hB,QAAoBxB,eAAelpB,CAAI,GAC5C,CAACA,EAAM0qB,CAAmB,CAAC,EAE9BmlB,mBAAU,IAED,IAAMlnB,EAAa,EACzB,CAACA,CAAY,CAAC,EAIb8hB,EAAA,KAAAqU,WAAA,WAAA/U,EAAA,IAACuG,EACC,OAAOxwB,EAAE,gBAAgB,EACzB,aAAYA,EAAE,gBAAgB,EAC9B,UAAW6oE,EAAc5+C,EAAA,IAAAqN,EAAA,CAAK,KAAMqhC,GAAS,EAAO1uC,EAAA,IAAAqN,EAAA,CAAK,KAAMyxC,GAAe,EAC9E,QAASD,EACT,eAAcD,EACd,MAAOA,EAAa,UAAY,UAChC,UAAW5rB,EAAaR,EAAWG,GAAG,EAExC3yB,MAACimC,IAAM,KAAMxnD,IAAY,KAAM,QAASA,EAAS,QAASG,EAAa,CACzE,GAEJ,wCChDMmgE,GAAUA,UAEX,MAAI,WAAWv+C,GAAO3oB,QACrB,SAAAmoB,MAACa,IAAO,EACV,6CCCEm+C,GAAiCA,CAAC,CAAE/uB,aAAY34B,YAAY,GAAW,IAEzE0I,EAAA,IAAC,MACEiwB,YAAWl0D,IAAI,CAAC1F,EAAO0P,IACtB26B,EAAA,KAACqS,GAAM,SAAN,CACC,UAAA/S,MAAC,QAAM3pC,SAAMA,CAAA,GACZ0P,EAAQkqD,EAAW16D,OAAS,GAC3ByqC,MAAC,OAAK,WAAWQ,GAAOlJ,UAAW,cAAY,OAC5CA,SACHA,CAAA,KALiBjhC,CAOrB,CACD,CACH,GClBY4oF,YAAiB33D,EAAe43D,EAAoB,GAAe,CACjF,GAAI,CAAC53D,EACI,SAGT,MAAMrkB,EAAO,IAAIxO,KAAK6yB,EAAQA,EAAQ,IAAO,CAAC,EACxC0O,EAAQ/yB,EAAKk8E,cACblpD,EAAUhzB,EAAKm8E,gBACfzpD,EAAU1yB,EAAKo8E,gBAErB,GAAI,CAACH,EACH,OAAOj8E,EAAK6mB,cAGd,IAAIw1D,EAAY,KACZtpD,SAAQ,IAAGspD,GAAatpD,EAAQ,KAChCC,EAAU,IAAGqpD,GAAarpD,EAAU,KACpCN,EAAU,IAAG2pD,GAAa3pD,EAAU,KAEjC2pD,CACT,CAEO,MAAMC,GAAgBA,IAAM,CAC3Bt8E,QAAO,IAAIxO,KAAKA,KAAKq0B,IAAI,KAAM,EAAG,GAAI,GAAI,EAAG,CAAC,CAAC,EACrD,MAAO,QAAQtuB,KAAKyI,EAAKu8E,mBAAoB,EAC/C,ECnBaC,GAAwBnuF,KAG3BA,iBAAUA,WAAY,IAC3BiO,OAAO,CAACkzE,EAASx8E,IACZw8E,EAAQxzE,KAAMuG,IAAOA,iBAAInP,UAAUJ,iBAAMmP,aAAY,EAChDqtE,EAGFA,EAAQvzD,OACbjpB,EAAKmP,aAAe,CAAC,CAAE9H,MAAOwY,GAAQC,EAAE,sCAAuC,CAAE3Q,aAAcnP,EAAKmP,aAAc,EAAG/O,MAAOJ,EAAKmP,aAAc,EAAI,CACrJ,GACC,IACF9P,QACAoqF,KAAK,EAMGC,GAAeA,CAACruF,EAAgC4K,IAAqD,CAChH,GAAK5K,EAED4K,WAAW,GAAW5K,EAEnB,CACL,GAAGA,EAEHA,SAAUA,EAASA,SAAS4K,OAAO,CAAC,CAAEkJ,kBAAmBA,IAAiBlJ,CAAM,EAEpF,EAEa0jF,GAAcA,CAACvwF,EAAmCwwF,IAAmE,SAC5H,IAACxwF,GAAW,CAACwwF,EAAgB,OAGjC,MAAM95E,GAAQ85E,mBAAgBvuF,WAAhBuuF,cAA0BC,UAAU,CAAC,CAAEhiF,aAAcA,IAAYzO,EAAQyO,SAEhF+hF,0BAAgBvuF,WAAhBuuF,cAA2B95E,EAAQ,EAC5C,EAGag6E,GAAsBA,CAAC1wF,EAAmCwwF,IAAyC,OAC9G,GAAKA,EAEEA,WAAevuF,SAAS4K,OAAQqrE,GAAMA,EAAEniE,gBAAiB/V,iBAAS+V,aAAY,IAA9Ey6E,cAAiFtqF,MAC1F,EAEayqF,GAA+BA,CAACH,EAA0BjmF,KAI9D,CACL,QAAS,WACT,MAJsB,GAAGxM,EAAIO,cAAc,MAAMiM,CAAQ,GAKzDpH,KAAMqtF,EAAehjF,MACrBojF,iBAAkB5tF,OAAOwtF,EAAevuF,SAASiE,MAAM,EACvD2qF,gBAAiB7tF,OACfwtF,EAAevuF,SAASiO,OAAO,SAAUmE,EAAM5M,EAAc,CAC3D,MAAO,CAACA,EAAasO,cAAgB1B,EAAK9Q,SAASkE,EAAasO,YAAY,EAAI1B,EAAOA,EAAKwb,OAAOpoB,EAAasO,YAAY,GAC3H,EAAc,EAAE7P,MACrB,IAIS4qF,GAA8BA,CACzCN,EACAxwF,EACA+wF,EACAxmF,IACG,CACH,MAAMymF,EAAmB,GAAGjzF,EAAIO,cAAc,GAAG+P,GAAgB,CAAEV,UAAW3N,iBAASyO,QAASlE,UAAU,EAAC,GACrG0mF,EAAiBN,GAA6BH,EAAgBjmF,CAAQ,EAE5E,OAIOyU,KAAKC,UAJPjf,EAIiB,CACpB,WAAY,qBACZ,QAAS,YACT,MAAOgxF,EACPpmF,cAAemmF,iBAAiBnmF,cAChCmL,aAAcg7E,iBAAiBh7E,aAC/B5S,KAAMnD,EAAQwN,MACd0jF,WAAYtB,GAAiB5vF,EAAQ6U,OAAO,EAC5Cs8E,aAAcF,GAXQA,CAYvB,CACH,EC/DMG,GAAeA,IAAM,WACzB,MAAMztB,EAAaD,KACb,CAAEh9C,KAAMqqB,EAAe,OAAO,EAC9B,CAACsgD,EAAaC,CAAc,EAAIl+C,WAAkB,EAAK,EAGvD6Q,EAAWC,KAEX35C,EADS4rE,KACS5oE,IAAM,GACxBG,EAAOsoC,GAAc,MAAM,IAAM,IACjCkzC,EAASlzC,GAAc,GAAG,EAC1BroC,EAAYqoC,GAAc,GAAG,EAG7B,CAAE6O,UAAW0sC,EAAyBxiF,KAAMyhF,EAAgBlgC,QAASkhC,GAAoB3vB,GAAYt3D,EAAU,CAAC,EAAG,GAAM,EAAK,EAC9H,CAAEs6C,UAAW4sC,EAAkB1iF,KAAM/O,GAAYmgF,GAASxyE,GAAa,EAAE,EACzE,CAAEk3C,UAAW6sC,EAAkB3iF,KAAM4iF,CAAgBxR,MAASngF,iBAAS2X,YAAa,EAAE,EAEtFo5E,EAAkBxrC,UAAQ,KAAO,CAAE36C,eAAe5K,iBAAS4K,gBAAiB,IAAKmL,cAAc/V,iBAAS+V,eAAgB,MAAQ,CAAC/V,CAAO,CAAC,EAGzI4xF,EAAe5xF,GAAWwwF,EAC1BqB,GAAqBD,iBAAch9E,QAAoB,GAGvD,CAAEhE,SAAQvB,aAAY,EAAIqB,EAAe,CAAC,CAAEE,UAAQvB,mBAAmB,CAAEuB,UAAQvB,iBAAgB08C,EAAO,EACxG,CAAEpwC,WAAU9K,WAAUuT,QAAWxT,IACjCkhF,EAA8B3qF,GAAQwU,WAAUwH,eAChD+/D,EAAe/7E,GAAQid,WAAQ06C,cAG/BskB,EAAU79B,UAAQ,IAAM6qC,GAAqBI,CAAc,EAAG,CAACA,CAAc,CAAC,EAC9E,CAACuB,EAAcC,CAAe,EAAI5+C,WAA6B7tC,MAAS,EAExE0sF,EAAe1sC,UAAQ,YAAMirC,2BAAgBvuF,WAAhBuuF,eAA2B,IAAI,CAACA,CAAc,CAAC,EAC5E0B,EAAmB3sC,UAAQ,IAAM+qC,GAAaE,EAAgBuB,CAAY,EAAG,CAACvB,EAAgBuB,CAAY,CAAC,EAC3GI,EAAmBzB,GAAoB1wF,EAASwwF,CAAc,EAC9D4B,EAAW7sC,UAAQ,IAAMgrC,GAAYvwF,EAASwwF,CAAc,EAAG,CAACxwF,EAASwwF,CAAc,CAAC,EAGxF1f,GAAyBznD,GAAgCiO,OAAM7N,2BAA2B,EAG1F,CAAEvL,OAAMuK,cAAa,EAAIF,EAAgB,CAAC,CAAErK,QAAMuK,oBAAoB,CAAEvK,QAAMuK,kBAAiBsjC,EAAO,EACtG,CAAE2d,aAAY/5D,eAAgBy5D,GAAeppE,GAAWiyF,CAAY,EACpEr9B,EAAiB,CAAC,CAACjlD,EAAYzJ,OAC/BoJ,GAAa,CAAC,CAAC4O,EACf3O,GAAkB,CAAC,CAACkZ,EAGpB4pE,GAASA,IAAMryF,GAAWikD,EAAS51C,GAAgB,CAAEV,UAAW3N,EAAQyO,QAASlE,WAAUmD,KAAM,GAAOD,WAAYy7E,CAAQ,EAAC,EAC7HzT,GAAU6c,IACP9B,EAAiBniF,GAAgB,CAAEV,UAAW2kF,GAAU7jF,QAASlE,WAAUmD,KAAM,GAAOD,WAAYy7E,CAAQ,GAAI,GAGnHa,GAAiB12C,cAAY,SAAY,CAC7C4Q,EAAS51C,GAAgB,CAAEV,UAAWykF,iBAAU3jF,QAASlE,WAAUmD,KAAM,CAAC,CAAC0kF,EAAU3kF,WAAYy7E,CAAQ,EAAC,GACzG,CAACjlC,EAAUmuC,EAAU7nF,EAAU2+E,CAAM,CAAC,EAGzCzyC,YAAU,IAAM,SACbjD,SAASg1B,kBAAoBh1B,SAASxzB,MAAMuyE,OAAO,CAAE14C,IAAK,EAAG,GAC7DrG,YAAS0J,cAAc,uBAAuB,IAA9C1J,SAAiE6H,OAAM,EACvE,CAACr7C,CAAO,CAAC,EAEZy2C,YAAU,IAAM,QACV86C,GAA2BE,GAI3BM,IAAiBxsF,QACHM,WAASkrF,iBAAiBh7E,aAAc,EAAE,EAAIg7E,iBAAiBh7E,eAAeqtE,oBAAU,KAAVA,eAAcp8E,QAAS,EAAE,CACzH,EACC,CAAC+pF,EAAiBgB,EAAcR,EAAyBE,EAAkBrO,CAAO,CAAC,EAGtF,MAAMv+B,GAAY0sC,GAA2BE,EACzC5sC,MAAkB,OAAAlU,MAAC++C,GAAU,IACjC,GAAI8B,GAAmB,CAAChB,GAAkB,CAACoB,GAAgB,CAACK,EAAc,OAAQthD,MAAAE,GAAA,CAAU,MAAOnqB,EAAE,cAAc,CAAK,GAExH,MAAM8rE,EAAY,GAAGZ,EAAapkF,KAAK,MAAMqD,CAAQ,GAC/C4hF,IAAkBb,iBAAc9gF,cAAe,GAC/C4hF,GAAe,GAAG30F,EAAIO,cAAc,GAAG+P,GAAgB,CAAEV,UAAW3N,iBAASyO,QAASlE,UAAU,EAAC,GACjGoL,GAAmBi8E,EAAaj8E,iBAA8BpQ,OAE9Dq8E,GAAkB5hF,EACtB2wC,EAAA,IAACg/C,GACC,YAAY7P,GAAoB9/E,EAAS,CACvCggF,cAAet5D,EAAE,uBAAwB,CAAEgwB,OAAO85C,oBAAgBvuF,WAAhBuuF,eAA0BtqF,OAAQ,EACpFwgC,kBAAmBhgB,EAAE,2BAA2B,EAChD6f,oBAAqB7f,EAAE,6BAA6B,EACrD,CAAE,GAGLiqB,EAAA,IAACg/C,IAAc,WAAY1P,GAAuBuQ,EAAgB9pE,EAAE,uBAAwB,CAAEgwB,OAAO85C,oBAAgBvuF,WAAhBuuF,eAA0BtqF,OAAQ,CAAC,CACzI,GACK27E,GAAoBkP,GAAmB/wF,GAEzCqxC,OAAAqU,WAAA,WAAA/U,MAAC,UAAQrJ,SAAuBypD,KAAgBh7E,aAAcg7E,EAAgBnmF,aAAa,EAAE,EAAS,MAAI5K,EAAQwN,KACpH,IAEI81E,GACJyN,GACA,IAAIrqE,EAAE,cAAc,CAAC,IAAIqqE,EAAgBh7E,YAAY,IAAIqtE,iBAASl9E,MAAM,MAAMwgB,EAAE,eAAe,CAAC,IAAIqqE,EAAgBnmF,aAAa,IAAIunF,CAAgB,GACjJpQ,SAAe8M,GAAY,OAAO+C,iBAAcpkF,MAAO,YAAailF,GAAiB,IAAKC,EAAgB,GAC1G5Q,GACJnxC,EAAA,IAACi5B,GAAA,CAEC,KAAM5pE,GAAWiyF,EACjB,QAAS5jF,GAAgB,CAAEV,WAAW3N,iBAASyO,WAAWwjF,iBAAcxjF,SAASlE,WAAUmD,KAAM,GAAMD,WAAYy7E,EAAQ,GAFtHv7E,GAOHq0E,GAAiB8P,GAAsBnhD,MAAC2+C,GAAe,MAAMtvF,GAAWiyF,CAAgB,GACxFhQ,IAAiB,CAAC,CAAC0P,GAAeD,IACrC/gD,MAAAuG,EAAA,CACC,MAAOxwB,EAAE,eAAe,EACxB,aAAYA,EAAE,qBAAqB,EACnC,UAAWiqB,MAACqN,EAAK,MAAM20C,EAAe,GACtC,QAAS,IAAMrB,EAAe,EAAI,EAClC,OAAQD,EACR,UAAW1tB,EAAaR,EAAWG,GACnC,SAAU,CAACquB,CAEd,GAGC,OAAAtgD,OAACqS,GAAM,SAAN,CACC,UAAArS,OAACilC,GACC,WAAA3lC,MAAC,SAAO6hD,SAAUA,CAAA,GACjB7hD,EAAA,YAAK,IAAI,YAAY,KAAM+hD,GAAa,EACxC/hD,EAAA,YAAK,KAAK,cAAc,QAAS8hD,GAAgB,EACjD9hD,EAAA,YAAK,SAAS,iBAAiB,QAAS8hD,GAAgB,EACxD9hD,EAAA,YAAK,SAAS,WAAW,QAAS6hD,EAAU,QAC5C,OAAK,UAAS,UAAU,QAASxyF,EAAU,gBAAkB,eAAe,EAC5E6xF,GAAsBlhD,EAAA,YAAK,SAAS,WAAW,QAASkhD,iBAAmBnsF,QAAQ,UAAW,QAAY,GAC1GmsF,GAAsBlhD,EAAA,YAAK,SAAS,sBAAsB,QAASkhD,iBAAmBnsF,QAAQ,SAAU,SAAa,GACrHmsF,SAAsB,OAAK,UAAS,iBAAiB,QAASA,EAAoB,MAAQ,GAAM,EAChGA,SAAsB,OAAK,UAAS,kBAAkB,QAASA,EAAoB,MAAQ,GAAM,EACjGlhD,EAAA,YAAK,KAAK,gBAAgB,QAAS6hD,EAAU,EAC7C7hD,EAAA,YAAK,KAAK,sBAAsB,QAAS8hD,GAAgB,EACzDZ,GAAsBlhD,EAAA,YAAK,KAAK,gBAAgB,QAASkhD,EAAqB,EAC/ElhD,MAAC,QAAK,SAAS,WAAW,QAAS+hD,GAAahtF,QAAQ,UAAW,OAAO,EAAE,EAC5EirC,MAAC,QAAK,SAAS,sBAAsB,QAAS+hD,GAAahtF,QAAQ,SAAU,QAAQ,EAAE,EACtFirC,EAAA,YAAK,SAAS,gBAAgB,QAAQ,YAAW,EACjDA,EAAA,YAAK,SAAS,iBAAiB,QAAQ,OAAM,EAC7CA,EAAA,YAAK,SAAS,kBAAkB,QAAQ,MAAK,EAC7CihD,EAAa7mF,KACV/H,OAAO4uF,EAAa7mF,IAAI,EACrBC,MAAM,GAAG,EACT0B,IAAKxB,IAAgBylC,MAAC,QAAK,SAAS,eAAe,QAASzlC,EAAUA,IAAI,CAAG,EAChF,KACHslF,GAAkBoB,EAChBjhD,EAAA,cAAO,KAAK,sBAAuBmgD,SAA4BN,KAAgBxwF,EAAS+wF,EAAiBxmF,CAAQ,EAAE,EAClH,MACN,EACAomC,MAACsyC,IACC,KAAMjjF,EACN,MAAO4xF,EAAapkF,MACpB,YAAailF,GACb,aAAAvP,EACA,gBAAAtB,GACA,kBAAAC,GACA,MAAOlsE,GACP,YAAAosE,GACA,eAAAC,GACA,cAAAC,GACA,oBAAAH,GACA,UAAAj9B,GACA,YAAAx1C,EACA,WAAAC,GACA,gBAAAC,GACA,SAAU2iF,EACV,aAAchP,EAAe0O,EAAapkF,MAAQkZ,EAAE,UAAU,EAC9D,UAAWsrE,EACX,cAAeD,EACf,mBAAoBrrE,EAAE,aAAa,EACnC,YAAaA,EAAE,iBAAiB,EAChC,aAAcoqD,GACd,eAAAwS,GACA,QAAAF,EACA,OAAQ3N,GACR,OACEyN,IAAiBljF,GAAWiyF,GACzBthD,MAAAw8C,GAAA,CACC,WAAA79E,GACA,KAAMtP,GAAWiyF,EACjB,WAAYlI,GACZ,OAAQb,GAAU3jF,OAClB,oBAAAu8E,GACA,WAAApY,EACA,eAAA9U,EACA,UAAWlnD,GAAQnI,MAAU,GAG9BorC,MAAA68C,GAAA,CACC,KAAM9/E,GAAQg8D,EACd,QAAS2oB,GACT,KAAMryF,GAAWiyF,EACjB,OAAOjyF,iBAASwN,QAASykF,EAAazkF,MACtC,gBAAAo0E,GACA,kBAAAC,GACA,WAAYkI,GACZ,OAAQb,GAAU3jF,QAGvB,GAEFvF,GAAY2wC,EAAA,IAAA29C,GAAA,CAAa,KAAMqD,EAAa,MAAO,GAAG3xF,EAAQwN,KAAK,aAAc,KAAM6jF,EAAa,QAAS,IAAMC,EAAe,EAAK,EAAK,CAC/I,GAEJ,EC5OO,MAAMsB,EAAgD,CAAtD,cACGC,wBACAC,qBAAwC,IAEhDr1F,SAAS2rD,EAAc2pC,EAA+B,CACpD,KAAKD,YAAYx4E,KAAK,CAAE8uC,YAAW2pC,YAAW,CAChD,CAEAC,sBAAsB5pC,EAAcviD,EAAqB,CAClDpJ,cAAS2rD,EAAqBr6C,GAAA,CAAC,CAACA,GAAQpI,GAAcoI,EAAMlI,CAAW,CAAC,CAC/E,CAEAosF,gBAAgB7pC,EAAc,CAC5B,KAAKypC,cAAgBzpC,CACvB,CAEA8pC,UAAUnkF,EAAa,OACrB,MAAMokF,GAASv0E,EAAA,KAAKk0E,YAAY7nF,KAAK,CAAC,CAAE8nF,WAAgBA,MAAUhkF,CAAI,CAAC,IAAxD,YAAA6P,EAA2DwqC,UAE1E,GAAI+pC,EACKA,SAGL,IAAC,KAAKN,cACF,UAAI9vF,MAAM,4BAA4B,EAG9C,OAAO,KAAK8vF,aACd,CACF,6DC3BMO,GAAiDA,CAAC,CAAErkF,MAAK,IAAM,CAC7D,MAAE6B,QAAO,EAAIF,EAAe,CAAC,CAAEE,aAAc,CAAEA,WAAWm7C,EAAO,EACjE,CAAEl7C,UAAaD,IACf4hF,EAAY,GAAGzjF,EAAKvB,KAAK,MAAMqD,CAAQ,GACvC6hF,EAAe3jF,EAAO,GAAGhR,EAAIO,cAAc,GAAGgP,GAAS,CAAEC,GAAIwB,EAAKN,QAASjB,MAAOuB,EAAKvB,KAAO,EAAC,GAAKoiC,OAAO2F,SAASI,KAE1Hc,mBAAU,IAAM,EACbjD,SAASg1B,kBAAoBh1B,SAASxzB,MAAMuyE,OAAO,CAAE14C,IAAK,EAAG,GAC7D,CAAC9qC,EAAKN,OAAO,CAAC,EAIb4iC,EAAA,KAAAqU,WAAA,WAAArU,OAACilC,GACC,WAAA3lC,MAAC,SAAO6hD,SAAUA,CAAA,GACjB7hD,EAAA,YAAK,IAAI,YAAY,KAAM+hD,EAAa,EACxC/hD,EAAA,YAAK,SAAS,WAAW,QAAS6hD,EAAU,EAC5C7hD,EAAA,YAAK,KAAK,gBAAgB,QAAS6hD,EAAU,GAChD,EACC7hD,EAAA,WAAI,UAAWQ,GAAOkiD,gBACrB,SAAA1iD,EAAA,IAACowB,GAAkB,gBAAgBhyD,EAAKuyD,UAAYvyD,EAAK+B,WAAY,GACvE,CACF,GAEJ,EC9BawiF,GAAsBA,CAAC1sF,EAAoB0jC,IAAmB,CACnE,MAAE77B,QAASlB,EAAIC,OAAU5G,IACzB2sF,EAAiB,GAAGjpD,CAAM,GAAGh9B,GAAS,CAAEC,KAAIC,OAAO,EAAC,GAE1D,OAAOwR,KAAKC,UAAU,CACpB,WAAY,qBACZ,QAAS,cACT,MAAOs0E,EACPpwF,KAAMyD,EAAK4G,MACXsD,YAAalK,EAAKkK,YAClBqG,SAAUy4E,GAAiBhpF,EAAKuQ,SAAU,EAAI,EAC9Cq8E,aAAc5sF,EAAKgO,MACnBs8E,WAAYtB,GAAiBhpF,EAAKiO,OAAO,EAC1C,CACH,EAEa4+E,GAAyBA,CAAC1zF,EAAgBsC,EAAqBkI,EAAkB+/B,KAIrF,CACL,QAAS,WACT,MAJsB,GAAGA,CAAM,MAAM//B,CAAQ,GAK7CpH,KAAMd,EAAMmL,MACZojF,iBAAkB5tF,QAAOjD,iBAAQ2Z,gBAAiB,CAAC,EACnDm3E,gBAAiB7tF,QAAOjD,iBAAQ4Z,eAAgB,CAAC,IAIxC+5E,GAAwBA,CACnC3zF,EACAsC,EACAioC,EACAtqC,EACA+wF,IACG,CACGC,QAAmB,GAAG1mD,CAAM,MAAMvqC,EAAO0Z,SAAS,MAAMzZ,iBAASyO,OAAO,GACxEwiF,EAAiBwC,GAAuB1zF,EAAQsC,EAAOtC,EAAO0Z,UAAW6wB,CAAM,EAErF,OAIOtrB,KAAKC,UAJPjf,EAIiB,CACpB,WAAY,qBACZ,QAAS,YACT,MAAOgxF,EACPpmF,eAAemmF,iBAAiBnmF,gBAAiB,IACjDmL,cAAcg7E,iBAAiBh7E,eAAgB,IAC/C5S,KAAMnD,EAAQwN,MACd0jF,WAAYtB,GAAiB5vF,EAAQ6U,OAAO,EAC5Cs8E,aAAcF,GAXQA,CAYvB,CACH,EC5BM0C,GAA4CA,CAAC,CAAE5kF,OAAM81C,WAAU,IAAM,aACnE,MAAEn+B,GAAMqqB,EAAe,OAAO,EAE9B,CAACsgD,EAAaC,CAAc,EAAIl+C,WAAkB,EAAK,EACvDuwB,EAAaD,KAGbzf,EAAWC,KAGX32C,EADS4oE,KACG5oE,IAAM,GAClBG,EAAOsoC,GAAc,MAAM,IAAM,IACjCkzC,EAASlzC,GAAc,GAAG,EAG1B,CAAEplC,SAAQvB,aAAY,EAAIqB,EAAe,CAAC,CAAEE,UAAQvB,mBAAmB,CAAEuB,UAAQvB,iBAAgB08C,EAAO,EACxG,CAAEl7C,WAAU8K,WAAUyI,QAAWxT,IAEjCkhF,EAA8B3qF,GAAQwU,WAAUwH,eAChD+/D,EAAe/7E,GAAQid,WAAQ06C,cAG/B,CAAEja,UAAW6sC,EAAkB3iF,KAAM4iF,CAAgBxR,MAASpxE,iBAAM4I,YAAa,EAAE,EACnF,CAAEktC,UAAW+uC,EAAmB7kF,KAAM9M,CAAa4/D,MAAYlmD,iBAAU8I,0BAA2B,GAAI,CAAEovE,iBAAkBtmF,EAAI,EAGhI,CAAE2Q,OAAMuK,cAAa,EAAIF,EAAgB,CAAC,CAAErK,QAAMuK,oBAAoB,CAAEvK,QAAMuK,kBAAiBsjC,EAAO,EACtG,CAAE2d,aAAY/5D,eAAgBy5D,GAAer6D,CAAI,EACjD6lD,EAAiB,CAAC,CAACjlD,EAAYzJ,OAG/BmsF,EAASA,IAAMtjF,GAAQk1C,EAAS32C,GAAS,CAAEC,GAAIwB,EAAKN,QAASjB,MAAOuB,EAAKvB,MAAOC,WAAYy7E,EAAQx7E,KAAM,EAAO,EAAC,EAClH+nE,EAAU7uE,IAAuB0G,GAAS,CAAEC,GAAI3G,GAAK6H,QAASjB,MAAO5G,GAAK4G,MAAOC,WAAYkO,iBAAU8I,wBAAyB,EAEhIslE,EAAiB12C,cAAY,IAAM,CACnC,IAAC9lC,GAAM,CAACtL,EAAU,OAEtB,MAAMyU,GAAQzU,EAASA,SAASwuF,UAAU,CAAC,CAAEhiF,cAAcA,KAAYlB,CAAE,EACnE6kF,GAAWnwF,EAASA,SAASyU,GAAQ,CAAC,EAErC07E,WAAYnuC,EAAS32C,GAAS,CAAEC,GAAI6kF,GAAS3jF,QAASjB,MAAO4kF,GAAS5kF,MAAOC,WAAYkO,iBAAU8I,wBAAyB/W,KAAM,EAAM,EAAC,GAC/I,CAACH,EAAItL,EAAUgiD,EAAUtoC,iBAAU8I,uBAAuB,CAAC,EAE9DgyB,YAAU,IAAM,SACbjD,SAASg1B,kBAAoBh1B,SAASxzB,MAAMuyE,OAAO,CAAE14C,IAAK,EAAG,GAC7DrG,YAAS0J,cAAc,uBAAuB,IAA9C1J,SAAiE6H,OAAM,EACvE,CAAC9tC,CAAE,CAAC,EAGP,MAAMilF,EAAY,GAAGzjF,EAAKvB,KAAK,MAAMqD,CAAQ,GACvC6hF,EAAe3jF,EAAO,GAAGhR,EAAIO,cAAc,GAAGgP,GAAS,CAAEC,GAAIwB,EAAKN,QAASjB,MAAOuB,EAAKvB,KAAO,EAAC,GAAKoiC,OAAO2F,SAASI,KAEpHisC,EACJjxC,MAACg/C,GACC,YAAY7P,GAAoB/wE,EAAM,CAAE23B,kBAAmBhgB,EAAE,2BAA2B,EAAG6f,oBAAqB7f,EAAE,6BAA6B,CAAG,EAErJ,GACKq7D,EAAepxC,EAAA,IAAAk+C,GAAA,CAAY,MAAO9/E,EAAKvB,MAAO,YAAauB,EAAK+B,YAAa,IAAK4hF,CAAgB,GAClG5Q,GACJnxC,EAAA,IAACi5B,GAAA,CAEC,KAAM76D,EACN,QAASzB,GAAS,CAAEC,GAAIwB,EAAKN,QAASjB,MAAOuB,EAAKvB,MAAOC,WAAYy7E,EAAQx7E,KAAM,GAAM,GAFpFH,GAMHy0E,EAAiB8P,GAAuBnhD,EAAA,IAAA2+C,GAAA,CAAe,KAAMvgF,CAAQ,GACrEkzE,GAAiB,CAAC,CAAC0P,GAAeD,IACrC/gD,MAAAuG,EAAA,CACC,MAAOxwB,EAAE,eAAe,EACxB,aAAYA,EAAE,qBAAqB,EACnC,UAAWiqB,MAACqN,EAAK,MAAM20C,EAAe,GACtC,QAAS,IAAMrB,EAAe,EAAI,EAClC,OAAQD,EACR,UAAW1tB,EAAaR,EAAWG,GACnC,SAAU,CAACquB,CAEd,GAEKriF,EAAa,CAAC,CAAC4O,EACf3O,EAAkB,CAAC,CAACkZ,EAGxB,OAAA4oB,OAACqS,GAAM,SAAN,CACC,UAAArS,OAACilC,GACC,WAAA3lC,MAAC,SAAO6hD,SAAUA,CAAA,GACjB7hD,EAAA,YAAK,IAAI,YAAY,KAAM+hD,EAAa,QACxC,OAAK,MAAK,cAAc,QAAS3jF,EAAK+B,YAAY,QAClD,OAAK,UAAS,iBAAiB,QAAS/B,EAAK+B,YAAY,EACzD6/B,EAAA,YAAK,SAAS,WAAW,QAAS6hD,EAAU,EAC5C7hD,EAAA,YAAK,SAAS,UAAU,QAAQ,cAAa,EAC7C5hC,EAAK6F,OAAU+7B,MAAA,QAAK,SAAS,WAAW,SAAS5hC,IAAK6F,QAAL7F,cAAYrJ,QAAQ,UAAW,QAAY,GAC5FqJ,EAAK6F,OAAU+7B,MAAA,QAAK,SAAS,sBAAsB,SAAS5hC,KAAK6F,QAAL7F,eAAYrJ,QAAQ,SAAU,SAAa,GACxGirC,MAAC,QAAK,SAAS,iBAAiB,QAAS5hC,EAAK6F,MAAQ,MAAQ,GAAG,EACjE+7B,MAAC,QAAK,SAAS,kBAAkB,QAAS5hC,EAAK6F,MAAQ,MAAQ,GAAG,EACjE+7B,EAAA,YAAK,KAAK,gBAAgB,QAAS6hD,EAAU,QAC7C,OAAK,MAAK,sBAAsB,QAASzjF,EAAK+B,YAAY,QAC1D,OAAK,MAAK,gBAAgB,QAAS/B,EAAK6F,MAAM,EAC/C+7B,MAAC,QAAK,SAAS,WAAW,QAAS+hD,EAAahtF,QAAQ,UAAW,OAAO,EAAE,EAC5EirC,MAAC,QAAK,SAAS,sBAAsB,QAAS+hD,EAAahtF,QAAQ,SAAU,QAAQ,EAAE,EACtFirC,EAAA,YAAK,SAAS,gBAAgB,QAAQ,YAAW,EACjDA,EAAA,YAAK,SAAS,iBAAiB,QAAQ,OAAM,EAC7CA,EAAA,YAAK,SAAS,kBAAkB,QAAQ,MAAK,GAC7C5hC,KAAKhE,OAALgE,eAAW/D,MAAM,KAAK0B,IAAKxB,IACzBylC,MAAA,QAAK,SAAS,eAAe,QAASzlC,IAAUA,KAElD6D,EAAQ4hC,MAAA,UAAO,KAAK,sBAAuB2iD,YAAoBvkF,EAAMhR,EAAIO,cAAc,EAAE,EAAY,MACxG,EACCqyC,EAAA,IAAAsyC,GAAA,CACC,KAAMl0E,EACN,aAAAm0E,EACA,UAAWr+B,GAAa+uC,EACxB,YAAAvkF,EACA,WAAAC,EACA,gBAAAC,EACA,MAAOR,EAAKvB,MACZ,YAAauB,EAAK+B,YAClB,MAAO/B,EAAK4G,gBACZ,gBAAAisE,EACA,YAAAG,EACA,eAAAC,EACA,cAAAC,EACA,oBAAAH,GACA,SAAA7/E,EACA,aAAcA,iBAAUuL,MACxB,OAAQioE,EACR,YAAa/uD,EAAE,eAAe,EAC9B,OACEw8D,EACGvyC,MAAAw8C,GAAA,CACC,WAAA79E,EACA,KAAMP,EACN,WAAYg7E,EACZ,OAAQb,GAAU3jF,OAClB,oBAAAu8E,GACA,WAAApY,EACA,eAAA9U,EACA,UAAWlnD,GAAQnI,OACnB,EAEDorC,MAAA68C,GAAA,CACC,KAAM9/E,GAAQg8D,EACd,QAAS2oB,EACT,KAAMtjF,EACN,MAAOA,EAAKvB,MACZ,gBAAAo0E,EACA,WAAYmI,EACZ,OAAQb,GAAU3jF,OAClB,OAAQwkF,CAAe,GAG5B,EAEFp5C,EAAA,IAAA29C,GAAA,CAAa,KAAMqD,EAAa,MAAO,GAAG5iF,EAAKvB,KAAK,aAAc,KAAM6jF,EAAa,QAAS,IAAMC,EAAe,EAAK,EAAE,CAC7H,GAEJ,ECtLalB,GAAwBrwF,GAC5BA,GAAU,YAAaA,EAC1BA,EAAOuZ,QAAQ5M,IAAiB+J,IAAA,CAAExI,MAAOwI,EAAOq9E,cAAgB9wF,OAAOyT,EAAOJ,aAAa,EAAGrP,MAAOhE,OAAOyT,EAAOJ,aAAa,GAAI,EACpI,GAIOq6E,GAAsBA,CAACK,EAA8ChxF,IAA+B,OAC/G,OAAQA,qBAAQuZ,UAAW,IAAIrO,KAAMkL,GAAOA,EAAGE,gBAAkBogB,OAAOs6D,iBAAiBh7E,YAAY,CAAC,IAA9FhW,cAAiG2Z,aAC3G,ECPaq6E,GACXxpF,GAKG,CACGuS,QAAapa,EAAUsQ,EAAU,EAGjC,CAAEjE,OAAM81C,YAAWrhD,SAA4CixD,GACnE,CAAC,SAAUlqD,CAAQ,EACnB,SACiB,MAAMuS,EAAW3D,UAAU5O,GAAY,EAAE,EAI1D,CACE86B,QAAS,CAAC,CAAC96B,EACX+lC,UAAWxvC,GACX6+D,UAAW9+D,GAGXwzB,MAAOA,CAAC2/D,EAAcxwF,IAAoBA,EAAMoL,OAAS,KAAOolF,EAAe,EAEnF,EAEO,OAAEjlF,OAAM81C,YAAWrhD,QAC5B,EC3BMywF,GAAoB19E,GAA2B,CAC7C,MAAEpW,OAAM8V,aAAYC,OAAUK,IAGhCN,OAAa9V,GAAQ+V,GAIlB/V,QACT,EAEa+zF,GAAcA,CACzB3pF,EACAwL,EACAjZ,IAMG,CACGggB,QAAapa,EAAUsQ,EAAU,EAGjC,CAAE8U,QAASipB,EAAe,EAC1B/8B,EAAW8T,EAAK9T,SAEtB4E,QAAQ7O,IAAI,2BAA6BQ,EAAW,gBAAkBwL,CAAY,EAE5E,MACJhH,OACAolF,gBACAtvC,YACAuvC,cAAc,IACZC,GACF,CAAC9pF,EAAUwL,EAAc/B,CAAQ,EACjC,MAAO,CAAEsgF,YAAY,KAAQ,CACvB79D,UAAO1gB,CAAY,EAAG,CAElBU,QAAS,MAAMqG,EAAWvC,sBAAsB,CAAEhQ,WAAUwL,aAAc0gB,OAAO1gB,CAAY,EAAGiE,WAAYs6E,EAAWtgF,WAAU,EAEhI,OAAEuC,WAAYE,EAAOF,WAAYP,SAAUS,EAAOT,SAAS,KAI3DjH,QADM,MAAM+N,EAAW/C,YAAY,CAAExP,WAAUyP,WAAYs6E,EAAWtgF,WAAU,CAEzF,EAEF,CACEigF,iBAAmBM,GAAaN,GAAiBM,iBAAUh+E,UAAU,EACrE8uB,QAASvoC,EAAQuoC,QACjBiL,UAAWxvC,GACX6+D,UAAW9+D,GAEf,EAEO,OACLkO,MAAMA,iBAAMu4D,QAAS,CAAE,EACvBziB,YACAsvC,gBACAC,cAEJ,ECjEaI,GAAmBnhF,GAAgC,CACxDyJ,QAAapa,EAAUsQ,EAAU,EAEjC,CAAE6xC,YAAW91C,QAAS0lD,GAC1B,CAAC,eAAgBphD,CAAO,EACxB,SAAY,OACV,GAAI,CAACA,EACH,OAIF,MAAMtE,EAAO,MAAM+N,EAAWjD,oBAAoB,CAACxG,CAAO,CAAC,EAIpDohF,OAFa1lF,mBAAOsE,KAAPtE,cAAkB,EAE/B0lF,EAET,CAAEnkD,UAAWxvC,GAAY6+D,UAAW9+D,GAAYwkC,QAAS,CAAC,CAAChyB,EAC7D,EAEO,OACLwxC,YACA91C,OAEJ,ECtBa2lF,GAAiBA,CAAC,CAAE30F,SAAQ4N,WAAyE,IAAM,CAChHmP,QAAapa,EAAUsQ,EAAU,EAGjC,CAAE8U,QAASipB,EAAe,EAC1B/8B,EAAW8T,EAAK9T,SAEhB,CAAE6wC,YAAW91C,QAAS0lD,GAC1B,CAAC,eAAgB10D,iBAAQ0Z,UAAW9L,EAAWqG,CAAQ,EACvD,SAAY,OACJpN,QAAO,MAAMkW,EAAW/C,YAAY,CAAExP,SAAUxK,iBAAQ0Z,UAAWQ,UAAW,EAAGC,QAASvM,EAAWqG,WAAU,EAE9GpN,0BAAMoP,WAANpP,cAAiB,EAAC,EAE3B,CAAE0pC,UAAWxvC,GAAY6+D,UAAW9+D,GAAYwkC,QAAS,CAAC,EAAEtlC,WAAQ0Z,WAAa9L,GACnF,EAEO,OACLk3C,YACA91C,OAEJ,ECrBa4lF,GAAkBA,CAAC,CAAE50F,QAAuC,IAAM,CACvE+c,QAAapa,EAAUsQ,EAAU,EACjC,CAAE8U,QAASipB,EAAe,EAE1B,CAAE8T,YAAW91C,QAAS0lD,GAC1B,CAAC,gBAAiB10D,iBAAQ0Z,SAAS,EACnC,SAAY,OACJ7S,QAAO,MAAMkW,EAAW/C,YAAY,CAAExP,SAAUxK,iBAAQ0Z,UAAWQ,UAAW,EAAGjG,SAAU8T,EAAK9T,SAAU,EAEzGpN,0BAAMoP,WAANpP,cAAiB,EAAC,EAE3B,CAAE0pC,UAAWxvC,GAAY6+D,UAAW9+D,GAAYwkC,QAAS,CAAC,EAACtlC,WAAQ0Z,WACrE,EAEO,OACLorC,YACA91C,OAEJ,ECiBM6lF,GAA6CA,CAAC,CAAE7lF,KAAM8lF,CAAY,IAAM,cAC5E,MAAMlxB,EAAaD,KACb,CAAEh9C,GAAMqqB,EAAe,OAAO,EAC9B,CAACsgD,EAAaC,CAAc,EAAIl+C,WAAkB,EAAK,EAGvD,CAACxxB,EAAckzE,CAAe,EAAI7+C,GAAgB,EAClD1rC,EAAWsqF,EAAYpmF,QACvBf,EAAOkU,EAAaQ,IAAI,MAAM,IAAM,IACpC8mE,EAAStnE,EAAaQ,IAAI,GAAG,EAC7BzU,EAAYiU,EAAaQ,IAAI,GAAG,EAGhC,CAAEyiC,UAAWkwC,EAAqBhmF,KAAMhP,EAAQyD,MAAOwxF,GAAgBjB,GAAUxpF,CAAQ,EACzF,CAAEs6C,UAAW4sC,EAAkB1iF,KAAM/O,GAAYmgF,GAASxyE,GAAa,EAAE,EACzE,CAAEk3C,UAAW6sC,EAAkB3iF,KAAM4iF,CAAgBxR,MAASngF,iBAAS2X,YAAa,EAAE,EACtF,CAAEktC,UAAWowC,EAA2BlmF,KAAMmmF,CAAgB,EAAIV,GAAgB7mF,GAAapI,MAAS,EACxG,CAAEs/C,UAAWswC,EAAuBpmF,KAAMkjF,GAAiB0C,GAAgB,CAAE50F,SAAQ,EAGrF6xF,EAAgB5xF,GAAW60F,EAG3B,CAAEjkF,SAAQvB,aAAY,EAAIqB,EAAe,CAAC,CAAEE,UAAQvB,mBAAmB,CAAEuB,UAAQvB,iBAAgB08C,EAAO,EACxG,CAAEpwC,WAAU9K,WAAUuT,QAAWxT,IACjCkhF,EAA8B3qF,GAAQwU,WAAUwH,eAChD+/D,EAAe/7E,GAAQid,WAAQ06C,cAG/BskB,EAAU79B,UAAQ,IAAM6qC,GAAqBrwF,CAAM,EAAG,CAACA,CAAM,CAAC,EAC9D,CAACgyF,EAAcC,CAAe,EAAI5+C,WAA6B7tC,MAAS,EAGxE,CACJwJ,KAAMiH,EACNm+E,cAAeiB,GACfhB,YAAaiB,GACXnB,GAAY3pF,EAAUwnF,EAAc,CAAE1sD,QAAS0sD,IAAiBxsF,QAAa,CAAC,CAACxF,EAAQ,EAErFgxF,EAAkBxrC,UACtB,IACE2vC,GAAmB,CACjBtqF,cAAesqF,WAAiB5+E,eAAiBtT,OAAOkyF,EAAgB5+E,cAAc,EAAI,GAC1FP,aAAcm/E,WAAiB7+E,cAAgBrT,OAAOkyF,EAAgB7+E,aAAa,EAAI,IAE3F,CAAC6+E,CAAe,CAClB,EACMjzF,EAAWsjD,UACf,KAAO,CACL/3C,MAAOqnF,EAAYrnF,MACnBsD,YAAa+jF,EAAY/jF,YACzB2D,OAAQ1U,iBAAQ0Z,UAChBxX,UAAU+T,iBAAUmjE,YAAev7E,GAAEoY,YAAa,EAEpD,IAAC6+E,EAAa90F,EAAQiW,CAAQ,CAChC,EAEMm8E,EAAmBzB,GAAoBK,EAAiBhxF,CAAM,EAC9D,CAAEgP,KAAMqjF,GAAasC,GAAe,CAAE30F,SAAQ4N,WAAW3N,iBAASyO,WAAWwjF,iBAAcxjF,SAAS,EAGpG6mF,GAAoBjsE,GAAgCiO,OAAM5Y,YAAY,EACtEoyD,GAAyBznD,GAAgCiO,OAAM7N,2BAA2B,EAC1F8rE,GAAoBD,GAAkBrqF,KACzCjL,KAAYA,mBAASuK,YAAaA,GAAYvK,GAAQic,SAAW1c,GAAoBC,KAAOQ,GAAQic,SAAW1c,GAAoBE,GACtI,EAGM,CAAEye,QAAMuK,eAAa,EAAIF,EAAgB,CAAC,CAAErK,QAAMuK,oBAAoB,CAAEvK,QAAMuK,kBAAiBsjC,EAAO,EACtG,CAAE2d,cAAY/5D,eAAgBy5D,GAAeppE,GAAWiyF,CAAY,EACpEr9B,GAAiB,CAAC,CAACjlD,EAAYzJ,OAE/BoJ,GAAa,CAAC,CAAC4O,GACf3O,GAAkB,CAAC,CAACkZ,GAEpB8sB,GAAW4O,KACXiyB,GAAUkc,IACPh9C,GAAsBC,GAAU,CAAE33C,EAAG00F,GAAU7jF,QAAS,EAI3D4jF,GAASh/C,cAAY,IAAM,CACfyhD,EAAA,CAAE,GAAGlzE,EAAchkB,EAAGoC,iBAASyO,QAAS3Q,EAAGorF,GAAU,GAAI,GACxE,CAAC4L,EAAiBlzE,EAAc5hB,EAASkpF,CAAM,CAAC,EAE7Ca,GAAiB12C,cAAY,SAAY,QAC7ByhD,EAAA,CAAE,GAAGlzE,EAAchkB,GAAIw0F,MAAYpyF,IAAZoyF,eAAsB3jF,QAAS3Q,EAAGorF,GAAU,GAAIx7E,KAAM0kF,EAAW,IAAM,IAAK,GAClH,CAAC0C,EAAiB1C,EAAUpyF,EAASkpF,EAAQtnE,CAAY,CAAC,EAEvD4zE,GAAmBniD,cAAY,SAAY,CAC1CrzC,GACa80F,EAAA,CAAE,GAAGlzE,EAAchkB,EAAGq0F,iBAAcxjF,QAAS3Q,EAAGorF,GAAU,GAAIx7E,KAAM,IAAK,CAC3F,EACC,CAAConF,EAAiB7C,EAAc/I,EAAQlpF,EAAS4hB,CAAY,CAAC,EAGjE60B,YAAU,IAAM,SACbjD,SAASg1B,kBAAoBh1B,SAASxzB,MAAMuyE,OAAO,CAAE14C,IAAK,EAAG,GAC7DrG,YAAS0J,cAAc,uBAAuB,IAA9C1J,SAAiE6H,OAAM,EACvE,CAACr7C,CAAO,CAAC,EAEZy2C,YAAU,IAAM,CACV8+C,IAAqB,CAAC3zE,EAAaQ,IAAI,GAAG,GAC5B0yE,EAAA,CAAE,GAAGlzE,EAAchkB,EAAG23F,GAAkB9mF,QAAS3Q,EAAGorF,GAAU,IAAM,CAAExjF,QAAS,GAAM,GAEtG,CAAC6vF,GAAmBT,EAAiBlzE,EAAcsnE,CAAM,CAAC,EAE7DzyC,YAAU,IAAM,QACVs+C,QAAuBtD,GAAoBwD,GAK3C,KAACtnF,GAAaokF,IAAiBxsF,OAAW,CAC5CysF,IAAgB5O,KAAQ,CAAC,IAATA,eAAYp8E,QAAS,EAAE,EACvC,MACF,CAGI+qF,IAAiBxsF,QAAawrF,GAChCiB,EAAgBjB,EAAgBh7E,YAAY,EAC9C,EACC,CAACg7E,EAAiBgB,EAAcgD,EAAqBtD,EAAkBwD,EAA2B7R,EAASz1E,CAAS,CAAC,EAGxH,MAAM8nF,GAAcz1F,GAAWiyF,EACzBptC,GAAYkwC,GAAuBE,GAA6BxD,GAAoB0D,EAEpFrT,GAAsBv8B,UAC1B,IACEkwC,IACE9kD,EAAA,IAACi5B,GAAA,CAEC,KAAM6rB,GACN,QAAS,IAAM,CACGX,EAAA,CAAE,GAAGlzE,EAAchkB,EAAG63F,GAAYhnF,QAAS3Q,EAAGorF,GAAU,GAAIx7E,KAAM,KAAO,CAAEhI,QAAS,GAAM,CAC5G,GAJKiI,GAOX,CAACA,EAAW8nF,GAAaX,EAAiBlzE,EAAcsnE,CAAM,CAChE,EAEIrkC,MAAkB,OAAAlU,MAAC++C,GAAU,IAG7BsF,qBAAapmF,QAAS,IAAK,CAC7B,MAAMtD,GAAMgD,GAAkCumF,EAAannF,EAAMw7E,CAAM,EAEvE,OAAQv4C,MAAAkvC,GAAA,CAAS,GAAIv0E,GAAK,QAAO,EAAG,EACtC,CAEA,GAAI,CAACupF,GAAe,CAAC90F,GAAU,CAAC01F,GAAoB,OAAA9kD,MAACE,GAAU,OAAOnqB,EAAE,cAAc,CAAK,GAE3F,MAAM8rE,GAAY,GAAGZ,EAAapkF,KAAK,MAAMqD,CAAQ,GAC/C6hF,GAAe,GAAG30F,EAAIO,cAAc,GAAGgP,GAAS,CAAEC,GAAIsnF,EAAYpmF,QAASjB,MAAOqnF,EAAYrnF,MAAOG,UAAW3N,iBAASyO,OAAS,EAAC,GAEnImzE,GACJjxC,MAACg/C,GACC,YAAY7P,GAAoB8R,EAAc,CAC5C5R,cAAet5D,EAAE,uBAAwB,CAAEgwB,MAAO32C,EAAO2Z,cAAe,EACxEgtB,kBAAmBhgB,EAAE,2BAA2B,EAChD6f,oBAAqB7f,EAAE,6BAA6B,CACrD,EAEJ,GACKm7D,GAAoBkP,GAAmB/wF,GAEzCqxC,OAAAqU,WAAA,WAAA/U,MAAC,UAAQrJ,SAAuBypD,KAAgBh7E,aAAcg7E,EAAgBnmF,aAAa,EAAE,EAAS,MAAI5K,EAAQwN,KACpH,IAEI81E,GACJyN,GACA,IAAIrqE,EAAE,cAAc,CAAC,IAAIqqE,EAAgBh7E,YAAY,IAAIqtE,iBAASl9E,MAAM,MAAMwgB,EAAE,eAAe,CAAC,IAAIqqE,EAAgBnmF,aAAa,IAAIunF,CAAgB,GACjJpQ,GAAepxC,EAAA,IAAAk+C,GAAA,CAAY,MAAO+C,iBAAcpkF,MAAO,YAAaokF,EAAa9gF,YAAa,IAAK4hF,EAAgB,GAGnH1Q,GAAiB8P,GAAsBnhD,MAAC2+C,GAAe,MAAMuF,GAAe5C,CAAgB,GAC5FhQ,IAAiB,CAAC,CAAC0P,GAAeD,IACrC/gD,MAAAuG,EAAA,CACC,MAAOxwB,EAAE,eAAe,EACxB,aAAYA,EAAE,qBAAqB,EACnC,UAAWiqB,MAACqN,EAAK,MAAM20C,EAAe,GACtC,QAAS,IAAMrB,EAAe,EAAI,EAClC,OAAQD,EACR,UAAW1tB,EAAaR,EAAWG,GACnC,SAAU,CAACquB,CAEd,GAGC,OAAAtgD,OAACqS,GAAM,SAAN,CACC,UAAArS,OAACilC,GACC,WAAA3lC,MAAC,SAAO6hD,SAAUA,EAAA,GACjB7hD,EAAA,YAAK,IAAI,YAAY,KAAM+hD,GAAa,QACxC,OAAK,MAAK,cAAc,QAASd,EAAa9gF,YAAY,QAC1D,OAAK,UAAS,iBAAiB,QAAS8gF,EAAa9gF,YAAY,EACjE6/B,EAAA,YAAK,SAAS,WAAW,QAAS6hD,GAAU,QAC5C,OAAK,UAAS,UAAU,QAASxyF,EAAU,gBAAkB,eAAe,EAC5E4xF,EAAah9E,OAAU+7B,MAAA,QAAK,SAAS,WAAW,SAASihD,KAAah9E,QAAbg9E,eAAoBlsF,QAAQ,UAAW,QAAY,GAC5GksF,EAAah9E,OAAU+7B,MAAA,QAAK,SAAS,sBAAsB,SAASihD,KAAah9E,QAAbg9E,eAAoBlsF,QAAQ,SAAU,SAAa,GACvHksF,EAAah9E,OAAS+7B,MAAC,OAAK,UAAS,iBAAiB,QAASihD,EAAah9E,MAAQ,MAAQ,EAAM,GAClGg9E,EAAah9E,OAAS+7B,MAAC,OAAK,UAAS,kBAAkB,QAASihD,EAAah9E,MAAQ,MAAQ,EAAM,GACnG+7B,EAAA,YAAK,KAAK,gBAAgB,QAAS6hD,GAAU,QAC7C,OAAK,MAAK,sBAAsB,QAASZ,EAAa9gF,YAAY,QAClE,OAAK,MAAK,gBAAgB,QAAS8gF,EAAah9E,MAAM,EACvD+7B,MAAC,QAAK,SAAS,WAAW,QAAS+hD,GAAahtF,QAAQ,UAAW,OAAO,EAAE,EAC5EirC,MAAC,QAAK,SAAS,sBAAsB,QAAS+hD,GAAahtF,QAAQ,SAAU,QAAQ,EAAE,EACtFirC,EAAA,YAAK,SAAS,gBAAgB,QAAQ,YAAW,EACjDA,EAAA,YAAK,SAAS,iBAAiB,QAAQ,OAAM,EAC7CA,EAAA,YAAK,SAAS,kBAAkB,QAAQ,MAAK,GAC7CihD,KAAa7mF,OAAb6mF,eAAmB5mF,MAAM,KAAK0B,IAAKxB,IAClCylC,MAAC,QAAK,SAAS,eAAe,QAASzlC,IAAUA,KAElD0mF,EACCjhD,EAAA,IAAC,SAAO,MAAK,sBAAuB+iD,YAAsB3zF,EAAQ80F,EAAa92F,EAAIO,eAAgB0B,EAAS+wF,CAAe,CAAE,GAC3H,MACN,EACApgD,MAACsyC,IACC,KAAM2O,EACN,MAAO1O,EAAe0O,EAAapkF,MAAQqnF,EAAYrnF,MACvD,YAAaokF,EAAa9gF,aAAe+jF,EAAY/jF,YACrD,aAAAoyE,EACA,gBAAAtB,GACA,kBAAAC,GACA,MAAO+P,EAAaj8E,gBACpB,YAAAosE,GACA,eAAAC,GACA,cAAAC,GACA,oBAAAH,GACA,UAAAj9B,GACA,YAAAx1C,EACA,WAAAC,GACA,gBAAAC,GACA,SAAAtN,EACA,aAAcihF,EAAe2R,EAAYrnF,MAAQkZ,EAAE,UAAU,EAC7D,OAAA0vD,GACA,UAAW4b,EACX,cAAeD,EACf,mBAAoBrrE,EAAE,aAAa,EACnC,YAAaA,EAAE,iBAAiB,EAChC,aAAcoqD,GACd,eAAAwS,GACA,QAAAF,EACA,QAASiS,EACT,SAAUD,GACV,OACElS,EACGvyC,EAAA,IAAAw8C,GAAA,CACC,WAAA79E,GACA,KAAMmmF,GACN,WAAYZ,EACZ,WAAY9K,GACZ,OAAQb,GAAU3jF,OAClB,OAAQiwF,GACR,oBAAA1T,GACA,WAAApY,GACA,eAAA9U,GACA,UAAWlnD,GAAQnI,OAAU,EAG9BorC,MAAA68C,GAAA,CACC,KAAM9/E,GAAQg8D,GACd,QAAS2oB,GACT,KAAMoD,GACN,WAAYZ,EACZ,MAAOA,EAAYrnF,MACnB,gBAAAo0E,GACA,kBAAAC,GACA,WAAYkI,GACZ,OAAQb,GAAU3jF,QAGvB,GAEFvF,GAAY2wC,EAAA,IAAA29C,GAAA,CAAa,KAAMqD,EAAa,MAAO,GAAG3xF,EAAQwN,KAAK,aAAc,KAAM6jF,EAAa,QAAS,IAAMC,EAAe,EAAK,EAAK,CAC/I,GAEJ,ECvTMoE,GAAkDA,CAAC,CAAE3mF,OAAM81C,WAAU,IAAM,CAC/E,MAAM8wC,EAAiB5mF,EAAK4mF,eAE5B,OAAI9wC,QACM6qC,GAAU,IAIhBiG,EACKhlD,MAACkvC,IAAS,GAAI3xE,GAAgBynF,EAAgB5mF,EAAKN,OAAO,EAAG,QAAS,EAAM,GAI9EkiC,EAAA,IAACgjD,GAAW,MAAA5kF,EAAY,UAAA81C,CAAwB,EACzD,ECTM+wC,GAA8CA,CAAC,CAAE7mF,KAAM1M,EAAOwiD,UAAWgxC,CAAe,IAAM,CAClG,MAAMxiF,EAAUhR,EAAMoM,QAChB,CAACmT,CAAY,EAAIq0B,KAEjBvoC,EAAOkU,EAAaQ,IAAI,MAAM,IAAM,IACpC8mE,EAAStnE,EAAaQ,IAAI,GAAG,EAE7B,CAAErT,KAAMmmF,EAAiBrwC,UAAWixC,GAAsBtB,GAAgBnyF,EAAMoM,OAAO,EACvF,CAAEo2C,UAAWkxC,EAAsBhnF,KAAM8lF,CAAgB1U,MAAS+U,iBAAiBz7E,YAAa,EAAE,EAGpGo8E,MAAkBC,GAAqBC,EACzC,aAAQrG,GAAU,IAGpB,GAAI,CAACwF,EACI,OAAAvkD,MAACkvC,IAAS,GAAIvxE,GAAkCjM,EAAOqL,EAAMw7E,CAAM,EAAG,QAAO,EAAG,GAGnF,MAAEz6E,QAASlB,EAAIC,OAAUqnF,IAI7B,OAAAlkD,MAACkvC,GACC,IAAIvyE,GAAS,CACXK,UAAW0F,EACX9F,KACAC,QACAE,OACAD,WAAYy7E,EACb,EACD,QAAO,EACP,EAEN,EC5CO,SAAS8M,GAAa3zF,EAAqB,CACzC,OACLmF,YAAaA,GAAYnF,CAAK,EAC9B4F,WAAYA,GAAW5F,CAAK,EAEhC,+HCIM4zF,GAA0BA,CAAC,CAAEvlD,WAAUgB,YAAWi0B,SAAS,GAAOl0B,OAAO,QAAmB,IAE9Fd,MAAC,OACC,UAAWgB,EAAWD,EAAWP,GAAOjmC,IAAKimC,GAAOM,CAAI,EAAG,CACzD,CAACN,GAAO7wC,IAAI,EAAGqlE,EAChB,EAEAj1B,UACH,mCCPJ,SAAwBwlD,GAAW,CAAEvuF,aAAmB,EAAG,CACnD,MAAE+e,KAAMqqB,EAAe,OAAO,EAEpC,OAAIppC,IAAgBP,GAAYG,WAAaI,IAAgBP,GAAYE,UAC/D02C,EAAK,MAAM8nB,GAAO,UAAW30B,GAAO9W,IAAQ,GAC3C1yB,IAAgBP,GAAYC,KAEnCspC,EAAA,IAACslD,IAAI,OAAM,GAAC,UAAW9kD,GAAO9W,KAC3B3T,SAAEA,EAAA,MAAM,CACX,GAIG,IACT,CCOA,MAAMyvE,GAA4CA,CAAC,CAAEpnF,KAAM1M,EAAOwiD,WAAU,IAAM,cAC1E,MAAEn+B,EAAGoB,MAASipB,IAAe,CAAC,QAAS,QAAQ,CAAC,EAEhD,CAACsgD,EAAaC,CAAc,EAAIl+C,WAAkB,EAAK,EACvDuwB,EAAaD,KAGbzf,EAAWC,KAGX32C,EADS4oE,KACG5oE,IAAM,GAClBG,EAAOsoC,GAAc,MAAM,IAAM,IACjCvoC,EAAauoC,GAAc,GAAG,EAG9B,CAAEplC,SAAQvB,aAAY,EAAIqB,EAAe,CAAC,CAAEE,SAAQvB,mBAAmB,CAAEuB,SAAQvB,iBAAgB08C,EAAO,EACxG,CAAEl7C,WAAU8K,WAAUyI,QAAWxT,IAEjCkhF,EAA8B3qF,GAAQwU,WAAUwH,eAChD+/D,EAAe/7E,GAAQid,WAAQ06C,cAG/B,CAAEja,UAAW6sC,EAAkB3iF,KAAM4iF,CAAgBxR,MAAS99E,iBAAOsV,YAAa,EAAE,EACpF,CAAEktC,UAAW+uC,EAAmB7kF,KAAM9M,GAAa4/D,GAAYp0D,GAAc,EAAE,EAG/EvN,EAAY81F,GAAa3zF,CAAK,EAG9B,CAAE6b,OAAMuK,cAAa,EAAIF,EAAgB,CAAC,CAAErK,OAAMuK,oBAAoB,CAAEvK,OAAMuK,kBAAiBsjC,EAAO,EACtG,CAAE2d,aAAY/5D,eAAgBy5D,GAAe/mE,CAAK,EAClDuyD,EAAiB,CAAC,CAACjlD,EAAYzJ,OAG/BmsF,EAASA,IAAMhwF,GAAS4hD,EAAS32C,GAAS,CAAEC,GAAIlL,EAAMoM,QAASjB,MAAOnL,EAAMmL,MAAOC,aAAYC,KAAM,EAAO,EAAC,EAC7G+nE,EAAU7uE,GAAuB0G,GAAS,CAAEC,GAAI3G,EAAK6H,QAASjB,MAAO5G,EAAK4G,MAAOC,aAAY,EAE7Fs8E,EAAiB12C,cAAY,IAAM,CACnC,IAAC9lC,GAAM,CAACtL,EAAU,OAEtB,MAAMyU,EAAQzU,EAASA,SAASwuF,UAAU,CAAC,CAAEhiF,cAAcA,KAAYlB,CAAE,EACnE6kF,GAAWnwF,EAASA,SAASyU,EAAQ,CAAC,EAExC07E,MAASzqF,cAAgBP,GAAYG,UAIlC6qF,WAAYnuC,EAAS32C,GAAS,CAAEC,GAAI6kF,GAAS3jF,QAASjB,MAAO4kF,GAAS5kF,MAAOC,aAAYC,KAAM,EAAM,EAAC,GAC5G,CAACH,EAAItL,EAAUgiD,EAAUx2C,CAAU,CAAC,EAGvCgpC,YAAU,IAAM,QACbjD,SAASg1B,kBAAoBh1B,SAASxzB,MAAMuyE,OAAO,CAAE14C,IAAK,EAAG,GAC7DrG,WAAS0J,cAAc,uBAAuB,IAA9C1J,QAAiE6H,OAAM,EACvE,CAAC9tC,CAAE,CAAC,EAGD,MAAEC,QAAOiB,SAAYpM,IACrBmwF,GAAY,GAAGhlF,CAAK,MAAMqD,CAAQ,GAClC6hF,EAAerwF,EAAQ,GAAGtE,EAAIO,cAAc,GAAGgP,GAAS,CAAEC,GAAIkB,EAASjB,OAAO,EAAC,GAAKoiC,OAAO2F,SAASI,KAEpGisC,EAEFvwC,OAAAqU,EAAA,oBAAC/U,MAAAulD,GAAA,CAAW,YAAa7zF,EAAMsF,WAAY,SAC1CgoF,GACC,YAAYzP,GAAwB79E,EAAOylB,EAAK9T,SAAU,CACxDuyB,oBAAqB7f,EAAE,6BAA6B,EACpDggB,kBAAmBhgB,EAAE,2BAA2B,CACjD,GAAE,CAEP,IAGIq7D,EAAepxC,EAAA,IAAAk+C,GAAA,CAAY,MAAOxsF,EAAMmL,MAAO,YAAanL,EAAMyO,YAAa,IAAK4hF,CAAgB,GACpG5Q,EACJnxC,EAAA,IAACi5B,GAAA,CAEC,KAAMvnE,EACN,QAASiL,GAAS,CAAEC,GAAIkB,EAASjB,QAAOC,aAAYC,KAAM,GAAM,EAChE,SAAU,CAACxN,EAAU+H,YAHhBsF,GAOHy0E,EAAiB8P,GAAuBnhD,EAAA,IAAA2+C,GAAA,CAAe,KAAMjtF,CAAS,GACtE4/E,IAAiB,CAAC,CAAC0P,GAAeD,IACrC/gD,MAAAuG,EAAA,CACC,MAAOxwB,EAAE,eAAe,EACxB,aAAYA,EAAE,qBAAqB,EACnC,UAAWiqB,MAACqN,EAAK,MAAM20C,EAAe,GACtC,QAAS,IAAMrB,EAAe,EAAI,EAClC,OAAQD,EACR,UAAW1tB,EAAaR,EAAWG,GACnC,SAAU,CAACquB,CAEd,GAEKriF,GAAa,CAAC,CAAC4O,EACf3O,GAAkB,CAAC,CAACkZ,EAGxB,OAAA4oB,OAACqS,GAAM,SAAN,CACC,UAAArS,OAACilC,GACC,WAAA3lC,MAAC,SAAO6hD,SAAUA,EAAA,GACjB7hD,EAAA,YAAK,IAAI,YAAY,KAAM+hD,EAAa,QACxC,OAAK,MAAK,cAAc,QAASrwF,EAAMyO,YAAY,QACnD,OAAK,UAAS,iBAAiB,QAASzO,EAAMyO,YAAY,EAC1D6/B,EAAA,YAAK,SAAS,WAAW,QAAS6hD,GAAU,EAC5C7hD,EAAA,YAAK,SAAS,UAAU,QAAQ,cAAa,EAC7CtuC,EAAMuS,OAAU+7B,MAAA,QAAK,SAAS,WAAW,SAAStuC,KAAMuS,QAANvS,eAAaqD,QAAQ,UAAW,QAAY,GAC9FrD,EAAMuS,OAAU+7B,MAAA,QAAK,SAAS,sBAAsB,SAAStuC,KAAMuS,QAANvS,eAAaqD,QAAQ,SAAU,SAAa,GAC1GirC,MAAC,QAAK,SAAS,iBAAiB,QAAStuC,EAAMuS,MAAQ,MAAQ,GAAG,EAClE+7B,MAAC,QAAK,SAAS,kBAAkB,QAAStuC,EAAMuS,MAAQ,MAAQ,GAAG,EAClE+7B,EAAA,YAAK,KAAK,gBAAgB,QAAS6hD,GAAU,QAC7C,OAAK,MAAK,sBAAsB,QAASnwF,EAAMyO,YAAY,QAC3D,OAAK,MAAK,gBAAgB,QAASzO,EAAMuS,MAAM,EAChD+7B,MAAC,QAAK,SAAS,WAAW,QAAS+hD,EAAahtF,QAAQ,UAAW,OAAO,EAAE,EAC5EirC,MAAC,QAAK,SAAS,sBAAsB,QAAS+hD,EAAahtF,QAAQ,SAAU,QAAQ,EAAE,EACtFirC,EAAA,YAAK,SAAS,gBAAgB,QAAQ,YAAW,EACjDA,EAAA,YAAK,SAAS,iBAAiB,QAAQ,OAAM,EAC7CA,EAAA,YAAK,SAAS,kBAAkB,QAAQ,MAAK,GAC7CtuC,KAAM0I,OAAN1I,eAAY2I,MAAM,KAAK0B,IAAKxB,GAC1BylC,MAAA,QAAK,SAAS,eAAe,QAASzlC,GAAUA,IAElD7I,EAASsuC,MAAA,UAAO,KAAK,sBAAuB2iD,YAAoBjxF,EAAOtE,EAAIO,cAAc,EAAE,EAAY,MAC1G,QACC2kF,GACC,MAAM5gF,EACN,aAAA6gF,EACA,UAAWr+B,GAAa+uC,EACxB,YAAAvkF,EACA,WAAAC,GACA,gBAAAC,GACA,MAAOlN,EAAMmL,MACb,YAAanL,EAAMyO,YACnB,MAAOzO,EAAMsT,gBACb,gBAAAisE,EACA,YAAAG,EACA,eAAAC,EACA,cAAAC,GACA,oBAAAH,EACA,SAAA7/E,EACA,aAAcA,iBAAUuL,MACxB,OAAQioE,EACR,YAAa/uD,EAAE,eAAe,EAC9B,OACEw8D,EACGvyC,MAAAw8C,GAAA,CACC,WAAA79E,GACA,KAAMjN,EACN,WAAY0nF,EACZ,OAAQt8E,GAAclI,OACtB,oBAAAu8E,EACA,WAAApY,EACA,eAAA9U,EACA,UAAW10D,EAAU+H,aAAeyF,GAAQnI,QAC5C,SAAUrF,EAAU+H,WACpB,EAEF0oC,MAAC68C,GACC,MAAM9/E,GAAQg8D,EACd,QAAS2oB,EACT,KAAMhwF,EACN,MAAOA,EAAMmL,MACb,gBAAAo0E,EACA,WAAYmI,EACZ,OAAQt8E,GAAclI,OACtB,OAAQwkF,IAGb,EAEFp5C,EAAA,IAAA29C,GAAA,CAAa,KAAMqD,EAAa,MAAO,GAAGtvF,EAAMmL,KAAK,aAAc,KAAM6jF,EAAa,QAAS,IAAMC,EAAe,EAAK,EAAE,CAC9H,GAEJ,EC3La8E,GAAiB,IAAIxD,GAGlCwD,GAAepD,sBAAsB4B,GAAa90F,GAAmBC,MAAM,EAC3Eq2F,GAAepD,sBAAsB4C,GAAc91F,GAAmBE,OAAO,EAC7Eo2F,GAAepD,sBAAsB0C,GAAkB51F,GAAmBG,WAAW,EACrFm2F,GAAepD,sBAAsBmD,GAAYr2F,GAAmBI,SAAS,EAC7Ek2F,GAAepD,sBAAsBI,GAAiBtzF,GAAmBK,IAAI,EAC7Ei2F,GAAenD,gBAAgBU,EAAU,EAGzCyC,GAAe34F,SAASm4F,GAAwBhvF,GAAA,CAAC,CAACA,GAAQ+D,GAAU/D,CAAI,CAAC,EACzEwvF,GAAe34F,SAASm3F,GAAuBhuF,GAAA,CAAC,CAACA,GAAQ4D,GAAmB5D,CAAI,CAAC,EAEjF,MAAMyvF,GAAoBA,IAAM,CAExB9oF,QADS4oE,KACG5oE,IAAM,GAClB,CAAEs3C,YAAWouB,aAAYzvE,QAAOuL,QAASoxE,GAAS5yE,CAAE,EACpD,CAAEmZ,KAAMqqB,EAAe,OAAO,EAEpC,GAAI8T,EACF,aAAQ6qC,GAAU,IAGhBlsF,MAAS,CAACuL,EACZ,OAAQ4hC,MAAAE,GAAA,CAAU,MAAOnqB,EAAE,iBAAiB,CAAK,GAG7C4vE,QAAcF,GAAelD,UAAUnkF,CAAI,EAG/C,OAAA4hC,EAAA,IAACu3B,IAAK,KAAI,GACR,eAACouB,EAAY,MAAAvnF,EAAY,UAAWkkE,CAAW,EACjD,EAEJ,0ECxCMsjB,GAA0CA,CAAC,CAAExnF,OAAM81C,WAAU,IAAM,CACjEgsB,QAAiBvO,GAAkB,OAAO,EAC1C,CAAE1xD,SAAQvB,aAAY,EAAIqB,EAAe,CAAC,CAAEE,SAAQvB,kBAAmB,CAAEuB,SAAQvB,gBAAgB08C,EAAO,EAExG,CAACl/C,EAAQw2E,CAAS,EAAIjwC,WAAiB,EAAE,EAEzCojD,EAAah2D,GAAqB5vB,EAAQ7B,EAAK0F,MAAM,EACrDy9E,EAAmB3sC,UAAQ,IAAM7kB,GAAe3xB,EAAMlC,CAAM,EAAG,CAACkC,EAAMlC,CAAM,CAAC,EAC7E4pF,EAAmBtvF,EAAQqvF,EAAWtwF,OAGtC,CAAEgY,OAAMuK,cAAa,EAAIF,EAAgB,CAAC,CAAErK,OAAMuK,mBAAoB,CAAEvK,OAAMuK,iBAAiBsjC,EAAO,EAE5GtV,YAAU,IAAM,CAEd4sC,EAAU,EAAE,GACX,CAACt0E,EAAK0F,MAAM,CAAC,EAEhB,MAAMjH,GAASuB,iBAAO8hE,KAA8B9hE,EAAKvB,MACnDglF,EAAY,GAAGhlF,CAAK,MAAMoD,EAAOC,QAAQ,GAEzC4kE,EAAUhuE,GACd6F,GAAS,CACPC,GAAI9F,EAAagH,QACjBjB,MAAO/F,EAAa+F,MACpBC,WAAYhG,EAAagN,OAC1B,EAEH,OACG48B,OAAA,OAAI,UAAWF,GAAOlvC,SACrB,UAAAovC,OAACilC,GACC,WAAA3lC,MAAC,SAAO6hD,SAAUA,CAAA,GACjB7hD,EAAA,YAAK,SAAS,WAAW,QAAS6hD,EAAU,EAC5C7hD,EAAA,YAAK,KAAK,gBAAgB,QAAS6hD,EAAU,GAChD,EACCnhD,EAAA,eAAO,UAAWF,GAAOolC,OACxB,UAAA5lC,MAAC,MAAInjC,SAAMA,CAAA,GACVipF,GAAoB9lD,MAAC0vC,GAAO,MAAK,QAAQ,MAAOxzE,EAAQ,aAAa,MAAM,QAAS2pF,EAAY,SAAUnT,CAAa,IAC1H,QACCjO,GACC,QAAAK,EACA,SAAUyc,EACV,YAAA7iF,EACA,WAAY,CAAC,CAAC6O,EACd,gBAAiB,CAAC,CAACuK,EACnB,UAAAo8B,EACA,aAAc,EAAE,CAEpB,GAEJ,EC3Da6xC,GAAiB/9D,GAAwB,CACpD,MAAMY,EAAY,IAAIn0B,KAAKuzB,EAAQY,SAAS,EACtCW,EAAU,IAAI90B,KAAKuzB,EAAQuB,OAAO,EAExC,OAAOy8D,GAAOp9D,CAAS,GAAKq9D,GAAS18D,CAAO,CAC9C,EAKa28D,GAAgBl+D,GAAwB,CACnD,MAAMuB,EAAU,IAAI90B,KAAKuzB,EAAQuB,OAAO,EAExC,OAAOy8D,GAAOz8D,CAAO,CACvB,EAMa48D,GAA0BA,CAACn+D,EAAqBo+D,EAAyB,IAAM,CAC1F,MAAMx9D,EAAY,IAAIn0B,KAAKuzB,EAAQY,SAAS,EACtCy9D,EAAeC,GAAa7xF,SAAQ2xF,CAAsB,EAEzDG,UAAQ39D,EAAWy9D,CAAY,CACxC,EAKaG,GAAkB/oF,GACtBA,EAAQqqB,SAASxtB,KAAKyrF,EAAa,ECftCU,GAAkBA,CAAC,CACvBn1F,WACAo1F,mBACAC,mBAAmB,EAKrB,IAAM,CACEC,QAAgB70F,EAAUy1B,EAAa,EAEvC,CAAEppB,KAAMyoF,EAAW,IAAO/iC,GAAS,CAAC,YAAa,GAAGxyD,EAASyK,IAAI,CAAC,CAAE+B,aAAcA,CAAO,CAAC,EAAG,IAAM8oF,EAAcn+D,aAAan3B,CAAQ,EAAG,CAC7Iy9D,gBAAiB7/D,GAClB,EAEK,CAAC43F,EAAYC,CAAa,EAAItkD,WAASkkD,CAAgB,EACvD,CAAClpF,EAASupF,CAAU,EAAIvkD,EAAiC,WACzD,CAACza,EAASi/D,CAAU,EAAIxkD,EAAiC,WAG/DqD,YAAU,IAAM,CACV,IAACghD,GAAc,CAACH,EAAkB,OAEhCO,QAAajoD,OAAOoW,YAAY,IAAM53C,GAAWwpF,EAAWT,GAAe/oF,CAAO,CAAC,EAAG,GAAK,EAE1F,UAAM63C,cAAc4xC,CAAU,CACpC,GAACzpF,EAASqpF,EAAYH,CAAgB,CAAC,EAI1C7gD,YAAU,IAAM,CACRqhD,QAAkBN,EAASvsF,KAAK,CAAC,CAAEsC,IAASA,QAAO8pF,CAAgB,GAAKG,EAAS,CAAC,EAWxF,GARI,CAACppF,GAAW0pF,IACdH,EAAWG,CAAe,EAGfX,KAAeW,CAAe,CAAC,GAIxC1pF,EAAS,CACL2pF,QAAiBP,EAASvsF,KAAK,CAAC,CAAEsC,QAASA,IAAOa,EAAQb,EAAE,EAGlE,IAAIyqF,EAAiBr/D,IAAWo/D,iBAAgBt/D,SAASxtB,KAAK,CAAC,CAAEsC,QAASA,KAAOorB,iBAASprB,MAGtF,CAACyqF,GAAkBD,IACrBC,EAAiBb,GAAeY,CAAc,GAIhDJ,EAAWI,CAAc,EACzBH,EAAWI,CAAc,CAC3B,GAEC,CAACR,CAAQ,CAAC,EAGb,MAAMS,EAAmB5kD,cACvB,CAAC9lC,EAAY2qF,IAAuB,CAClC,MAAM9pF,EAAUopF,iBAAUvsF,KAAMmD,GAAYA,EAAQb,KAAOA,GAG3D,GAAI,CAACa,EACH,OAIF,MAAMuqB,EAAUu/D,EAAY9pF,EAAQqqB,SAASxtB,KAAM0tB,GAAYA,EAAQprB,KAAO2qF,CAAS,EAAIf,GAAe/oF,CAAO,EAEjHupF,EAAWvpF,CAAO,EAClBwpF,EAAWj/D,CAAO,EAIlB++D,EAAc,CAAC/+D,GAAW+9D,GAAc/9D,CAAO,CAAC,GAElD,CAAC6+D,CAAQ,CACX,EAEO,OACLppF,UACAopF,WACA7+D,UACAs/D,mBAEJ,ECxGME,GAAiBA,CAAC,CAAEx/D,UAASK,cAAoF,IAAM,CAC3H,KAAM,CAAC2sC,EAAQyyB,CAAS,EAAIhlD,WAAS,EAAK,EACpC,CAACilD,EAAOC,CAAQ,EAAIllD,WAAS,EAAK,EAClC,CAACmlD,EAA0BC,CAA2B,EAAIplD,WAAS,EAAK,EAG9EqD,mBAAU,IAAM,CACd,MAAMgiD,EAAkBA,IAAM,CAC5BL,EAAU,CAAC,CAACz/D,GAAW+9D,GAAc/9D,CAAO,CAAC,EAC7C2/D,EAAS,CAAC,CAAC3/D,GAAWk+D,GAAal+D,CAAO,CAAC,EAC3C6/D,EAA4B,CAAC,CAAC7/D,GAAWm+D,GAAwBn+D,EAASK,CAAY,CAAC,GAInF6+D,EAAa7xC,YAAYyyC,EAAiB,GAAK,EAGrC,OAAAA,IAET,IAAMxyC,cAAc4xC,CAAU,GACpC,CAAC7+D,EAAcL,CAAO,CAAC,EAEnB,CACLgtC,SACA0yB,QACAE,2BAEJ,EC7BMG,GAAmBxI,GAAc,EAE1ByI,GAAgBA,CAAC,CAAEprF,KAAImI,mBAAkBC,iBAA4B,KAAO,CACvF4gB,KAAMhpB,EACN0jC,KAAMv7B,EACNA,mBACAC,iBACF,GAEaijF,GAAgBA,CAACzqF,EAAmB,CAAEZ,KAAIC,QAAOgI,YAAWG,kBAAiB7E,cAAaopB,UAASX,WAAsB,KAAO,CAC3Is/D,YAAa1qF,EACbZ,KACAC,QACAoH,MAAOY,GAAa,GAEpBA,UAAWA,GAAa,GACxBG,gBAAiBA,GAAmB,GACpC7E,YAAaA,GAAe,GAC5BgoF,KAAM5+D,EACN6+D,MAAOx/D,CACT,GAKMy/D,GAAeA,CAAC,CACpBxB,WACAyB,eACAC,YAOF,IAAM,CACJ,KAAM,CAACC,EAAaC,CAAW,EAAI7zC,UAAQ,IAClC,CAACiyC,EAAS9qF,IAAIisF,EAAa,EAAGnB,EAASre,QAAqB/qE,KAAQqqB,SAAS/rB,OAAiBksF,GAAcxqF,EAAQb,GAAIorB,CAAO,CAAC,CAAC,CAAC,EACxI,CAAC6+D,CAAQ,CAAC,EAEP6B,EAAQ9zC,EAAQ,YAAM+zC,GAAU,EAAG,CAAE,GAOrC1lF,EAAO2lF,KAAet/D,SACtB,CAACX,EAAWkgE,CAAO,EAAIj0C,UAAQ,IAAM,CAACk0C,GAAW,IAAIr0F,KAAKwO,CAAI,CAAC,EAAG8lF,IAAiB,EAAG,CAAC9lF,CAAI,CAAC,EAElG,OAAO+lF,GAAO,CACZnC,SAAU2B,EACVS,IAAKR,EACLS,SAAU,KACVZ,eACAC,aACAY,UAAW,GACXC,WAAY,GACZC,OAAQ,GACRtB,oBACAp/D,YACAkgE,UACAH,QACD,CACH,EAEaC,GAAYA,KAAO,CAC9BW,QAAS,CACP,IAAK,4DACL,IAAK,2DACP,EACAC,KAAM,CACJ,IAAK,MACP,EACAC,MAAO,OACPC,MAAO,CACL,IAAK,MACP,EACAC,OAAQ,CACNC,KAAM,GACNC,OAAQ,GACRC,KAAM,GACNC,GAAI,EACN,EACAC,UAAW,CACTC,OAAQ,GACRC,MAAO,CACLH,GAAI,EACN,CACF,EACAI,SAAU,CACRC,KAAM,CACJ,IAAK,GACL,IAAK,GACL,IAAK,EACP,CACF,EACAr1F,KAAM,CACJy0F,KAAM,CACJ,IAAK,GACL,IAAK,EACP,CACF,EACAa,SAAU,CACRnoC,QAAS,CACP6nC,GAAI,EACN,CACF,CACF,4IChGMO,GAAmCA,CAAC,CAAE5sF,UAAS6sF,mBAAkBhC,eAAc1hD,UAASG,WAAUlqC,OAAM,IAAM,CAC5G,MAAEosC,WAAUrjB,OAAM7gB,kBAAqBtH,IACvCg5B,EAAQ,CAAEyS,IAAKD,EAASC,IAAKC,OAAQF,EAASE,OAAQhjC,MAAOmiF,GAGjE,OAAAtoD,MAAC,MAAI,WAAWQ,GAAO+pD,cAAe,MAAA9zD,EACpC,SAAAuJ,EAAA,IAAC,MACC,WAAWgB,EAAWR,GAAOgqD,WAAY,CAAE,CAAChqD,GAAO7Q,MAAM,EAAGoX,CAAU,GACtE,MAAO,CAAE5gC,MAAOmkF,CAAiB,EACjC,QAAS,IAAM1jD,GAAWA,EAAQnpC,CAAO,EACzC,cAAakwC,OACb,KAAK,SAEL,SAAC3N,EAAA,IAAA6zB,GAAA,CAAM,UAAWrzB,GAAOiqD,eAAgB,MAAO1lF,EAAkB,IAAKlI,EAAO,MAAO,GAAI,EAC3F,EACF,EAEJ,kbClBM6tF,GAAgCA,CAAC,CAAE1iE,UAAS4e,UAASG,WAAU4jD,UAASjkD,WAAUqhD,kBAAiB,IAAM,CACvG,MACJvnD,OAAQ,CAAEyI,UAAS,EACnB2hD,aACAC,uBACA71B,SACA81B,cACEC,GAAW,CACb/iE,UACA+/D,mBACD,EAEK,CAAEhyE,KAAMqqB,EAAe,QAAQ,EAC/B,CAAEhiC,MAAS4pB,IACX,CAAE/jB,QAAOpH,QAAOurF,QAAOD,MAAS/pF,IAEhC4sF,EAAYJ,EAAWxC,EAAOyC,EAAsB,GAAE10F,cACtD80F,EAAWL,EAAWzC,EAAM0C,EAAsB,GAAE10F,cAEpD+0F,EAAY,CAACP,GAAWG,EACxBK,EAAqB,CAACR,GAAWG,GAAc91B,EAC/CjB,EAAM,GAEZ,aACG,MAAI,WAAWvzB,GAAO4qD,cAAe,MAAOniD,EAAU,QAAS,IAAMrC,GAAWA,EAAQ5e,CAAO,EAC9F,SAAA0Y,OAAC,OACC,UAAWM,EAAWR,GAAO6qD,WAAY,CACvC,CAAC7qD,GAAOikB,QAAQ,EAAG1d,EACnB,CAACvG,GAAO7wC,IAAI,EAAGqlE,EACf,CAACx0B,GAAOkG,QAAQ,EAAGA,CACpB,GACD,MAAO,CAAEvgC,MAAOq6B,GAAOr6B,OACvB,eAAoB6hB,EAAQ5pB,KAAKxB,GAApB+wC,QAEZu9C,mBAAc,MAAI,WAAW1qD,GAAO8qD,gBAAiB,IAAKrnF,EAAO,IAAA8vD,EAAY,EAC7Eo3B,SAAuB,MAAI,WAAW3qD,GAAO+qD,WAAax1E,WAAE,MAAM,EAAE,EACpE2qB,EAAA,YAAI,UAAWF,GAAOgrD,kBACpBb,UAAW31B,YAAW,MAAI,WAAWx0B,GAAO+qD,WAAax1E,WAAE,MAAM,CAAE,GACnEiqB,EAAA,UAAG,UAAWQ,GAAOirD,gBAAkB5uF,SAAMA,EAAA,EAC7C6jC,EAAA,aAAK,UAAWF,GAAOkrD,eACrBV,YAAU,MAAIC,GACjB,GACF,EACF,EACF,EAEJ,uPChDMU,GAAgCA,CAAC,CAAE5D,mBAAkBmB,WAAU0C,YAAWC,qBAAoBC,wBAAuB3C,YAAWb,cAAa,IAAM,CACjJ,MAAE/mB,OAAMwqB,WAAUnB,cAAeoB,GAAYH,EAAoB9D,CAAgB,EAEjFkE,EAAiBA,IAAMF,EAAShwF,IAAI,CAACI,EAAG4J,IAAUi6B,EAAA,IAAC,MAAI,WAAWQ,GAAO0rD,gBAA6B,MAAO,CAAEniD,YAAa6hD,EAAY,EAAE,EAA3C7lF,EAAgD,EAE/IomF,EAAcpmF,GAClB26B,OAAC,OAAI,UAAWF,GAAO4rD,YAAyB,MAAO,CAAEjmF,MAAOylF,CAC9D,YAAC5rD,MAAA,QAAK,UAAWQ,GAAO6rD,aAAezB,WAAW7kF,EAAQ+lF,CAAqB,EAAE31F,YAAc,UAC9F,MAAI,WAAWqqC,GAAO8rD,iBAAmBL,aAAiB,IAFpBlmF,CAGzC,EAGF,OACGi6B,MAAA,OAAI,UAAWQ,GAAO+rD,kBAAmB,MAAO,CAAEpmF,MAAO+iF,EAAUv8C,KAAMw8C,EAAYb,EAAe,GAClG/mB,WAAKxlE,IAAI,CAACI,EAAG4J,IAAUomF,EAAWpmF,CAAK,CAAC,CAC3C,EAEJ,6SCFA,SAAwBymF,GAAI,CAAE3F,WAAUM,kBAAiBsF,iBAAgBC,iBAAgB1kE,SAAe,EAAG,CACzG,MAAMu9C,EAAcnE,KACdpO,EAAaD,KACb,CAAEh9C,KAAMqqB,EAAe,QAAQ,EAE/Bo5B,EAAWxG,EAAaR,EAAWE,GACnC41B,EAAe9uB,EAAW,GAAK,IAE/B8wB,EAAmB9wB,EAAW8uB,EAAe,GAAKA,EAAe,GACjEC,EAAa/uB,EAAW,GAAK,IAG7B,CAAEmzB,cAAaC,iBAAgBC,gBAAeC,eAAcC,iBAAkB1E,GAAa,CAC/FxB,WACAyB,eACAC,aACD,EACKyE,EAAmBp4C,UAAQ,IAAM34C,OAAO2Q,YAAYi6E,EAAS9qF,IAAiB0B,GAAA,CAACA,EAAQb,GAAIa,EAAQ4qB,YAAY,CAAC,CAAC,EAAG,CAACw+D,CAAQ,CAAC,EAC9HoG,EAAar4C,UAAQ,IAAM34C,OAAO2Q,YAAYi6E,EAAS9qF,IAAiB0B,GAAA,CAACA,EAAQb,GAAIa,EAAQZ,KAAK,CAAC,CAAC,EAAG,CAACgqF,CAAQ,CAAC,EAGrH,OAAAnmD,OAAC,OAAI,UAAWM,EAAWR,GAAOyoD,IAAK1jB,GAAe/kC,GAAO0sD,UAAU,EACrE,UAACxsD,EAAA,YAAI,UAAWF,GAAO2sD,gBACrB,UAAAntD,EAAA,IAACuG,EAAO,WAAW/F,GAAO4sD,kBAAmB,QAAQ,YAAY,MAAOr3E,EAAE,KAAK,EAAG,MAAM,UAAU,QAAS82E,EAAe,KAAK,QAAO,QACrI3/C,GAAW,WAAW1M,GAAO+Q,YAAa,aAAYx7B,EAAE,YAAY,EAAG,QAAS,IAAM+2E,EAAa,EAClG,eAACz/C,EAAK,MAAMopB,EAAY,GAC1B,QACCvpB,GAAW,WAAW1M,GAAOgR,aAAc,aAAYz7B,EAAE,aAAa,EAAG,QAAS,IAAMg3E,EAAc,EACrG,eAAC1/C,EAAK,MAAMkpB,EAAa,GAC3B,GACF,EACAv2B,MAACqtD,GAAa,IAAIV,EAAY,EAAG,OAAS3sD,MAAAa,GAAA,CAAQ,UAAWL,GAAO8sD,UAAW,GAC7E,eAACC,GACKX,QACJ,eAAiBzmD,GAAWnG,MAAA2rD,GAAA,CAAY,GAAIxlD,EAAS,EACrD,cAAe,CAAC,CAAE1oC,QAAS+sF,WACxBH,GAEC,SAASG,EACT,iBAAAF,EACA,aAAAhC,EACA,QAAwBkF,GAAA,CACtBf,EAAee,EAAU5nE,IAAI,EACfinE,GAAA,EAEhB,MAAOI,EAAWzC,EAAW5kE,IAAI,GAAK,GACtC,UAAUuhE,iBAAiBvqF,MAAO4tF,EAAW5kE,IATxC4kE,IAAW5kE,IASkC,EAGtD,cAAe,CAAC,CAAEoC,QAASylE,EAAa1F,sBAAuB,CAC7D,MAAM1/D,EAAe2kE,EAAiBS,EAAYrvF,KAAK8pF,WAAW,EAC5DxhD,EAAWgnD,GAAS,IAAIj5F,KAAKg5F,EAAYrvF,KAAKgqF,KAAK,EAAG9B,GAAS,IAAI7xF,KAAQ4zB,CAAY,CAAC,EAE9F,OACG2X,MAAA2tD,GAAA,CAEC,QAASF,EACT,SAAA/mD,EACA,QAAU1e,GAAY,CAAC0e,GAAYgmD,EAAe1kE,EAAQ5pB,KAAKxB,GAAIorB,EAAQ5pB,KAAK8pF,WAAW,EAC3F,UAAUlgE,iBAASprB,MAAO6wF,EAAYrvF,KAAKxB,GAC3C,QAAS48D,EACT,iBAAAuuB,CANK0F,IAAYrvF,KAAKxB,EAOtB,GAEJ,CAEN,EACF,GAEJ,+HCpEMgxF,GAAkDA,CAAC,CAAExvF,KAAM,CAAE0F,SAAQxS,UAAS,CAAE,IAAM,YACpF,MAAEykB,GAAMqqB,EAAe,KAAK,EAG5B,CAAEngC,QAAO,EAAIF,EAAe,CAAC,CAAEE,aAAc,CAAEA,WAAWm7C,EAAO,EACjE,CAAEl7C,UAAaD,IAGf2kC,EAAW4O,KACXF,EAAWC,KACXtiC,EAAe2jC,UAAQ,IAAM,IAAI55C,gBAAgB4pC,EAAS36B,MAAM,EAAG,CAAC26B,EAAS36B,MAAM,CAAC,EACpFlN,EAAOkU,EAAaQ,IAAI,MAAM,IAAM,IACpCjU,EAAYyT,EAAaQ,IAAI,SAAS,GAAK7c,OAC3CsnF,EAAoBjrE,EAAaQ,IAAI,OAAO,EAC5CuqE,EAAkB/qE,EAAaQ,IAAI,KAAK,EACxCwqE,EAAoBhrE,EAAaQ,IAAI,WAAW,IAAM,IACtDiwE,EAASA,IAAM59E,GAAUwvC,EAAS/1C,GAAgBuG,EAAQtG,CAAS,CAAC,EAGpE,CAACkpF,CAAgB,EAAIjkD,WAASjlC,CAAS,EACvC,CAAEqpF,WAAUppF,UAASuqB,UAASs/D,oBAAqBb,GAAgB,CAAEn1F,WAAUo1F,mBAAkBC,iBAAkB,CAAC1K,EAAmB,EACvI,CAAEjnB,SAAQ0yB,QAAOE,4BAA6BJ,GAAe,CAAEx/D,UAASK,aAAc5qB,iBAAS4qB,aAAc,EAG7GwlE,EAAmBj5C,UAAQ,IAAMtjD,EAASgJ,KAAK,CAAC,CAAEwD,cAAcL,iBAASb,MAAOkB,CAAO,EAAG,CAACL,iBAASb,GAAItL,CAAQ,CAAC,EACjH,CAAEynE,cAAeN,GAAeo1B,CAAgB,EAEhDtc,EAAe38B,UAAQ,IACvB5sB,EACK,CACLnrB,MAAOmrB,EAAQnrB,MACfsD,YAAa6nB,EAAQ7nB,aAAe,GACpC8D,MAAO+jB,EAAQhjB,gBACf8oF,SAAU94B,GAAW0yB,GAASE,EAC9BmG,sBAAuBh1B,GAAc/D,GAAU4yB,GAI5C,CACL/qF,OAAOY,iBAASZ,QAAS,GACzBsD,aAAa1C,iBAAS0C,cAAe,GACrC8D,MAAOxG,iBAASuH,gBAChB8oF,SAAU,GACVC,sBAAuB,IAExB,CAACtwF,iBAASuH,gBAAiBvH,iBAAS0C,YAAa1C,iBAASZ,MAAOk8D,EAAY/D,EAAQ0yB,EAAOE,EAA0B5/D,CAAO,CAAC,EAE3HipD,EAAkBr8B,UAAQ,IAAM,CACpC,GAAI,CAACn3C,EACI,SAGT,GAAI,CAACuqB,EACH,aAAQs9D,GAAI,QAAM,GAAEvvE,WAAE,aAAa,CAAE,GAGvC,MAAM6S,EAAY,IAAIn0B,KAAKuzB,EAAQY,SAAS,EACtCW,EAAU,IAAI90B,KAAKuzB,EAAQuB,OAAO,EAClCykE,EAAoBC,GAAoB1kE,EAASX,CAAS,EAC1DpiB,EAAWkvB,GAAkBs4D,EAAmB,CAAEp4D,oBAAqB7f,EAAE,6BAA6B,EAAG,EACzGk6C,EAAa,CAACl6C,EAAE,aAAc,CAAEvjB,KAAMiL,EAAQZ,KAAO,GAAG2J,CAAQ,EAAEtK,OAAO1F,OAAO,EAEtF,OAEIkqC,EAAA,KAAAqU,WAAA,WAAA/U,MAACslD,IAAI,UAAW9kD,GAAOjmC,IAAK,OAAAy6D,EACzBA,WAASj/C,EAAE,aAAa,EAAI,GAAG2gB,GAAO9N,EAAW,GAAG,CAAC,MAAM8N,GAAOnN,EAAS,GAAG,CAAC,GAClF,EACAyW,MAACg/C,IAAc,WAAA/uB,EAAuB,CACxC,KAED,CAACxyD,EAASu3D,EAAQhtC,EAASjS,CAAC,CAAC,EAG1Bm4E,EAAqBA,CAAC3G,EAAmB/pF,IAAsB,CACnE8pF,EAAiB9pF,EAAW+pF,CAAS,GAGpC1kD,SAASg1B,kBAAoBh1B,SAASxzB,MAAMuyE,OAAO,CAAE14C,IAAK,EAAGqjB,SAAU,SAAU,GAG9E4hC,EAAsB3wF,GAAsB,CAChD8pF,EAAiB9pF,CAAS,GAYxB,GARJsoC,YAAU,IAAM,CAEVroC,GAAWqG,GAAUtG,IAAcC,EAAQb,IAC7C02C,EAAS/1C,GAAgBuG,EAAQrG,EAAQb,EAAE,EAAG,CAAE7H,QAAS,GAAM,GAEhE,CAACu+C,EAAUxvC,EAAQrG,EAASD,CAAS,CAAC,EAGrC,CAACC,GAAW,CAACqG,EACf,aAAQi7E,GAAU,IAKdgD,QAAe,GAAG30F,EAAIO,cAAc,GAAG4P,GAAgBuG,EAAQrG,EAAQb,EAAE,CAAC,GAC1EilF,EAAY,GAAGpkF,EAAQZ,KAAK,MAAMqD,CAAQ,GAE1CkxE,EAAcyc,EACjB7tD,EAAA,IAAAk+C,GAAA,CAAY,MAAO2P,EAAiBhxF,MAAO,YAAagxF,EAAiB1tF,YAAa,IAAK8+B,OAAO2F,SAASI,KAAK,EAC/G,KAGEmsC,EAAsB0c,EAExBntD,EAAA,KAAAqU,EAAA,oBAAC/U,MAAAi5B,GAAA,CACC,KAAM40B,EACN,QAASnzF,GAAU6C,GAAgBuG,EAAQtG,EAAW,EAAI,EAAG,CAC3DmsB,MAAO+9D,EAAQ1/D,iBAASY,UAAYh0B,OACpC8iE,IAAKgwB,EAAQ1/D,iBAASuB,QAAU30B,MACjC,GACD,SAAU,CAAC28E,EAAauc,QAAS,GAElCvc,EAAawc,uBACZ/tD,MAACuG,EACC,WAAW/F,GAAO4tD,cAClB,QAAS,IACP96C,EACE54C,GAAU6C,GAAgBuG,GAAU,GAAItG,EAAW,EAAI,EAAG,CACxDmsB,MAAO3B,iBAASY,UAChBylE,UAAW,CACZ,EACH,EAEF,MAAOt4E,EAAE,sBAAsB,EAC/B,UAAYiqB,EAAA,IAAAqN,EAAA,CAAK,KAAMgsB,GAAQ,CAElC,GACH,GACE,KAEJ,OAEI34B,EAAA,KAAAqU,WAAA,WAAArU,OAACilC,GACC,WAAA3lC,MAAC,SAAO6hD,SAAUA,CAAA,GACjB7hD,EAAA,YAAK,IAAI,YAAY,KAAM+hD,EAAa,QACxC,OAAK,MAAK,cAAc,QAAS8L,iBAAkB1tF,YAAY,QAC/D,OAAK,UAAS,iBAAiB,QAAS0tF,iBAAkB1tF,YAAY,EACtE6/B,EAAA,YAAK,SAAS,WAAW,QAAS6hD,EAAU,EAC5C7hD,EAAA,YAAK,SAAS,UAAU,QAAQ,cAAa,GAC7C6tD,iBAAkB5pF,QAAU+7B,MAAA,QAAK,SAAS,WAAW,SAAS6tD,IAAiB5pF,QAAjB4pF,cAAwB94F,QAAQ,UAAW,QAAY,IACrH84F,iBAAkB5pF,QAAU+7B,MAAA,QAAK,SAAS,sBAAsB,SAAS6tD,IAAiB5pF,QAAjB4pF,cAAwB94F,QAAQ,SAAU,SAAa,GACjIirC,MAAC,QAAK,SAAS,iBAAiB,QAAS6tD,WAAkB5pF,MAAQ,MAAQ,GAAG,EAC9E+7B,MAAC,QAAK,SAAS,kBAAkB,QAAS6tD,WAAkB5pF,MAAQ,MAAQ,GAAG,EAC9E+7B,EAAA,YAAK,KAAK,gBAAgB,QAAS6hD,EAAU,QAC7C,OAAK,MAAK,sBAAsB,QAASgM,iBAAkB1tF,YAAY,QACvE,OAAK,MAAK,gBAAgB,QAAS0tF,iBAAkB5pF,MAAM,EAC5D+7B,MAAC,QAAK,SAAS,WAAW,QAAS+hD,EAAahtF,QAAQ,UAAW,OAAO,EAAE,EAC5EirC,MAAC,QAAK,SAAS,sBAAsB,QAAS+hD,EAAahtF,QAAQ,SAAU,QAAQ,EAAE,EACtFirC,EAAA,YAAK,SAAS,gBAAgB,QAAQ,YAAW,EACjDA,EAAA,YAAK,SAAS,iBAAiB,QAAQ,OAAM,EAC7CA,EAAA,YAAK,SAAS,kBAAkB,QAAQ,MAAK,GAC7C6tD,oBAAkBzzF,OAAlByzF,eAAwBxzF,MAAM,KAAK0B,IAAKxB,GACtCylC,MAAA,QAAK,SAAS,eAAe,QAASzlC,GAAUA,IAElDszF,EAAoB7tD,MAAA,UAAO,KAAK,sBAAuB2iD,YAAoBkL,EAAkBzgG,EAAIO,cAAc,EAAE,EAAY,MAChI,EACC+yC,EAAA,KAAAswC,GAAA,CACC,MAAOO,EAAa10E,MACpB,YAAa00E,EAAapxE,YAC1B,MAAOoxE,EAAattE,MACpB,oBAAAktE,EACA,YAAAC,EACA,gBAAAH,EAEC4c,mBACEhR,GACC,MAAM9/E,GAAQg8D,EACd,QAAS2oB,EACT,KAAMmM,EACN,MAAOtc,EAAa10E,MACpB,gBAAAo0E,EACA,OAAQntE,EACR,kBAAAo4E,EACA,gBAAAF,EACA,kBAAAC,EAEH,EACAj8C,MAAA,OAAI,UAAWQ,GAAO8tD,aACrB,SAACtuD,EAAA,IAAAwsD,GAAA,CAAI,SAAA3F,EAAoB,eAAgBsH,EAAoB,eAAgBD,EAAoB,gBAAiBzwF,EAAS,QAAAuqB,CAAiB,GAC9I,GACF,CACF,GAEJ,EC1MaumE,GAAoB,IAAItM,GACxBuM,GAAmB,IAAIvM,GAGpCsM,GAAkBjM,gBAAgBsD,EAAY,EAC9C2I,GAAkBlM,sBAAsBuL,GAAsBl+F,GAAsBC,IAAI,EAGxF6+F,GAAiBlM,gBAAgBsD,EAAY,EAE7C,MAAM6I,GAAuBA,CAAC,CAAErxF,MAA4B,IAAM,CAE1DR,QADS4oE,KACG5oE,IAAM,GAElB,CAAE0lE,aAAYzvE,QAAOuL,QAAS8yD,GAAYt0D,EAAI,GAAI,GAAM,GAAMQ,CAAI,EAClE,CAAE2Y,KAAMqqB,EAAe,OAAO,EAEpC,GAAIkiC,EACF,aAAQyc,GAAU,IAGhBlsF,MAAS,CAACuL,EACZ,OAAQ4hC,MAAAE,GAAA,CAAU,MAAOnqB,EAAE,oBAAoB,CAAK,GAGlD3X,KAAK9M,SAASiE,SAAW,EACpB,OAAAyqC,MAACE,IAAU,MAAOnqB,EAAE,uBAAuB,EAAG,QAASA,EAAE,2BAA2B,CAAK,GAG5F24E,QAAStxF,IAAS/L,GAAqBI,aAAe+8F,GAAiBjM,UAAUnkF,CAAI,EAAImwF,GAAkBhM,UAAUnkF,CAAI,EAG7H,OAAA4hC,MAACu3B,GAAc,MAAI,GACjB,SAAAv3B,EAAA,IAAC0uD,GAAO,KAAAtwF,EAAY,UAAWkkE,CAAW,IADjC1lE,CAEX,CAEJ,ofC9Ca+xF,GAAmBv7F,OAAO,QAAQ,EAUzCw7F,GAASA,CAAC,CAAE7uD,WAAUgB,YAAW8tD,aAAa,SAAU7tB,cAA6C,IAAM,CAC/G,MAAM8tB,EAAkB9tD,EAAWR,GAAOolC,OAAQplC,GAAOquD,CAAU,EAAG9tD,EAAW,CAC/E,CAACP,GAAOwgC,YAAY,EAAGA,EACxB,EAGC,OAAAhhC,MAAC,SAAO,WAAW8uD,EACjB,SAAA9uD,EAAA,IAAC,OAAI,UAAWQ,GAAO7uC,UAAYouC,UAAS,EAC9C,EAEJ,EAEAgvD,GAAe/oD,GAA0B2oD,GAAkBC,EAAM,gHCjB3DI,GAA0BA,CAAC,CAAEl6F,MAAK,IAAM,CACtCm6F,QAASn6F,EAAKuF,MAAM,GAAG,EAAE0B,IAAKmzF,GAAUA,EAAM96D,MAAM,EACpD+6D,EAAgBF,EAAOlzF,IAAI,CAAC1F,EAAO0P,UAAWqqD,GAA8B,gBAAgB/5D,EAAO,OAAM,GAAC,IAAK44F,EAAO15F,OAAS,EAAI,KAAO,OAArEwQ,EAA8E,EACnJqpF,EAAUH,EAAO15F,OAAS,EAAIyqC,EAAA,IAAC,MAAG,UAAWQ,GAAO98B,KAAOyrF,UAAc,GAAQA,EAEvF,OAEGnvD,EAAA,cAAO,UAAWgB,EAAWR,GAAO6uD,OAAQ,CAAE,CAAC7uD,GAAO8uD,aAAa,EAAG15F,GAAsB,EAAIw5F,SAAQA,EAAA,CAE7G,ECpBMG,GAAWppD,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAK,EAAoB8G,gBAAoB,OAAQ,CAAE,EAAG,kBAAmB,KAAM,MAAQ,GAAmBA,EAAmB,cAAC,OAAQ,CAAE,EAAG,+CAAiD,EAAC,ECejUuiD,GAAaA,CAAC,CAAEzuD,YAAWmgC,cAAat6B,SAAe,IAAM,CAC3D,MAAE7wB,KAAMqqB,EAAe,MAAM,EAGjC,OAAAJ,EAAA,IAAC,MAAI,WAAWgB,EAAWR,GAAOhgC,KAAMugC,CAAS,EAC/C,SAACf,EAAA,IAAAkN,GAAA,CAAW,UAAW1M,GAAO4M,WAAY,aAAYr3B,EAAE,WAAW,EAAG,gBAAemrD,EAAa,QAAAt6B,EAChG,SAAA5G,EAAA,IAACqN,EAAK,MAAMoiD,EAAK,EACnB,EACF,EAEJ,ECdMC,GAAe,IAEfC,GAAmBA,CAAC,CAAE5uD,YAAW6uD,UAAsD,IAAM,CAC3FC,QAAS1qD,SAAoB,IAAI,EAEjC2qD,EAAgB5iG,GAA4B,CAC5C,IAAC2iG,EAAOh7D,QAAS,OAEfk7D,QAAUF,EAAOh7D,QAAQm7D,sBAAsB,EAI/CC,EAHc/iG,EAAMwe,OAAuBskF,sBAAsB,EAGrCrjD,KAAOkjD,EAAOh7D,QAAQq7D,WAAaH,EAAQpjD,KAGvEwjD,EAAWF,EAAiBF,EAAQ5pF,MAAQ,EAAI,EAAI8pF,EAAiBP,GAE3EG,EAAOh7D,QAAQs7D,SAAS,CAAExjD,KAAMwjD,EAAU5jC,SAAU,SAAU,GAGhE,aACG,MAAI,WAAWvrB,EAAWR,GAAO4vD,IAAKrvD,CAAS,EAAG,IAAK8uD,EACtD,eAAC,KAAG,SAASC,EACVF,SAAS7zF,MAAI,CAAC9F,EAAM8P,IAClBi6B,EAAA,UACC,eAACuG,EAAO,iBAAiB/F,GAAO6vD,UAAW,MAAOp6F,EAAKqH,MAAO,GAAIrH,EAAKqoC,GAAI,QAAQ,OAAM,GADlFv4B,CAET,CACD,EACH,CACF,EAEJ,kCC3BMuqF,GAAwBA,CAAC,CAAElqF,MAAK2tD,MAAM,OAAQD,QAAc,IAAM,CACtE,KAAM,CAACy8B,EAAeC,CAAmB,EAAI/tD,WAAiB,CAAE0G,OAAQv0C,OAAWuR,MAAOvR,OAAW,EAE/F67F,EAAiBvjG,GAAyD,CACxE,MAAEi8C,SAAQhjC,SAAUjZ,EAAMq7D,cACZioC,EAAA,CAAErnD,SAAQhjC,QAAO,EAC9B2tD,GAAA,EAIP,OAAA9zB,MAACye,IAAK,GAAG,IACP,eAAC,MAAI,WAAWje,GAAOF,KAAM,IAAAyzB,EAAU,IAAA3tD,EAAU,OAAQmqF,EAAcpnD,OAAQ,MAAOonD,EAAcpqF,MAAO,OAAQsqF,EAAe,QAAS38B,CAAO,EACpJ,EAEJ,ECfM48B,GAAcA,CAAC,CAAE3vD,YAAW7gC,WAAUywF,UAASC,eAAqB,IAAM,CACxE,MAAE76E,KAAMqqB,EAAe,MAAM,EAE/B,OAACuwD,EAGF3wD,MAAA,OAAI,UAAWgB,EAAWR,GAAOqwD,MAAO9vD,CAAS,EAChD,SAACf,MAAAswD,GAAA,CAAK,IAAKv6E,EAAE,WAAY,CAAE7V,WAAU,EAAG,IAAKywF,EAAS,OAAQ,IAAMC,EAAc,EAAI,EAAE,CAC1F,GALmB,IAOvB,ECpBME,GAAgBA,CAAC,CAAE/wD,WAAUgB,WAAqD,IAC/Ef,MAAC,OAAI,UAAWgB,EAAWR,GAAOuwD,QAAShwD,CAAS,EAAIhB,UAAS,GCApEixD,GAAiBA,CAAC,CAAEjwD,WAAkC,IAAM,CAC1D,MAAEhrB,KAAMqqB,EAAe,MAAM,EACnC,OACGJ,MAAA,KAAE,KAAK,WAAW,UAAWgB,EAAWR,GAAOywD,cAAelwD,CAAS,EACrEhrB,SAAEA,EAAA,iBAAiB,CACtB,EAEJ,wGCDam7E,GAAoB99F,OAAO,SAAS,EAQ3C+9F,GAAYA,CAAC,CAAEpxD,WAAU,GAAGoG,CAAsB,UACrDqG,GAAM,WAAU,OAAWrG,KACzBpG,UACH,GAGIqxD,GAAkCA,CAAC,CAAEC,SAAQvmD,UAAS/K,UAAS,IAAM,CACnE,MAAEhqB,KAAMqqB,EAAe,MAAM,EAEnC,OACGJ,MAAA6K,GAAA,CAAM,KAAMwmD,EAAQ,QAAAvmD,EAAkB,mBAAoBqmD,GACzD,SAAAzwD,OAAC,MAAI,WAAWF,GAAO8wD,QAAS,GAAG,UACjC,UAAAtxD,MAAC,OAAI,UAAWQ,GAAOsT,QACrB,SAAA9T,MAACkN,IAAW,QAASpC,EAAS,aAAY/0B,EAAE,YAAY,EACtD,SAAAiqB,MAACqN,GAAK,KAAMI,GAAM,CACpB,GACF,QACC,MAAI,WAAWjN,GAAO+wD,MAAO,QAASzmD,EACpC/K,WACH,EACF,EACF,EAEJ,EAEAyxD,GAAexrD,GAA0BkrD,GAAmBE,EAAO,kJCrCtDK,GAAuBr+F,OAAO,aAAa,EAclDs+F,GAAwCA,CAAC,CAC7Cp0F,QACAghC,KACAsI,UACA2T,SACAuN,UACA4M,WAAW,EACX/kC,SAAS,GACT6W,YACAtF,QAAQ,GACR,GAAGv9B,CACY,IAAM,CACf+lB,QAAO8c,EAAaxG,EAAA,WAAI,UAAWQ,GAAOgG,UAAYA,UAAU,GAAS,KACzEmrD,EAAgB5qD,GAAsB/F,EAAWR,GAAOoxD,WAAY,CAAE,CAACpxD,GAAOU,KAAK,EAAGA,GAAS,CAAE,CAACV,GAAO7Q,MAAM,EAAGoX,EAAU,EAElI,OAAIzI,SAEC4I,GACC,QAAAqT,EACA,QAAAuN,EACA,QAAAlhB,EACA,UAAW,CAAC,CAAEG,cAAe4qD,EAAa5qD,GAAYpX,CAAM,EAC5D,GAAA2O,EACA,SAAAo2B,EACA,IAAG,GAEFhrC,YACAsW,EAAA,YAAK,UAAWQ,GAAOljC,MAAQA,SAAMA,EAAA,CACxC,IAKDojC,OAAA,OAAI,KAAK,SAAS,OAAA6Z,EAAgB,QAAAuN,EAAkB,UAAW6pC,EAAahiE,CAAM,EAAG,QAAAiX,EAAkB,SAAA8tB,EAAoB,GAAI/wD,EAC7H+lB,YACAsW,EAAA,YAAK,UAAWQ,GAAOljC,MAAQA,SAAMA,EAAA,CACxC,GAEJ,EAEAu0F,GAAe7rD,GAA0ByrD,GAAsBC,EAAU,2LCrCnEI,GAAcA,CAAC,CAAEC,mBAAkB7wD,QAAQ,GAAO8wD,gBAAeC,mBAAkBC,YAAWC,SAAe,IAAM,CACjH,MAAEp8E,KAAMqqB,EAAe,MAAM,EAC7BkT,EAAWC,KACXJ,EAAoBphD,EAAU0uB,EAAiB,EAC/Ci0C,EAAWw9B,EAAY,EAAI,GAE3B3jB,EAAW7rC,cAAY,SAAY,CACnCsvD,GACYA,IAGhB,MAAM7+C,EAAkBlyB,SACxBqyB,EAAS,IAAK,CAAEv+C,QAAS,GAAM,CAC9B,GAACi9F,EAAe1+C,EAAUH,CAAiB,CAAC,EAE/C,OAEIzS,EAAA,KAAAqU,WAAA,WAAC/U,MAAA,MAAG,UAAWQ,GAAO4xD,cAAe,GAAID,EACtCp8E,WAAE,cAAc,CACnB,GACC2qB,EAAA,WAAG,UAAWF,GAAO6xD,UACpB,UAAAryD,MAAC,MACC,SAACA,MAAA0xD,GAAA,CACC,MAAAxwD,EACA,QAAS8wD,EACT,GAAI95F,GACJ,MAAO6d,EAAE,aAAa,EACtB,UAAYiqB,MAAAqN,EAAA,CAAK,KAAMohC,EAAiB,GACxC,SAAA/Z,EAAmB,CAEvB,GACCu9B,SACE,KACC,UAAAjyD,EAAA,IAAC0xD,IACC,MAAAxwD,EACA,QAAS8wD,EACT,GAAI75F,GACJ,MAAO4d,EAAE,eAAe,EACxB,UAAWiqB,EAAA,IAACqN,GAAK,KAAMqhC,EAAY,GACnC,SAAAha,CAAA,CAAmB,CAEvB,GAEDq9B,SACE,KACC,UAAA/xD,EAAA,IAAC0xD,IACC,MAAAxwD,EACA,QAAS8wD,EACT,GAAI55F,GACJ,MAAO2d,EAAE,cAAc,EACvB,UAAWiqB,EAAA,IAACqN,GAAK,KAAMshC,EAAiB,GACxC,SAAAja,CAAA,CAAmB,CAEvB,GAED10B,EAAA,UAAG,UAAWgB,EAAWR,GAAOyhB,QAAS,CAAE,CAACzhB,GAAOU,KAAK,EAAGA,EAAO,EACjE,SAAAlB,MAAC0xD,IAAW,MAAAxwD,EAAc,QAASqtC,EAAU,MAAOx4D,EAAE,YAAY,EAAG,UAAYiqB,MAAAqN,EAAA,CAAK,KAAMwhC,KAAU,SAAAna,CAAmB,GAC3H,GACF,CACF,GAEJ,8FCnEM49B,GAAqBA,CAAC,CAC1BpxB,cACAqxB,WACA5zF,aACAszF,mBACAO,eACAC,eAQF,IAAM,CACE,MAAE18E,KAAMqqB,EAAe,MAAM,EAC7BsyD,EAAkBriD,GAAY,gBAAgB,EAEhD,OAACkiD,EAEE5zF,QACJ,UAAQ,mBAAiB+zF,EACxB,SAAC1yD,MAAA8xD,GAAA,CAAY,UAAW5wB,EAAa,iBAAA+wB,EAAoC,QAASS,EAAiB,iBAAgB,IACrH,UAEC,MAAI,WAAWlyD,GAAOmyD,gBACrB,UAAA3yD,EAAA,IAACuG,EAAO,UAAU26B,EAAc,EAAI,GAAI,QAASsxB,EAAc,MAAOz8E,EAAE,SAAS,EAAG,UAAS,WAC5FwwB,EAAO,UAAU26B,EAAc,EAAI,GAAI,QAAQ,YAAY,MAAM,UAAU,QAASuxB,EAAe,MAAO18E,EAAE,SAAS,EAAG,UAAS,IACpI,IAVoB,IAYxB,EAEM68E,GAAmBA,IAAM,CACvB,MAAE78E,KAAMqqB,EAAe,QAAQ,EAC/B8/B,EAAiBvO,GAAkB,OAAO,EAC1Cre,EAAWC,KACX3O,EAAW4O,KAEX0tB,EAAcJ,GAAsBn6C,KAAMu6C,WAAW,EACrD,CACJjhE,OAAQ,CAAEO,OAAMwK,UAAS,EACzBtM,eACEqB,EAA2B4mB,IAAA,CAC7B1mB,OAAQ0mB,EAAM1mB,OACdvB,YAAaioB,EAAMjoB,WACnB,IACIC,EAAaiZ,EAAgB,CAAC,CAAErK,UAAW,CAAC,CAACA,CAAI,EAEjD0kF,EAAmB,CAAC,EAACjnF,WAAUwH,eAC/B+/E,EAAW7zF,IAAgBlQ,GAAaC,KAExCokG,EAAeA,IAAM/xB,GAAW1nD,SAAS,CAAE8nD,YAAa,GAAO,EAE/Dwb,EAA0BA,IAAM,CAC3B73C,IAAqBD,EAAU,OAAO,CAAC,GAG5CkuD,EAA2BA,IAAM,CAC5BjuD,IAAqBD,EAAU,gBAAgB,CAAC,GAG3D,OACGlE,OAAA0wD,GAAA,CAAQ,OAAQlwB,EAAa,QAAS2xB,EACrC,UAAAnyD,OAAC,KACC,WAACV,MAAA,MACC,eAAC0xD,GAAW,OAAO37E,EAAE,MAAM,EAAG,GAAG,IAAG,CACtC,GACCvV,EAAKzE,IAAI,CAAC,CAAEsB,YAAWD,OAAME,QAAOmW,QAAO,IACzCusB,EAAA,UACC,SAACA,EAAA,IAAA0xD,GAAA,CAAW,OAAOj+E,iBAASysD,KAAmB5iE,EAAO,GAAIH,GAAc,CAAEC,OAAMC,YAAW,CAAE,IADtFA,CAET,CACD,GACH,EACC2iC,MAAA,MAAG,UAAWQ,GAAOlJ,SAAU,GAChC0I,MAACsyD,IACC,YAAApxB,EACA,iBAAA+wB,EACA,SAAAM,EACA,WAAA5zF,EACA,aAAc+9E,EACd,cAAeoW,CAAyB,EAE5C,GAEJ,ECjGMC,GAAeA,IAAM,CACnB,MAAEh9E,KAAMqqB,EAAe,QAAQ,EAC/B,CAAElgC,WAAUC,aAAY,EAAIJ,EAAe,CAAC,CAAEE,YAAaA,EAAQm7C,EAAO,EAC1E43C,EAAkB7yF,GAAe4V,EAAE,qBAAqB,EAE9D,cACG4vD,GACC,WAAA3lC,MAAC,SAAO9/B,SAASA,CAAA,GAChB8/B,EAAA,YAAK,KAAK,cAAc,QAASgzD,EAAgB,EACjDhzD,EAAA,YAAK,SAAS,iBAAiB,QAASgzD,EAAgB,EACxDhzD,EAAA,YAAK,SAAS,WAAW,QAAS9/B,EAAS,EAC3C8/B,EAAA,YAAK,KAAK,gBAAgB,QAAS9/B,EAAS,EAC5C8/B,EAAA,YAAK,KAAK,sBAAsB,QAASgzD,EAAgB,CAC5D,GAEJ,ECpBMC,GAAa9sD,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,4OAA4O,CAAE,CAAC,ECA3aimD,GAAa/sD,GAA0B8G,EAAmB,cAAC,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,CAAO,EAAkB8G,gBAAoB,OAAQ,CAAE,EAAG,iKAAiK,CAAE,CAAC,uLCiBhWkmD,GAA6BA,CAAC,CAAExrF,QAAOyrF,gBAAeC,qBAAoBvoD,UAASwG,UAAgB,IAAM,CACvG,MAAEv7B,KAAMqqB,EAAe,QAAQ,EAC/BsP,EAAgBxiD,GAA8C,OAClEA,EAAMg/C,eAAe,EACrBoF,WAAUzc,QAAQ6V,SACjB7H,WAAS0J,cAAc,UAAU,IAAjC1J,QAAoD6H,OAAM,EAG7D,OACGhK,OAAA,OAAI,UAAWF,GAAO8yD,UACrB,UAAAtzD,EAAA,IAACqN,EAAK,MAAMg4B,GAAQ,UAAW7kC,GAAO9W,KAAK,EAC3CgX,OAAC,QAAK,UAAWF,GAAO+yD,WAAY,KAAK,SAAS,SAAU7jD,EAC1D,UAAA1P,MAAC,SAAM,QAAQ,kBAAkB,UAAU,SACxCjqB,WAAE,yBAAyB,EAC9B,EACAiqB,MAAC,QACC,WAAWQ,GAAOlZ,MAClB,GAAG,kBACH,KAAK,SACL,MAAO3f,EACP,SAAUyrF,EACV,UAAYlmG,GAAUA,EAAMgO,MAAQ,WAAY4vC,oBAChD,YAAa/0B,EAAE,+BAA+B,EAC9C,IAAKu7B,CAAS,GAEf3pC,EACEq4B,MAAAkN,GAAA,CAAW,UAAW1M,GAAOgzD,YAAa,aAAYz9E,EAAE,+BAA+B,EAAG,QAASs9E,EAClG,SAAArzD,MAACqN,GAAK,KAAMomD,GAAO,CACrB,GACE,MACN,CACF,GAEJ,EC5CMC,GAAqBA,CAAC,CAAE3zD,WAAUgB,YAAW,GAAGp9B,CAAsB,IAExEq8B,MAACkN,GAAW,WAAWlM,EAAWR,GAAO4M,WAAYrM,CAAS,EAAG,GAAIp9B,EAClEo8B,UACH,yDCME4zD,GAAeA,IAAM,CACnB,MAAE59E,KAAMqqB,EAAe,MAAM,EAC7BwE,EAAW4O,KACXogD,EAAiBzuD,SAAyB,IAAI,EAE9CllC,EAASF,EAAe,CAAC,CAAEE,YAAaA,CAAM,EAC9C,CAAE+K,WAAUyI,QAAWxT,IAEvB,CAAE8T,kBAAmB/I,GAAY,GACjCm3D,EAAsB/rE,GAAyBqd,iBAAQ2uD,gBAAgB,EACvEyxB,EAAgB,CAAC,CAAC9/E,GAAkBouD,EAEpC,CAAEpB,cAAaC,cAAa,EAAIF,GACpC,CAAC,CAAEC,cAAaC,eAAcC,eAAcE,uBAAwB,CAClEA,mBACAJ,cACAC,eACAC,iBAEF7lB,EACF,EACM,CAAEwmB,oBAAmBC,oBAAqBJ,GAAsB,EAEhEqyB,EAAgCA,IAAM,CACzBjyB,IAEjBf,GAAW1nD,SAAS,CAClB4nD,aAAc,GACf,GAGG+yB,EAA2BA,IAAM,CACrCjzB,GAAW1nD,SAAS,CAClB4nD,aAAc,GACde,cAAe,GAAGn9B,EAAShiC,QAAQ,GAAGgiC,EAAS36B,QAAU,EAAE,GAC5D,GASC,OANJ67B,YAAU,IAAM,CACVk7B,GAAgB4yB,EAAe/+D,SACjC++D,EAAe/+D,QAAQ6V,OACzB,EACC,CAACs2B,CAAY,CAAC,EAEZ6yB,EAEE7yB,EACLtgC,OAAC,MAAI,WAAWF,GAAOwzD,gBACrB,UAAAh0D,MAACmzD,IACC,MAAOpyB,EACP,cAA0Ba,KAAkB10E,EAAMwe,OAAOrV,KAAK,EAC9D,mBAAoB,IAAMurE,EAAkB,EAAE,EAC9C,SAAUgyB,EACV,QAASE,EAA8B,EAExC9zD,EAAA,IAAA0zD,GAAA,CAAmB,aAAY39E,EAAE,cAAc,EAAG,QAAS+9E,EAC1D,SAAC9zD,EAAA,IAAAqN,EAAA,CAAK,KAAM4mD,EAAU,GACxB,EACF,GAEAj0D,MAAC0zD,GAAmB,cAAY39E,EAAE,aAAa,EAAG,QAASg+E,EACzD,SAAA/zD,MAACqN,EAAK,MAAM6mD,GAAW,CACzB,GAlByB,IAoB7B,EChFMC,GAAehuD,GAA0B8G,gBAAoB,MAAO,CAAE,MAAO,6BAA8B,QAAS,YAAa,GAAG9G,GAAyB8G,gBAAoB,OAAQ,CAAE,KAAM,eAAgB,EAAG,2yBAA2yB,CAAE,CAAC,oCCQlgCmnD,GAAyBA,CAAC,CAAEr0D,WAAU,GAAGp8B,CAAK,UAE/C,MAAI,WAAW68B,GAAOytC,MAAO,GAAItqE,EAC/Bo8B,UACH,GCNEs0D,GAAqBA,CAAC,CAAE3gG,WAAUqsC,UAAe,IAAM,CAC3D,MAAMu0D,EAAanvD,WAEnBW,mBAAU,IAAM,CACRyuD,QAAernG,GAAsB,OACrC,CAAConG,EAAWz/D,SAAW,EAAE3nC,EAAMwe,kBAAkB8oF,OAIjDF,EAAWz/D,UAAY3nC,EAAMwe,QAAU,GAAC4oF,IAAWz/D,UAAXy/D,QAAoBroD,SAAS/+C,EAAMwe,UACpEhY,GACX,EAGFK,kBAAW,IAAM8uC,SAASnV,iBAAiB,QAAS6mE,CAAW,EAAG,CAAC,EAE5D,IAAM1xD,SAAS+I,oBAAoB,QAAS2oD,CAAW,GAC7D,CAAC7gG,CAAQ,CAAC,EAENq/C,GAAM0hD,aAAa10D,EAAU,CAClCqgB,IAAMl6C,GAAyB,CAC7BouF,EAAWz/D,QAAU3uB,CACvB,EACD,CACH,wCChBMwuF,GAA2BA,CAAC,CAAE30D,WAAUgB,YAAWswD,SAAQvmD,SAAe,IAE5E9K,EAAA,IAACwM,IAAM,KAAM6kD,EAAQ,SAAU,IAAK,UAAU,QAAQ,MAAO,CAAEpoD,SAAU,YACvE,SAAAjJ,EAAA,IAACq0D,GAAmB,UAAUvpD,EAC5B,SAAC9K,MAAA,OAAI,UAAWgB,EAAWR,GAAOm0D,QAAS5zD,CAAS,EAAIhB,UAAS,GACnE,CACF,iMCIE60D,GAAeA,CAAC,CAAEhuD,UAAS7F,YAAWkC,YAAW4xD,kBAAiB1zB,mBAAkB2zB,oBAAmBC,kBAAwB,IAAM,CACnI,MAAEh/E,KAAMqqB,EAAe,MAAM,EAE7B40D,EAAuBA,CAAC9nG,EAAgC+Q,IAAiB,CAC7E/Q,EAAMg/C,eAAe,EACrBtF,GAAWA,EAAQ3oC,CAAI,EAEL62F,GAAA,EAGdG,EAAmBA,IAAM,CACzB9zB,EACgB2zB,IAEDC,GACnB,EAGF,cACG,MACC,WAAC/0D,MAAA0zD,GAAA,CACC,cAAa/lD,OACb,gBAAc,iBACd,gBAAewzB,EACf,gBAAc,OACd,UAAApgC,EACA,aAAYhrB,EAAE,eAAe,EAC7B,QAASk/E,EACT,OAAQH,EAER,SAAC90D,MAAAqN,EAAA,CAAK,KAAM6nD,GAAS,CACvB,SACCR,GAAQ,QAAQvzB,EAAkB,QAAS2zB,EAC1C,SAAC90D,MAAAo0D,GAAA,CAAM,GAAG,iBACR,eAAC,KAAG,WAAW5zD,GAAO6xD,UACnBpvD,WAAUlnC,IAAI,CAAC,CAAEkC,OAAMqlC,iBAAkB,CAClCyD,SAAW8tD,iBAAiB52F,QAASA,EACrCk3F,EAAoBn0D,EAAWR,GAAO1Q,SAAU,CAAE,CAAC0Q,GAAO40D,cAAc,EAAGruD,EAAU,EAEzF,OAAA/G,EAAA,IAAC,MAAc,UAAWm1D,EAAmB,QAAoBH,KAAqB9nG,EAAO+Q,CAAI,EAC/F,SAAA+hC,MAACye,IAAK,QAASs2C,EAAkB,OAAQD,EAAmB,KAAK,IAAI,eAAc/tD,EAChFzD,SACHA,CAAA,IAHOrlC,CAIT,EAEH,CACH,EACF,GACF,CACF,GAEJ,EClEMo3F,GAAyBA,IAAM,CAC7B,MAAEl+E,QAASipB,EAAe,MAAM,EAChCl/B,EAAqBnB,EAA0B4mB,KAAMzlB,kBAAkB,EACvEigE,EAAmBL,GAAsBn6C,KAAMw6C,gBAAgB,EAE/DxgD,EAAsB5uB,EAAUgtB,EAAmB,EACnDu2E,EAAsBvjG,EAAUknB,EAAsB,EAEtD87E,EAAmBryD,cAAY,IAAMo+B,GAAW1nD,SAAS,CAAE+nD,iBAAkB,GAAM,EAAG,CAAE,GACxF2zB,EAAoBpyD,cAAY,IAAMo+B,GAAW1nD,SAAS,CAAE+nD,iBAAkB,GAAO,EAAG,CAAE,GAE1Fo0B,EAAwBt3F,GAAiB,CAC7CkZ,EAAKq+E,eAAev3F,CAAI,EACxB0iB,EAAoB1B,iBAAiBhhB,CAAI,EACzCq3F,EAAoBn8E,oBAAoBlb,CAAI,GAGxC42F,EAAkBjgD,UAAQ,IAAM1zC,EAAmB5G,KAAK,CAAC,CAAE2D,UAAWA,IAASkZ,EAAK9T,QAAQ,EAAG,CAAC8T,EAAK9T,SAAUnC,CAAkB,CAAC,EAEpIA,SAAmB3L,OAAS,EAAU,KAGxCyqC,MAAC40D,IACC,iBAAAG,EACA,kBAAAD,EACA,iBAAA3zB,EACA,QAASo0B,EACT,UAAWr0F,EACX,gBAAA2zF,CACA,EAEN,EClBMY,GAAWA,CAAC,CAAE92F,aAAYszF,mBAAkBnqD,OAAMgD,UAAS1V,SAAQsgE,qBAAoBC,qBAA2B,IAAM,CACtH,MAAE5/E,KAAMqqB,EAAe,MAAM,EAEnC,OAAKzhC,SAUF,MACC,WAAAqhC,MAAC0zD,IACC,aAAY39E,EAAE,gBAAgB,EAC9B,gBAAc,aACd,gBAAe+xB,EACf,gBAAc,OACd,QAAS1S,EACT,OAAQ0V,EAER,eAACuC,EAAK,MAAMohC,GAAc,CAC5B,GACCzuC,EAAA,IAAA00D,GAAA,CAAQ,UAAWl0D,GAAOm0D,QAAS,OAAQ7sD,EAAM,QAAAgD,EAChD,SAAC9K,MAAAo0D,GAAA,CAAM,GAAG,aACR,eAAC,MAAI,SAASh/D,EAAQ,OAAQ0V,EAC5B,SAAA9K,MAAC8xD,GAAY,WAAWhqD,EAAM,cAAegD,EAAS,iBAAkB,GAAM,iBAAAmnD,EAAoC,MAAK,IACzH,EACF,GACF,CACF,IAzBIvxD,EAAA,KAAAqU,WAAA,WAAC/U,MAAAuG,EAAA,CAAO,QAASmvD,EAAoB,MAAO3/E,EAAE,SAAS,EAAG,gBAAc,SAAQ,EAC/EiqB,EAAA,IAAAuG,EAAA,CAAO,QAAQ,YAAY,MAAM,UAAU,QAASovD,EAAqB,MAAO5/E,EAAE,SAAS,EAAG,gBAAc,QAAQ,EACvH,GAyBN,EC7CM6/E,GAAiBA,IAAM,CAC3B,MAAM5iC,EAAaD,KACbzf,EAAWC,KACX3O,EAAW4O,KAEXytB,EAAeH,GAAsBn6C,KAAMs6C,YAAY,EACvD,CACJhhE,OAAQ,CAAE+K,UAAS,EACnBtM,eACEqB,EAA2B4mB,IAAA,CAC7B1mB,OAAQ0mB,EAAM1mB,OACdvB,YAAaioB,EAAMjoB,WACnB,IACIC,EAAaiZ,EAAgB,CAAC,CAAErK,UAAW,CAAC,CAACA,CAAI,EAEjD0kF,EAAmB,CAAC,EAACjnF,WAAUwH,eAC/B+/E,EAAW7zF,IAAgBlQ,GAAaC,KAExConG,EAAgBnzD,cAAY,IAAMo+B,GAAW1nD,SAAS,CAAE6nD,aAAc,GAAM,EAAG,CAAE,GACjF60B,EAAiBpzD,cAAY,IAAMo+B,GAAW1nD,SAAS,CAAE6nD,aAAc,GAAO,EAAG,CAAE,GAEnFyb,EAA0BA,IAAMppC,EAASzO,EAAqBD,EAAU,OAAO,CAAC,EAChFkuD,EAA2BA,IAAMx/C,EAASzO,EAAqBD,EAAU,gBAAgB,CAAC,EAEhG,MAAI,CAAC2tD,GAAYv/B,GAAcR,EAAWE,GAAW,KAGlD1yB,MAAAy1D,GAAA,CACC,KAAMx0B,EACN,OAAQ40B,EACR,QAASC,EACT,WAAAn3F,EACA,iBAAAszF,EACA,mBAAoBvV,EACpB,oBAAqBoW,CACrB,EAEN,iECtBMvF,GAASA,IAAM,CACb,MAAEx3E,KAAMqqB,EAAe,QAAQ,EAC/B8/B,EAAiBvO,GAAkB,OAAO,EAE1C,CAAE1xD,QAAO,EAAIF,EACjB,CAAC,CAAEE,SAAQvB,cAAawC,yBAA0B,CAChDjB,SACAvB,cACAwC,uBAEFk6C,EACF,EACM,CAAE56C,OAAMF,SAAQJ,WAAUY,SAAYb,IACtC,CAAEuU,WAAYuhF,GAAqBj1F,GAAW,GAC9C0T,EAAauhF,GAAoBlhG,GAAczH,EAAIK,eAAe,EAElE,CAAEyzE,cAAaF,gBAAiBF,GAAuBn6C,IAAA,CAC3Du6C,YAAav6C,EAAMu6C,YACnBF,aAAcr6C,EAAMq6C,YACpB,IACIlsD,EAASxU,EAAOwU,OAEhBkhF,EAAcA,IAAMl1B,GAAW1nD,SAAS,CAAE8nD,YAAa,GAAM,EAE7D0uB,EAAW,CACf,CAAEtyF,MAAOyY,EAAE,MAAM,EAAGuoB,GAAI,KACxB,GAAG99B,EAAKzE,IAAI,CAAC,CAAEuB,QAAOD,YAAWD,OAAMqW,aAAc,CACnDnW,OAAOmW,iBAASysD,KAAmB5iE,EACnCghC,GAAInhC,GAAc,CAAEC,OAAMC,YAAWC,QAAO,GAC5C,CAAC,EAGC24F,EAAiB,CAAEC,MAAOh1B,EAAc,GAAKtsE,QAEnD,OACG8rC,OAAA,OAAI,UAAWF,GAAO21D,OACrB,UAAAn2D,EAAA,IAAC+yD,GAAY,IACbryD,OAAC,MAAI,IAAIu1D,EACP,UAAAv1D,OAACkuD,IAAO,aAAA5tB,EACN,UAAAhhC,EAAA,IAACgxD,GAAc,IACdhxD,MAAAwvD,GAAA,CAAW,YAAAtuB,EAA0B,QAAS80B,CAAY,SAC1DtF,GAAY,UAAAxwF,EAAoB,QAAS4U,EAAQ,cAAe,OAAgB,EACjFkrB,MAAC2vD,IAAiB,SAAAC,EAAmB,SACpCkB,GACC,WAAA9wD,EAAA,IAAC2zD,GAAY,UACZ0B,GAAsB,UACtBO,GAAc,KACjB,GACF,EACA51D,EAAA,IAAC,OAAK,IAAG,UAAU,UAAWQ,GAAOI,KAAM,SAAU,GACnD,SAACZ,EAAA,IAAAo2D,GAAA,CAAM,GACT,EACC,CAAC,CAAC5hF,GAAewrB,EAAA,IAAAgvD,GAAA,CAAO,KAAMx6E,EAAc,GAC/C,QACCo+E,GAAgB,GACnB,GAEJ,EC7DA,SAAwByD,IAAmB,CACzC,MAAM/iD,EAAWC,KACX3O,EAAW4O,KACX5tB,EAAOhO,EAAiB2oB,GAAO,sBAAOA,IAAEhzB,OAAFgzB,cAAQ3a,OAAS,SAAW2a,EAAEhzB,KAAKqY,KAAOhxB,OAAU,EAE1Fu+C,EAAoBphD,EAAU0uB,EAAiB,EAC/C,CAAEzvB,qBAAqBmiD,iBAAmBhyB,gBAAiB,GAG3Dm1E,EAAkBrxD,GAAiB,CAACnpC,EAAkClB,IAAyC,CACnH04C,EAASzO,EAAqBD,EAAU9oC,EAAMlB,CAAW,CAAC,EAC3D,EAEDkrC,YAAU,IAAM,CACV,CAAClgB,GAAQ,CAAC50B,GAEdmiD,WAAmBxtB,yBAAyB,CAC1CC,OACAC,UAAW,MAAOlzB,GAAY,SAC5B,GAAIA,EAAS,CACL4jG,QAAeloF,KAAK2I,MAAMrkB,CAAO,EAEvC,OAAQ4jG,EAAan5F,KAAI,CACvB,IAAKo5F,UACL,IAAKA,sBACL,IAAKA,mBACaF,EAAA,iBAAiBC,IAAaE,WAAbF,cAAuB5jG,OAAO,EAC/D,MACF,IAAK6jG,uBACH,MAAMj3D,GAAYqvB,kBAAkB,CAAC,cAAc,CAAC,EACpD0nC,EAAgB,IAAI,EACpB,MACF,IAAKE,oBACH,MAAMrjD,EAAkB1vB,sBACxB,MACF,IAAK+yE,iBACH,MAAMrjD,EAAkB1vB,sBACxB,MACF,IAAK+yE,+BACL,IAAKA,4BACI5xD,gBAASI,MAAOuxD,IAAaE,WAAbF,cAAuBG,gBAC9C,KAGJ,CACF,CACF,KAED,CAACvjD,EAAmBniD,EAAkBslG,EAAiB1wE,CAAI,CAAC,CACjE,CC9DA,MAAM+wE,GAAkBA,IAAM,CACtB,MAAEx/E,QAASipB,EAAe,EAC1BwE,EAAW4O,KAEXojD,EAAWh/E,EAAwB2oB,IAAA,CAAE1oB,QAAS0oB,EAAE1oB,QAAStK,KAAMgzB,EAAEhzB,OAAS6tC,EAAO,EAYnFw7C,OATaP,KAGjBvwD,YAAU,IAAM,CACdjD,SAASi1B,gBAAgBkV,aAAa,OAAQ71D,EAAK9T,QAAQ,GAC1D,CAAC8T,EAAK9T,QAAQ,CAAC,EAIduzF,EAASrpF,MAAQ,CAACqpF,EAAS/+E,SAAWonB,OAAO2F,SAASI,KAAKpyC,SAAS,QAAQ,EACvEotC,EAAA,IAACkvC,IAAS,GAAI,CAAE,GAAGtqC,EAAUiyD,KAAM,IAAM,QAAO,WAGjDT,GAAS,GACnB,ECZA,SAAwBU,IAAY,CAC5B,MAAE/gF,KAAMqqB,EAAe,OAAO,EAEpC,aACG2uC,GACC,UAAA/uC,MAACgvC,GAAM,eAAU2nB,GAAe,IAC9B,SAACj2D,OAAAsuC,GAAA,CAAM,QAAUhvC,EAAA,IAAAutD,GAAA,CAAS,GAAE,aAAcvtD,MAACwvB,OACzC,UAAAxvB,MAACgvC,IAAM,MAAK,GAAC,QAAShvC,MAAC6gC,IAAI,GAAI,EAC/B7gC,MAACgvC,GAAM,MAAMx3E,GAAe,cAAUi3F,GAAqB,MAAMp9F,GAAqBC,SAAS,CAAI,GACnG0uC,MAACgvC,GAAM,MAAMv3E,GAAmB,cAAUg3F,GAAqB,MAAMp9F,GAAqBI,aAAa,CAAI,SAC1Gu9E,GAAM,MAAMz3E,GAAY,QAASyoC,MAAC0lD,OAAqB,QACvD1W,GAAM,MAAMt3E,GAAoB,QAASsoC,MAACygD,OAAgB,QAC1DzR,GAAM,MAAMr3E,GAAa,QAASqoC,MAACqlC,OAAU,QAC7C2J,GAAM,MAAMl3E,GAAW,QAASkoC,MAACmuC,OAAQ,QACzCa,GAAM,MAAMp3E,GAAY,QAASooC,MAAC4wB,OAAS,QAC3Coe,GACC,MAAK,KACL,cAAU9uC,GAAU,OAAOnqB,EAAE,yBAA0B,WAAW,EAAG,QAASA,EAAE,6BAA8B,0BAA0B,IAAM,GAElJ,EACF,CACF,EAEJ,CC/BA,MAAMghF,GAAoBzvE,IACJ,OAAOA,GAAU,SAAWA,EAAMvyB,QAAQ,OAAQ,EAAE,EAAEsF,MAAM,GAAG,EAAI,IAEpE0B,IAAaa,IAAA,CAAEQ,KAAM,WAAYC,UAAWT,CAAK,IAGhEo6F,GAA0CA,CAAC,CAAE54F,MAAK,IAAM,CAE5D,MAAMyzC,EAAO+C,UAAQ,IAAMmiD,GAAiB34F,EAAKgiE,WAAahiE,EAAK9M,QAAQ,EAAG,CAAC8M,EAAK9M,SAAU8M,EAAKgiE,SAAS,CAAC,EAG7Gt6B,mBAAU,IAAM,QACbjD,SAASg1B,kBAAoBh1B,SAASxzB,MAAMuyE,OAAO,CAAE14C,IAAK,EAAG,GAC7DrG,WAAS0J,cAAc,uBAAuB,IAA9C1J,QAAiE6H,OAAM,EACvE,CAACtsC,CAAI,CAAC,SAGN,SACC,WAACsiC,EAAA,KAAAsvC,GAAA,CAAK,MAAO5xE,EAAK4G,gBAChB,UAACg7B,MAAAkwC,GAAA,CAAU,MAAO9xE,EAAKvB,KAAM,GAC5BmjC,MAAA+wC,GAAA,CAAgB,YAAa3yE,EAAK+B,WAAY,IACjD,EACA6/B,MAACggC,IAAU,KAAAnuB,EAAY,CACzB,GAEJ,ECKA,SAAwBolD,IAAwB,CAE/B5U,yBAAsB2U,GAAU7nG,GAAmBM,GAAG,CACvE,CCtCgBynG,YAAwBn2F,EAAgC0lB,EAAkC,CACxG,KAAM,CAACxV,EAAckzE,CAAe,EAAI7+C,GAAgB,EAGxDF,yBAAgB,IAAM,CACfrkC,IAKDkQ,EAAa0iD,IAAI3jE,EAAgB,IAAM,CAACy2B,GAAgBA,KAAiB1lB,iBAAU6V,uBACrFutE,EACS5jD,IACLA,EAAEplC,OAAOnL,EAAgB,EAElBuwC,GAET,CAAExrC,QAAS,GACb,EAIE0xB,GAAgBA,KAAiB1lB,iBAAU6V,sBAAuB3F,EAAaQ,IAAIzhB,EAAgB,IAAMy2B,GAC3G09D,EACS5jD,IACH/kC,MAAIxL,GAAkBy2B,CAAY,EAC7B8Z,GAET,CAAExrC,QAAS,GACb,IAED,CAAC0xB,EAAcxV,EAAckzE,EAAiBpjF,CAAQ,CAAC,EAEnD0lB,CACT,CCtBA,MAAM0wE,GAAqCrhG,GAErCshG,GAAiBA,CAAC,CAAEvkG,OAAmC,IACvDA,aAAiByiB,GACX0qB,MAAAE,GAAA,CAAU,MAAOrtC,EAAM0iB,QAAQ1Y,MAAO,QAAShK,EAAM0iB,QAAQpV,YAAa,SAAUtN,EAAM0iB,QAAQ+B,SAAU,MAAAzkB,CAAgB,GAE/HmtC,MAACE,IAAU,MAAArtC,CAAgB,GAiB9BwkG,GAAoBA,CAAC,CAAE1vF,OAAgC,IAAM,CAC3D,MAAEusC,YAAWrhD,QAAOuL,MAASuJ,IAG/B,OAAuBusC,QACjB9S,GAAiB,IAQtBV,EAAA,KAAAqU,WAAA,WAAuBliD,GAAUmtC,EAAA,IAAAo3D,GAAA,CAAe,MAAAvkG,CAAgB,GAChEskG,GAEyBrhG,EAC5B,GAEJ,EAGMwhG,GAAaA,CAAC,CAAE5oC,SAAsC,IAAM,SAChE,MAAM/mD,EAAQ8mD,GAAgBxvB,OAAO2F,SAASI,KAAM0pB,CAAO,EAG3DwoC,WAAwBvvF,IAAMvJ,OAANuJ,cAAY5G,UAAU4G,IAAMvJ,OAANuJ,cAAY8e,YAAY,EAEVuZ,MAACq3D,IAAkB,MAAA1vF,CAAgB,EACjG,EAEM4vF,GAAWA,IAAM,CACrB,KAAM,CAACC,EAASC,CAAU,EAAIh1D,WAAS,EAAK,EAG5CqD,YAAU,IAAM,CACQmxD,IACxB,EAAG,CAAE,GAECS,QAAkBh1D,cAAY,MAAOziC,GAA+B,CAEnEA,IAMLgvD,GAAoBhvD,CAAM,EAE1Bw3F,EAAW,EAAI,EACjB,EAAG,CAAE,GAEL,OAEKD,sCAAYV,GAAY,IACxBU,SAAYrqC,GAAe,IAE5BntB,MAACs3D,GAAW,SAASI,CAAgB,EACvC,GAEJ,ECjFA,SAAwBC,IAAM,CAC5B,KAAM,CAACC,EAAWC,CAAY,EAAIp1D,WAAgB,CAAEyR,UAAW,GAAM,EAQrE,OANApO,YAAU,IAAM,CACLvC,GAAA,EACNzsB,KAAK,IAAM+gF,EAAa,CAAE3jD,UAAW,EAAO,EAAC,EAC7Ch9B,SAAa2gF,EAAa,CAAE3jD,UAAW,GAAOrhD,MAAO5F,CAAY,EAAC,CACvE,EAAG,CAAE,GAED2qG,EAAU1jD,gBACJ9S,GAAiB,IAGvBw2D,EAAU/kG,OACZ2G,GAAS,MAAO,8BAA+B,CAAE3G,MAAO+kG,EAAU/kG,MAAO,EAIvEmtC,MAACK,IACC,MAAO,8BACP,QAAS,uGACT,MAAOu3D,EAAU/kG,KACjB,IAKJmtC,MAACF,GACC,UAAAE,MAAC83D,GACC,UAAA93D,EAAA,IAACsC,IACC,SAACtC,MAAAu3D,GAAA,CAAI,GACP,EACF,CACF,EAEJ,CCtDO,MAAMQ,GAA8BA,IAAM,CAC/C,IAAIC,EAAY,GAIPtqE,0BAAiB,UAAsBxgC,GAAA,CAC1CA,EAAMgO,MAAQ,OAAS,CAAC88F,IACdA,EAAA,GACH3oF,cAAKq8B,UAAUG,IAAI,YAAY,EAC1C,CACD,EAGQne,0BAAiB,YAAa,IAAM,CACvCsqE,IACUA,EAAA,GACH3oF,cAAKq8B,UAAU75B,OAAO,YAAY,EAC7C,CACD,CACH,qVCLAjkB,GAAa,CACXP,YAAam2C,SAEbl2C,iBAAkBk2C,2BAClBh2C,cAAeg2C,WAEf31C,0BAA2B21C,GAAgB31C,0BAC3CC,uBAAwB01C,GAAgB11C,uBAExCL,gBAAiB+1C,0EACjBz1C,cAAey1C,GACfx1C,kBAAmBw1C,GACnB71C,eAAgB61C,GAAgB71C,gBAAkBsxC,OAAO2F,SAASjL,MACpE,CAAC,EAEDo+D,KAEA,MAAME,GAAcp1D,SAAS0gC,eAAe,MAAM,EAE9C00B,GACWC,GAAWD,EAAW,EAC9BE,OAAQn4D,MAAA23D,GAAA,GAAM,EAEnB1vF,QAAQ05B,KAAK,qCAAqC,EAGpD,MAAMy2D,GAAUlsG,GAAW,CACzBE,UAAW,GACXC,cAAeA,IAAM+rG,GAAQ,EAAI,CACnC,CAAC","names":["registerSW","options","immediate","onNeedRefresh","onOfflineReady","onRegistered","onRegisteredSW","onRegisterError","wb","registerPromise","updateServiceWorker","_reloadPage","register","__vitePreload","Workbox","e","event","r","env","APP_VERSION","APP_API_BASE_URL","APP_API_ACCESS_BRIDGE_URL","APP_PLAYER_ID","APP_FOOTER_TEXT","APP_DEFAULT_LANGUAGE","APP_PUBLIC_URL","configureEnv","APP_DEFAULT_CONFIG_SOURCE","APP_PLAYER_LICENSE_KEY","APP_BODY_FONT","APP_BODY_ALT_FONT","PersonalShelf","ContinueWatching","Favorites","PersonalShelves","INTEGRATION","JWP","CLEENG","ACCESS_MODEL","AVOD","AUTHVOD","SVOD","VideoProgressMinMax","Min","Max","PLAYLIST_LIMIT","ADYEN_TEST_CLIENT_KEY","ADYEN_LIVE_CLIENT_KEY","LIVE_CHANNELS_REFETCH_INTERVAL","MEDIA_CONTENT_TYPE","series","episode","liveChannel","liveEvent","page","hub","PLAYLIST_CONTENT_TYPE","live","SHELF_LAYOUT_TYPE","hero","featured","OTT_GLOBAL_PLAYER_ID","CONFIG_QUERY_KEY","CONFIG_FILE_STORAGE_KEY","CACHE_TIME","STALE_TIME","CARD_ASPECT_RATIOS","MAX_WATCHLIST_ITEMS_COUNT","DEFAULT_FEATURES","canUpdateEmail","canSupportEmptyFullName","canChangePasswordWithOldPassword","canRenewSubscription","canExportAccountData","canDeleteAccount","canUpdatePaymentMethod","canShowReceipts","hasSocialURLs","hasNotifications","watchListSizeLimit","EPG_TYPE","jwp","viewNexa","APP_CONFIG_ITEM_TYPE","playlist","continue_watching","favorites","content_list","media","container","Container","defaultScope","skipBaseClassChecks","getModule","constructorFunction","required","module","getAll","Error","String","getAllModules","getNamedModule","name","getAllNamed","err","message","includes","error","assertModuleMethod","method","assertFeature","isEnabled","featureName","INTEGRATION_TYPE","Symbol","DETERMINE_INTEGRATION_TYPE","GET_CUSTOMER_IP","API_ACCESS_BRIDGE_URL","BROADCAST_CHANNEL","debounce","callback","wait","timeout","debounced","args","setTimeout","cancel","clearTimeout","throttle","func","limit","lastFunc","lastRan","throttled","timeSinceLastRan","Date","now","apply","undefined","unicodeToChar","text","replace","match","fromCharCode","parseInt","hexToRgb","color","indexOf","slice","length","g","b","calculateContrastColor","rgb","IS_DEVELOPMENT_BUILD","__dev__","IS_PREVIEW_MODE","__mode__","isContentType","item","contentType","toLowerCase","isTruthyCustomParamValue","value","isFalsyCustomParamValue","isTruthy","Boolean","MediaStatus","LIVE","VOD","SCHEDULED","isLiveEvent","playlistItem","isScheduledOrLiveMedia","mediaStatus","getMediaStatusFromEventState","eventState","scheduledStart","scheduledEnd","EventState","isPlayable","PATH_MEDIA","PATH_PLAYLIST","PATH_CONTENT_LIST","PATH_LEGACY_SERIES","PATH_SEARCH","PATH_ABOUT","PATH_USER_BASE","PATH_USER","RELATIVE_PATH_USER_ACCOUNT","RELATIVE_PATH_USER_FAVORITES","RELATIVE_PATH_USER_PAYMENTS","PATH_USER_ACCOUNT","PATH_USER_FAVORITES","PATH_USER_PAYMENTS","LogLevel","DEBUG","INFO","WARN","ERROR","FATAL","SILENT","LogTransporter","wrapError","makeLogFn","logLevel","scope","extra","forEach","transporter","log","logDebug","logInfo","logWarn","logError","getSeriesPlaylistIdFromCustomParams","seriesPlayListId","seriesPlaylistId","seriesId","isLegacySeriesFlow","isSeriesContentType","isSeries","isEpisode","episodeNumber","getLegacySeriesPlaylistIdFromEpisodeTags","seriesIdTag","tags","split","find","tag","test","isLiveChannel","createURL","url","queryParams","baseUrl","urlQueryString","urlSearchParams","URLSearchParams","entries","key","delete","formattedValue","Array","isArray","join","set","queryString","toString","createPath","originalPath","pathParams","path","map","segment","Object","filter","_","startsWith","isOptional","endsWith","paramName","paramValue","slugify","whitespaceChar","mediaURL","id","title","playlistId","play","episodeId","playlistURL","contentListURL","determinePath","type","contentId","label","liveChannelsURL","channelId","channel","legacySeriesURL","buildLegacySeriesUrlFromMediaItem","legacyPlaylistIdFromTags","legacyPlaylistIdFromCustomParams","mediaid","ApiError","constructor","code","getDataOrThrow","response","data","json","ok","status","apiMessage","isLocked","accessModel","isLoggedIn","hasSubscription","isItemFree","requiresSubscription","free","mediaOffers","some","offer","premier","filterMediaOffers","vendorPrefix","offerIds","reduce","offers","offerId","createStore","storeFn","store","subscribeWithSelector","create","useConfigStore","loaded","config","siteName","description","player","siteId","assets","content","menu","integrations","cleeng","useSandbox","clientId","assetId","styling","settings","additionalAllowedConfigSources","playerId","supportedLanguages","integrationType","getApolloClient","targetEndpoint","subscriptionEndpoint","httpLink","createHttpLink","uri","ApolloClient","link","cache","InMemoryCache","addTypename","KeywordSearchDocument","gql","GetItemDocument","GetCollectionDocument","PAGE_LIMIT","CATALOG_API_BASE_URL","ApiService","_dec","injectable","_class","generateAlternateImageURL","mediaId","playlistLabel","pathname","poster_fallback","fallback","parseDate","prop","date","isValid","parseISO","getTranslatedFields","language","defaultLanguage","transformedItem","transformContentList","contentList","list","rest","custom_params","media_id","feedid","sources","images","image","pubdate","transformMediaItem","transformPlaylist","relatedMediaId","ConfigStore","getState","offerKeys","keys","imageLabel","translatedFields","transformedMediaItem","cardImage","ImageProperty","channelLogoImage","backgroundImage","productIds","transformEpisodes","episodesRes","seasonNumber","episodes","page_limit","total","el","media_item","season_number","episode_number","pagination","tranformSeasonToPlayListItem","season","index","nodes","p","node","width","src","tranformTvShowToPlayListItem","tvshow","tranformEpisodeToPlayListItem","duration","videos","lengthInSeconds","hlsManifest","file","tranformMovieToPlayListItem","movie","isTrailer","trailerId","transformAxinomMediaItem","query_result","getMediaByWatchlist","mediaIds","token","media_ids","fetch","getMediaById","drmPolicyId","result","query","context","headers","variables","fetchPolicy","errors","console","transformedMediaItemAxinom","getMediaByIdWithPassport","planId","passport","plan_id","mediaItem","getSeries","params","episodes_count","seasons","season_episode","transformedSerie","series_id","episode_count","season_count","total_duration","getSeriesByMediaIds","tvshowId","getEpisodes","pageOffset","pageLimit","afterId","page_offset","after_id","serie","push","getSeasonWithEpisodes","getAdSchedule","credentials","doKeyWordSearch","keyword","search","transformedCollection","movies","tvshows","getPlaylistById","collection","cardImageAspectRatio","items","relationType","getContentList","getContentSearch","search_query","searchTerm","StorageService","AccountService","features","schema","array","object","shape","string","progress","number","WatchHistoryService","_dec2","target","inject","_dec3","_dec4","_dec5","Reflect","metadata","Function","_dec6","apiService","storageService","PERSIST_KEY_WATCH_HISTORY","accountService","getWatchHistoryItems","continueWatchingList","ids","watchHistoryItems","watchHistoryItemsDict","fromEntries","getWatchHistorySeriesItems","mediaWithSeries","seriesIds","uniqueSerieIds","Set","seriesItems","seriesItemsDict","acc","seriesItemId","getWatchHistory","user","savedItems","getWatchHistoryFromAccount","getWatchHistoryFromStorage","parentSeries","historyItem","createWatchHistoryItem","serializeWatchHistory","watchHistory","persistWatchHistory","_a","updateWatchHistory","history","setItem","JSON","stringify","videoProgress","getMaxWatchHistoryCount","_b","saveItem","seriesItem","watchHistoryItem","updatedHistory","unshift","splice","validateWatchHistory","validateSync","getItem","GenericEntitlementService","getToken","body","jwt","Authorization","getMediaToken","host","entitled","INPLAYER_TOKEN_KEY","INPLAYER_IOT_KEY","CONTENT_TYPES","form","JWPAPIService","useSandboxEnv","setup","getBaseUrl","setToken","refreshToken","expires","tokenObject","removeToken","Promise","all","removeItem","isAuthenticated","performRequest","responseType","withAuthentication","keepalive","includeFullResponse","searchParams","formData","innerKey","innerValue","append","endpoint","resp","resParsed","get","patch","put","post","remove","__publicField","isCommonError","JWPEntitlementService","getJWPMediaToken","configId","app_config_id","getEntitledPlans","FavoriteService","PERSIST_KEY_FAVORITES","getFavorites","favoritesList","getFavoritesFromAccount","getFavoritesFromStorage","playlistItems","createFavorite","serializeFavorites","persistFavorites","updateFavorites","getMaxFavoritesCount","validateFavorites","contentSchema","notRequired","boolean","backgroundColor","nullable","mixed","oneOf","custom","defined","menuSchema","filterTags","featuresSchema","recommendationsPlaylist","searchPlaylist","cleengSchema","monthlyOffer","yearlyOffer","default","jwpSchema","stylingSchema","highlightColor","headerBackground","footerText","configSchema","analyticsToken","adSchedule","adDeliveryMethod","adConfig","banner","of","adScheduleUrls","xml","contentSigningService","contentProtection","drm","defaultPolicyId","AppError","payload","ConfigService","CONFIG_HOST","DEFAULT_CONFIG","enrichConfig","updatedContent","assign","i18next","t","getDefaultConfig","validateConfig","validate","strict","formatSourceLocation","source","loadConfig","configLocation","mosaicConfig","SettingsService","isValidConfigSource","UNSAFE_allowAnyConfigSource","defaultConfigSource","initialize","then","ini","parse","iniString","catch","i18n","getI18n","errorPayload","helpLink","playerLicenseKey","apiAccessBridgeUrl","getConfigSource","configKey","storedSource","useAccountStore","loading","subscription","transactions","entitledPlan","activePayment","customerConsents","publisherConsents","publisherConsentsLoading","pendingOffer","setLoading","getAccountInfo","customerId","customer","useWatchHistoryStore","playlistItemsLoaded","continueWatchingPlaylistId","getPlaylist","getDictionaryWithEpisodes","dict","getDictionaryWithSeries","WatchHistoryController","watchHistoryService","restoreWatchHistory","setState","CheckoutService","SubscriptionService","useCheckoutStore","requestedMediaOffers","subscriptionOffers","switchSubscriptionOffers","selectedOffer","defaultOfferId","order","paymentMethods","setRequestedMediaOffers","setOrder","setPaymentMethods","FormValidationError","values","flat","determineSwitchDirection","currentPeriod","period","findDefaultCardMethodId","methodName","CheckoutController","IntegrationType","GetCustomerIP","getCustomerIP","checkoutService","subscriptionService","initialiseOffers","getOffers","svodOfferIds","subscriptionSwitches","getSubscriptionSwitches","getSubscriptionOfferIds","chooseOffer","initialiseOrder","getPaymentMethods","paymentMethodId","createOrderArgs","country","createOrder","responseData","updateOrder","couponCode","paymentWithoutDetails","captchaValue","orderId","rejectedReason","directPostCardPayment","cardPaymentPayload","referrer","returnUrl","createAdyenPaymentSession","isInitialPayment","initialAdyenPayment","paymentMethod","customerIP","finalizeAdyenPayment","details","paymentData","paypalPayment","successUrl","waitingUrl","cancelUrl","errorUrl","paymentWithPayPal","redirectUrl","getOffer","available","toOfferId","switchSubscription","switchDirection","switchSubscriptionPayload","changeSubscription","accessFeeId","subscriptionId","updatePayPalPaymentMethod","currentPaymentId","updatePaymentMethodWithPayPal","deletePaymentMethod","paymentDetailsId","addAdyenPaymentDetails","finalizeAdyenPaymentDetails","getEntitlements","useFavoritesStore","warning","favoritesPlaylistId","setWarning","clearWarning","hasItem","favoriteItem","FavoritesController","favoritesService","restoreFavorites","concat","toggleFavorite","maxCount","clear","AccessService","generateAccessTokens","refreshAccessTokens","refresh_token","useAccessStore","ACCESS_TOKENS","AccessController","_dec7","accessService","generateOrRefreshAccessTokens","accessTokens","existingAccessTokens","getAccessTokens","shouldRefresh","auth","getAuthData","setAccessTokens","getTime","removeAccessTokens","AccountController","accessController","favoritesController","watchHistoryController","entitlementService","refreshEntitlements","loadUserData","getAccount","logout","updateUser","getFeatures","prototype","hasOwnProperty","call","validateInputLength","email","updatedUser","updateCustomer","getUser","afterLogin","login","password","clearLoginState","_c","consentsValues","consents","errorMessage","updateConsents","updatedConsents","updateCustomerConsents","getCustomerConsents","getPublisherConsents","getCaptureStatus","updateCaptureAnswers","capture","updatedCustomer","resetPassword","resetUrl","customerEmail","changePasswordWithOldPassword","oldPassword","newPassword","newPasswordConfirmation","changePasswordWithToken","resetPasswordToken","changePasswordWithResetToken","updateSubscription","unsubscribeUrl","reloadSubscriptions","retry","updateCardDetails","cardName","cardNumber","cvc","expMonth","expYear","currency","getActivePayment","checkEntitlements","accessGranted","plans","plan","access_model","delay","resolve","finally","activeSubscription","getActiveSubscription","getAllTransactions","retryDelay","pendingSwitchId","getSubscriptionSwitch","switchOffer","switchId","exportAccountData","getSocialLoginUrls","getSocialUrls","deleteAccountData","deleteAccount","getReceipt","transactionId","fetchReceipt","subscribeToNotifications","uuid","onMessage","Number","firstName","lastName","getSandbox","sandbox","registration","allSettled","AppController","configService","settingsService","loadAndValidateConfig","configSource","defaultConfig","state","merge","initializeApp","calculateIntegrationType","activatedIntegrationTypes","previousValue","getIntegrationType","configState","getApiAccessBridgeUrl","EpgService","isFulfilled","input","reason","EpgController","parseSchedule","demo","scheduleDemo","epgService","getEpgService","programs","transformProgram","program","generateDemoPrograms","getSchedule","schedule","fetchSchedule","catchupHours","scheduleType","toLocaleLowerCase","service","getSchedules","today","startDate","startTime","utcStartDate","UTC","getUTCFullYear","getUTCMonth","getUTCDate","daysDelta","differenceInDays","idx","addDays","toJSON","endTime","viewNexaEpgProgramSchema","desc","icon","start","stop","parseData","toISOString","ViewNexaEpgService","XMLParser","n","scheduleUrl","xmlParserOptions","ignoreAttributes","attributeNamePrefix","res","tv","programme","AUTHENTICATION_HEADER","jwEpgProgramSchema","chapterPointCustomProperties","JWEpgService","Headers","scheduleToken","PromiseQueue","queue","getLength","enqueue","reject","promises","AUTH_PERSIST_KEY","tokensSchema","accessToken","isValidTokens","candidate","isValidSync","getTokenExpiration","decodedToken","jwtDecode","exp","CleengService","optional","BroadcastChannel","isRefreshing","expiration","tokens","logoutCallback","getNewTokens","newTokens","handleBroadcastMessage","action","setTokens","sendBroadcastMessage","postMessage","authenticate","getAccessTokenOrThrow","Accept","restoreTokensFromStorage","maybeRefreshAccessToken","persistInStorage","clearTokens","tokensString","accessTokenIsExpired","hasTokens","refreshTokens","getAccessToken","getLocales","addEventListener","formatCustomer","fullName","externalData","formatPublisherConsent","consent","defaultValue","placeholder","enabledByDefault","version","CleengAccountService","cleengService","publisherId","handleErrors","getCustomerIdFromAuthData","getCustomer","_url","cleengConfig","localesResponse","locale","authData","CleengCheckoutService","locales","ipAddress","createOrderPayload","getOrder","paypalPayload","attemptAuthentication","CleengSubscriptionService","getSubscriptions","getTransactions","getPaymentDetails","paymentDetails","active","offset","getFiltersFromConfig","menuItem","filterPlaylist","generatePlaylistPlaceholder","playlistLength","fill","_value","genre","rating","tracks","formatConsentValues","publisherConsent","customerConsent","isCustomRegisterField","formatConsents","extractConsentValues","formatConsentsFromValues","checkConsentsFromValues","consentsErrors","isNotEmptyConsent","formatConsentToRegisterField","val","formatConsentsToRegisterFields","deepCopy","obj","parseAspectRatio","parseTilesDelta","posterAspect","parts","Math","floor","JW_TERMS_URL","JWPAccountService","parseJson","formatFavorite","favorite","formatHistoryItem","formatAccount","account","full_name","created_at","createdAt","regDate","toLocaleString","first_name","surname","lastUserIp","_logoutFn","jwpConfig","InPlayerEnv","InPlayer","setConfig","terms","field","default_value","getTermsConsent","existingAccountData","formatUpdateAccount","newAnswers","old_password","password_confirmation","merchant_uuid","branding_id","client_id","grant_type","username","access_token","formatAuth","Notifications","isSubscribed","unsubscribe","trim","firstNameTrimmed","lastNameTrimmed","isCaptureEnabled","shouldCaptureBeDisplayed","answer","enabled","termsUrl","termsLink","current","savedHistory","currentFavoriteIds","payloadFavoriteIds","favoritesData","watchHistoryData","subscribe","onOpen","socialState","base64Encode","redirect","socialResponse","social_urls","formatDurationTag","seconds","minutesAbbreviation","ceil","formatDuration","hoursAbbreviation","hours","minutes","round","hoursString","minutesString","formatPrice","price","Intl","NumberFormat","style","format","formatSeriesMetaString","formatVideoSchedule","formatLocalizedDateTime","formatLocalizedTime","formatLocalizedDate","DateTimeFormat","day","month","year","hour","minute","separator","getOfferPrice","customerPriceInclTax","customerCurrency","customerCountry","isSVODOffer","JWPCheckoutService","cardPaymentProvider","formatPaymentMethod","method_name","provider","logoUrl","formatEntitlements","expiresAt","formatOffer","formatOfferId","offerCurrency","amount","offerTitle","access_type","quantity","freePeriods","trial_period","planSwitchEnabled","plan_switch_enabled","formatOrder","totalPrice","priceBreakdown","offerPrice","discountAmount","discountedPrice","paymentMethodFee","taxValue","taxRate","requiredPaymentDetails","success","parseOfferId","origin","access_fee","payment_method","voucher_code","iFrameCardPayment","access_fee_id","updatedOrder","discount","applied","periods","discount_duration","expires_at","card_name","cardholderName","exp_month","cardExpMonth","exp_year","cardExpYear","cvv","cardCVC","return_url","item_id","JWPSubscriptionService","named","formatCardDetails","card","card_type","account_id","zeroFillExpMonth","paymentGateway","paymentMethodSpecificParams","holderName","variant","lastCardFourDigits","cardExpirationDate","formatTransaction","transaction","purchasedAmount","charged_amount","transaction_token","transactionDate","trxToken","trx_token","offerType","item_type","item_title","offerPeriod","transactionPriceExclTax","transactionCurrency","currency_iso","discountedOfferPrice","offerPriceExclTax","applicableTax","transactionPriceInclTax","consumer_id","customerLocale","customerIpCountry","payment_method_name","formatActiveSubscription","action_type","subscription_id","nextPaymentAt","next_rebill_date","nextPaymentPrice","subscription_price","nextPaymentCurrency","unsubscribe_url","formatGrantedSubscription","hasAccess","cards","inplayer_token","isCleengIntegrationType","isJwpIntegrationType","bind","toSelf","to","whenTargetNamed","toDynamicValue","toConstantValue","ConsoleTransporter","level","warn","LocalStorageService","prefix","getStorageKey","usePrefix","window","localStorage","btoa","base64Decode","atob","getOverrideIP","queryClient","QueryClient","defaultOptions","queries","staleTime","refetchOnWindowFocus","retryOnMount","QueryProvider","children","jsx","QueryClientProvider","ErrorPage","learnMoreLabel","useTranslation","ErrorPageWithoutTranslation","logo","s","styles","errorPage","jsxs","box","main","Spinner","size","className","classNames","buffer","small","large","LoadingOverlay","transparentBackground","inline","loadingOverlay","transparent","fixed","variantAriaMap","info","FormFeedback","visible","formFeedback","hidden","ariaLive","AriaAnnouncerContext","createContext","useAriaAnnouncer","announce","useContext","AriaAnnouncerProvider","announcement","setAnnouncement","useState","useCallback","secondsToMilliseconds","createPortal","document","filterSupportedLanguages","definedLanguages","enabledLanguages","languages","languageCode","foundLanguage","NAMESPACES","DEFINED_LANGUAGES","displayName","initI18n","import","use","I18NextHttpBackend","LanguageDetector","initReactI18next","init","supportedLngs","fallbackLng","returnEmptyString","ns","defaultNS","fallbackNS","interpolation","escapeValue","detection","caches","lookupLocalStorage","react","useSuspense","createURLFromLocation","location","modalURLFromLocation","u","modalURLFromWindowLocation","href","useEventCallback","fnRef","useRef","useLayoutEffect","useQueryParam","useSearchParams","useCountdown","durationSeconds","intervalSeconds","completeHandler","timerRef","countdown","setCountdown","useEffect","count","createInjectableComponent","identifier","DefaultComponent","props","isBound","OverriddenComponent","ButtonIdentifier","Button","startIcon","fullWidth","disabled","busy","onClick","activeClassname","buttonClassName","isActive","button","centerAbsolute","NavLink","Button$1","Welcome","onCloseButtonClick","onCountdownCompleted","welcome","PaymentFailed","triggerReflow","element","scrollTop","Animation","createStyle","open","onOpenAnimationEnd","onCloseAnimationEnd","keepMounted","nodeRef","setStatus","hasOpenedBefore","setHasOpenedBefore","timeout2","openEvent","closeEvent","Grow","transition","transform","canUseDOM","createElement","scrollbarSize","recalc","scrollDiv","position","top","height","overflow","appendChild","offsetWidth","clientWidth","removeChild","addScript","script","async","onload","onerror","removeBodyScrolling","marginRight","overflowY","restoreBodyScrolling","from","querySelectorAll","dialog","removeProperty","originElement","useModal","restoreFocus","activeElement","focus","handleOpen","handleClose","Modal","onClose","centered","role","AnimationComponent","animationContainerClassName","ariaAttributes","modalRef","mouseEventTargetsPairRef","downTarget","upTarget","closeModalEvent","onAnimationEndHandler","classList","close","removeEventListener","add","openModalEvent","showModal","keyDownHandler","contains","preventDefault","closeHandler","closeAnimationEndHandler","clickHandler","ReactDOM","querySelector","Slide","direction","directions","left","right","bottom","opacity","zIndex","SvgClose","React.createElement","IconButton","ariaProps","iconButton","Icon","IconComponent","ModalCloseButton","modalCloseButton","Close","Dialog","testId","useForm","initialValues","validationSchema","validateOnBlur","onSubmit","onSubmitSuccess","onSubmitError","touched","setTouched","setValues","submitting","setSubmitting","setErrors","validationSchemaError","setValidationSchemaError","reset","validateField","formValues","validateSyncAt","ValidationError","setValue","handleChange","HTMLInputElement","checked","newValues","handleBlur","abortEarly","newErrors","inner","every","handleSubmit","resetValue","useToggle","initialState","forceValue","SvgVisibility","SvgVisibilityOff","generateId","suffix","randomId","random","useOpaqueId","override","setId","HelperText","helperId","helperText","FormField","renderInput","editing","formFieldClassName","formField","helperTextId","isTextArea","_props","multiline","Input","textAreaRef","inputRef","leftControl","rightControl","inputProps","inputType","containerClassName","commonProps","rows","readOnly","control","TextField","textField","fieldProps","PASSWORD_REGEX","PasswordStrength","strength","labels","passwordStrength","passwordStrengthBar","passwordStrengthFill","PasswordField","showToggleView","showHelperText","viewPassword","toggleViewPassword","React","Visibility","VisibilityOff","DeleteAccountModal","accountController","enteredPassword","setEnteredPassword","navigate","useNavigate","useLocation","resetForm","useMutation","onSuccess","onError","handleCancel","heading","disclaimer","warningBox","buttons","isLoading","mutate","paragraph","stacked","FinalizePayment","checkoutController","redirectResult","orderIdQueryParam","setErrorMessage","paymentSuccessUrl","useMemo","checkPaymentResult","decodeURI","Fragment","useCheckAccess","intervalRef","intervalCheckAccess","interval","iterations","setInterval","clearInterval","WaitingForPayment","center","UpgradeSubscription","typeToAnnounce","pending","DeleteAccountPasswordWarning","proceedToAddPasswordClickHandler","formContainer","passwordButtonsContainer","SvgCreditcard","SvgPaypal","PaymentMethodForm","onPaymentMethodChange","renderPaymentMethod","updateSuccess","cardPaymentMethod","paypalPaymentMethod","paymentMethodsInputs","radio","paymentMethodLabel","CreditCard","PayPal","payPal","Adyen","configuration","checkoutElementRef","checkoutRef","session","checkout","AdyenCheckout","mount","unmount","adyen","submit","AdyenPaymentDetails","setProcessing","setPaymentError","isSandbox","setSession","finalize","finalizePaymentDetails","handleAction","adyenConfiguration","showPayButton","environment","clientKey","paymentMethodsConfiguration","hasHolderName","holderNameRequired","onAdditionalDetails","component","UpdatePaymentMethod","paymentMethodIdQueryParam","parsedPaymentMethodId","paymentError","setPaymentMethodId","processing","handlePaymentMethodChange","toPaymentMethodId","handlePayPalSubmit","EditCardDetailsForm","onCancel","cancelButton","CreditCardCVCField","onChange","formatCVC","clearValue","CreditCardExpiryField","formatExpirationDate","cardIssuers","visa","mastercard","maestro","amex","discover","diners","dinersclub","unionpay","hiper","CreditCardNumberField","onBlur","cardIssuer","setCardIssuer","formatCreditCardNumber","issuer","Payment","fns","cardType","nextValue","cardTypeWrapper","EditCardPaymentForm","setUpdatingCardDetails","mutateCardDetails","shallow","cardExpiry","validateCardNumber","validateCardExpiry","validateCardCVC","onSettled","expiry","cardExpiryVal","paymentForm","columns","EditCardDetails","updatingCardDetails","EditPasswordForm","showOldPasswordField","showResetTokenField","validationError","onResendEmailClick","resendLink","passwordConfirmation","ResetPassword","resetPasswordTokenParam","emailParam","passwordSubmitHandler","resetToken","passwordForm","matches","resendEmailClickHandler","RenewSubscriptionForm","onConfirm","infoBox","confirmButton","SubscriptionRenewed","RenewSubscription","renewed","setRenewed","setError","renewSubscriptionConfirmHandler","CancelSubscriptionForm","SubscriptionCancelled","expiresDate","CancelSubscription","cancelled","setCancelled","expirationDateFormatted","cancelSubscriptionConfirmHandler","ResetPasswordForm","onReset","ForgotPasswordForm","ConfirmationForm","onBackToLogin","loggedIn","forgotPasswordForm","notSure","Link","resetPasswordSubmitting","setResetPasswordSubmitting","cancelClickHandler","backToLoginClickHandler","resetPasswordClickHandler","emailSubmitHandler","emailForm","useCheckout","onUpdateOrderSuccess","onSubmitPaymentWithoutDetailsSuccess","onSubmitPaypalPaymentSuccess","onSubmitStripePaymentSuccess","mutationKey","mutationFn","submitPaymentWithoutDetails","submitPaymentPaypal","submitPaymentStripe","isError","isSubmitting","SvgArrowLeft","DialogBackButton","dialogBackButton","ArrowLeft","RecaptchaField","forwardRef","siteKey","ref","captcha","ReCaptcha","CheckoutForm","onBackButtonClick","couponFormOpen","couponInputValue","couponFormError","couponFormApplied","couponFormSubmitting","onCouponInputChange","onCloseCouponFormClick","onCouponFormSubmit","onRedeemCouponButtonClick","captchaSiteKey","recaptchaRef","getOfferPeriod","getFreeTrialText","freeDays","orderTitle","orderInfo","orderTitleMargin","orderBillingDate","orderPrice","couponForm","redeemCoupon","couponInput","orderTotals","couponCell","divider","NoPaymentRequired","noPaymentRequired","PaymentForm","onPaymentFormSubmit","parent","formError","AdyenInitialPayment","setUpdatingOrder","getCaptchaValue","useRecaptcha","executeAsync","Checkout","adyenUpdating","setAdyenUpdating","setCouponFormOpen","showCouponCodeSuccess","setShowCouponCodeSuccess","chooseOfferUrl","welcomeUrl","closeModalUrl","backButtonClickHandler","mutateAsync","successUrlPaypal","isStripePayment","isAdyenPayment","isPayPalPayment","useOffers","isInitialisationLoading","useQuery","queryKey","queryFn","hasMediaOffers","hasSubscriptionOffers","hasPremierOffers","mediaOffer","hasMultipleOfferTypes","defaultOfferType","SvgCheckCircle","OfferBox","selected","renderListItem","renderOption","periodString","secondBenefit","offerDivider","offerBenefits","CheckCircle","isMonthly","durationPeriod","durationAmount","ChooseOfferForm","showOfferTypeSwitch","onBackButtonClickHandler","selectedOfferType","selectedOfferId","subtitle","offerGroupSwitch","offerGroupLabel","ChooseOffer","isSwitch","isPendingOffer","checkoutUrl","upgradePendingUrl","upgradeSuccessUrl","upgradeErrorUrl","visibleOffers","Select","defaultLabel","optionsStyle","select","option","Dropdown","lang","Checkbox","checkboxLabel","fieldClassName","checkbox","row","Radio","optionValue","optionLabel","parseDateString","dateString","isNaN","padLeft","clamp","min","max","parseBlurValue","parsed","parseInputValue","DateField","onFocus","parsedDate","getDate","getMonth","getFullYear","hiddenInputRef","dateFieldClassName","dateField","handleFocus","currentTarget","handleKeyDown","previousElementSibling","triggerChangeEvent","nativeInputValueSetter","getOwnPropertyDescriptor","newValue","inputEvent","Event","bubbles","dispatchEvent","nextSibling","nextElementSibling","hiddenInput","PersonalDetailsForm","fields","questions","onQuestionChange","questionValues","questionErrors","renderQuestion","question","firstNameLastName","companyName","address","address2","city","postCode","phoneNumber","birthDate","continue","yupConditional","PersonalDetails","setQuestionValues","setQuestionErrors","nextStep","hasOffers","questionChangeHandler","submitHandler","requiredMessage","address1","removeEmpty","customAnswers","questionId","useSocialLoginUrls","urls","CustomRegisterField","optionsList","getResourceBundle","linkClassName","RouterLink","RegistrationForm","consentValues","onConsentChange","consentErrors","htmlLang","formatConsentLabel","sanitizedLabel","DOMPurify","sanitize","hasHrefOpenTag","hasHrefCloseTag","__html","scrollIntoView","behavior","block","customFields","consentError","Registration","setConsentValues","setConsentErrors","handleChangeConsent","socialLoginURLs","LoginForm","Login","PUBLIC_VIEWS","AccountModal","viewParam","viewParamRef","isPublicView","toLogin","view","renderForm","EditPassword","shouldShowBanner","dialogSize","testConfigs","jwpAuth","jwpSvod","jwpAuthNoWatchlist","basicNoAuth","noStyling","inlinePlayer","cleengAuthvod","cleengAuthvodNoWatchlist","svod","configs","applicationController","useBootstrapApp","onReady","useQueryClient","invalidateQueries","isSuccess","refetch","refetchInterval","cacheTime","setThemingVariables","root","bodyFont","bodyAltFont","setProperty","bodyColor","ConfirmationDialog","RootErrorPage","useRouteError","renderer","marked","Renderer","externalLink","targetAttr","relAttr","titleAttr","attributes","inlineRenderer","gfm","MarkdownComponent","markdownString","sanitizedHTMLString","dirtyHTMLString","parseInline","ADD_ATTR","dangerouslySetInnerHTML","markdown","About","about","placeholderData","getPlaylistQueryOptions","usePlaceholderData","setQueryData","usePlaylist","queryOptions","isPlaylistType","pType","usePlaylists","rowsToLoad","playlistQueries","useQueries","isPlaceholderData","useTranslationKey","SvgChevronLeft","SvgChevronRight","addMediaQueryListChangeListener","mediaQuery","addListener","removeMediaQueryListChangeListener","removeListener","XS_MATCH_MEDIA","matchMedia","SM_MATCH_MEDIA","MD_MATCH_MEDIA","LG_MATCH_MEDIA","Breakpoint","xs","sm","md","lg","xl","getScreenSize","useBreakpoint","breakpoint","setBreakpoint","changeEventHandler","SvgLock","SvgToday","setWidth","w","Map","resolveImageURL","imgUrl","requestUrl","has","redirected","Image","onLoad","alt","setSrc","resolvedImage","Image$1","memo","CardIdentifier","Card","onHover","isCurrent","currentLabel","headingLevel","tabIndex","cardClassName","aspectRatioClass","posterClassNames","poster","isSeriesItem","isLive","isScheduled","renderTag","Today","scheduled","titleContainer","posterImage","meta","lock","Lock","progressContainer","progressBar","tileBreakpoints","featuredTileBreakpoints","ShelfIdentifier","Shelf","onCardHover","visibleTilesDelta","tilesToShow","renderTile","isVisible","renderRightControl","chevron","ChevronRight","renderLeftControl","ChevronLeft","renderPagination","pages","pageIndex","dots","dot","shelf","loadingTitle","TileSlider","slider","CYCLE_MODE_RESTART","Shelf$1","InfiniteScrollLoader","infiniteScrollLoader","Fade","willChange","useScrolledDown","end","handleScroll","scrollPosition","scrollingElement","documentElement","listenerElement","passive","TruncatedText","maximumLines","truncatedText","maxHeight","WebkitLineClamp","lineClamp","display","notifyOnChangeProps","useEntitlement","isPreEntitled","mediaEntitlementQueries","refetchOnMount","isMediaEntitled","isMediaEntitlementLoading","isEntitled","SvgPlay","StartWatchingButton","playUrl","startWatchingLabel","handleStartWatchingClick","Play","progressRail","HeroShelfMetadata","isMobile","isWatchable","showStartWatchingButton","visibility","HeroShelfBackground","onTransitionEnd","HeroShelfBackground$1","calculateDotSize","itemIndex","range","sizeSmall","isAnimatingLeft","isAnimatingRight","dotPosition","semiEdgeLeft","edgeLeft","newDotLeft","semiEdgeRight","edgeRight","newDotRight","HeroShelfPagination","indexIn","nextIndex","nextIndexIn","setIndex","animationDuration","placeholderCount","playlistWithPlaceholders","placeholders","dotsList","dotPlaceholder","movementTotal","abs","transformDiv","transitionDiv","ariaLabel","dotActive","HeroSwipeSlider","hasLeftItem","hasRightItem","renderItem","renderLeftItem","renderRightItem","isSwipeAnimation","onSwipeLeft","onSwipeRight","movementRef","x","y","containerRef","swipeAction","setSwipeAction","handleTouchStart","touches","clientX","clientY","handleTouchMove","movementX","changedTouches","movementY","currentSwipeAction","stopPropagation","maxLeft","innerWidth","maxRight","limitedMovementX","handleTouchEnd","velocity","velocityTreshold","swipeSlider","swipeSliderMobile","HeroShelf","setNextIndex","posterRef","setDirection","animationPhase","setAnimationPhase","setIsSwipeAnimation","slideTo","toIndex","isSwiping","handleSlideLeft","handleSlideRight","handleSwipeLeft","handleSwipeRight","handleBackgroundAnimationEnd","propertyName","isAnimating","directionFactor","getBackgroundStyle","side","backgroundX","getMetadataStyle","pointerEvents","leftItem","rightItem","renderedItem","background","fade","fade2","chevronLeft","chevronRight","INITIAL_ROWS_TO_LOAD","ROWS_TO_LOAD_STEP","ShelfList","setRowsToLoad","translationKey","watchHistoryDictionary","playlists","shelfList","InfiniteScroll","shelfImageAspectRatio","translatedTitle","isHero","layoutType","isFeatured","shelfContainer","Home","useUIStore","searchQuery","searchActive","userMenuOpen","sideBarOpen","languageMenuOpen","useFirstRender","firstRenderRef","useDebounce","time","debounceRef","useSearchQueryUpdater","updateSearchPath","encodeURIComponent","updateSearchQuery","resetSearchQuery","returnPage","preSearchPage","useAppContentSearch","appContentSearchQuery","useSearch","hasAppContentSearch","appContentSearch","playlistQuery","isFetching","scrollIntoViewThrottled","focusedElement","LayoutGrid","columnCount","renderCell","getCellKey","currentRowIndex","setCurrentRowIndex","currentColumnIndex","setCurrentColumnIndex","gridRef","rowCount","focusGridCell","rowIndex","columnIndex","gridCell","getElementById","elementToFocus","preventScroll","ctrlKey","maxRow","isOnFirstColumn","isOnLastColumn","isOnFirstRow","isOnLastRow","maxRightLastRow","nextRowIndex","previousRowIndex","gridCellStyle","cell","INITIAL_ROW_COUNT","LOAD_ROWS_COUNT","defaultCols","CardGridIdentifier","CardGrid","cols","currentCardItem","currentCardLabel","hasMore","getUrl","loadMore","visibleTiles","setRowCount","defaultLoadMore","defaultHasMore","CardGrid$1","Search","headingId","firstRender","useParams","getURL","subHeading","Helmet","header","SvgAccountCircle","SvgBalanceWallet","SvgExit","SvgFavorite","Alert","actionsOverride","titleOverride","FormSection","panelHeaderClassName","editButton","saveButton","sectionId","formState","activeSectionId","formErrors","isBusy","setFormState","FormContext","isEditing","oldState","arr","onEdit","flexBox","controls","Form","isDirty","i","Account","panelClassName","exportData","isAlertVisible","setIsAlertVisible","exportDataMessage","registerSource","register_source","isSocialLogin","shouldAddPassword","has_password","termsConsents","nonTermsConsents","nonTerms","confirmationPassword","translateErrors","flatMap","formSection","editPasswordClickHandler","section","textWithButtonContainer","Trans","onClearFavoritesClick","useSubscriptionChange","isUpgradeOffer","activeSubscriptionId","updateSubscriptionMetadata","SvgExternalLink","OfferSwitch","isCurrentOffer","pendingDowngradeOfferId","isPendingDowngrade","offerSwitchContainer","activeOfferSwitchContainer","offerSwitchInfoContainer","currentPlanHeading","activeCurrentPlanHeading","toUpperCase","offerSwitchPlanContainer","nextBillingDate","paymentFrequency","VISIBLE_TRANSACTIONS","activePaymentDetail","onShowAllTransactionsClick","showAllTransactions","onShowReceiptClick","onUpgradeSubscriptionClick","offerSwitchesAvailable","changeSubscriptionPlan","onChangePlanClick","setSelectedOfferId","setIsUpgradeOffer","isExternalPaymentProvider","paymentProvider","paymentProviderLink","subscriptionDetailsId","billingHistoryId","hiddenTransactionsCount","hasMoreTransactions","isGrantedSubscription","isChangingOffer","setIsChangingOffer","onCompleteSubscriptionClick","onEditCardDetailsClick","onCancelSubscriptionClick","onRenewSubscriptionClick","getTitle","showChangeSubscriptionButton","pendingSwitch","explanation","upgradeSubscription","changePlanContainer","o","changePlanButtons","changePlanCancelButton","paypal","cardDetails","editCard","transactionItem","transactionDetails","transactionPrice","parseFloat","ExternalLink","processBillingReceipt","receipt","Blob","URL","createObjectURL","setAttribute","click","newWindow","htmlString","opener","write","EXTERNAL_PAYMENT_METHODS","STORE_LINKS","apple","google","roku","PaymentContainer","setShowAllTransactions","isLoadingReceipt","setIsLoadingReceipt","handleUpgradeSubscriptionClick","handleShowReceiptClick","panel","panelHeader","User","clearFavoritesOpen","setClearFavoritesOpen","isLargeScreen","onLogout","leftColumn","AccountCircle","Favorite","BalanceWallet","logoutLi","Exit","mainColumn","Routes","Route","AccountComponent","Navigate","createVideoMetadata","metaData","episodesLabel","createPlaylistMetadata","createLiveEventMetadata","useMedia","SvgPlayTrailer","Filter","forceDropdown","showFilterRow","filterRow","filterDropDown","dropDown","Hero","posterFade","HeroTitle","CollapsibleText","divRef","doesFlowOver","setDoesFlowOver","expanded","setExpanded","clippablePixels","scrollHeight","offsetHeight","collapsibleText","textContainer","collapsed","HeroDescription","VideoDetails","primaryMetadata","secondaryMetadata","startWatchingButton","shareButton","favoriteButton","trailerButton","videoDetails","metaContainer","buttonBar","VideoDetailsInline","TitleComponent","inlinePlayerMetadata","VideoListItem","activeLabel","imageLoaded","setImageLoaded","posterImageClassNames","listItem","VideoList","onListItemHover","activeMediaId","VideoLayout","inlineLayout","relatedTitle","filters","setFilter","filterMetadata","currentFilter","defaultFilterLabel","isTablet","hasFilters","showFilters","renderFilters","filtersInline","renderRelatedVideos","grid","relatedVideosGrid","relatedVideosGridTitle","relatedVideosList","relatedVideosListHeader","relatedVideosListTitle","videoInlineLayout","videoDetailsInline","relatedVideos","PROGRESSIVE_SAVE_INTERVAL","useWatchHistoryListener","queuedWatchProgress","watchHistoryEnabled","maybeSaveWatchProgress","handleTimeUpdate","toFixed","isFinite","timestamp","on","off","visibilityListener","visibilityState","useWatchHistory","usePlaylistItemCallback","startDateTime","endDateTime","applyLiveStreamOffset","timeParam","allSources","useLegacyStandaloneAds","adScheduleId","useAds","adConfigId","useAdConfigFlow","isAdScheduleLoading","client","useContentProtection","genericEntitlementService","jwpEntitlementService","signingConfig","urlSigning","isAccessBridgeEnabled","signingEnabled","keepPreviousData","queryResult","useProtectedMedia","contentProtectionQuery","isGeoBlocked","m3u8","isFetched","isVODManifestType","sourceUrl","extensions","ext","isBCLManifestType","getSources","userId","hasServerAds","isBCLManifest","isVODManifest","isDRM","attachPassportToSourceWithDRM","updateUrl","urlString","playready","widevine","fairplay","processSpcUrl","useMediaSources","Player","adsData","onPlay","onPause","onComplete","onUserActive","onUserInActive","onBeforePlay","onFirstFrame","onRemove","onPlaylistItem","onPlaylistItemCallback","onNext","onBackClick","feedId","autostart","playerElementRef","playerRef","loadingRef","backClickRef","libLoaded","setLibLoaded","jwplayer","startTimeRef","handleBeforePlay","handlePlay","handlePause","handleComplete","handleUserActive","handleUserInactive","handleFirstFrame","playerContainer","getContainer","playPauseButton","handleRemove","handlePlaylistItem","handlePlaylistItemCallback","handleNextClick","handleBackClick","handleReady","attachEvents","setPlaylistItemCallback","detachEvents","scriptUrl","loadPlaylist","currentItem","getPlaylistItem","load","starttime","initializePlayer","playerOptions","advertising","showCountdown","timeSlider","showAdMarkers","aspectratio","displaytitle","displayHeading","displaydescription","floating","mode","mute","playbackRateControls","pipIcon","repeat","cast","stretching","PlayerErrorState","GEO_BLOCKED","PlayerError","PlayerContainer","liveEndDateTime","liveFromBeginning","liveStartDateTime","isAdsLoading","playableItem","playerInstance","setPlayerInstance","seek","InlinePlayer","playable","loginButtonClickHandler","buyLabel","paywall","Cinema","isPlaying","setIsPlaying","overlayHasFocus","setOverlayHasFocus","userActive","setUserActive","handleNext","cinemaContainer","cinema","overlayFade","playerOverlay","playerContent","backButton","TrailerModal","SvgCheck","SvgShare","copyToClipboard","inputElement","execCommand","blur","ShareButton","hasShared","setHasShared","onShareClick","navigator","share","Check","Share","SvgFavoriteBorder","FavoriteButton","isFavorite","onFavoriteButtonClick","FavoriteBorder","Loading","VideoMetaData","secondsToISO8601","timeOnly","getUTCHours","getUTCMinutes","getUTCSeconds","isoString","is12HourClock","toLocaleTimeString","getFiltersFromSeries","sort","filterSeries","getNextItem","seriesPlaylist","findIndex","getEpisodesInSeason","generateLegacySeriesMetadata","numberOfEpisodes","numberOfSeasons","generateLegacyEpisodeJSONLD","episodeMetadata","episodeCanonical","seriesMetadata","uploadDate","partOfSeries","LegacySeries","playTrailer","setPlayTrailer","isSeriesPlaylistLoading","isPlaylistError","isEpisodeLoading","isTrailerLoading","trailerItem","selectedItem","selectedItemImage","isFavoritesEnabled","seasonFilter","setSeasonFilter","firstEpisode","filteredPlaylist","episodesInSeason","nextItem","goBack","toEpisode","scroll","pageTitle","pageDescription","canonicalUrl","PlayTrailer","ScreenMap","defaultScreen","definitions","predicate","registerByContentType","registerDefault","getScreen","screen","MediaStaticPage","mediaStaticPage","generateMovieJSONLD","movieCanonical","thumbnailUrl","generateSeriesMetadata","generateEpisodeJSONLD","MediaMovie","isPlaylistLoading","related_media_id","season_title","useSeries","failureCount","getNextPageParam","useEpisodes","fetchNextPage","hasNextPage","useInfiniteQuery","pageParam","lastPage","useSeriesLookup","firstSeries","useNextEpisode","useFirstEpisode","MediaSeries","seriesMedia","setSearchParams","isSeriesDataLoading","seriesError","isSeriesDictionaryLoading","episodeInSeries","isFirstEpisodeLoading","fetchNextEpisodes","hasNextEpisodesPage","watchHistoryArray","episodeInProgress","handleInlinePlay","playEpisode","MediaLiveChannel","liveChannelsId","MediaEpisode","isMediaLoading","isSeriesIdLoading","isSeriesMediaLoading","useLiveEvent","Tag","StatusIcon","MediaEvent","mediaScreenMap","MediaScreenRouter","MediaScreen","PlaylistGrid","categories","shouldShowFilter","programIsLive","isPast","isFuture","programIsVod","programIsFullyWatchable","liveStreamCatchupHours","maxStartTime","subHours","isAfter","getLiveProgram","useLiveChannels","initialChannelId","enableAutoUpdate","epgController","channels","autoUpdate","setAutoUpdate","setChannel","setProgram","intervalId","selectedChannel","updatedChannel","updatedProgram","setActiveChannel","programId","useLiveProgram","setIsLive","isVod","setIsVod","isWatchableFromBeginning","setIsWatchableFromBeginning","calculateStatus","isBaseTimeFormat","formatChannel","formatProgram","channelUuid","till","since","usePlanByEpg","sidebarWidth","itemHeight","epgChannels","epgPrograms","theme","makeTheme","startOfToday","endDate","startOfDay","startOfTomorrow","useEpg","epg","dayWidth","isSidebar","isTimeline","isLine","primary","grey","white","green","loader","teal","purple","pink","bg","scrollbar","border","thumb","gradient","blue","timeline","EpgChannelItem","channelItemWidth","epgChannelBox","epgChannel","epgChannelLogo","ProgramItem","compact","formatTime","set12HoursTimeFormat","isMinWidth","useProgram","sinceTime","tillTime","showImage","showLiveTagInImage","epgProgramBox","epgProgram","epgProgramImage","epgLiveTag","epgProgramContent","epgProgramTitle","epgProgramText","EpgTimeline","hourWidth","numberOfHoursInDay","offsetStartHoursRange","dividers","useTimeline","renderDividers","timelineDivider","renderTime","timelineBox","timelineTime","timelineDividers","timelineContainer","Epg","onChannelClick","onProgramClick","getEpgProps","getLayoutProps","onScrollToNow","onScrollLeft","onScrollRight","catchupHoursDict","titlesDict","firstFrame","timelineControl","timelineNowButton","EpgContainer","epgSpinner","Layout","toChannel","programItem","isBefore","EpgProgramItem","PlaylistLiveChannels","channelMediaItem","canWatch","canWatchFromBeginning","durationInSeconds","differenceInSeconds","handleProgramClick","handleChannelClick","catchupButton","beginning","epgContainer","playlistScreenMap","contentScreenMap","PlaylistScreenRouter","Screen","HeaderIdentifier","Header","headerType","headerClassName","Header$1","Footer","chunks","chuck","footerContent","wrapper","footer","testFixMargin","SvgMenu","HeaderMenu","Menu","scrollOffset","HeaderNavigation","navItems","navRef","focusHandler","navRect","getBoundingClientRect","targetScrollTo","scrollLeft","scrollTo","nav","navButton","Logo","imgDimensions","updateImgDimensions","onLoadHandler","HeaderBrand","logoSrc","setLogoLoaded","brand","HeaderActions","actions","HeaderSkipLink","skipToContent","SidebarIdentifier","SlideLeft","Sidebar","isOpen","sidebar","group","Sidebar$1","MenuButtonIdentifier","MenuButton","getClassName","menuButton","MenuButton$1","UserMenuNav","showPaymentItems","onButtonClick","favoritesEnabled","focusable","titleId","sectionHeader","menuItems","SidebarUserActions","canLogin","onLoginClick","onSignUpClick","userMenuTitleId","buttonContainer","SidebarContainer","closeSideBar","signUpButtonClickHandler","SiteMetadata","metaDescription","SvgSearch","SvgCancel","SearchBar","onQueryChange","onClearButtonClick","searchBar","searchForm","clearButton","Cancel","HeaderActionButton","HeaderSearch","searchInputRef","searchEnabled","closeSearchButtonClickHandler","searchButtonClickHandler","searchContainer","CloseIcon","SearchIcon","SvgLanguage","Panel","DetectOutsideClick","elementRef","handleClick","Node","cloneElement","Popover","popover","LanguageMenu","currentLanguage","closeLanguageMenu","openLanguageMenu","handleLanguageSelect","handleMenuToggle","Language","menuItemClassname","menuItemActive","HeaderLanguageSwitcher","watchlistController","languageClickHandler","changeLanguage","UserMenu","onLoginButtonClick","onSignUpButtonClick","HeaderUserMenu","openUserPanel","closeUserPanel","configFooterText","openSideBar","containerProps","inert","layout","Outlet","useNotifications","navigateToModal","notification","NotificationsTypes","resource","redirect_to_url","RoutesContainer","userData","hash","AppRoutes","parsePlaylistIds","MediaHub","registerCustomScreens","useTrackConfigKeyChange","IS_DEMO_OR_PREVIEW","BootstrapError","DemoContentLoader","RootLoader","Root","isReady","setIsReady","onReadyCallback","App","i18nState","seti18nState","BrowserRouter","attachAccessibilityListener","isTabbing","rootElement","createRoot","render","refresh"],"ignoreList":[],"sources":["../../../../../../../@vite-plugin-pwa/virtual:pwa-register","../../../../../packages/common/src/env.ts","../../../../../packages/common/src/constants.ts","../../../../../packages/common/src/modules/container.ts","../../../../../packages/common/src/modules/types.ts","../../../../../packages/common/src/utils/common.ts","../../../../../packages/common/src/utils/liveEvent.ts","../../../../../packages/common/src/paths.tsx","../../../../../packages/common/src/services/logging/LogLevel.ts","../../../../../packages/common/src/services/logging/LogTransporter.ts","../../../../../packages/common/src/logger.ts","../../../../../packages/common/src/utils/media.ts","../../../../../packages/common/src/utils/urlFormatting.ts","../../../../../packages/common/src/utils/api.ts","../../../../../packages/common/src/utils/entitlements.ts","../../../../../packages/common/src/stores/utils.ts","../../../../../packages/common/src/stores/ConfigStore.ts","../../../../../packages/common/src/services/integrations/axinom/apollo-client.ts","../../../../../packages/common/src/services/integrations/axinom/types/catalog-service-auto-generated.ts","../../../../../packages/common/src/services/ApiService.ts","../../../../../packages/common/src/services/StorageService.ts","../../../../../packages/common/src/services/integrations/AccountService.ts","../../../../../packages/common/src/services/WatchHistoryService.ts","../../../../../packages/common/src/services/GenericEntitlementService.ts","../../../../../packages/common/src/services/integrations/jwp/JWPAPIService.ts","../../../../../packages/common/src/services/JWPEntitlementService.ts","../../../../../packages/common/src/services/FavoriteService.ts","../../../../../packages/common/src/utils/configSchema.ts","../../../../../packages/common/src/utils/error.ts","../../../../../packages/common/src/services/ConfigService.ts","../../../../../packages/common/src/services/SettingsService.ts","../../../../../packages/common/src/stores/AccountStore.ts","../../../../../packages/common/src/stores/WatchHistoryStore.ts","../../../../../packages/common/src/controllers/WatchHistoryController.ts","../../../../../packages/common/src/services/integrations/CheckoutService.ts","../../../../../packages/common/src/services/integrations/SubscriptionService.ts","../../../../../packages/common/src/stores/CheckoutStore.ts","../../../../../packages/common/src/errors/FormValidationError.ts","../../../../../packages/common/src/utils/subscription.ts","../../../../../packages/common/src/utils/payments.ts","../../../../../packages/common/src/controllers/CheckoutController.ts","../../../../../packages/common/src/stores/FavoritesStore.ts","../../../../../packages/common/src/controllers/FavoritesController.ts","../../../../../packages/common/src/services/AccessService.ts","../../../../../packages/common/src/stores/AccessStore.ts","../../../../../packages/common/src/controllers/AccessController.ts","../../../../../packages/common/src/controllers/AccountController.ts","../../../../../packages/common/src/controllers/AppController.ts","../../../../../packages/common/src/services/EpgService.ts","../../../../../packages/common/src/controllers/EpgController.ts","../../../../../packages/common/src/services/epg/ViewNexaEpgService.ts","../../../../../packages/common/src/services/epg/JWEpgService.ts","../../../../../packages/common/src/modules/functions/getApiAccessBridgeUrl.ts","../../../../../packages/common/src/utils/promiseQueue.ts","../../../../../packages/common/src/services/integrations/cleeng/CleengService.ts","../../../../../packages/common/src/services/integrations/cleeng/formatters/customer.ts","../../../../../packages/common/src/services/integrations/cleeng/formatters/consents.ts","../../../../../packages/common/src/services/integrations/cleeng/CleengAccountService.ts","../../../../../packages/common/src/services/integrations/cleeng/CleengCheckoutService.ts","../../../../../packages/common/src/services/integrations/cleeng/CleengSubscriptionService.ts","../../../../../packages/common/src/utils/collection.ts","../../../../../packages/common/src/services/integrations/jwp/JWPAccountService.ts","../../../../../packages/common/src/utils/formatting.ts","../../../../../packages/common/src/utils/offers.ts","../../../../../packages/common/src/services/integrations/jwp/JWPCheckoutService.ts","../../../../../packages/common/src/services/integrations/jwp/JWPSubscriptionService.ts","../../../../../packages/common/src/modules/functions/getIntegrationType.ts","../../../../../packages/common/src/modules/functions/calculateIntegrationType.ts","../../../../../packages/common/src/modules/register.ts","../../../../../packages/common/src/services/logging/ConsoleTransporter.ts","../../../src/services/LocalStorageService.ts","../../../src/modules/register.ts","../../../../../packages/ui-react/src/containers/QueryProvider/QueryProvider.tsx","../../../../../packages/ui-react/src/components/ErrorPage/ErrorPage.tsx","../../../../../packages/ui-react/src/components/Spinner/Spinner.tsx","../../../../../packages/ui-react/src/components/LoadingOverlay/LoadingOverlay.tsx","../../../../../packages/ui-react/src/components/FormFeedback/FormFeedback.tsx","../../../../../packages/ui-react/src/containers/AnnouncementProvider/AnnoucementProvider.tsx","../../../../../packages/common/src/utils/i18n.ts","../../../src/i18n/resources.ts","../../../src/i18n/config.ts","../../../../../packages/ui-react/src/utils/location.ts","../../../../../packages/hooks-react/src/useEventCallback.ts","../../../../../packages/ui-react/src/hooks/useQueryParam.ts","../../../../../packages/hooks-react/src/useCountdown.ts","../../../../../packages/ui-react/src/modules/container.ts","../../../../../packages/ui-react/src/modules/createInjectableComponent.tsx","../../../../../packages/ui-react/src/components/Button/Button.tsx","../../../../../packages/ui-react/src/components/Welcome/Welcome.tsx","../../../../../packages/ui-react/src/components/PaymentFailed/PaymentFailed.tsx","../../../../../packages/ui-react/src/components/Animation/Animation.tsx","../../../../../packages/ui-react/src/components/Animation/Grow/Grow.tsx","../../../../../packages/ui-react/src/utils/dom.ts","../../../../../packages/ui-react/src/hooks/useModal.ts","../../../../../packages/ui-react/src/components/Modal/Modal.tsx","../../../../../packages/ui-react/src/components/Animation/Slide/Slide.tsx","../../../../../packages/theme/assets/icons/close.svg?react","../../../../../packages/ui-react/src/components/IconButton/IconButton.tsx","../../../../../packages/ui-react/src/components/Icon/Icon.tsx","../../../../../packages/ui-react/src/components/ModalCloseButton/ModalCloseButton.tsx","../../../../../packages/ui-react/src/components/Dialog/Dialog.tsx","../../../../../packages/hooks-react/src/useForm.ts","../../../../../packages/hooks-react/src/useToggle.ts","../../../../../packages/theme/assets/icons/visibility.svg?react","../../../../../packages/theme/assets/icons/visibility_off.svg?react","../../../../../packages/hooks-react/src/useOpaqueId.ts","../../../../../packages/ui-react/src/components/HelperText/HelperText.tsx","../../../../../packages/ui-react/src/components/FormField/FormField.tsx","../../../../../packages/ui-react/src/components/Input/Input.tsx","../../../../../packages/ui-react/src/components/form-fields/TextField/TextField.tsx","../../../../../packages/ui-react/src/components/PasswordStrength/PasswordStrength.tsx","../../../../../packages/ui-react/src/components/form-fields/PasswordField/PasswordField.tsx","../../../../../packages/ui-react/src/components/DeleteAccountModal/DeleteAccountModal.tsx","../../../../../packages/ui-react/src/components/FinalizePayment/FinalizePayment.tsx","../../../../../packages/hooks-react/src/useCheckAccess.ts","../../../../../packages/ui-react/src/components/WaitingForPayment/WaitingForPayment.tsx","../../../../../packages/ui-react/src/components/UpgradeSubscription/UpgradeSubscription.tsx","../../../../../packages/ui-react/src/components/DeleteAccountPasswordWarning/DeleteAccountPasswordWarning.tsx","../../../../../packages/theme/assets/icons/creditcard.svg?react","../../../../../packages/theme/assets/icons/paypal.svg?react","../../../../../packages/ui-react/src/components/PaymentMethodForm/PaymentMethodForm.tsx","../../../../../packages/ui-react/src/components/PayPal/PayPal.tsx","../../../../../packages/ui-react/src/components/Adyen/Adyen.tsx","../../../../../packages/ui-react/src/containers/AdyenPaymentDetails/AdyenPaymentDetails.tsx","../../../../../packages/ui-react/src/containers/UpdatePaymentMethod/UpdatePaymentMethod.tsx","../../../../../packages/ui-react/src/components/EditForm/EditCardDetailsForm.tsx","../../../../../packages/ui-react/src/components/form-fields/CreditCardCVCField/CreditCardCVCField.tsx","../../../../../packages/ui-react/src/components/form-fields/CreditCardExpiryField/CreditCardExpiryField.tsx","../../../../../packages/ui-react/src/components/form-fields/CreditCardNumberField/CreditCardNumberField.tsx","../../../../../packages/ui-react/src/components/EditCardPaymentForm/EditCardPaymentForm.tsx","../../../../../packages/ui-react/src/containers/AccountModal/forms/EditCardDetails.tsx","../../../../../packages/ui-react/src/components/EditPasswordForm/EditPasswordForm.tsx","../../../../../packages/ui-react/src/containers/AccountModal/forms/EditPassword.tsx","../../../../../packages/ui-react/src/components/RenewSubscriptionForm/RenewSubscriptionForm.tsx","../../../../../packages/ui-react/src/components/SubscriptionRenewed/SubscriptionRenewed.tsx","../../../../../packages/ui-react/src/containers/AccountModal/forms/RenewSubscription.tsx","../../../../../packages/ui-react/src/components/CancelSubscriptionForm/CancelSubscriptionForm.tsx","../../../../../packages/ui-react/src/components/SubscriptionCancelled/SubscriptionCancelled.tsx","../../../../../packages/ui-react/src/containers/AccountModal/forms/CancelSubscription.tsx","../../../../../packages/ui-react/src/components/ResetPasswordForm/ResetPasswordForm.tsx","../../../../../packages/ui-react/src/components/ForgotPasswordForm/ForgotPasswordForm.tsx","../../../../../packages/ui-react/src/components/ConfirmationForm/ConfirmationForm.tsx","../../../../../packages/ui-react/src/containers/AccountModal/forms/ResetPassword.tsx","../../../../../packages/hooks-react/src/useCheckout.ts","../../../../../packages/theme/assets/icons/arrow_left.svg?react","../../../../../packages/ui-react/src/components/DialogBackButton/DialogBackButton.tsx","../../../../../packages/ui-react/src/components/RecaptchaField/RecaptchaField.tsx","../../../../../packages/ui-react/src/components/CheckoutForm/CheckoutForm.tsx","../../../../../packages/ui-react/src/components/NoPaymentRequired/NoPaymentRequired.tsx","../../../../../packages/ui-react/src/components/PaymentForm/PaymentForm.tsx","../../../../../packages/ui-react/src/containers/AdyenInitialPayment/AdyenInitialPayment.tsx","../../../../../packages/ui-react/src/hooks/useRecaptcha.ts","../../../../../packages/ui-react/src/containers/AccountModal/forms/Checkout.tsx","../../../../../packages/hooks-react/src/useOffers.ts","../../../../../packages/theme/assets/icons/check_circle.svg?react","../../../../../packages/ui-react/src/components/ChooseOfferForm/ChooseOfferForm.tsx","../../../../../packages/ui-react/src/containers/AccountModal/forms/ChooseOffer.tsx","../../../../../packages/ui-react/src/components/Select/Select.tsx","../../../../../packages/ui-react/src/components/form-fields/Dropdown/Dropdown.tsx","../../../../../packages/ui-react/src/components/form-fields/Checkbox/Checkbox.tsx","../../../../../packages/ui-react/src/components/form-fields/Radio/Radio.tsx","../../../../../packages/ui-react/src/components/form-fields/DateField/DateField.tsx","../../../../../packages/ui-react/src/components/PersonalDetailsForm/PersonalDetailsForm.tsx","../../../../../packages/ui-react/src/containers/AccountModal/forms/PersonalDetails.tsx","../../../../../packages/hooks-react/src/useSocialLoginUrls.ts","../../../../../packages/ui-react/src/components/CustomRegisterField/CustomRegisterField.tsx","../../../../../packages/ui-react/src/components/Link/Link.tsx","../../../../../packages/ui-react/src/components/RegistrationForm/RegistrationForm.tsx","../../../../../packages/ui-react/src/containers/AccountModal/forms/Registration.tsx","../../../../../packages/ui-react/src/components/LoginForm/LoginForm.tsx","../../../../../packages/ui-react/src/containers/AccountModal/forms/Login.tsx","../../../../../packages/ui-react/src/containers/AccountModal/AccountModal.tsx","../../../../../packages/testing/constants.ts","../../../../../packages/ui-react/src/components/DevConfigSelector/DevConfigSelector.tsx","../../../../../packages/hooks-react/src/useBootstrapApp.ts","../../../../../packages/ui-react/src/utils/theming.ts","../../../../../packages/ui-react/src/components/ConfirmationDialog/ConfirmationDialog.tsx","../../../../../packages/ui-react/src/components/RootErrorPage/RootErrorPage.tsx","../../../../../packages/ui-react/src/components/MarkdownComponent/MarkdownComponent.tsx","../../../../../packages/ui-react/src/pages/About/About.tsx","../../../../../packages/hooks-react/src/usePlaylist.ts","../../../../../packages/hooks-react/src/usePlaylists.ts","../../../../../packages/hooks-react/src/useTranslationKey.ts","../../../../../packages/theme/assets/icons/chevron_left.svg?react","../../../../../packages/theme/assets/icons/chevron_right.svg?react","../../../../../packages/ui-react/src/utils/matchMedia.ts","../../../../../packages/ui-react/src/hooks/useBreakpoint.ts","../../../../../packages/theme/assets/icons/lock.svg?react","../../../../../packages/theme/assets/icons/today.svg?react","../../../../../packages/ui-react/src/components/Image/Image.tsx","../../../../../packages/ui-react/src/components/Card/Card.tsx","../../../../../packages/ui-react/src/components/Shelf/Shelf.tsx","../../../../../packages/ui-react/src/components/InfiniteScrollLoader/InfiniteScrollLoader.tsx","../../../../../packages/ui-react/src/components/Animation/Fade/Fade.tsx","../../../../../packages/ui-react/src/hooks/useScrolledDown.ts","../../../../../packages/ui-react/src/components/TruncatedText/TruncatedText.tsx","../../../../../packages/hooks-react/src/useEntitlement.ts","../../../../../packages/theme/assets/icons/play.svg?react","../../../../../packages/ui-react/src/containers/StartWatchingButton/StartWatchingButton.tsx","../../../../../packages/ui-react/src/components/HeroShelf/HeroShelfMetadata.tsx","../../../../../packages/ui-react/src/components/HeroShelf/HeroShelfBackground.tsx","../../../../../packages/ui-react/src/components/HeroShelf/HeroShelfPagination.tsx","../../../../../packages/ui-react/src/components/HeroShelf/HeroSwipeSlider.tsx","../../../../../packages/ui-react/src/components/HeroShelf/HeroShelf.tsx","../../../../../packages/ui-react/src/containers/ShelfList/ShelfList.tsx","../../../../../packages/ui-react/src/pages/Home/Home.tsx","../../../../../packages/common/src/stores/UIStore.ts","../../../../../packages/hooks-react/src/useFirstRender.ts","../../../../../packages/hooks-react/src/useDebounce.ts","../../../../../packages/ui-react/src/hooks/useSearchQueryUpdater.ts","../../../../../packages/hooks-react/src/useSearch.ts","../../../../../packages/ui-react/src/components/LayoutGrid/LayoutGrid.tsx","../../../../../packages/ui-react/src/components/CardGrid/CardGrid.tsx","../../../../../packages/ui-react/src/pages/Search/Search.tsx","../../../../../packages/theme/assets/icons/account_circle.svg?react","../../../../../packages/theme/assets/icons/balance_wallet.svg?react","../../../../../packages/theme/assets/icons/exit.svg?react","../../../../../packages/theme/assets/icons/favorite.svg?react","../../../../../packages/ui-react/src/components/Alert/Alert.tsx","../../../../../packages/ui-react/src/components/Form/FormSection.tsx","../../../../../packages/ui-react/src/components/Form/Form.tsx","../../../../../packages/ui-react/src/components/Account/Account.tsx","../../../../../packages/ui-react/src/components/Favorites/Favorites.tsx","../../../../../packages/hooks-react/src/useSubscriptionChange.ts","../../../../../packages/theme/assets/icons/external_link.svg?react","../../../../../packages/ui-react/src/components/OfferSwitch/OfferSwitch.tsx","../../../../../packages/ui-react/src/components/Payment/Payment.tsx","../../../../../packages/ui-react/src/containers/PaymentContainer/PaymentContainer.tsx","../../../../../packages/ui-react/src/pages/User/User.tsx","../../../../../packages/common/src/utils/metadata.ts","../../../../../packages/hooks-react/src/useMedia.ts","../../../../../packages/theme/assets/icons/play_trailer.svg?react","../../../../../packages/ui-react/src/components/Filter/Filter.tsx","../../../../../packages/ui-react/src/components/Hero/Hero.tsx","../../../../../packages/ui-react/src/components/Hero/HeroTitle.tsx","../../../../../packages/ui-react/src/components/CollapsibleText/CollapsibleText.tsx","../../../../../packages/ui-react/src/components/Hero/HeroDescription.tsx","../../../../../packages/ui-react/src/components/VideoDetails/VideoDetails.tsx","../../../../../packages/ui-react/src/components/VideoDetailsInline/VideoDetailsInline.tsx","../../../../../packages/ui-react/src/components/VideoListItem/VideoListItem.tsx","../../../../../packages/ui-react/src/components/VideoList/VideoList.tsx","../../../../../packages/ui-react/src/components/VideoLayout/VideoLayout.tsx","../../../../../packages/hooks-react/src/useWatchHistoryListener.ts","../../../../../packages/hooks-react/src/useWatchHistory.ts","../../../../../packages/hooks-react/src/usePlaylistItemCallback.ts","../../../../../packages/hooks-react/src/useAds.ts","../../../../../packages/hooks-react/src/useContentProtection.ts","../../../../../packages/hooks-react/src/useProtectedMedia.ts","../../../../../packages/common/src/utils/sources.ts","../../../../../packages/hooks-react/src/useMediaSources.ts","../../../../../packages/ui-react/src/components/Player/Player.tsx","../../../../../packages/ui-react/src/components/PlayerError/PlayerError.tsx","../../../../../packages/ui-react/src/containers/PlayerContainer/PlayerContainer.tsx","../../../../../packages/ui-react/src/containers/InlinePlayer/InlinePlayer.tsx","../../../../../packages/ui-react/src/containers/Cinema/Cinema.tsx","../../../../../packages/ui-react/src/containers/TrailerModal/TrailerModal.tsx","../../../../../packages/theme/assets/icons/check.svg?react","../../../../../packages/theme/assets/icons/share.svg?react","../../../../../packages/ui-react/src/utils/clipboard.ts","../../../../../packages/ui-react/src/components/ShareButton/ShareButton.tsx","../../../../../packages/theme/assets/icons/favorite_border.svg?react","../../../../../packages/ui-react/src/containers/FavoriteButton/FavoriteButton.tsx","../../../../../packages/ui-react/src/pages/Loading/Loading.tsx","../../../../../packages/ui-react/src/components/VideoMetaData/VideoMetaData.tsx","../../../../../packages/common/src/utils/datetime.ts","../../../../../packages/ui-react/src/pages/LegacySeries/utils.ts","../../../../../packages/ui-react/src/pages/LegacySeries/LegacySeries.tsx","../../../../../packages/common/src/utils/ScreenMap.ts","../../../../../packages/ui-react/src/pages/ScreenRouting/mediaScreens/MediaStaticPage/MediaStaticPage.tsx","../../../../../packages/common/src/utils/structuredData.ts","../../../../../packages/ui-react/src/pages/ScreenRouting/mediaScreens/MediaMovie/MediaMovie.tsx","../../../../../packages/common/src/utils/series.ts","../../../../../packages/hooks-react/src/series/useSeries.ts","../../../../../packages/hooks-react/src/series/useEpisodes.ts","../../../../../packages/hooks-react/src/series/useSeriesLookup.ts","../../../../../packages/hooks-react/src/series/useNextEpisode.ts","../../../../../packages/hooks-react/src/series/useFirstEpisode.ts","../../../../../packages/ui-react/src/pages/ScreenRouting/mediaScreens/MediaSeries/MediaSeries.tsx","../../../../../packages/ui-react/src/pages/ScreenRouting/mediaScreens/MediaLiveChannel/MediaLiveChannel.tsx","../../../../../packages/ui-react/src/pages/ScreenRouting/mediaScreens/MediaEpisode/MediaEpisode.tsx","../../../../../packages/hooks-react/src/useLiveEvent.ts","../../../../../packages/ui-react/src/components/Tag/Tag.tsx","../../../../../packages/ui-react/src/components/StatusIcon/StatusIcon.tsx","../../../../../packages/ui-react/src/pages/ScreenRouting/mediaScreens/MediaEvent/MediaEvent.tsx","../../../../../packages/ui-react/src/pages/ScreenRouting/MediaScreenRouter.tsx","../../../../../packages/ui-react/src/pages/ScreenRouting/playlistScreens/PlaylistGrid/PlaylistGrid.tsx","../../../../../packages/common/src/utils/epg.ts","../../../../../packages/hooks-react/src/useLiveChannels.ts","../../../../../packages/hooks-react/src/useLiveProgram.ts","../../../../../packages/hooks-react/src/usePlanByEpg.ts","../../../../../packages/ui-react/src/components/EpgChannel/EpgChannelItem.tsx","../../../../../packages/ui-react/src/components/EpgProgramItem/EpgProgramItem.tsx","../../../../../packages/ui-react/src/components/EpgTimeline/EpgTimeline.tsx","../../../../../packages/ui-react/src/components/Epg/Epg.tsx","../../../../../packages/ui-react/src/pages/ScreenRouting/playlistScreens/PlaylistLiveChannels/PlaylistLiveChannels.tsx","../../../../../packages/ui-react/src/pages/ScreenRouting/PlaylistScreenRouter.tsx","../../../../../packages/ui-react/src/components/Header/Header.tsx","../../../../../packages/ui-react/src/components/Footer/Footer.tsx","../../../../../packages/theme/assets/icons/menu.svg?react","../../../../../packages/ui-react/src/components/Header/HeaderMenu.tsx","../../../../../packages/ui-react/src/components/Header/HeaderNavigation.tsx","../../../../../packages/ui-react/src/components/Logo/Logo.tsx","../../../../../packages/ui-react/src/components/Header/HeaderBrand.tsx","../../../../../packages/ui-react/src/components/Header/HeaderActions.tsx","../../../../../packages/ui-react/src/components/Header/HeaderSkipLink.tsx","../../../../../packages/ui-react/src/components/Sidebar/Sidebar.tsx","../../../../../packages/ui-react/src/components/MenuButton/MenuButton.tsx","../../../../../packages/ui-react/src/components/UserMenuNav/UserMenuNav.tsx","../../../../../packages/ui-react/src/containers/SidebarContainer/SidebarContainer.tsx","../../../../../packages/ui-react/src/containers/SiteMetadata/SiteMetadata.tsx","../../../../../packages/theme/assets/icons/search.svg?react","../../../../../packages/theme/assets/icons/cancel.svg?react","../../../../../packages/ui-react/src/components/SearchBar/SearchBar.tsx","../../../../../packages/ui-react/src/components/Header/HeaderActionButton.tsx","../../../../../packages/ui-react/src/containers/HeaderSearch/HeaderSearch.tsx","../../../../../packages/theme/assets/icons/language.svg?react","../../../../../packages/ui-react/src/components/Panel/Panel.tsx","../../../../../packages/ui-react/src/components/DetectOutsideClick/DetectOutsideClick.tsx","../../../../../packages/ui-react/src/components/Popover/Popover.tsx","../../../../../packages/ui-react/src/components/LanguageMenu/LanguageMenu.tsx","../../../../../packages/ui-react/src/containers/HeaderLanguageSwitcher/HeaderLanguageSwitcher.tsx","../../../../../packages/ui-react/src/components/UserMenu/UserMenu.tsx","../../../../../packages/ui-react/src/containers/HeaderUserMenu/HeaderUserMenu.tsx","../../../../../packages/ui-react/src/containers/Layout/Layout.tsx","../../../src/hooks/useNotifications.ts","../../../src/containers/RoutesContainer/RoutesContainer.tsx","../../../src/containers/AppRoutes/AppRoutes.tsx","../../../../../packages/ui-react/src/pages/ScreenRouting/mediaScreens/MediaHub/MediaHub.tsx","../../../src/screenMapping.ts","../../../src/hooks/useTrackConfigKeyChange.ts","../../../src/containers/Root/Root.tsx","../../../src/App.tsx","../../../src/utils/accessibility.ts","../../../src/index.tsx"],"sourcesContent":["// src/client/build/register.ts\nvar autoUpdateMode = \"true\";\nvar selfDestroying = \"false\";\nvar auto = autoUpdateMode === \"true\";\nvar autoDestroy = selfDestroying === \"true\";\nfunction registerSW(options = {}) {\n  const {\n    immediate = false,\n    onNeedRefresh,\n    onOfflineReady,\n    onRegistered,\n    onRegisteredSW,\n    onRegisterError\n  } = options;\n  let wb;\n  let registerPromise;\n  let sendSkipWaitingMessage;\n  const updateServiceWorker = async (_reloadPage = true) => {\n    await registerPromise;\n    if (!auto) {\n      await sendSkipWaitingMessage?.();\n    }\n  };\n  async function register() {\n    if (\"serviceWorker\" in navigator) {\n      wb = await import(\"workbox-window\").then(({ Workbox }) => {\n        return new Workbox(\"/sw.js\", { scope: \"/\", type: \"classic\" });\n      }).catch((e) => {\n        onRegisterError?.(e);\n        return void 0;\n      });\n      if (!wb)\n        return;\n      sendSkipWaitingMessage = async () => {\n        await wb?.messageSkipWaiting();\n      };\n      if (!autoDestroy) {\n        if (auto) {\n          wb.addEventListener(\"activated\", (event) => {\n            if (event.isUpdate || event.isExternal)\n              window.location.reload();\n          });\n          wb.addEventListener(\"installed\", (event) => {\n            if (!event.isUpdate) {\n              onOfflineReady?.();\n            }\n          });\n        } else {\n          let onNeedRefreshCalled = false;\n          const showSkipWaitingPrompt = () => {\n            onNeedRefreshCalled = true;\n            wb?.addEventListener(\"controlling\", (event) => {\n              if (event.isUpdate)\n                window.location.reload();\n            });\n            onNeedRefresh?.();\n          };\n          wb.addEventListener(\"installed\", (event) => {\n            if (typeof event.isUpdate === \"undefined\") {\n              if (typeof event.isExternal !== \"undefined\") {\n                if (event.isExternal)\n                  showSkipWaitingPrompt();\n                else\n                  !onNeedRefreshCalled && onOfflineReady?.();\n              } else {\n                if (event.isExternal)\n                  window.location.reload();\n                else\n                  !onNeedRefreshCalled && onOfflineReady?.();\n              }\n            } else if (!event.isUpdate) {\n              onOfflineReady?.();\n            }\n          });\n          wb.addEventListener(\"waiting\", showSkipWaitingPrompt);\n          wb.addEventListener(\"externalwaiting\", showSkipWaitingPrompt);\n        }\n      }\n      wb.register({ immediate }).then((r) => {\n        if (onRegisteredSW)\n          onRegisteredSW(\"/sw.js\", r);\n        else\n          onRegistered?.(r);\n      }).catch((e) => {\n        onRegisterError?.(e);\n      });\n    }\n  }\n  registerPromise = register();\n  return updateServiceWorker;\n}\nexport {\n  registerSW\n};\n","export type Env = {\n  APP_VERSION: string;\n  APP_API_BASE_URL: string;\n  APP_API_ACCESS_BRIDGE_URL: string;\n  APP_PLAYER_ID: string;\n  APP_FOOTER_TEXT: string;\n  APP_DEFAULT_LANGUAGE: string;\n  APP_PUBLIC_URL: string;\n\n  APP_DEFAULT_CONFIG_SOURCE?: string;\n  APP_PLAYER_LICENSE_KEY?: string;\n\n  APP_BODY_FONT?: string;\n  APP_BODY_ALT_FONT?: string;\n};\n\nconst env: Env = {\n  APP_VERSION: '',\n  APP_API_BASE_URL: 'https://cdn.jwplayer.com',\n  APP_API_ACCESS_BRIDGE_URL: '',\n  APP_PLAYER_ID: 'M4qoGvUk',\n  APP_FOOTER_TEXT: '',\n  APP_DEFAULT_LANGUAGE: 'en',\n  APP_PUBLIC_URL: '',\n};\n\nexport const configureEnv = (options: Partial<Env>) => {\n  env.APP_VERSION = options.APP_VERSION || env.APP_VERSION;\n  env.APP_API_BASE_URL = options.APP_API_BASE_URL || env.APP_API_BASE_URL;\n  env.APP_API_ACCESS_BRIDGE_URL = options.APP_API_ACCESS_BRIDGE_URL || env.APP_API_ACCESS_BRIDGE_URL;\n  env.APP_PLAYER_ID = options.APP_PLAYER_ID || env.APP_PLAYER_ID;\n  env.APP_FOOTER_TEXT = options.APP_FOOTER_TEXT || env.APP_FOOTER_TEXT;\n  env.APP_DEFAULT_LANGUAGE = options.APP_DEFAULT_LANGUAGE || env.APP_DEFAULT_LANGUAGE;\n  env.APP_PUBLIC_URL = options.APP_PUBLIC_URL || env.APP_PUBLIC_URL;\n\n  env.APP_DEFAULT_CONFIG_SOURCE ||= options.APP_DEFAULT_CONFIG_SOURCE;\n  env.APP_PLAYER_LICENSE_KEY ||= options.APP_PLAYER_LICENSE_KEY;\n\n  env.APP_BODY_FONT = options.APP_BODY_FONT || env.APP_BODY_FONT;\n  env.APP_BODY_ALT_FONT = options.APP_BODY_ALT_FONT || env.APP_BODY_ALT_FONT;\n};\n\nexport default env;\n","export enum PersonalShelf {\n  ContinueWatching = 'continue_watching',\n  Favorites = 'favorites',\n}\n\nexport const PersonalShelves = [PersonalShelf.Favorites, PersonalShelf.ContinueWatching];\n\nexport const INTEGRATION = {\n  JWP: 'JWP',\n  CLEENG: 'CLEENG',\n} as const;\n\nexport const ACCESS_MODEL = {\n  AVOD: 'AVOD',\n  AUTHVOD: 'AUTHVOD',\n  SVOD: 'SVOD',\n} as const;\n\nexport const VideoProgressMinMax = {\n  Min: 0.05,\n  Max: 0.95,\n};\n\nexport const PLAYLIST_LIMIT = 25;\n\nexport const ADYEN_TEST_CLIENT_KEY = 'test_I4OFGUUCEVB5TI222AS3N2Y2LY6PJM3K';\n\nexport const ADYEN_LIVE_CLIENT_KEY = 'live_BQDOFBYTGZB3XKF62GBYSLPUJ4YW2TPL';\n\n// how often the live channel schedule is refetched in ms\nexport const LIVE_CHANNELS_REFETCH_INTERVAL = 15 * 60_000;\n\n// Some predefined media types of JW\nexport const MEDIA_CONTENT_TYPE = {\n  // Series page with seasons / episodes\n  series: 'series',\n  // Separate episode page\n  episode: 'episode',\n  // Live channel (24x7)\n  liveChannel: 'livechannel',\n  // Temporary live stream that starts at a specific time\n  liveEvent: 'liveevent',\n  // Static page with markdown\n  page: 'page',\n  // Page with shelves list\n  hub: 'hub',\n} as const;\n\n// Some predefined playlist types of JW\nexport const PLAYLIST_CONTENT_TYPE = {\n  // Page with a list of live channels\n  live: 'live',\n} as const;\n\n// Some predefined shelf types of JW\nexport const SHELF_LAYOUT_TYPE = {\n  // Fullwidth hero, only available as the first shelf (index === 0)\n  hero: 'hero',\n  // Larger cards\n  featured: 'featured',\n  // By default: standard size cards (default)\n} as const;\n\n// OTT shared player\nexport const OTT_GLOBAL_PLAYER_ID = 'M4qoGvUk';\n\nexport const CONFIG_QUERY_KEY = 'app-config';\n\nexport const CONFIG_FILE_STORAGE_KEY = 'config-file-override';\n\nexport const CACHE_TIME = 60 * 1000 * 20; // 20 minutes\n\nexport const STALE_TIME = 60 * 1000 * 20;\n\nexport const CARD_ASPECT_RATIOS = ['1:1', '2:1', '2:3', '4:3', '5:3', '16:9', '9:13', '9:16'] as const;\n\nexport const MAX_WATCHLIST_ITEMS_COUNT = 48; // Default value\n\nexport const DEFAULT_FEATURES = {\n  canUpdateEmail: false,\n  canSupportEmptyFullName: false,\n  canChangePasswordWithOldPassword: false,\n  canRenewSubscription: false,\n  canExportAccountData: false,\n  canDeleteAccount: false,\n  canUpdatePaymentMethod: false,\n  canShowReceipts: false,\n  hasSocialURLs: false,\n  hasNotifications: false,\n  watchListSizeLimit: MAX_WATCHLIST_ITEMS_COUNT,\n};\n\nexport const EPG_TYPE = {\n  jwp: 'jwp',\n  viewNexa: 'viewnexa',\n} as const;\n\nexport const APP_CONFIG_ITEM_TYPE = {\n  playlist: 'playlist',\n  continue_watching: 'continue_watching',\n  favorites: 'favorites',\n  content_list: 'content_list',\n  media: 'media',\n} as const;\n","import { Container, injectable, type interfaces, inject } from 'inversify';\n\nexport const container = new Container({ defaultScope: 'Singleton', skipBaseClassChecks: true });\n\nexport { injectable, inject };\n\nexport function getModule<T>(constructorFunction: interfaces.ServiceIdentifier<T>, required: false): T | undefined;\nexport function getModule<T>(constructorFunction: interfaces.ServiceIdentifier<T>, required: true): T;\nexport function getModule<T>(constructorFunction: interfaces.ServiceIdentifier<T>): T;\nexport function getModule<T>(constructorFunction: interfaces.ServiceIdentifier<T>, required = true): T | undefined {\n  const module = container.getAll(constructorFunction)[0];\n\n  if (required && !module) throw new Error(`Service / Controller '${String(constructorFunction)}' not found`);\n\n  return module;\n}\n\nexport function getAllModules<T>(constructorFunction: interfaces.ServiceIdentifier<T>): T[] {\n  return container.getAll(constructorFunction);\n}\n\nexport function getNamedModule<T>(constructorFunction: interfaces.ServiceIdentifier<T>, name: string | null, required: false): T | undefined;\nexport function getNamedModule<T>(constructorFunction: interfaces.ServiceIdentifier<T>, name: string | null, required: true): T;\nexport function getNamedModule<T>(constructorFunction: interfaces.ServiceIdentifier<T>, name: string | null): T;\nexport function getNamedModule<T>(constructorFunction: interfaces.ServiceIdentifier<T>, name: string | null, required = true): T | undefined {\n  if (!name) {\n    return;\n  }\n\n  let module;\n\n  try {\n    module = container.getAllNamed(constructorFunction, name)[0];\n\n    return module;\n  } catch (err: unknown) {\n    if (err instanceof Error && err.message.includes('No matching bindings found')) {\n      if (required) {\n        throw new Error(`Service not found '${String(constructorFunction)}' with name '${name}'`);\n      }\n\n      return;\n    }\n\n    // log service can't be used here\n    console.error('Error caught while initializing service', err);\n  }\n}\n\nexport function assertModuleMethod<T>(method: T, message: string): asserts method is NonNullable<T> {\n  if (!method) throw new Error(message);\n}\n\nexport function assertFeature(isEnabled: boolean, featureName: string): asserts isEnabled is true {\n  if (!isEnabled) throw new Error(`${featureName} feature is not enabled`);\n}\n","export const INTEGRATION_TYPE = Symbol('INTEGRATION_TYPE');\n\nexport const DETERMINE_INTEGRATION_TYPE = Symbol('DETERMINE_INTEGRATION_TYPE');\n\nexport const GET_CUSTOMER_IP = Symbol('GET_CUSTOMER_IP');\n\nexport const API_ACCESS_BRIDGE_URL = Symbol('API_ACCESS_BRIDGE_URL');\n\nexport const BROADCAST_CHANNEL = Symbol('BROADCAST_CHANNEL');\n","import type { Playlist, PlaylistItem } from '../../types/playlist';\n\nexport function debounce<T extends (...args: any[]) => void>(callback: T, wait = 200) {\n  let timeout: NodeJS.Timeout | undefined;\n  function debounced(...args: unknown[]) {\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(() => callback(...args), wait);\n  }\n\n  debounced.cancel = () => clearTimeout(timeout);\n  return debounced;\n}\n\nexport function throttle<T extends (...args: any[]) => unknown>(func: T, limit: number) {\n  let lastFunc: NodeJS.Timeout | undefined;\n  let lastRan: number | undefined;\n\n  function throttled(this: ThisParameterType<T>, ...args: Parameters<T>): void {\n    const timeSinceLastRan = lastRan ? Date.now() - lastRan : limit;\n\n    if (timeSinceLastRan >= limit) {\n      func.apply(this, args);\n      lastRan = Date.now();\n    } else if (!lastFunc) {\n      lastFunc = setTimeout(() => {\n        if (lastRan) {\n          const timeSinceLastRan = Date.now() - lastRan;\n          if (timeSinceLastRan >= limit) {\n            func.apply(this, args);\n            lastRan = Date.now();\n          }\n        }\n        lastFunc = undefined;\n      }, limit - timeSinceLastRan);\n    }\n  }\n\n  throttled.cancel = () => clearTimeout(lastFunc);\n  return throttled;\n}\n\nexport const unicodeToChar = (text: string) => {\n  return text.replace(/\\\\u[\\dA-F]{4}/gi, (match) => {\n    return String.fromCharCode(parseInt(match.replace(/\\\\u/g, ''), 16));\n  });\n};\n\n/**\n * Parse hex color and return the RGB colors\n * @param color\n * @return {{r: number, b: number, g: number}|undefined}\n */\nexport function hexToRgb(color: string) {\n  if (color.indexOf('#') === 0) {\n    color = color.slice(1);\n  }\n\n  // convert 3-digit hex to 6-digits.\n  if (color.length === 3) {\n    color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];\n  }\n\n  if (color.length !== 6) {\n    return undefined;\n  }\n\n  return {\n    r: parseInt(color.slice(0, 2), 16),\n    g: parseInt(color.slice(2, 4), 16),\n    b: parseInt(color.slice(4, 6), 16),\n  };\n}\n\n/**\n * Get the contrast color based on the given color\n * @param {string} color Hex or RGBA color string\n * @link {https://stackoverflow.com/a/35970186/1790728}\n * @return {string}\n */\nexport function calculateContrastColor(color: string): string {\n  const rgb = hexToRgb(color);\n\n  if (!rgb) {\n    return '';\n  }\n\n  // http://stackoverflow.com/a/3943023/112731\n  return rgb.r * 0.299 + rgb.g * 0.587 + rgb.b * 0.114 > 186 ? '#000000' : '#FFFFFF';\n}\n\n// Build is either Development or Production\n// Mode can be dev, jwdev, demo, test, prod, etc.\nexport const IS_DEVELOPMENT_BUILD = __dev__;\n// Demo mode is used to run our firebase demo instance\nexport const IS_DEMO_MODE = __mode__ === 'demo';\n// Test mode is used for e2e and unit tests\nexport const IS_TEST_MODE = __mode__ === 'test';\n\n// Preview mode is used for previewing Pull Requests on GitHub\nexport const IS_PREVIEW_MODE = __mode__ === 'preview';\n// Production mode\nexport const IS_PROD_MODE = __mode__ === 'prod';\n\nexport const isContentType = (item: PlaylistItem | Playlist, contentType: string) => item.contentType?.toLowerCase() === contentType.toLowerCase();\n\nexport const isTruthyCustomParamValue = (value: unknown): boolean => ['true', '1', 'yes', 'on'].includes(String(value)?.toLowerCase());\n\nexport const isFalsyCustomParamValue = (value: unknown): boolean => ['false', '0', 'no', 'off'].includes(String(value)?.toLowerCase());\n\nexport function testId(value: string | undefined) {\n  return IS_DEVELOPMENT_BUILD || IS_TEST_MODE || IS_PREVIEW_MODE ? value : undefined;\n}\n\ntype Truthy<T> = T extends false | '' | 0 | null | undefined ? never : T;\nexport const isTruthy = <T>(value: T | true): value is Truthy<T> => Boolean(value);\n","import type { PlaylistItem } from '../../types/playlist';\nimport { MEDIA_CONTENT_TYPE } from '../constants';\n\nimport { isContentType } from './common';\n\nexport enum EventState {\n  PRE_LIVE = 'PRE_LIVE',\n  LIVE_UNPUBLISHED = 'LIVE_UNPUBLISHED',\n  LIVE_PUBLISHED = 'LIVE_PUBLISHED',\n  INSTANT_VOD = 'INSTANT_VOD',\n  VOD_PUBLIC = 'VOD_PUBLIC',\n}\n\nexport const enum MediaStatus {\n  LIVE = 'LIVE',\n  VOD = 'VOD',\n  SCHEDULED = 'SCHEDULED',\n}\n\nexport const isLiveEvent = (playlistItem?: PlaylistItem) => {\n  return !!playlistItem && isContentType(playlistItem, MEDIA_CONTENT_TYPE.liveEvent);\n};\n\nexport const isScheduledOrLiveMedia = (playlistItem: PlaylistItem) => {\n  return playlistItem.mediaStatus === MediaStatus.SCHEDULED || playlistItem.mediaStatus === MediaStatus.LIVE;\n};\n\nexport const getMediaStatusFromEventState = (playlistItem: PlaylistItem) => {\n  const eventState = playlistItem['VCH.EventState'];\n  const { scheduledStart, scheduledEnd } = playlistItem;\n\n  const now = new Date();\n  const started = eventState === EventState.LIVE_PUBLISHED || (scheduledStart && scheduledStart < now);\n  const live = started && scheduledEnd && scheduledEnd > now;\n\n  if (live) {\n    return MediaStatus.LIVE;\n  }\n\n  if (!eventState) {\n    return MediaStatus.VOD;\n  }\n\n  switch (eventState) {\n    case EventState.PRE_LIVE:\n    case EventState.LIVE_UNPUBLISHED:\n      return MediaStatus.SCHEDULED;\n    case EventState.LIVE_PUBLISHED:\n      return MediaStatus.LIVE;\n    case EventState.INSTANT_VOD:\n    case EventState.VOD_PUBLIC:\n      return MediaStatus.VOD;\n  }\n};\n\nexport const isPlayable = (playlistItem: PlaylistItem) => {\n  return playlistItem.mediaStatus === MediaStatus.LIVE || playlistItem.mediaStatus === MediaStatus.VOD;\n};\n","export const PATH_HOME = '/';\n\nexport const PATH_MEDIA = '/m/:id/*';\nexport const PATH_PLAYLIST = '/p/:id/*';\nexport const PATH_CONTENT_LIST = '/n/:id/*';\nexport const PATH_LEGACY_SERIES = '/s/:id/*';\n\nexport const PATH_SEARCH = '/q/*';\nexport const PATH_ABOUT = '/o/about';\n\nexport const PATH_USER_BASE = '/u';\nexport const PATH_USER = `${PATH_USER_BASE}/*`;\n\nexport const RELATIVE_PATH_USER_ACCOUNT = 'my-account';\nexport const RELATIVE_PATH_USER_FAVORITES = 'favorites';\nexport const RELATIVE_PATH_USER_PAYMENTS = 'payments';\n\nexport const PATH_USER_ACCOUNT = `${PATH_USER_BASE}/${RELATIVE_PATH_USER_ACCOUNT}`;\nexport const PATH_USER_FAVORITES = `${PATH_USER_BASE}/${RELATIVE_PATH_USER_FAVORITES}`;\nexport const PATH_USER_PAYMENTS = `${PATH_USER_BASE}/${RELATIVE_PATH_USER_PAYMENTS}`;\n","export enum LogLevel {\n  // detailed information for diagnosing problems, typically only useful during development\n  DEBUG,\n  // general information about the application's operation, such as startup or shutdown messages\n  INFO,\n  // indications of potential problems or unusual situations that are not immediately harmful\n  WARN,\n  // errors that affect the functionality of the application but allow it to continue running\n  ERROR,\n  // severe errors that lead to the application's termination\n  FATAL,\n  // no logging will be performed. Used to disable logging completely\n  SILENT,\n}\n","import type { LogLevel } from './LogLevel';\n\nexport default abstract class LogTransporter {\n  abstract log(level: LogLevel, scope: string, message: string, extra?: Record<string, unknown>, error?: Error): void;\n}\n","import { getAllModules } from './modules/container';\nimport { LogLevel } from './services/logging/LogLevel';\nimport LogTransporter from './services/logging/LogTransporter';\n\nexport type LogParams = { error?: unknown; [key: string]: unknown };\n\nconst wrapError = (error: unknown) => {\n  return error instanceof Error ? error : new Error(String(error));\n};\n\nexport const makeLogFn =\n  (logLevel: LogLevel) =>\n  (scope: string, message: string, { error, ...extra }: LogParams = {}) => {\n    const transporters = getAllModules(LogTransporter);\n\n    // call log on all transporters, the transporters should decide to handle the call or not\n    transporters.forEach((transporter) => {\n      transporter.log(logLevel, scope, message, extra, error ? wrapError(error) : undefined);\n    });\n  };\n\nexport const logDebug = makeLogFn(LogLevel.DEBUG);\nexport const logInfo = makeLogFn(LogLevel.INFO);\nexport const logWarn = makeLogFn(LogLevel.WARN);\nexport const logError = makeLogFn(LogLevel.ERROR);\nexport const logFatal = makeLogFn(LogLevel.FATAL);\n","import type { PlaylistItem } from '../../types/playlist';\nimport { MEDIA_CONTENT_TYPE } from '../constants';\n\nimport { isContentType } from './common';\n\ntype RequiredProperties<T, P extends keyof T> = T & Required<Pick<T, P>>;\n\ntype DeprecatedPlaylistItem = {\n  seriesPlayListId?: string;\n  seriesPlaylistId?: string;\n};\n\n// For the deprecated series flow we store seriesId in custom params\nexport const getSeriesPlaylistIdFromCustomParams = (item: (PlaylistItem & DeprecatedPlaylistItem) | undefined) =>\n  item ? item.seriesPlayListId || item.seriesPlaylistId || item.seriesId : undefined;\n\n// For the deprecated flow we store seriesId in the media custom params\nexport const isLegacySeriesFlow = (item: PlaylistItem) => {\n  return typeof getSeriesPlaylistIdFromCustomParams(item) !== 'undefined';\n};\n\n// For the new series flow we use contentType custom param to define media item to be series\n// In this case media item and series item have the same id\nexport const isSeriesContentType = (item: PlaylistItem) => isContentType(item, MEDIA_CONTENT_TYPE.series);\n\nexport const isSeries = (item: PlaylistItem) => isLegacySeriesFlow(item) || isSeriesContentType(item);\n\nexport const isEpisode = (item: PlaylistItem) => {\n  return typeof item?.episodeNumber !== 'undefined' || isContentType(item, MEDIA_CONTENT_TYPE.episode);\n};\n\nexport const getLegacySeriesPlaylistIdFromEpisodeTags = (item: PlaylistItem | undefined) => {\n  if (!item || !isEpisode(item)) {\n    return;\n  }\n\n  const tags = item.tags ? item.tags.split(',') : [];\n  const seriesIdTag = tags.find(function (tag) {\n    return /seriesid_([\\w\\d]+)/i.test(tag);\n  });\n\n  if (seriesIdTag) {\n    return seriesIdTag.split('_')[1];\n  }\n\n  return;\n};\n\nexport const isLiveChannel = (item: PlaylistItem): item is RequiredProperties<PlaylistItem, 'contentType'> =>\n  isContentType(item, MEDIA_CONTENT_TYPE.liveChannel);\n","import type { AppMenuType } from '@jwp/ott-common/types/config';\n\nimport type { PlaylistItem } from '../../types/playlist';\nimport { PATH_MEDIA, PATH_PLAYLIST, PATH_CONTENT_LIST } from '../paths';\nimport { logWarn } from '../logger';\nimport { APP_CONFIG_ITEM_TYPE } from '../constants';\n\nimport { getLegacySeriesPlaylistIdFromEpisodeTags, getSeriesPlaylistIdFromCustomParams } from './media';\n\nexport type QueryParamsArg = { [key: string]: string | number | string[] | undefined | null };\n\n/**\n * Creates a new URL from an url string (preserving the search params) and an object to add and remove query params\n *\n * @example\n * createURL('/m/123456?play=1', { foo: 'bar' }) === '/m/123456?play=6&foo=bar'\n * createURL('/m/123456?play=1', { play: null }) === '/m/123456'\n *\n * // works with absolute URLs\n * createURL('https://jwplayer.com/m/123456?play=1', { play: null }) === 'https://jwplayer.com/m/123456'\n */\nexport const createURL = (url: string, queryParams: QueryParamsArg) => {\n  const [baseUrl, urlQueryString = ''] = url.split('?');\n  const urlSearchParams = new URLSearchParams(urlQueryString);\n\n  Object.entries(queryParams).forEach(([key, value]) => {\n    if (value === null || value === undefined) {\n      return urlSearchParams.delete(key);\n    }\n\n    const formattedValue = Array.isArray(value) ? value.join(',') : value;\n\n    urlSearchParams.set(key, String(formattedValue));\n  });\n\n  const queryString = urlSearchParams.toString();\n\n  return `${baseUrl}${queryString ? `?${queryString}` : ''}`;\n};\n\ntype ExtractRouteParams<T extends string> = T extends `${infer _Start}:${infer Param}/${infer Rest}`\n  ? { [K in Param | keyof ExtractRouteParams<Rest>]: string }\n  : T extends `${infer _Start}:${infer Param}`\n  ? { [K in Param]: string }\n  : object;\n\ntype PathParams<T extends string> = T extends `${infer _Start}*` ? ExtractRouteParams<T> & Record<string, string | undefined> : ExtractRouteParams<T>;\n\n// Creates a route path from a path string and params object\nexport const createPath = <Path extends string>(originalPath: Path, pathParams?: PathParams<Path>, queryParams?: QueryParamsArg): string => {\n  const path = originalPath\n    .split('/')\n    .map((segment) => {\n      if (segment === '*') {\n        // Wild card for optional segments: add all params that are not already in the path\n        if (!pathParams) return segment;\n\n        return Object.entries(pathParams)\n          .filter(([key]) => !originalPath.includes(key))\n          .map(([_, value]) => value)\n          .join('/');\n      }\n      if (!segment.startsWith(':') || !pathParams) return segment;\n\n      // Check if param is optional, and show a warning if it's not optional and missing\n      // Then remove all special characters to get the actual param name\n      const isOptional = segment.endsWith('?');\n      const paramName = segment.replace(':', '').replace('?', '');\n      const paramValue = pathParams[paramName as keyof typeof pathParams];\n\n      if (!paramValue) {\n        if (!isOptional) {\n          logWarn('urlFormatting', `Missing param in path creation`, {\n            path: originalPath,\n            paramName,\n          });\n        }\n\n        return '';\n      }\n\n      return paramValue;\n    })\n    .join('/');\n\n  // Optionally add the query params\n  return queryParams ? createURL(path, queryParams) : path;\n};\n\nexport const slugify = (text: string, whitespaceChar: string = '-') =>\n  text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-')\n    .replace(/[^\\w-]+/g, '')\n    .replace(/--+/g, '-')\n    .replace(/^-+/, '')\n    .replace(/-+$/, '')\n    .replace(/-/g, whitespaceChar);\n\nexport const mediaURL = ({\n  id,\n  title,\n  playlistId,\n  play = false,\n  episodeId,\n}: {\n  id: string;\n  title?: string;\n  playlistId?: string | null;\n  play?: boolean;\n  episodeId?: string;\n}) => {\n  return createPath(\n    PATH_MEDIA,\n    { id, title: title ? slugify(title) : undefined },\n    {\n      r: playlistId,\n      play: play ? '1' : null,\n      e: episodeId,\n    },\n  );\n};\n\nexport const playlistURL = (id: string, title?: string) => {\n  return createPath(PATH_PLAYLIST, { id, title: title ? slugify(title) : undefined });\n};\n\nexport const contentListURL = (id: string, title?: string) => {\n  return createPath(PATH_CONTENT_LIST, { id, title: title ? slugify(title) : undefined });\n};\n\nexport const determinePath = ({ type, contentId, label }: { type: AppMenuType | undefined; contentId: string; label?: string }) => {\n  switch (type) {\n    case APP_CONFIG_ITEM_TYPE.content_list:\n      return contentListURL(contentId, label);\n    case APP_CONFIG_ITEM_TYPE.media:\n      return mediaURL({ id: contentId, title: label });\n    case APP_CONFIG_ITEM_TYPE.playlist:\n      return playlistURL(contentId, label);\n    default:\n      return '';\n  }\n};\n\nexport const liveChannelsURL = (playlistId: string, channelId?: string, play = false) => {\n  return createPath(\n    PATH_PLAYLIST,\n    { id: playlistId },\n    {\n      channel: channelId,\n      play: play ? '1' : null,\n    },\n  );\n};\n\n// Legacy URLs\nexport const legacySeriesURL = ({\n  seriesId,\n  episodeId,\n  play,\n  playlistId,\n}: {\n  seriesId: string;\n  episodeId?: string;\n  play?: boolean;\n  playlistId?: string | null;\n}) => createURL(`/s/${seriesId}`, { r: playlistId, e: episodeId, play: play ? '1' : null });\n\nexport const buildLegacySeriesUrlFromMediaItem = (media: PlaylistItem, play: boolean, playlistId: string | null) => {\n  const legacyPlaylistIdFromTags = getLegacySeriesPlaylistIdFromEpisodeTags(media);\n  const legacyPlaylistIdFromCustomParams = getSeriesPlaylistIdFromCustomParams(media);\n\n  return legacySeriesURL({\n    // Use the id grabbed from either custom params for series or tags for an episode\n    seriesId: legacyPlaylistIdFromCustomParams || legacyPlaylistIdFromTags || '',\n    play,\n    playlistId,\n    // Add episode id only if series id can be retrieved from tags\n    episodeId: legacyPlaylistIdFromTags && media.mediaid,\n  });\n};\n","export class ApiError extends Error {\n  code: number;\n  message: string;\n\n  constructor(message = '', code: number) {\n    super(message);\n    this.name = 'ApiError';\n    this.message = message;\n    this.code = code;\n  }\n}\n\n/**\n * Get data\n * @param response\n */\nexport const getDataOrThrow = async (response: Response) => {\n  const data = await response.json();\n\n  if (!response.ok) {\n    const message = `Request '${response.url}' failed with ${response.status}`;\n    const apiMessage = data && typeof data === 'object' && 'message' in data && typeof data.message === 'string' ? data.message : undefined;\n\n    throw new ApiError(apiMessage || message, response.status || 500);\n  }\n\n  return data;\n};\n","import { ACCESS_MODEL } from '../constants';\nimport type { AccessModel } from '../../types/config';\nimport type { MediaOffer } from '../../types/media';\nimport type { PlaylistItem } from '../../types/playlist';\n\nimport { isFalsyCustomParamValue, isTruthyCustomParamValue } from './common';\n\n/**\n * The appearance of the lock icon, depending on the access model\n *\n * @param accessModel Platform AccessModel, excluding TVOD, which can only be applied per item\n * @param isLoggedIn\n * @param hasSubscription\n * @param playlistItem Used to define if the item is 'free' or has mediaOffers\n * @returns\n */\nexport const isLocked = (accessModel: AccessModel, isLoggedIn: boolean, hasSubscription: boolean, playlistItem: PlaylistItem): boolean => {\n  const isItemFree = isFalsyCustomParamValue(playlistItem?.requiresSubscription) || isTruthyCustomParamValue(playlistItem?.free);\n  const mediaOffers = playlistItem?.mediaOffers;\n\n  if (isItemFree) return false;\n  if (accessModel === ACCESS_MODEL.AVOD && !mediaOffers) return false;\n  if (accessModel === ACCESS_MODEL.AUTHVOD && isLoggedIn && !mediaOffers) return false;\n  if (accessModel === ACCESS_MODEL.SVOD && hasSubscription && !mediaOffers?.some((offer) => offer.premier)) return false;\n\n  return true;\n};\n\n/**\n * Filters MediaOffers from offers string\n *\n * @param offerIds String of comma separated key/value pairs, i.e. \"cleeng:S916977979_NL, !cleeng:S91633379_NL, other_vendor:xyz123\"\n * Key is vendor, value is the offerId.\n * Vendor keys starting with an exclamation mark represent a 'Premier Access' offer (TVOD only)\n *\n * @returns An array of MediaOffer { offerId, premier }\n */\nexport const filterMediaOffers = (vendorPrefix: string, offerIds?: string): MediaOffer[] | null => {\n  if (!offerIds) return null;\n\n  return offerIds\n    .replace(/\\s/g, '')\n    .split(',')\n    .reduce<MediaOffer[]>(\n      (offers, offerId) =>\n        offerId.indexOf(`${vendorPrefix}:`) === 0 || offerId.indexOf(`!${vendorPrefix}:`) === 0\n          ? [...offers, { offerId: offerId.slice(offerId.indexOf(':') + 1), premier: offerId[0] === '!' }]\n          : offers,\n      [],\n    );\n};\n","import type { StateCreator } from 'zustand';\nimport { create } from 'zustand';\nimport { devtools, subscribeWithSelector } from 'zustand/middleware';\n\nimport { IS_DEVELOPMENT_BUILD, IS_TEST_MODE } from '../utils/common';\n\nexport const createStore = <T>(name: string, storeFn: StateCreator<T>) => {\n  const store = subscribeWithSelector(storeFn);\n\n  // https://github.com/pmndrs/zustand/issues/852#issuecomment-1059783350\n  if (IS_DEVELOPMENT_BUILD && !IS_TEST_MODE) {\n    return create(\n      devtools(store, {\n        name,\n        anonymousActionType: `${name}/Action`,\n      }),\n    );\n  }\n\n  return create(store);\n};\n","import { ACCESS_MODEL, OTT_GLOBAL_PLAYER_ID } from '../constants';\nimport type { AccessModel, Config } from '../../types/config';\nimport type { Settings } from '../../types/settings';\nimport type { LanguageDefinition } from '../../types/i18n';\n\nimport { createStore } from './utils';\n\ntype ConfigState = {\n  loaded: boolean;\n  config: Config;\n  accessModel: AccessModel;\n  settings: Settings;\n  integrationType: string | null;\n  supportedLanguages: LanguageDefinition[];\n};\n\nexport const useConfigStore = createStore<ConfigState>('ConfigStore', () => ({\n  loaded: false,\n  config: {\n    id: '',\n    siteName: '',\n    description: '',\n    player: '',\n    siteId: '',\n    assets: {},\n    content: [],\n    menu: [],\n    integrations: {\n      cleeng: {\n        useSandbox: true,\n      },\n      jwp: {\n        clientId: null,\n        assetId: null,\n        useSandbox: true,\n      },\n    },\n    styling: {},\n  },\n  settings: {\n    additionalAllowedConfigSources: [],\n    playerId: OTT_GLOBAL_PLAYER_ID,\n  },\n  supportedLanguages: [],\n  accessModel: ACCESS_MODEL.AVOD,\n  integrationType: null,\n}));\n","import {\n  ApolloClient,\n  ApolloLink,\n  createHttpLink,\n  InMemoryCache,\n  split,\n} from '@apollo/client';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { getMainDefinition } from '@apollo/client/utilities';\n\n/**\n * Retrieves an ApolloClient by passing in the target GraphQL URL.\n *\n * Optionally a GraphQL Subscription WebSocket URL may be passed to create the ApolloClient with support for GraphQL Subscriptions.\n *\n * @param targetEndpoint The target GraphQL URL\n * @param subscriptionEndpoint The optional target GraphQL Subscription WebSocket URL\n * @returns\n */\nexport const getApolloClient = (\n  targetEndpoint: string,\n  subscriptionEndpoint?: string,\n): ApolloClient<unknown> => {\n  const httpLink = createHttpLink({\n    uri: targetEndpoint,\n  });\n\n  let wsLink: WebSocketLink | undefined;\n  let splitLink: ApolloLink | undefined;\n\n  if (subscriptionEndpoint !== undefined) {\n    wsLink = new WebSocketLink({\n      uri: subscriptionEndpoint,\n      options: {\n        reconnect: true,\n      },\n    });\n\n    /**\n     * Split link to switch between `httpLink` and `wsLink` depending on the type of the operation being invoked.\n     *\n     * The split function takes three parameters:\n     *  - A function that determines if the GQL operation is a subscription or not.\n     *  - The Link to use if the GQL operation is a subscription.\n     *  - The Link to use if the GQL operation is not a subscription.\n     */\n    splitLink = split(\n      ({ query }) => {\n        const definition = getMainDefinition(query);\n\n        return (\n          definition.kind === 'OperationDefinition' &&\n          definition.operation === 'subscription'\n        );\n      },\n      wsLink,\n      httpLink,\n    );\n  }\n\n  return new ApolloClient({\n    link: subscriptionEndpoint ? splitLink : httpLink,\n    cache: new InMemoryCache({ addTypename: false }),\n  });\n};\n","import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nexport type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };\nexport type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };\nconst defaultOptions = {} as const;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: { input: string; output: string; }\n  String: { input: string; output: string; }\n  Boolean: { input: boolean; output: boolean; }\n  Int: { input: number; output: number; }\n  Float: { input: number; output: number; }\n  Cursor: { input: any; output: any; }\n  Datetime: { input: any; output: any; }\n};\n\n/** A filter to be used against Boolean fields. All fields are combined with a logical ‘and.’ */\nexport type BooleanFilter = {\n  /** Not equal to the specified value, treating null like an ordinary value. */\n  distinctFrom?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Equal to the specified value. */\n  equalTo?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Greater than the specified value. */\n  greaterThan?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Greater than or equal to the specified value. */\n  greaterThanOrEqualTo?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Included in the specified list. */\n  in?: InputMaybe<Array<Scalars['Boolean']['input']>>;\n  /** Is null (if `true` is specified) or is not null (if `false` is specified). */\n  isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Less than the specified value. */\n  lessThan?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Less than or equal to the specified value. */\n  lessThanOrEqualTo?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Equal to the specified value, treating null like an ordinary value. */\n  notDistinctFrom?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Not equal to the specified value. */\n  notEqualTo?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Not included in the specified list. */\n  notIn?: InputMaybe<Array<Scalars['Boolean']['input']>>;\n};\n\n/** Definition of the channel entity. */\nexport type Channel = {\n  __typename?: 'Channel';\n  /** DASH stream URL of the channel. */\n  dashStreamUrl?: Maybe<Scalars['String']['output']>;\n  /** Description of the channel. */\n  description?: Maybe<Scalars['String']['output']>;\n  /** HLS stream URL of the channel. */\n  hlsStreamUrl?: Maybe<Scalars['String']['output']>;\n  id: Scalars['String']['output'];\n  /** Reads and enables pagination through a set of `ChannelImage`. */\n  images: ChannelImagesConnection;\n  /** Key identifier for DRM protected streams. */\n  keyId?: Maybe<Scalars['String']['output']>;\n  /** Reads and enables pagination through a set of `Playlist`. */\n  playlists: PlaylistsConnection;\n  /** Title of the channel. */\n  title?: Maybe<Scalars['String']['output']>;\n};\n\n\n/** Definition of the channel entity. */\nexport type ChannelImagesArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<ChannelImageCondition>;\n  filter?: InputMaybe<ChannelImageFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<ChannelImagesOrderBy>>;\n};\n\n\n/** Definition of the channel entity. */\nexport type ChannelPlaylistsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<PlaylistCondition>;\n  filter?: InputMaybe<PlaylistFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<PlaylistsOrderBy>>;\n};\n\n/** A condition to be used against `Channel` object types. All fields are tested for equality and combined with a logical ‘and.’ */\nexport type ChannelCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `title` field. */\n  title?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `Channel` object types. All fields are combined with a logical ‘and.’ */\nexport type ChannelFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<ChannelFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<ChannelFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<ChannelFilter>>;\n  /** Filter by the object’s `title` field. */\n  title?: InputMaybe<StringFilter>;\n};\n\n/** Asset image metadata. */\nexport type ChannelImage = {\n  __typename?: 'ChannelImage';\n  altText?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `Channel` that is related to this `ChannelImage`. */\n  channel?: Maybe<Channel>;\n  channelId?: Maybe<Scalars['String']['output']>;\n  /** Height of the image in pixels. */\n  height?: Maybe<Scalars['Int']['output']>;\n  id: Scalars['Int']['output'];\n  /** URI to the image file. */\n  path?: Maybe<Scalars['String']['output']>;\n  /** Type of the image. */\n  type?: Maybe<Scalars['String']['output']>;\n  /** Width of the image in pixels. */\n  width?: Maybe<Scalars['Int']['output']>;\n};\n\n/**\n * A condition to be used against `ChannelImage` object types. All fields are\n * tested for equality and combined with a logical ‘and.’\n */\nexport type ChannelImageCondition = {\n  /** Checks for equality with the object’s `altText` field. */\n  altText?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `channelId` field. */\n  channelId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** A filter to be used against `ChannelImage` object types. All fields are combined with a logical ‘and.’ */\nexport type ChannelImageFilter = {\n  /** Filter by the object’s `altText` field. */\n  altText?: InputMaybe<StringFilter>;\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<ChannelImageFilter>>;\n  /** Filter by the object’s `channelId` field. */\n  channelId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<ChannelImageFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<ChannelImageFilter>>;\n};\n\n/** A connection to a list of `ChannelImage` values. */\nexport type ChannelImagesConnection = {\n  __typename?: 'ChannelImagesConnection';\n  /** A list of edges which contains the `ChannelImage` and cursor to aid in pagination. */\n  edges: Array<ChannelImagesEdge>;\n  /** A list of `ChannelImage` objects. */\n  nodes: Array<ChannelImage>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `ChannelImage` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `ChannelImage` edge in the connection. */\nexport type ChannelImagesEdge = {\n  __typename?: 'ChannelImagesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `ChannelImage` at the end of the edge. */\n  node: ChannelImage;\n};\n\n/** Methods to use when ordering `ChannelImage`. */\nexport enum ChannelImagesOrderBy {\n  AltTextAsc = 'ALT_TEXT_ASC',\n  AltTextDesc = 'ALT_TEXT_DESC',\n  ChannelIdAsc = 'CHANNEL_ID_ASC',\n  ChannelIdDesc = 'CHANNEL_ID_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC'\n}\n\n/** A connection to a list of `Channel` values. */\nexport type ChannelsConnection = {\n  __typename?: 'ChannelsConnection';\n  /** A list of edges which contains the `Channel` and cursor to aid in pagination. */\n  edges: Array<ChannelsEdge>;\n  /** A list of `Channel` objects. */\n  nodes: Array<Channel>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Channel` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `Channel` edge in the connection. */\nexport type ChannelsEdge = {\n  __typename?: 'ChannelsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `Channel` at the end of the edge. */\n  node: Channel;\n};\n\n/** Methods to use when ordering `Channel`. */\nexport enum ChannelsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TitleAsc = 'TITLE_ASC',\n  TitleDesc = 'TITLE_DESC'\n}\n\n/** Definition of the collection entity. */\nexport type Collection = {\n  __typename?: 'Collection';\n  /** Longer description. */\n  description?: Maybe<Scalars['String']['output']>;\n  id: Scalars['String']['output'];\n  /** Reads and enables pagination through a set of `CollectionImage`. */\n  images: CollectionImagesConnection;\n  /** Reads and enables pagination through a set of `CollectionItemsRelation`. */\n  items: CollectionItemsRelationsConnection;\n  /** Short description. */\n  synopsis?: Maybe<Scalars['String']['output']>;\n  /** Array of tags associated with the content. */\n  tags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Title of the collection. */\n  title?: Maybe<Scalars['String']['output']>;\n};\n\n\n/** Definition of the collection entity. */\nexport type CollectionImagesArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<CollectionImageCondition>;\n  filter?: InputMaybe<CollectionImageFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<CollectionImagesOrderBy>>;\n};\n\n\n/** Definition of the collection entity. */\nexport type CollectionItemsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<CollectionItemsRelationCondition>;\n  filter?: InputMaybe<CollectionItemsRelationFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<CollectionItemsRelationsOrderBy>>;\n};\n\n/**\n * A condition to be used against `Collection` object types. All fields are tested\n * for equality and combined with a logical ‘and.’\n */\nexport type CollectionCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `title` field. */\n  title?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `Collection` object types. All fields are combined with a logical ‘and.’ */\nexport type CollectionFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<CollectionFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<CollectionFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<CollectionFilter>>;\n  /** Filter by the object’s `title` field. */\n  title?: InputMaybe<StringFilter>;\n};\n\n/** Asset image metadata. */\nexport type CollectionImage = {\n  __typename?: 'CollectionImage';\n  altText?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `Collection` that is related to this `CollectionImage`. */\n  collection?: Maybe<Collection>;\n  collectionId?: Maybe<Scalars['String']['output']>;\n  /** Height of the image in pixels. */\n  height?: Maybe<Scalars['Int']['output']>;\n  id: Scalars['Int']['output'];\n  /** URI to the image file. */\n  path?: Maybe<Scalars['String']['output']>;\n  /** Type of the image. */\n  type?: Maybe<Scalars['String']['output']>;\n  /** Width of the image in pixels. */\n  width?: Maybe<Scalars['Int']['output']>;\n};\n\n/**\n * A condition to be used against `CollectionImage` object types. All fields are\n * tested for equality and combined with a logical ‘and.’\n */\nexport type CollectionImageCondition = {\n  /** Checks for equality with the object’s `altText` field. */\n  altText?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `collectionId` field. */\n  collectionId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** A filter to be used against `CollectionImage` object types. All fields are combined with a logical ‘and.’ */\nexport type CollectionImageFilter = {\n  /** Filter by the object’s `altText` field. */\n  altText?: InputMaybe<StringFilter>;\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<CollectionImageFilter>>;\n  /** Filter by the object’s `collectionId` field. */\n  collectionId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<CollectionImageFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<CollectionImageFilter>>;\n};\n\n/** A connection to a list of `CollectionImage` values. */\nexport type CollectionImagesConnection = {\n  __typename?: 'CollectionImagesConnection';\n  /** A list of edges which contains the `CollectionImage` and cursor to aid in pagination. */\n  edges: Array<CollectionImagesEdge>;\n  /** A list of `CollectionImage` objects. */\n  nodes: Array<CollectionImage>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `CollectionImage` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `CollectionImage` edge in the connection. */\nexport type CollectionImagesEdge = {\n  __typename?: 'CollectionImagesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `CollectionImage` at the end of the edge. */\n  node: CollectionImage;\n};\n\n/** Methods to use when ordering `CollectionImage`. */\nexport enum CollectionImagesOrderBy {\n  AltTextAsc = 'ALT_TEXT_ASC',\n  AltTextDesc = 'ALT_TEXT_DESC',\n  CollectionIdAsc = 'COLLECTION_ID_ASC',\n  CollectionIdDesc = 'COLLECTION_ID_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC'\n}\n\nexport type CollectionItemsRelation = {\n  __typename?: 'CollectionItemsRelation';\n  /** Reads a single `Collection` that is related to this `CollectionItemsRelation`. */\n  collection?: Maybe<Collection>;\n  collectionId?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `Episode` that is related to this `CollectionItemsRelation`. */\n  episode?: Maybe<Episode>;\n  episodeId?: Maybe<Scalars['String']['output']>;\n  id: Scalars['Int']['output'];\n  /** Reads a single `Movie` that is related to this `CollectionItemsRelation`. */\n  movie?: Maybe<Movie>;\n  movieId?: Maybe<Scalars['String']['output']>;\n  orderNo: Scalars['Int']['output'];\n  /** Type of the relation. */\n  relationType?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `Season` that is related to this `CollectionItemsRelation`. */\n  season?: Maybe<Season>;\n  seasonId?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `Tvshow` that is related to this `CollectionItemsRelation`. */\n  tvshow?: Maybe<Tvshow>;\n  tvshowId?: Maybe<Scalars['String']['output']>;\n};\n\n/**\n * A condition to be used against `CollectionItemsRelation` object types. All\n * fields are tested for equality and combined with a logical ‘and.’\n */\nexport type CollectionItemsRelationCondition = {\n  /** Checks for equality with the object’s `collectionId` field. */\n  collectionId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `episodeId` field. */\n  episodeId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `movieId` field. */\n  movieId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `orderNo` field. */\n  orderNo?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `seasonId` field. */\n  seasonId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `tvshowId` field. */\n  tvshowId?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `CollectionItemsRelation` object types. All fields are combined with a logical ‘and.’ */\nexport type CollectionItemsRelationFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<CollectionItemsRelationFilter>>;\n  /** Filter by the object’s `collectionId` field. */\n  collectionId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `episodeId` field. */\n  episodeId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `movieId` field. */\n  movieId?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<CollectionItemsRelationFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<CollectionItemsRelationFilter>>;\n  /** Filter by the object’s `orderNo` field. */\n  orderNo?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `seasonId` field. */\n  seasonId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `tvshowId` field. */\n  tvshowId?: InputMaybe<StringFilter>;\n};\n\n/** A connection to a list of `CollectionItemsRelation` values. */\nexport type CollectionItemsRelationsConnection = {\n  __typename?: 'CollectionItemsRelationsConnection';\n  /** A list of edges which contains the `CollectionItemsRelation` and cursor to aid in pagination. */\n  edges: Array<CollectionItemsRelationsEdge>;\n  /** A list of `CollectionItemsRelation` objects. */\n  nodes: Array<CollectionItemsRelation>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `CollectionItemsRelation` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `CollectionItemsRelation` edge in the connection. */\nexport type CollectionItemsRelationsEdge = {\n  __typename?: 'CollectionItemsRelationsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `CollectionItemsRelation` at the end of the edge. */\n  node: CollectionItemsRelation;\n};\n\n/** Methods to use when ordering `CollectionItemsRelation`. */\nexport enum CollectionItemsRelationsOrderBy {\n  CollectionIdAsc = 'COLLECTION_ID_ASC',\n  CollectionIdDesc = 'COLLECTION_ID_DESC',\n  EpisodeIdAsc = 'EPISODE_ID_ASC',\n  EpisodeIdDesc = 'EPISODE_ID_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  MovieIdAsc = 'MOVIE_ID_ASC',\n  MovieIdDesc = 'MOVIE_ID_DESC',\n  Natural = 'NATURAL',\n  OrderNoAsc = 'ORDER_NO_ASC',\n  OrderNoDesc = 'ORDER_NO_DESC',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  SeasonIdAsc = 'SEASON_ID_ASC',\n  SeasonIdDesc = 'SEASON_ID_DESC',\n  TvshowIdAsc = 'TVSHOW_ID_ASC',\n  TvshowIdDesc = 'TVSHOW_ID_DESC'\n}\n\n/** A connection to a list of `Collection` values. */\nexport type CollectionsConnection = {\n  __typename?: 'CollectionsConnection';\n  /** A list of edges which contains the `Collection` and cursor to aid in pagination. */\n  edges: Array<CollectionsEdge>;\n  /** A list of `Collection` objects. */\n  nodes: Array<Collection>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Collection` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `Collection` edge in the connection. */\nexport type CollectionsEdge = {\n  __typename?: 'CollectionsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `Collection` at the end of the edge. */\n  node: Collection;\n};\n\n/** Methods to use when ordering `Collection`. */\nexport enum CollectionsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TitleAsc = 'TITLE_ASC',\n  TitleDesc = 'TITLE_DESC'\n}\n\n/** Definition of the TV show episode entity. */\nexport type Episode = {\n  __typename?: 'Episode';\n  /** Cast of the episode. */\n  cast?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Extended synopsis. */\n  description?: Maybe<Scalars['String']['output']>;\n  /** Reads and enables pagination through a set of `EpisodeGenresRelation`. */\n  genres: EpisodeGenresRelationsConnection;\n  id: Scalars['String']['output'];\n  /** Reads and enables pagination through a set of `EpisodeImage`. */\n  images: EpisodeImagesConnection;\n  /** Episode number */\n  index?: Maybe<Scalars['Int']['output']>;\n  /** Reads and enables pagination through a set of `EpisodeLicense`. */\n  licenses: EpisodeLicensesConnection;\n  /** Original title of the episode. */\n  originalTitle?: Maybe<Scalars['String']['output']>;\n  /** Array of production countries */\n  productionCountries?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Date of first release. */\n  released?: Maybe<Scalars['Datetime']['output']>;\n  /** Reads a single `Season` that is related to this `Episode`. */\n  season?: Maybe<Season>;\n  seasonId?: Maybe<Scalars['String']['output']>;\n  /** Name of the producing studio. */\n  studio?: Maybe<Scalars['String']['output']>;\n  /** Short description of the main plot elements. */\n  synopsis?: Maybe<Scalars['String']['output']>;\n  /** Array of tags associated with the content. */\n  tags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Title of the episode. */\n  title?: Maybe<Scalars['String']['output']>;\n  /** Reads and enables pagination through a set of `EpisodeVideo`. */\n  videos: EpisodeVideosConnection;\n};\n\n\n/** Definition of the TV show episode entity. */\nexport type EpisodeGenresArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<EpisodeGenresRelationCondition>;\n  filter?: InputMaybe<EpisodeGenresRelationFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<EpisodeGenresRelationsOrderBy>>;\n};\n\n\n/** Definition of the TV show episode entity. */\nexport type EpisodeImagesArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<EpisodeImageCondition>;\n  filter?: InputMaybe<EpisodeImageFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<EpisodeImagesOrderBy>>;\n};\n\n\n/** Definition of the TV show episode entity. */\nexport type EpisodeLicensesArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<EpisodeLicenseCondition>;\n  filter?: InputMaybe<EpisodeLicenseFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<EpisodeLicensesOrderBy>>;\n};\n\n\n/** Definition of the TV show episode entity. */\nexport type EpisodeVideosArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<EpisodeVideoCondition>;\n  filter?: InputMaybe<EpisodeVideoFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<EpisodeVideosOrderBy>>;\n};\n\n/** A condition to be used against `Episode` object types. All fields are tested for equality and combined with a logical ‘and.’ */\nexport type EpisodeCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `seasonId` field. */\n  seasonId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `title` field. */\n  title?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `Episode` object types. All fields are combined with a logical ‘and.’ */\nexport type EpisodeFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<EpisodeFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<EpisodeFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<EpisodeFilter>>;\n  /** Filter by the object’s `seasonId` field. */\n  seasonId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `title` field. */\n  title?: InputMaybe<StringFilter>;\n};\n\nexport type EpisodeGenresRelation = {\n  __typename?: 'EpisodeGenresRelation';\n  /** Reads a single `Episode` that is related to this `EpisodeGenresRelation`. */\n  episode?: Maybe<Episode>;\n  episodeId?: Maybe<Scalars['String']['output']>;\n  id: Scalars['Int']['output'];\n  orderNo: Scalars['Int']['output'];\n  /** Reads a single `TvshowGenre` that is related to this `EpisodeGenresRelation`. */\n  tvshowGenre?: Maybe<TvshowGenre>;\n  tvshowGenreId?: Maybe<Scalars['String']['output']>;\n};\n\n/**\n * A condition to be used against `EpisodeGenresRelation` object types. All fields\n * are tested for equality and combined with a logical ‘and.’\n */\nexport type EpisodeGenresRelationCondition = {\n  /** Checks for equality with the object’s `episodeId` field. */\n  episodeId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `orderNo` field. */\n  orderNo?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `tvshowGenreId` field. */\n  tvshowGenreId?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `EpisodeGenresRelation` object types. All fields are combined with a logical ‘and.’ */\nexport type EpisodeGenresRelationFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<EpisodeGenresRelationFilter>>;\n  /** Filter by the object’s `episodeId` field. */\n  episodeId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<EpisodeGenresRelationFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<EpisodeGenresRelationFilter>>;\n  /** Filter by the object’s `orderNo` field. */\n  orderNo?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `tvshowGenreId` field. */\n  tvshowGenreId?: InputMaybe<StringFilter>;\n};\n\n/** A connection to a list of `EpisodeGenresRelation` values. */\nexport type EpisodeGenresRelationsConnection = {\n  __typename?: 'EpisodeGenresRelationsConnection';\n  /** A list of edges which contains the `EpisodeGenresRelation` and cursor to aid in pagination. */\n  edges: Array<EpisodeGenresRelationsEdge>;\n  /** A list of `EpisodeGenresRelation` objects. */\n  nodes: Array<EpisodeGenresRelation>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `EpisodeGenresRelation` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `EpisodeGenresRelation` edge in the connection. */\nexport type EpisodeGenresRelationsEdge = {\n  __typename?: 'EpisodeGenresRelationsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `EpisodeGenresRelation` at the end of the edge. */\n  node: EpisodeGenresRelation;\n};\n\n/** Methods to use when ordering `EpisodeGenresRelation`. */\nexport enum EpisodeGenresRelationsOrderBy {\n  EpisodeIdAsc = 'EPISODE_ID_ASC',\n  EpisodeIdDesc = 'EPISODE_ID_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  OrderNoAsc = 'ORDER_NO_ASC',\n  OrderNoDesc = 'ORDER_NO_DESC',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TvshowGenreIdAsc = 'TVSHOW_GENRE_ID_ASC',\n  TvshowGenreIdDesc = 'TVSHOW_GENRE_ID_DESC'\n}\n\n/** Asset image metadata. */\nexport type EpisodeImage = {\n  __typename?: 'EpisodeImage';\n  altText?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `Episode` that is related to this `EpisodeImage`. */\n  episode?: Maybe<Episode>;\n  episodeId?: Maybe<Scalars['String']['output']>;\n  /** Height of the image in pixels. */\n  height?: Maybe<Scalars['Int']['output']>;\n  id: Scalars['Int']['output'];\n  /** URI to the image file. */\n  path?: Maybe<Scalars['String']['output']>;\n  /** Type of the image. */\n  type?: Maybe<Scalars['String']['output']>;\n  /** Width of the image in pixels. */\n  width?: Maybe<Scalars['Int']['output']>;\n};\n\n/**\n * A condition to be used against `EpisodeImage` object types. All fields are\n * tested for equality and combined with a logical ‘and.’\n */\nexport type EpisodeImageCondition = {\n  /** Checks for equality with the object’s `altText` field. */\n  altText?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `episodeId` field. */\n  episodeId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** A filter to be used against `EpisodeImage` object types. All fields are combined with a logical ‘and.’ */\nexport type EpisodeImageFilter = {\n  /** Filter by the object’s `altText` field. */\n  altText?: InputMaybe<StringFilter>;\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<EpisodeImageFilter>>;\n  /** Filter by the object’s `episodeId` field. */\n  episodeId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<EpisodeImageFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<EpisodeImageFilter>>;\n};\n\n/** A connection to a list of `EpisodeImage` values. */\nexport type EpisodeImagesConnection = {\n  __typename?: 'EpisodeImagesConnection';\n  /** A list of edges which contains the `EpisodeImage` and cursor to aid in pagination. */\n  edges: Array<EpisodeImagesEdge>;\n  /** A list of `EpisodeImage` objects. */\n  nodes: Array<EpisodeImage>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `EpisodeImage` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `EpisodeImage` edge in the connection. */\nexport type EpisodeImagesEdge = {\n  __typename?: 'EpisodeImagesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `EpisodeImage` at the end of the edge. */\n  node: EpisodeImage;\n};\n\n/** Methods to use when ordering `EpisodeImage`. */\nexport enum EpisodeImagesOrderBy {\n  AltTextAsc = 'ALT_TEXT_ASC',\n  AltTextDesc = 'ALT_TEXT_DESC',\n  EpisodeIdAsc = 'EPISODE_ID_ASC',\n  EpisodeIdDesc = 'EPISODE_ID_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC'\n}\n\n/** Content metadata license that defines the content availability regions and time frame. */\nexport type EpisodeLicense = {\n  __typename?: 'EpisodeLicense';\n  /** Array of countries where the license applies. */\n  countries?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Time when license becomes invalid. */\n  endTime?: Maybe<Scalars['Datetime']['output']>;\n  /** Reads a single `Episode` that is related to this `EpisodeLicense`. */\n  episode?: Maybe<Episode>;\n  episodeId?: Maybe<Scalars['String']['output']>;\n  id: Scalars['Int']['output'];\n  /** Time when license becomes valid. */\n  startTime?: Maybe<Scalars['Datetime']['output']>;\n};\n\n/**\n * A condition to be used against `EpisodeLicense` object types. All fields are\n * tested for equality and combined with a logical ‘and.’\n */\nexport type EpisodeLicenseCondition = {\n  /** Checks for equality with the object’s `episodeId` field. */\n  episodeId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** A filter to be used against `EpisodeLicense` object types. All fields are combined with a logical ‘and.’ */\nexport type EpisodeLicenseFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<EpisodeLicenseFilter>>;\n  /** Filter by the object’s `episodeId` field. */\n  episodeId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<EpisodeLicenseFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<EpisodeLicenseFilter>>;\n};\n\n/** A connection to a list of `EpisodeLicense` values. */\nexport type EpisodeLicensesConnection = {\n  __typename?: 'EpisodeLicensesConnection';\n  /** A list of edges which contains the `EpisodeLicense` and cursor to aid in pagination. */\n  edges: Array<EpisodeLicensesEdge>;\n  /** A list of `EpisodeLicense` objects. */\n  nodes: Array<EpisodeLicense>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `EpisodeLicense` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `EpisodeLicense` edge in the connection. */\nexport type EpisodeLicensesEdge = {\n  __typename?: 'EpisodeLicensesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `EpisodeLicense` at the end of the edge. */\n  node: EpisodeLicense;\n};\n\n/** Methods to use when ordering `EpisodeLicense`. */\nexport enum EpisodeLicensesOrderBy {\n  EpisodeIdAsc = 'EPISODE_ID_ASC',\n  EpisodeIdDesc = 'EPISODE_ID_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC'\n}\n\n/** Video stream metadata. */\nexport type EpisodeVideo = {\n  __typename?: 'EpisodeVideo';\n  /** Array of audio languages available in the stream. */\n  audioLanguages?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Array of caption languages available in the stream. */\n  captionLanguages?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Reads and enables pagination through a set of `EpisodeVideoCuePoint`. */\n  cuePoints: EpisodeVideoCuePointsConnection;\n  /** URI to a DASH manifest. */\n  dashManifest?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `Episode` that is related to this `EpisodeVideo`. */\n  episode?: Maybe<Episode>;\n  episodeId?: Maybe<Scalars['String']['output']>;\n  /** URI to an HLS manifest. */\n  hlsManifest?: Maybe<Scalars['String']['output']>;\n  id: Scalars['Int']['output'];\n  /** Indicates whether a stream is protected with DRM. */\n  isProtected?: Maybe<Scalars['Boolean']['output']>;\n  /** Length of the stream in seconds. */\n  lengthInSeconds?: Maybe<Scalars['Float']['output']>;\n  /** Output format of the stream. */\n  outputFormat?: Maybe<Scalars['String']['output']>;\n  /** Array of subtitle languages available in the stream. */\n  subtitleLanguages?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Title of the video stream */\n  title?: Maybe<Scalars['String']['output']>;\n  /** Type of the video stream. */\n  type?: Maybe<Scalars['String']['output']>;\n  /** Reads and enables pagination through a set of `EpisodeVideoStream`. */\n  videoStreams: EpisodeVideoStreamsConnection;\n};\n\n\n/** Video stream metadata. */\nexport type EpisodeVideoCuePointsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<EpisodeVideoCuePointCondition>;\n  filter?: InputMaybe<EpisodeVideoCuePointFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<EpisodeVideoCuePointsOrderBy>>;\n};\n\n\n/** Video stream metadata. */\nexport type EpisodeVideoVideoStreamsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<EpisodeVideoStreamCondition>;\n  filter?: InputMaybe<EpisodeVideoStreamFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<EpisodeVideoStreamsOrderBy>>;\n};\n\n/**\n * A condition to be used against `EpisodeVideo` object types. All fields are\n * tested for equality and combined with a logical ‘and.’\n */\nexport type EpisodeVideoCondition = {\n  /** Checks for equality with the object’s `episodeId` field. */\n  episodeId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `type` field. */\n  type?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** Video cue point metadata */\nexport type EpisodeVideoCuePoint = {\n  __typename?: 'EpisodeVideoCuePoint';\n  /** Type of the cue point */\n  cuePointTypeKey: Scalars['String']['output'];\n  id: Scalars['Int']['output'];\n  /** Time in seconds at which the cue point is set within the video */\n  timeInSeconds: Scalars['Float']['output'];\n  /** Additional information associated with the cue point */\n  value?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `EpisodeVideo` that is related to this `EpisodeVideoCuePoint`. */\n  video?: Maybe<EpisodeVideo>;\n  videoId?: Maybe<Scalars['Int']['output']>;\n};\n\n/**\n * A condition to be used against `EpisodeVideoCuePoint` object types. All fields\n * are tested for equality and combined with a logical ‘and.’\n */\nexport type EpisodeVideoCuePointCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `videoId` field. */\n  videoId?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** A filter to be used against `EpisodeVideoCuePoint` object types. All fields are combined with a logical ‘and.’ */\nexport type EpisodeVideoCuePointFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<EpisodeVideoCuePointFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<EpisodeVideoCuePointFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<EpisodeVideoCuePointFilter>>;\n  /** Filter by the object’s `videoId` field. */\n  videoId?: InputMaybe<IntFilter>;\n};\n\n/** A connection to a list of `EpisodeVideoCuePoint` values. */\nexport type EpisodeVideoCuePointsConnection = {\n  __typename?: 'EpisodeVideoCuePointsConnection';\n  /** A list of edges which contains the `EpisodeVideoCuePoint` and cursor to aid in pagination. */\n  edges: Array<EpisodeVideoCuePointsEdge>;\n  /** A list of `EpisodeVideoCuePoint` objects. */\n  nodes: Array<EpisodeVideoCuePoint>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `EpisodeVideoCuePoint` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `EpisodeVideoCuePoint` edge in the connection. */\nexport type EpisodeVideoCuePointsEdge = {\n  __typename?: 'EpisodeVideoCuePointsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `EpisodeVideoCuePoint` at the end of the edge. */\n  node: EpisodeVideoCuePoint;\n};\n\n/** Methods to use when ordering `EpisodeVideoCuePoint`. */\nexport enum EpisodeVideoCuePointsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  VideoIdAsc = 'VIDEO_ID_ASC',\n  VideoIdDesc = 'VIDEO_ID_DESC'\n}\n\n/** A filter to be used against `EpisodeVideo` object types. All fields are combined with a logical ‘and.’ */\nexport type EpisodeVideoFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<EpisodeVideoFilter>>;\n  /** Filter by the object’s `episodeId` field. */\n  episodeId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<EpisodeVideoFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<EpisodeVideoFilter>>;\n  /** Filter by the object’s `type` field. */\n  type?: InputMaybe<StringFilter>;\n};\n\n/** Video stream DRM metadata */\nexport type EpisodeVideoStream = {\n  __typename?: 'EpisodeVideoStream';\n  /** Bitrate in kilobits per second */\n  bitrateInKbps?: Maybe<Scalars['Int']['output']>;\n  /** Codecs */\n  codecs?: Maybe<Scalars['String']['output']>;\n  /** Display aspect ratio for video streams */\n  displayAspectRatio?: Maybe<Scalars['String']['output']>;\n  /** File path to the initialization segment */\n  file?: Maybe<Scalars['String']['output']>;\n  /** File Template */\n  fileTemplate?: Maybe<Scalars['String']['output']>;\n  /** Packaging format of the stream */\n  format?: Maybe<Scalars['String']['output']>;\n  /** Frame rate of the video stream */\n  frameRate?: Maybe<Scalars['Float']['output']>;\n  /** Height of the video stream */\n  height?: Maybe<Scalars['Int']['output']>;\n  id: Scalars['Int']['output'];\n  /** Initialization Vector of the stream */\n  iv?: Maybe<Scalars['String']['output']>;\n  /** DRM Key ID */\n  keyId?: Maybe<Scalars['String']['output']>;\n  /** Label indicating the type of stream (audio/video) */\n  label?: Maybe<Scalars['String']['output']>;\n  /** The language code for audio streams */\n  languageCode?: Maybe<Scalars['String']['output']>;\n  /** Language name for audio, subtitle, or caption streams */\n  languageName?: Maybe<Scalars['String']['output']>;\n  /** Pixel aspect ratio for video streams */\n  pixelAspectRatio?: Maybe<Scalars['String']['output']>;\n  /** Sampling rate for audio streams */\n  samplingRate?: Maybe<Scalars['Int']['output']>;\n  /** Stream type */\n  type?: Maybe<VideoStreamType>;\n  /** Reads a single `EpisodeVideo` that is related to this `EpisodeVideoStream`. */\n  video?: Maybe<EpisodeVideo>;\n  videoId?: Maybe<Scalars['Int']['output']>;\n  /** Width of the video stream */\n  width?: Maybe<Scalars['Int']['output']>;\n};\n\n/**\n * A condition to be used against `EpisodeVideoStream` object types. All fields are\n * tested for equality and combined with a logical ‘and.’\n */\nexport type EpisodeVideoStreamCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `type` field. */\n  type?: InputMaybe<VideoStreamType>;\n  /** Checks for equality with the object’s `videoId` field. */\n  videoId?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** A filter to be used against `EpisodeVideoStream` object types. All fields are combined with a logical ‘and.’ */\nexport type EpisodeVideoStreamFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<EpisodeVideoStreamFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<EpisodeVideoStreamFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<EpisodeVideoStreamFilter>>;\n  /** Filter by the object’s `type` field. */\n  type?: InputMaybe<VideoStreamTypeFilter>;\n  /** Filter by the object’s `videoId` field. */\n  videoId?: InputMaybe<IntFilter>;\n};\n\n/** A connection to a list of `EpisodeVideoStream` values. */\nexport type EpisodeVideoStreamsConnection = {\n  __typename?: 'EpisodeVideoStreamsConnection';\n  /** A list of edges which contains the `EpisodeVideoStream` and cursor to aid in pagination. */\n  edges: Array<EpisodeVideoStreamsEdge>;\n  /** A list of `EpisodeVideoStream` objects. */\n  nodes: Array<EpisodeVideoStream>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `EpisodeVideoStream` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `EpisodeVideoStream` edge in the connection. */\nexport type EpisodeVideoStreamsEdge = {\n  __typename?: 'EpisodeVideoStreamsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `EpisodeVideoStream` at the end of the edge. */\n  node: EpisodeVideoStream;\n};\n\n/** Methods to use when ordering `EpisodeVideoStream`. */\nexport enum EpisodeVideoStreamsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TypeAsc = 'TYPE_ASC',\n  TypeDesc = 'TYPE_DESC',\n  VideoIdAsc = 'VIDEO_ID_ASC',\n  VideoIdDesc = 'VIDEO_ID_DESC'\n}\n\n/** A connection to a list of `EpisodeVideo` values. */\nexport type EpisodeVideosConnection = {\n  __typename?: 'EpisodeVideosConnection';\n  /** A list of edges which contains the `EpisodeVideo` and cursor to aid in pagination. */\n  edges: Array<EpisodeVideosEdge>;\n  /** A list of `EpisodeVideo` objects. */\n  nodes: Array<EpisodeVideo>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `EpisodeVideo` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `EpisodeVideo` edge in the connection. */\nexport type EpisodeVideosEdge = {\n  __typename?: 'EpisodeVideosEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `EpisodeVideo` at the end of the edge. */\n  node: EpisodeVideo;\n};\n\n/** Methods to use when ordering `EpisodeVideo`. */\nexport enum EpisodeVideosOrderBy {\n  EpisodeIdAsc = 'EPISODE_ID_ASC',\n  EpisodeIdDesc = 'EPISODE_ID_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TypeAsc = 'TYPE_ASC',\n  TypeDesc = 'TYPE_DESC'\n}\n\n/** A connection to a list of `Episode` values. */\nexport type EpisodesConnection = {\n  __typename?: 'EpisodesConnection';\n  /** A list of edges which contains the `Episode` and cursor to aid in pagination. */\n  edges: Array<EpisodesEdge>;\n  /** A list of `Episode` objects. */\n  nodes: Array<Episode>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Episode` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `Episode` edge in the connection. */\nexport type EpisodesEdge = {\n  __typename?: 'EpisodesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `Episode` at the end of the edge. */\n  node: Episode;\n};\n\n/** Methods to use when ordering `Episode`. */\nexport enum EpisodesOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  SeasonIdAsc = 'SEASON_ID_ASC',\n  SeasonIdDesc = 'SEASON_ID_DESC',\n  TitleAsc = 'TITLE_ASC',\n  TitleDesc = 'TITLE_DESC'\n}\n\n/** Exposes all error codes and messages for errors that a service requests can throw. In some cases, messages that are actually thrown can be different, since they can include more details or a single code can used for different errors of the same type. */\nexport enum ErrorCodesEnum {\n  /** The assertion check for the identifier %s failed. */\n  AssertionFailed = 'ASSERTION_FAILED',\n  /** A database operation has failed because of a lock timeout. */\n  DatabaseLockTimeoutError = 'DATABASE_LOCK_TIMEOUT_ERROR',\n  /** An authorization database error has occurred. The user might not have enough permissions. */\n  DatabasePermissionsCheckFailed = 'DATABASE_PERMISSIONS_CHECK_FAILED',\n  /** An expected and handled database constraint error has occurred. The actual message will have more information. */\n  DatabaseValidationFailed = 'DATABASE_VALIDATION_FAILED',\n  /** This is a wrapper error for the original unhandled error of unsupported type. */\n  ErrorWrapper = 'ERROR_WRAPPER',\n  /** A GraphQL validation error has occurred. Please make sure that the GraphQL request is made with correct syntax or parameters. */\n  GraphqlValidationFailed = 'GRAPHQL_VALIDATION_FAILED',\n  /** An unhandled and unexpected error has occurred. Please contact the service support. */\n  InternalServerError = 'INTERNAL_SERVER_ERROR',\n  /** The %s does not have a valid license in your current country (%s) */\n  LicenseIsNotValid = 'LICENSE_IS_NOT_VALID',\n  /** The %s does not have a license. */\n  LicenseNotFound = 'LICENSE_NOT_FOUND',\n  /** The %s is missing required properties: %s. */\n  ObjectIsMissingProperties = 'OBJECT_IS_MISSING_PROPERTIES',\n  /** An application startup error has occurred. The actual message will have more information. */\n  StartupError = 'STARTUP_ERROR',\n  /** Unexpected null or undefined value received. */\n  UnexpectedNullUndefined = 'UNEXPECTED_NULL_UNDEFINED',\n  /** An unhandled database-related error has occurred. Please contact the service support. */\n  UnhandledDatabaseError = 'UNHANDLED_DATABASE_ERROR',\n  /** An unhandled error has occurred. Please contact the service support. */\n  UnhandledError = 'UNHANDLED_ERROR',\n  /** Attempt to create or update an element failed, as it would have resulted in a duplicate element. */\n  UniqueConstraintError = 'UNIQUE_CONSTRAINT_ERROR',\n  /** The %s is not an object. */\n  ValueIsNotObject = 'VALUE_IS_NOT_OBJECT'\n}\n\n/** A filter to be used against Int fields. All fields are combined with a logical ‘and.’ */\nexport type IntFilter = {\n  /** Not equal to the specified value, treating null like an ordinary value. */\n  distinctFrom?: InputMaybe<Scalars['Int']['input']>;\n  /** Equal to the specified value. */\n  equalTo?: InputMaybe<Scalars['Int']['input']>;\n  /** Greater than the specified value. */\n  greaterThan?: InputMaybe<Scalars['Int']['input']>;\n  /** Greater than or equal to the specified value. */\n  greaterThanOrEqualTo?: InputMaybe<Scalars['Int']['input']>;\n  /** Included in the specified list. */\n  in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  /** Is null (if `true` is specified) or is not null (if `false` is specified). */\n  isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Less than the specified value. */\n  lessThan?: InputMaybe<Scalars['Int']['input']>;\n  /** Less than or equal to the specified value. */\n  lessThanOrEqualTo?: InputMaybe<Scalars['Int']['input']>;\n  /** Equal to the specified value, treating null like an ordinary value. */\n  notDistinctFrom?: InputMaybe<Scalars['Int']['input']>;\n  /** Not equal to the specified value. */\n  notEqualTo?: InputMaybe<Scalars['Int']['input']>;\n  /** Not included in the specified list. */\n  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;\n};\n\nexport type Locale = {\n  __typename?: 'Locale';\n  isDefault: Scalars['Boolean']['output'];\n  locale: Scalars['String']['output'];\n};\n\n/** A condition to be used against `Locale` object types. All fields are tested for equality and combined with a logical ‘and.’ */\nexport type LocaleCondition = {\n  /** Checks for equality with the object’s `isDefault` field. */\n  isDefault?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Checks for equality with the object’s `locale` field. */\n  locale?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `Locale` object types. All fields are combined with a logical ‘and.’ */\nexport type LocaleFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<LocaleFilter>>;\n  /** Filter by the object’s `isDefault` field. */\n  isDefault?: InputMaybe<BooleanFilter>;\n  /** Filter by the object’s `locale` field. */\n  locale?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<LocaleFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<LocaleFilter>>;\n};\n\n/** A connection to a list of `Locale` values. */\nexport type LocalesConnection = {\n  __typename?: 'LocalesConnection';\n  /** A list of edges which contains the `Locale` and cursor to aid in pagination. */\n  edges: Array<LocalesEdge>;\n  /** A list of `Locale` objects. */\n  nodes: Array<Locale>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Locale` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `Locale` edge in the connection. */\nexport type LocalesEdge = {\n  __typename?: 'LocalesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `Locale` at the end of the edge. */\n  node: Locale;\n};\n\n/** Methods to use when ordering `Locale`. */\nexport enum LocalesOrderBy {\n  IsDefaultAsc = 'IS_DEFAULT_ASC',\n  IsDefaultDesc = 'IS_DEFAULT_DESC',\n  LocaleAsc = 'LOCALE_ASC',\n  LocaleDesc = 'LOCALE_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC'\n}\n\n/** Definition of the movie entity. */\nexport type Movie = {\n  __typename?: 'Movie';\n  /** Cast of the movie. */\n  cast?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Extended synopsis. */\n  description?: Maybe<Scalars['String']['output']>;\n  /** Reads and enables pagination through a set of `MovieGenresRelation`. */\n  genres: MovieGenresRelationsConnection;\n  id: Scalars['String']['output'];\n  /** Reads and enables pagination through a set of `MovieImage`. */\n  images: MovieImagesConnection;\n  /** Reads and enables pagination through a set of `MovieLicense`. */\n  licenses: MovieLicensesConnection;\n  /** Original title of the movie. */\n  originalTitle?: Maybe<Scalars['String']['output']>;\n  /** Array of production countries */\n  productionCountries?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Date of first release. */\n  released?: Maybe<Scalars['Datetime']['output']>;\n  /** Name of the producing studio. */\n  studio?: Maybe<Scalars['String']['output']>;\n  /** Short description of the main plot elements. */\n  synopsis?: Maybe<Scalars['String']['output']>;\n  /** Array of tags associated with the content. */\n  tags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Title of the movie. */\n  title?: Maybe<Scalars['String']['output']>;\n  /** Reads and enables pagination through a set of `MovieVideo`. */\n  videos: MovieVideosConnection;\n};\n\n\n/** Definition of the movie entity. */\nexport type MovieGenresArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<MovieGenresRelationCondition>;\n  filter?: InputMaybe<MovieGenresRelationFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<MovieGenresRelationsOrderBy>>;\n};\n\n\n/** Definition of the movie entity. */\nexport type MovieImagesArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<MovieImageCondition>;\n  filter?: InputMaybe<MovieImageFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<MovieImagesOrderBy>>;\n};\n\n\n/** Definition of the movie entity. */\nexport type MovieLicensesArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<MovieLicenseCondition>;\n  filter?: InputMaybe<MovieLicenseFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<MovieLicensesOrderBy>>;\n};\n\n\n/** Definition of the movie entity. */\nexport type MovieVideosArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<MovieVideoCondition>;\n  filter?: InputMaybe<MovieVideoFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<MovieVideosOrderBy>>;\n};\n\n/** A condition to be used against `Movie` object types. All fields are tested for equality and combined with a logical ‘and.’ */\nexport type MovieCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `title` field. */\n  title?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `Movie` object types. All fields are combined with a logical ‘and.’ */\nexport type MovieFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<MovieFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<MovieFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<MovieFilter>>;\n  /** Filter by the object’s `title` field. */\n  title?: InputMaybe<StringFilter>;\n};\n\n/** Definition of the movie genre entity. */\nexport type MovieGenre = {\n  __typename?: 'MovieGenre';\n  id: Scalars['String']['output'];\n  /** Global ordering number for the genre. */\n  orderNo?: Maybe<Scalars['Int']['output']>;\n  /** Title of the genre. */\n  title?: Maybe<Scalars['String']['output']>;\n};\n\n/**\n * A condition to be used against `MovieGenre` object types. All fields are tested\n * for equality and combined with a logical ‘and.’\n */\nexport type MovieGenreCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `orderNo` field. */\n  orderNo?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `title` field. */\n  title?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `MovieGenre` object types. All fields are combined with a logical ‘and.’ */\nexport type MovieGenreFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<MovieGenreFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<MovieGenreFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<MovieGenreFilter>>;\n  /** Filter by the object’s `orderNo` field. */\n  orderNo?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `title` field. */\n  title?: InputMaybe<StringFilter>;\n};\n\n/** A connection to a list of `MovieGenre` values. */\nexport type MovieGenresConnection = {\n  __typename?: 'MovieGenresConnection';\n  /** A list of edges which contains the `MovieGenre` and cursor to aid in pagination. */\n  edges: Array<MovieGenresEdge>;\n  /** A list of `MovieGenre` objects. */\n  nodes: Array<MovieGenre>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `MovieGenre` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `MovieGenre` edge in the connection. */\nexport type MovieGenresEdge = {\n  __typename?: 'MovieGenresEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `MovieGenre` at the end of the edge. */\n  node: MovieGenre;\n};\n\n/** Methods to use when ordering `MovieGenre`. */\nexport enum MovieGenresOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  OrderNoAsc = 'ORDER_NO_ASC',\n  OrderNoDesc = 'ORDER_NO_DESC',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TitleAsc = 'TITLE_ASC',\n  TitleDesc = 'TITLE_DESC'\n}\n\nexport type MovieGenresRelation = {\n  __typename?: 'MovieGenresRelation';\n  id: Scalars['Int']['output'];\n  /** Reads a single `Movie` that is related to this `MovieGenresRelation`. */\n  movie?: Maybe<Movie>;\n  /** Reads a single `MovieGenre` that is related to this `MovieGenresRelation`. */\n  movieGenre?: Maybe<MovieGenre>;\n  movieGenreId?: Maybe<Scalars['String']['output']>;\n  movieId?: Maybe<Scalars['String']['output']>;\n  orderNo: Scalars['Int']['output'];\n};\n\n/**\n * A condition to be used against `MovieGenresRelation` object types. All fields\n * are tested for equality and combined with a logical ‘and.’\n */\nexport type MovieGenresRelationCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `movieGenreId` field. */\n  movieGenreId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `movieId` field. */\n  movieId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `orderNo` field. */\n  orderNo?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** A filter to be used against `MovieGenresRelation` object types. All fields are combined with a logical ‘and.’ */\nexport type MovieGenresRelationFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<MovieGenresRelationFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `movieGenreId` field. */\n  movieGenreId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `movieId` field. */\n  movieId?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<MovieGenresRelationFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<MovieGenresRelationFilter>>;\n  /** Filter by the object’s `orderNo` field. */\n  orderNo?: InputMaybe<IntFilter>;\n};\n\n/** A connection to a list of `MovieGenresRelation` values. */\nexport type MovieGenresRelationsConnection = {\n  __typename?: 'MovieGenresRelationsConnection';\n  /** A list of edges which contains the `MovieGenresRelation` and cursor to aid in pagination. */\n  edges: Array<MovieGenresRelationsEdge>;\n  /** A list of `MovieGenresRelation` objects. */\n  nodes: Array<MovieGenresRelation>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `MovieGenresRelation` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `MovieGenresRelation` edge in the connection. */\nexport type MovieGenresRelationsEdge = {\n  __typename?: 'MovieGenresRelationsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `MovieGenresRelation` at the end of the edge. */\n  node: MovieGenresRelation;\n};\n\n/** Methods to use when ordering `MovieGenresRelation`. */\nexport enum MovieGenresRelationsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  MovieGenreIdAsc = 'MOVIE_GENRE_ID_ASC',\n  MovieGenreIdDesc = 'MOVIE_GENRE_ID_DESC',\n  MovieIdAsc = 'MOVIE_ID_ASC',\n  MovieIdDesc = 'MOVIE_ID_DESC',\n  Natural = 'NATURAL',\n  OrderNoAsc = 'ORDER_NO_ASC',\n  OrderNoDesc = 'ORDER_NO_DESC',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC'\n}\n\n/** Asset image metadata. */\nexport type MovieImage = {\n  __typename?: 'MovieImage';\n  altText?: Maybe<Scalars['String']['output']>;\n  /** Height of the image in pixels. */\n  height?: Maybe<Scalars['Int']['output']>;\n  id: Scalars['Int']['output'];\n  /** Reads a single `Movie` that is related to this `MovieImage`. */\n  movie?: Maybe<Movie>;\n  movieId?: Maybe<Scalars['String']['output']>;\n  /** URI to the image file. */\n  path?: Maybe<Scalars['String']['output']>;\n  /** Type of the image. */\n  type?: Maybe<Scalars['String']['output']>;\n  /** Width of the image in pixels. */\n  width?: Maybe<Scalars['Int']['output']>;\n};\n\n/**\n * A condition to be used against `MovieImage` object types. All fields are tested\n * for equality and combined with a logical ‘and.’\n */\nexport type MovieImageCondition = {\n  /** Checks for equality with the object’s `altText` field. */\n  altText?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `movieId` field. */\n  movieId?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `MovieImage` object types. All fields are combined with a logical ‘and.’ */\nexport type MovieImageFilter = {\n  /** Filter by the object’s `altText` field. */\n  altText?: InputMaybe<StringFilter>;\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<MovieImageFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `movieId` field. */\n  movieId?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<MovieImageFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<MovieImageFilter>>;\n};\n\n/** A connection to a list of `MovieImage` values. */\nexport type MovieImagesConnection = {\n  __typename?: 'MovieImagesConnection';\n  /** A list of edges which contains the `MovieImage` and cursor to aid in pagination. */\n  edges: Array<MovieImagesEdge>;\n  /** A list of `MovieImage` objects. */\n  nodes: Array<MovieImage>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `MovieImage` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `MovieImage` edge in the connection. */\nexport type MovieImagesEdge = {\n  __typename?: 'MovieImagesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `MovieImage` at the end of the edge. */\n  node: MovieImage;\n};\n\n/** Methods to use when ordering `MovieImage`. */\nexport enum MovieImagesOrderBy {\n  AltTextAsc = 'ALT_TEXT_ASC',\n  AltTextDesc = 'ALT_TEXT_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  MovieIdAsc = 'MOVIE_ID_ASC',\n  MovieIdDesc = 'MOVIE_ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC'\n}\n\n/** Content metadata license that defines the content availability regions and time frame. */\nexport type MovieLicense = {\n  __typename?: 'MovieLicense';\n  /** Array of countries where the license applies. */\n  countries?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Time when license becomes invalid. */\n  endTime?: Maybe<Scalars['Datetime']['output']>;\n  id: Scalars['Int']['output'];\n  /** Reads a single `Movie` that is related to this `MovieLicense`. */\n  movie?: Maybe<Movie>;\n  movieId?: Maybe<Scalars['String']['output']>;\n  /** Time when license becomes valid. */\n  startTime?: Maybe<Scalars['Datetime']['output']>;\n};\n\n/**\n * A condition to be used against `MovieLicense` object types. All fields are\n * tested for equality and combined with a logical ‘and.’\n */\nexport type MovieLicenseCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `movieId` field. */\n  movieId?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `MovieLicense` object types. All fields are combined with a logical ‘and.’ */\nexport type MovieLicenseFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<MovieLicenseFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `movieId` field. */\n  movieId?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<MovieLicenseFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<MovieLicenseFilter>>;\n};\n\n/** A connection to a list of `MovieLicense` values. */\nexport type MovieLicensesConnection = {\n  __typename?: 'MovieLicensesConnection';\n  /** A list of edges which contains the `MovieLicense` and cursor to aid in pagination. */\n  edges: Array<MovieLicensesEdge>;\n  /** A list of `MovieLicense` objects. */\n  nodes: Array<MovieLicense>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `MovieLicense` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `MovieLicense` edge in the connection. */\nexport type MovieLicensesEdge = {\n  __typename?: 'MovieLicensesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `MovieLicense` at the end of the edge. */\n  node: MovieLicense;\n};\n\n/** Methods to use when ordering `MovieLicense`. */\nexport enum MovieLicensesOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  MovieIdAsc = 'MOVIE_ID_ASC',\n  MovieIdDesc = 'MOVIE_ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC'\n}\n\n/** Video stream metadata. */\nexport type MovieVideo = {\n  __typename?: 'MovieVideo';\n  /** Array of audio languages available in the stream. */\n  audioLanguages?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Array of caption languages available in the stream. */\n  captionLanguages?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Reads and enables pagination through a set of `MovieVideoCuePoint`. */\n  cuePoints: MovieVideoCuePointsConnection;\n  /** URI to a DASH manifest. */\n  dashManifest?: Maybe<Scalars['String']['output']>;\n  /** URI to an HLS manifest. */\n  hlsManifest?: Maybe<Scalars['String']['output']>;\n  id: Scalars['Int']['output'];\n  /** Indicates whether a stream is protected with DRM. */\n  isProtected?: Maybe<Scalars['Boolean']['output']>;\n  /** Length of the stream in seconds. */\n  lengthInSeconds?: Maybe<Scalars['Float']['output']>;\n  /** Reads a single `Movie` that is related to this `MovieVideo`. */\n  movie?: Maybe<Movie>;\n  movieId?: Maybe<Scalars['String']['output']>;\n  /** Output format of the stream. */\n  outputFormat?: Maybe<Scalars['String']['output']>;\n  /** Array of subtitle languages available in the stream. */\n  subtitleLanguages?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Title of the video stream */\n  title?: Maybe<Scalars['String']['output']>;\n  /** Type of the video stream. */\n  type?: Maybe<Scalars['String']['output']>;\n  /** Reads and enables pagination through a set of `MovieVideoStream`. */\n  videoStreams: MovieVideoStreamsConnection;\n};\n\n\n/** Video stream metadata. */\nexport type MovieVideoCuePointsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<MovieVideoCuePointCondition>;\n  filter?: InputMaybe<MovieVideoCuePointFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<MovieVideoCuePointsOrderBy>>;\n};\n\n\n/** Video stream metadata. */\nexport type MovieVideoVideoStreamsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<MovieVideoStreamCondition>;\n  filter?: InputMaybe<MovieVideoStreamFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<MovieVideoStreamsOrderBy>>;\n};\n\n/**\n * A condition to be used against `MovieVideo` object types. All fields are tested\n * for equality and combined with a logical ‘and.’\n */\nexport type MovieVideoCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `movieId` field. */\n  movieId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `type` field. */\n  type?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** Video cue point metadata */\nexport type MovieVideoCuePoint = {\n  __typename?: 'MovieVideoCuePoint';\n  /** Type of the cue point */\n  cuePointTypeKey: Scalars['String']['output'];\n  id: Scalars['Int']['output'];\n  /** Time in seconds at which the cue point is set within the video */\n  timeInSeconds: Scalars['Float']['output'];\n  /** Additional information associated with the cue point */\n  value?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `MovieVideo` that is related to this `MovieVideoCuePoint`. */\n  video?: Maybe<MovieVideo>;\n  videoId?: Maybe<Scalars['Int']['output']>;\n};\n\n/**\n * A condition to be used against `MovieVideoCuePoint` object types. All fields are\n * tested for equality and combined with a logical ‘and.’\n */\nexport type MovieVideoCuePointCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `videoId` field. */\n  videoId?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** A filter to be used against `MovieVideoCuePoint` object types. All fields are combined with a logical ‘and.’ */\nexport type MovieVideoCuePointFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<MovieVideoCuePointFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<MovieVideoCuePointFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<MovieVideoCuePointFilter>>;\n  /** Filter by the object’s `videoId` field. */\n  videoId?: InputMaybe<IntFilter>;\n};\n\n/** A connection to a list of `MovieVideoCuePoint` values. */\nexport type MovieVideoCuePointsConnection = {\n  __typename?: 'MovieVideoCuePointsConnection';\n  /** A list of edges which contains the `MovieVideoCuePoint` and cursor to aid in pagination. */\n  edges: Array<MovieVideoCuePointsEdge>;\n  /** A list of `MovieVideoCuePoint` objects. */\n  nodes: Array<MovieVideoCuePoint>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `MovieVideoCuePoint` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `MovieVideoCuePoint` edge in the connection. */\nexport type MovieVideoCuePointsEdge = {\n  __typename?: 'MovieVideoCuePointsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `MovieVideoCuePoint` at the end of the edge. */\n  node: MovieVideoCuePoint;\n};\n\n/** Methods to use when ordering `MovieVideoCuePoint`. */\nexport enum MovieVideoCuePointsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  VideoIdAsc = 'VIDEO_ID_ASC',\n  VideoIdDesc = 'VIDEO_ID_DESC'\n}\n\n/** A filter to be used against `MovieVideo` object types. All fields are combined with a logical ‘and.’ */\nexport type MovieVideoFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<MovieVideoFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `movieId` field. */\n  movieId?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<MovieVideoFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<MovieVideoFilter>>;\n  /** Filter by the object’s `type` field. */\n  type?: InputMaybe<StringFilter>;\n};\n\n/** Video stream DRM metadata */\nexport type MovieVideoStream = {\n  __typename?: 'MovieVideoStream';\n  /** Bitrate in kilobits per second */\n  bitrateInKbps?: Maybe<Scalars['Int']['output']>;\n  /** Codecs */\n  codecs?: Maybe<Scalars['String']['output']>;\n  /** Display aspect ratio for video streams */\n  displayAspectRatio?: Maybe<Scalars['String']['output']>;\n  /** File path to the initialization segment */\n  file?: Maybe<Scalars['String']['output']>;\n  /** File Template */\n  fileTemplate?: Maybe<Scalars['String']['output']>;\n  /** Packaging format of the stream */\n  format?: Maybe<Scalars['String']['output']>;\n  /** Frame rate of the video stream */\n  frameRate?: Maybe<Scalars['Float']['output']>;\n  /** Height of the video stream */\n  height?: Maybe<Scalars['Int']['output']>;\n  id: Scalars['Int']['output'];\n  /** Initialization Vector of the stream */\n  iv?: Maybe<Scalars['String']['output']>;\n  /** DRM Key ID */\n  keyId?: Maybe<Scalars['String']['output']>;\n  /** Label indicating the type of stream (audio/video) */\n  label?: Maybe<Scalars['String']['output']>;\n  /** The language code for audio streams */\n  languageCode?: Maybe<Scalars['String']['output']>;\n  /** Language name for audio, subtitle, or caption streams */\n  languageName?: Maybe<Scalars['String']['output']>;\n  /** Pixel aspect ratio for video streams */\n  pixelAspectRatio?: Maybe<Scalars['String']['output']>;\n  /** Sampling rate for audio streams */\n  samplingRate?: Maybe<Scalars['Int']['output']>;\n  /** Stream type */\n  type?: Maybe<VideoStreamType>;\n  /** Reads a single `MovieVideo` that is related to this `MovieVideoStream`. */\n  video?: Maybe<MovieVideo>;\n  videoId?: Maybe<Scalars['Int']['output']>;\n  /** Width of the video stream */\n  width?: Maybe<Scalars['Int']['output']>;\n};\n\n/**\n * A condition to be used against `MovieVideoStream` object types. All fields are\n * tested for equality and combined with a logical ‘and.’\n */\nexport type MovieVideoStreamCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `type` field. */\n  type?: InputMaybe<VideoStreamType>;\n  /** Checks for equality with the object’s `videoId` field. */\n  videoId?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** A filter to be used against `MovieVideoStream` object types. All fields are combined with a logical ‘and.’ */\nexport type MovieVideoStreamFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<MovieVideoStreamFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<MovieVideoStreamFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<MovieVideoStreamFilter>>;\n  /** Filter by the object’s `type` field. */\n  type?: InputMaybe<VideoStreamTypeFilter>;\n  /** Filter by the object’s `videoId` field. */\n  videoId?: InputMaybe<IntFilter>;\n};\n\n/** A connection to a list of `MovieVideoStream` values. */\nexport type MovieVideoStreamsConnection = {\n  __typename?: 'MovieVideoStreamsConnection';\n  /** A list of edges which contains the `MovieVideoStream` and cursor to aid in pagination. */\n  edges: Array<MovieVideoStreamsEdge>;\n  /** A list of `MovieVideoStream` objects. */\n  nodes: Array<MovieVideoStream>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `MovieVideoStream` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `MovieVideoStream` edge in the connection. */\nexport type MovieVideoStreamsEdge = {\n  __typename?: 'MovieVideoStreamsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `MovieVideoStream` at the end of the edge. */\n  node: MovieVideoStream;\n};\n\n/** Methods to use when ordering `MovieVideoStream`. */\nexport enum MovieVideoStreamsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TypeAsc = 'TYPE_ASC',\n  TypeDesc = 'TYPE_DESC',\n  VideoIdAsc = 'VIDEO_ID_ASC',\n  VideoIdDesc = 'VIDEO_ID_DESC'\n}\n\n/** A connection to a list of `MovieVideo` values. */\nexport type MovieVideosConnection = {\n  __typename?: 'MovieVideosConnection';\n  /** A list of edges which contains the `MovieVideo` and cursor to aid in pagination. */\n  edges: Array<MovieVideosEdge>;\n  /** A list of `MovieVideo` objects. */\n  nodes: Array<MovieVideo>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `MovieVideo` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `MovieVideo` edge in the connection. */\nexport type MovieVideosEdge = {\n  __typename?: 'MovieVideosEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `MovieVideo` at the end of the edge. */\n  node: MovieVideo;\n};\n\n/** Methods to use when ordering `MovieVideo`. */\nexport enum MovieVideosOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  MovieIdAsc = 'MOVIE_ID_ASC',\n  MovieIdDesc = 'MOVIE_ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TypeAsc = 'TYPE_ASC',\n  TypeDesc = 'TYPE_DESC'\n}\n\n/** A connection to a list of `Movie` values. */\nexport type MoviesConnection = {\n  __typename?: 'MoviesConnection';\n  /** A list of edges which contains the `Movie` and cursor to aid in pagination. */\n  edges: Array<MoviesEdge>;\n  /** A list of `Movie` objects. */\n  nodes: Array<Movie>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Movie` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `Movie` edge in the connection. */\nexport type MoviesEdge = {\n  __typename?: 'MoviesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `Movie` at the end of the edge. */\n  node: Movie;\n};\n\n/** Methods to use when ordering `Movie`. */\nexport enum MoviesOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TitleAsc = 'TITLE_ASC',\n  TitleDesc = 'TITLE_DESC'\n}\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['Cursor']['output']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean']['output'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean']['output'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['Cursor']['output']>;\n};\n\n/** Definition of the playlist entity. */\nexport type Playlist = {\n  __typename?: 'Playlist';\n  /** Reads a single `Channel` that is related to this `Playlist`. */\n  channel?: Maybe<Channel>;\n  /** The channel ID. */\n  channelId?: Maybe<Scalars['String']['output']>;\n  /** End date of the playlist. */\n  endDateTime: Scalars['Datetime']['output'];\n  id: Scalars['String']['output'];\n  /** Reads and enables pagination through a set of `Program`. */\n  programs: ProgramsConnection;\n  /** Start date of the playlist. */\n  startDateTime: Scalars['Datetime']['output'];\n};\n\n\n/** Definition of the playlist entity. */\nexport type PlaylistProgramsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<ProgramCondition>;\n  filter?: InputMaybe<ProgramFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<ProgramsOrderBy>>;\n};\n\n/**\n * A condition to be used against `Playlist` object types. All fields are tested\n * for equality and combined with a logical ‘and.’\n */\nexport type PlaylistCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `Playlist` object types. All fields are combined with a logical ‘and.’ */\nexport type PlaylistFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<PlaylistFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<PlaylistFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<PlaylistFilter>>;\n};\n\n/** A connection to a list of `Playlist` values. */\nexport type PlaylistsConnection = {\n  __typename?: 'PlaylistsConnection';\n  /** A list of edges which contains the `Playlist` and cursor to aid in pagination. */\n  edges: Array<PlaylistsEdge>;\n  /** A list of `Playlist` objects. */\n  nodes: Array<Playlist>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Playlist` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `Playlist` edge in the connection. */\nexport type PlaylistsEdge = {\n  __typename?: 'PlaylistsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `Playlist` at the end of the edge. */\n  node: Playlist;\n};\n\n/** Methods to use when ordering `Playlist`. */\nexport enum PlaylistsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  StartDateTimeAsc = 'START_DATE_TIME_ASC',\n  StartDateTimeDesc = 'START_DATE_TIME_DESC'\n}\n\n/** Definition of the program object. */\nexport type Program = {\n  __typename?: 'Program';\n  /** Reads a single `Episode` that is related to this `Program`. */\n  episode?: Maybe<Episode>;\n  /** The episode ID. */\n  episodeId?: Maybe<Scalars['String']['output']>;\n  id: Scalars['Int']['output'];\n  /** Reads and enables pagination through a set of `ProgramImage`. */\n  images: ProgramImagesConnection;\n  /** Reads a single `Movie` that is related to this `Program`. */\n  movie?: Maybe<Movie>;\n  /** The movie ID. */\n  movieId?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `Playlist` that is related to this `Program`. */\n  playlist?: Maybe<Playlist>;\n  playlistId?: Maybe<Scalars['String']['output']>;\n  /** The sort index of the program. */\n  sortIndex?: Maybe<Scalars['Int']['output']>;\n  /** Title of the program. */\n  title?: Maybe<Scalars['String']['output']>;\n};\n\n\n/** Definition of the program object. */\nexport type ProgramImagesArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<ProgramImageCondition>;\n  filter?: InputMaybe<ProgramImageFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<ProgramImagesOrderBy>>;\n};\n\n/** A condition to be used against `Program` object types. All fields are tested for equality and combined with a logical ‘and.’ */\nexport type ProgramCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `playlistId` field. */\n  playlistId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `title` field. */\n  title?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `Program` object types. All fields are combined with a logical ‘and.’ */\nexport type ProgramFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<ProgramFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<ProgramFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<ProgramFilter>>;\n  /** Filter by the object’s `playlistId` field. */\n  playlistId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `title` field. */\n  title?: InputMaybe<StringFilter>;\n};\n\n/** Asset image metadata. */\nexport type ProgramImage = {\n  __typename?: 'ProgramImage';\n  altText?: Maybe<Scalars['String']['output']>;\n  /** Height of the image in pixels. */\n  height?: Maybe<Scalars['Int']['output']>;\n  id: Scalars['Int']['output'];\n  /** URI to the image file. */\n  path?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `Program` that is related to this `ProgramImage`. */\n  program?: Maybe<Program>;\n  programId?: Maybe<Scalars['Int']['output']>;\n  /** Type of the image. */\n  type?: Maybe<Scalars['String']['output']>;\n  /** Width of the image in pixels. */\n  width?: Maybe<Scalars['Int']['output']>;\n};\n\n/**\n * A condition to be used against `ProgramImage` object types. All fields are\n * tested for equality and combined with a logical ‘and.’\n */\nexport type ProgramImageCondition = {\n  /** Checks for equality with the object’s `altText` field. */\n  altText?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `programId` field. */\n  programId?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** A filter to be used against `ProgramImage` object types. All fields are combined with a logical ‘and.’ */\nexport type ProgramImageFilter = {\n  /** Filter by the object’s `altText` field. */\n  altText?: InputMaybe<StringFilter>;\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<ProgramImageFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<ProgramImageFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<ProgramImageFilter>>;\n  /** Filter by the object’s `programId` field. */\n  programId?: InputMaybe<IntFilter>;\n};\n\n/** A connection to a list of `ProgramImage` values. */\nexport type ProgramImagesConnection = {\n  __typename?: 'ProgramImagesConnection';\n  /** A list of edges which contains the `ProgramImage` and cursor to aid in pagination. */\n  edges: Array<ProgramImagesEdge>;\n  /** A list of `ProgramImage` objects. */\n  nodes: Array<ProgramImage>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `ProgramImage` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `ProgramImage` edge in the connection. */\nexport type ProgramImagesEdge = {\n  __typename?: 'ProgramImagesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `ProgramImage` at the end of the edge. */\n  node: ProgramImage;\n};\n\n/** Methods to use when ordering `ProgramImage`. */\nexport enum ProgramImagesOrderBy {\n  AltTextAsc = 'ALT_TEXT_ASC',\n  AltTextDesc = 'ALT_TEXT_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  ProgramIdAsc = 'PROGRAM_ID_ASC',\n  ProgramIdDesc = 'PROGRAM_ID_DESC'\n}\n\n/** A connection to a list of `Program` values. */\nexport type ProgramsConnection = {\n  __typename?: 'ProgramsConnection';\n  /** A list of edges which contains the `Program` and cursor to aid in pagination. */\n  edges: Array<ProgramsEdge>;\n  /** A list of `Program` objects. */\n  nodes: Array<Program>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Program` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `Program` edge in the connection. */\nexport type ProgramsEdge = {\n  __typename?: 'ProgramsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `Program` at the end of the edge. */\n  node: Program;\n};\n\n/** Methods to use when ordering `Program`. */\nexport enum ProgramsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PlaylistIdAsc = 'PLAYLIST_ID_ASC',\n  PlaylistIdDesc = 'PLAYLIST_ID_DESC',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  SortIndexAsc = 'SORT_INDEX_ASC',\n  SortIndexDesc = 'SORT_INDEX_DESC',\n  TitleAsc = 'TITLE_ASC',\n  TitleDesc = 'TITLE_DESC'\n}\n\n/** The root query type which gives access points into the data universe. */\nexport type Query = {\n  __typename?: 'Query';\n  channel?: Maybe<Channel>;\n  /** Reads and enables pagination through a set of `Channel`. */\n  channels?: Maybe<ChannelsConnection>;\n  collection?: Maybe<Collection>;\n  /** Reads and enables pagination through a set of `Collection`. */\n  collections?: Maybe<CollectionsConnection>;\n  episode?: Maybe<Episode>;\n  /** Reads and enables pagination through a set of `Episode`. */\n  episodes?: Maybe<EpisodesConnection>;\n  locale?: Maybe<Locale>;\n  /** Reads and enables pagination through a set of `Locale`. */\n  locales?: Maybe<LocalesConnection>;\n  movie?: Maybe<Movie>;\n  movieGenre?: Maybe<MovieGenre>;\n  /** Reads and enables pagination through a set of `MovieGenre`. */\n  movieGenres?: Maybe<MovieGenresConnection>;\n  /** Reads and enables pagination through a set of `Movie`. */\n  movies?: Maybe<MoviesConnection>;\n  playlist?: Maybe<Playlist>;\n  /** Reads and enables pagination through a set of `Playlist`. */\n  playlists?: Maybe<PlaylistsConnection>;\n  /**\n   * Exposes the root query type nested one level down. This is helpful for Relay 1\n   * which can only query top level fields if they are in a particular form.\n   */\n  query: Query;\n  season?: Maybe<Season>;\n  /** Reads and enables pagination through a set of `Season`. */\n  seasons?: Maybe<SeasonsConnection>;\n  tvshow?: Maybe<Tvshow>;\n  tvshowGenre?: Maybe<TvshowGenre>;\n  /** Reads and enables pagination through a set of `TvshowGenre`. */\n  tvshowGenres?: Maybe<TvshowGenresConnection>;\n  /** Reads and enables pagination through a set of `Tvshow`. */\n  tvshows?: Maybe<TvshowsConnection>;\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryChannelArgs = {\n  id: Scalars['String']['input'];\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryChannelsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<ChannelCondition>;\n  filter?: InputMaybe<ChannelFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<ChannelsOrderBy>>;\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryCollectionArgs = {\n  id: Scalars['String']['input'];\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryCollectionsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<CollectionCondition>;\n  filter?: InputMaybe<CollectionFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<CollectionsOrderBy>>;\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryEpisodeArgs = {\n  countryCode?: InputMaybe<Scalars['String']['input']>;\n  id: Scalars['String']['input'];\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryEpisodesArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<EpisodeCondition>;\n  filter?: InputMaybe<EpisodeFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<EpisodesOrderBy>>;\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryLocaleArgs = {\n  locale: Scalars['String']['input'];\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryLocalesArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<LocaleCondition>;\n  filter?: InputMaybe<LocaleFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<LocalesOrderBy>>;\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryMovieArgs = {\n  countryCode?: InputMaybe<Scalars['String']['input']>;\n  id: Scalars['String']['input'];\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryMovieGenreArgs = {\n  id: Scalars['String']['input'];\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryMovieGenresArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<MovieGenreCondition>;\n  filter?: InputMaybe<MovieGenreFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<MovieGenresOrderBy>>;\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryMoviesArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<MovieCondition>;\n  filter?: InputMaybe<MovieFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<MoviesOrderBy>>;\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryPlaylistArgs = {\n  id: Scalars['String']['input'];\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryPlaylistsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<PlaylistCondition>;\n  filter?: InputMaybe<PlaylistFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<PlaylistsOrderBy>>;\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QuerySeasonArgs = {\n  id: Scalars['String']['input'];\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QuerySeasonsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<SeasonCondition>;\n  filter?: InputMaybe<SeasonFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<SeasonsOrderBy>>;\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryTvshowArgs = {\n  id: Scalars['String']['input'];\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryTvshowGenreArgs = {\n  id: Scalars['String']['input'];\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryTvshowGenresArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<TvshowGenreCondition>;\n  filter?: InputMaybe<TvshowGenreFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<TvshowGenresOrderBy>>;\n};\n\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryTvshowsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<TvshowCondition>;\n  filter?: InputMaybe<TvshowFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<TvshowsOrderBy>>;\n};\n\n/** Definition of the TV show season entity. */\nexport type Season = {\n  __typename?: 'Season';\n  /** Cast of the season. */\n  cast?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Extended synopsis. */\n  description?: Maybe<Scalars['String']['output']>;\n  /** Reads and enables pagination through a set of `Episode`. */\n  episodes: EpisodesConnection;\n  /** Reads and enables pagination through a set of `SeasonGenresRelation`. */\n  genres: SeasonGenresRelationsConnection;\n  id: Scalars['String']['output'];\n  /** Reads and enables pagination through a set of `SeasonImage`. */\n  images: SeasonImagesConnection;\n  /** Season number */\n  index?: Maybe<Scalars['Int']['output']>;\n  /** Reads and enables pagination through a set of `SeasonLicense`. */\n  licenses: SeasonLicensesConnection;\n  /** Array of production countries */\n  productionCountries?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Date of first release. */\n  released?: Maybe<Scalars['Datetime']['output']>;\n  /** Name of the producing studio. */\n  studio?: Maybe<Scalars['String']['output']>;\n  /** Short description of the main plot elements. */\n  synopsis?: Maybe<Scalars['String']['output']>;\n  /** Array of tags associated with the content. */\n  tags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Reads a single `Tvshow` that is related to this `Season`. */\n  tvshow?: Maybe<Tvshow>;\n  tvshowId?: Maybe<Scalars['String']['output']>;\n  /** Reads and enables pagination through a set of `SeasonVideo`. */\n  videos: SeasonVideosConnection;\n};\n\n\n/** Definition of the TV show season entity. */\nexport type SeasonEpisodesArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<EpisodeCondition>;\n  filter?: InputMaybe<EpisodeFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<EpisodesOrderBy>>;\n};\n\n\n/** Definition of the TV show season entity. */\nexport type SeasonGenresArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<SeasonGenresRelationCondition>;\n  filter?: InputMaybe<SeasonGenresRelationFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<SeasonGenresRelationsOrderBy>>;\n};\n\n\n/** Definition of the TV show season entity. */\nexport type SeasonImagesArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<SeasonImageCondition>;\n  filter?: InputMaybe<SeasonImageFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<SeasonImagesOrderBy>>;\n};\n\n\n/** Definition of the TV show season entity. */\nexport type SeasonLicensesArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<SeasonLicenseCondition>;\n  filter?: InputMaybe<SeasonLicenseFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<SeasonLicensesOrderBy>>;\n};\n\n\n/** Definition of the TV show season entity. */\nexport type SeasonVideosArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<SeasonVideoCondition>;\n  filter?: InputMaybe<SeasonVideoFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<SeasonVideosOrderBy>>;\n};\n\n/** A condition to be used against `Season` object types. All fields are tested for equality and combined with a logical ‘and.’ */\nexport type SeasonCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `tvshowId` field. */\n  tvshowId?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `Season` object types. All fields are combined with a logical ‘and.’ */\nexport type SeasonFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<SeasonFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<SeasonFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<SeasonFilter>>;\n  /** Filter by the object’s `tvshowId` field. */\n  tvshowId?: InputMaybe<StringFilter>;\n};\n\nexport type SeasonGenresRelation = {\n  __typename?: 'SeasonGenresRelation';\n  id: Scalars['Int']['output'];\n  orderNo: Scalars['Int']['output'];\n  /** Reads a single `Season` that is related to this `SeasonGenresRelation`. */\n  season?: Maybe<Season>;\n  seasonId?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `TvshowGenre` that is related to this `SeasonGenresRelation`. */\n  tvshowGenre?: Maybe<TvshowGenre>;\n  tvshowGenreId?: Maybe<Scalars['String']['output']>;\n};\n\n/**\n * A condition to be used against `SeasonGenresRelation` object types. All fields\n * are tested for equality and combined with a logical ‘and.’\n */\nexport type SeasonGenresRelationCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `orderNo` field. */\n  orderNo?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `seasonId` field. */\n  seasonId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `tvshowGenreId` field. */\n  tvshowGenreId?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `SeasonGenresRelation` object types. All fields are combined with a logical ‘and.’ */\nexport type SeasonGenresRelationFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<SeasonGenresRelationFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<SeasonGenresRelationFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<SeasonGenresRelationFilter>>;\n  /** Filter by the object’s `orderNo` field. */\n  orderNo?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `seasonId` field. */\n  seasonId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `tvshowGenreId` field. */\n  tvshowGenreId?: InputMaybe<StringFilter>;\n};\n\n/** A connection to a list of `SeasonGenresRelation` values. */\nexport type SeasonGenresRelationsConnection = {\n  __typename?: 'SeasonGenresRelationsConnection';\n  /** A list of edges which contains the `SeasonGenresRelation` and cursor to aid in pagination. */\n  edges: Array<SeasonGenresRelationsEdge>;\n  /** A list of `SeasonGenresRelation` objects. */\n  nodes: Array<SeasonGenresRelation>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `SeasonGenresRelation` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `SeasonGenresRelation` edge in the connection. */\nexport type SeasonGenresRelationsEdge = {\n  __typename?: 'SeasonGenresRelationsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `SeasonGenresRelation` at the end of the edge. */\n  node: SeasonGenresRelation;\n};\n\n/** Methods to use when ordering `SeasonGenresRelation`. */\nexport enum SeasonGenresRelationsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  OrderNoAsc = 'ORDER_NO_ASC',\n  OrderNoDesc = 'ORDER_NO_DESC',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  SeasonIdAsc = 'SEASON_ID_ASC',\n  SeasonIdDesc = 'SEASON_ID_DESC',\n  TvshowGenreIdAsc = 'TVSHOW_GENRE_ID_ASC',\n  TvshowGenreIdDesc = 'TVSHOW_GENRE_ID_DESC'\n}\n\n/** Asset image metadata. */\nexport type SeasonImage = {\n  __typename?: 'SeasonImage';\n  altText?: Maybe<Scalars['String']['output']>;\n  /** Height of the image in pixels. */\n  height?: Maybe<Scalars['Int']['output']>;\n  id: Scalars['Int']['output'];\n  /** URI to the image file. */\n  path?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `Season` that is related to this `SeasonImage`. */\n  season?: Maybe<Season>;\n  seasonId?: Maybe<Scalars['String']['output']>;\n  /** Type of the image. */\n  type?: Maybe<Scalars['String']['output']>;\n  /** Width of the image in pixels. */\n  width?: Maybe<Scalars['Int']['output']>;\n};\n\n/**\n * A condition to be used against `SeasonImage` object types. All fields are tested\n * for equality and combined with a logical ‘and.’\n */\nexport type SeasonImageCondition = {\n  /** Checks for equality with the object’s `altText` field. */\n  altText?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `seasonId` field. */\n  seasonId?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `SeasonImage` object types. All fields are combined with a logical ‘and.’ */\nexport type SeasonImageFilter = {\n  /** Filter by the object’s `altText` field. */\n  altText?: InputMaybe<StringFilter>;\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<SeasonImageFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<SeasonImageFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<SeasonImageFilter>>;\n  /** Filter by the object’s `seasonId` field. */\n  seasonId?: InputMaybe<StringFilter>;\n};\n\n/** A connection to a list of `SeasonImage` values. */\nexport type SeasonImagesConnection = {\n  __typename?: 'SeasonImagesConnection';\n  /** A list of edges which contains the `SeasonImage` and cursor to aid in pagination. */\n  edges: Array<SeasonImagesEdge>;\n  /** A list of `SeasonImage` objects. */\n  nodes: Array<SeasonImage>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `SeasonImage` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `SeasonImage` edge in the connection. */\nexport type SeasonImagesEdge = {\n  __typename?: 'SeasonImagesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `SeasonImage` at the end of the edge. */\n  node: SeasonImage;\n};\n\n/** Methods to use when ordering `SeasonImage`. */\nexport enum SeasonImagesOrderBy {\n  AltTextAsc = 'ALT_TEXT_ASC',\n  AltTextDesc = 'ALT_TEXT_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  SeasonIdAsc = 'SEASON_ID_ASC',\n  SeasonIdDesc = 'SEASON_ID_DESC'\n}\n\n/** Content metadata license that defines the content availability regions and time frame. */\nexport type SeasonLicense = {\n  __typename?: 'SeasonLicense';\n  /** Array of countries where the license applies. */\n  countries?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Time when license becomes invalid. */\n  endTime?: Maybe<Scalars['Datetime']['output']>;\n  id: Scalars['Int']['output'];\n  /** Reads a single `Season` that is related to this `SeasonLicense`. */\n  season?: Maybe<Season>;\n  seasonId?: Maybe<Scalars['String']['output']>;\n  /** Time when license becomes valid. */\n  startTime?: Maybe<Scalars['Datetime']['output']>;\n};\n\n/**\n * A condition to be used against `SeasonLicense` object types. All fields are\n * tested for equality and combined with a logical ‘and.’\n */\nexport type SeasonLicenseCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `seasonId` field. */\n  seasonId?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `SeasonLicense` object types. All fields are combined with a logical ‘and.’ */\nexport type SeasonLicenseFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<SeasonLicenseFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<SeasonLicenseFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<SeasonLicenseFilter>>;\n  /** Filter by the object’s `seasonId` field. */\n  seasonId?: InputMaybe<StringFilter>;\n};\n\n/** A connection to a list of `SeasonLicense` values. */\nexport type SeasonLicensesConnection = {\n  __typename?: 'SeasonLicensesConnection';\n  /** A list of edges which contains the `SeasonLicense` and cursor to aid in pagination. */\n  edges: Array<SeasonLicensesEdge>;\n  /** A list of `SeasonLicense` objects. */\n  nodes: Array<SeasonLicense>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `SeasonLicense` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `SeasonLicense` edge in the connection. */\nexport type SeasonLicensesEdge = {\n  __typename?: 'SeasonLicensesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `SeasonLicense` at the end of the edge. */\n  node: SeasonLicense;\n};\n\n/** Methods to use when ordering `SeasonLicense`. */\nexport enum SeasonLicensesOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  SeasonIdAsc = 'SEASON_ID_ASC',\n  SeasonIdDesc = 'SEASON_ID_DESC'\n}\n\n/** Video stream metadata. */\nexport type SeasonVideo = {\n  __typename?: 'SeasonVideo';\n  /** Array of audio languages available in the stream. */\n  audioLanguages?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Array of caption languages available in the stream. */\n  captionLanguages?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Reads and enables pagination through a set of `SeasonVideoCuePoint`. */\n  cuePoints: SeasonVideoCuePointsConnection;\n  /** URI to a DASH manifest. */\n  dashManifest?: Maybe<Scalars['String']['output']>;\n  /** URI to an HLS manifest. */\n  hlsManifest?: Maybe<Scalars['String']['output']>;\n  id: Scalars['Int']['output'];\n  /** Indicates whether a stream is protected with DRM. */\n  isProtected?: Maybe<Scalars['Boolean']['output']>;\n  /** Length of the stream in seconds. */\n  lengthInSeconds?: Maybe<Scalars['Float']['output']>;\n  /** Output format of the stream. */\n  outputFormat?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `Season` that is related to this `SeasonVideo`. */\n  season?: Maybe<Season>;\n  seasonId?: Maybe<Scalars['String']['output']>;\n  /** Array of subtitle languages available in the stream. */\n  subtitleLanguages?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Title of the video stream */\n  title?: Maybe<Scalars['String']['output']>;\n  /** Type of the video stream. */\n  type?: Maybe<Scalars['String']['output']>;\n  /** Reads and enables pagination through a set of `SeasonVideoStream`. */\n  videoStreams: SeasonVideoStreamsConnection;\n};\n\n\n/** Video stream metadata. */\nexport type SeasonVideoCuePointsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<SeasonVideoCuePointCondition>;\n  filter?: InputMaybe<SeasonVideoCuePointFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<SeasonVideoCuePointsOrderBy>>;\n};\n\n\n/** Video stream metadata. */\nexport type SeasonVideoVideoStreamsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<SeasonVideoStreamCondition>;\n  filter?: InputMaybe<SeasonVideoStreamFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<SeasonVideoStreamsOrderBy>>;\n};\n\n/**\n * A condition to be used against `SeasonVideo` object types. All fields are tested\n * for equality and combined with a logical ‘and.’\n */\nexport type SeasonVideoCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `seasonId` field. */\n  seasonId?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** Video cue point metadata */\nexport type SeasonVideoCuePoint = {\n  __typename?: 'SeasonVideoCuePoint';\n  /** Type of the cue point */\n  cuePointTypeKey: Scalars['String']['output'];\n  id: Scalars['Int']['output'];\n  /** Time in seconds at which the cue point is set within the video */\n  timeInSeconds: Scalars['Float']['output'];\n  /** Additional information associated with the cue point */\n  value?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `SeasonVideo` that is related to this `SeasonVideoCuePoint`. */\n  video?: Maybe<SeasonVideo>;\n  videoId?: Maybe<Scalars['Int']['output']>;\n};\n\n/**\n * A condition to be used against `SeasonVideoCuePoint` object types. All fields\n * are tested for equality and combined with a logical ‘and.’\n */\nexport type SeasonVideoCuePointCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `videoId` field. */\n  videoId?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** A filter to be used against `SeasonVideoCuePoint` object types. All fields are combined with a logical ‘and.’ */\nexport type SeasonVideoCuePointFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<SeasonVideoCuePointFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<SeasonVideoCuePointFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<SeasonVideoCuePointFilter>>;\n  /** Filter by the object’s `videoId` field. */\n  videoId?: InputMaybe<IntFilter>;\n};\n\n/** A connection to a list of `SeasonVideoCuePoint` values. */\nexport type SeasonVideoCuePointsConnection = {\n  __typename?: 'SeasonVideoCuePointsConnection';\n  /** A list of edges which contains the `SeasonVideoCuePoint` and cursor to aid in pagination. */\n  edges: Array<SeasonVideoCuePointsEdge>;\n  /** A list of `SeasonVideoCuePoint` objects. */\n  nodes: Array<SeasonVideoCuePoint>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `SeasonVideoCuePoint` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `SeasonVideoCuePoint` edge in the connection. */\nexport type SeasonVideoCuePointsEdge = {\n  __typename?: 'SeasonVideoCuePointsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `SeasonVideoCuePoint` at the end of the edge. */\n  node: SeasonVideoCuePoint;\n};\n\n/** Methods to use when ordering `SeasonVideoCuePoint`. */\nexport enum SeasonVideoCuePointsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  VideoIdAsc = 'VIDEO_ID_ASC',\n  VideoIdDesc = 'VIDEO_ID_DESC'\n}\n\n/** A filter to be used against `SeasonVideo` object types. All fields are combined with a logical ‘and.’ */\nexport type SeasonVideoFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<SeasonVideoFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<SeasonVideoFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<SeasonVideoFilter>>;\n  /** Filter by the object’s `seasonId` field. */\n  seasonId?: InputMaybe<StringFilter>;\n};\n\n/** Video stream DRM metadata */\nexport type SeasonVideoStream = {\n  __typename?: 'SeasonVideoStream';\n  /** Bitrate in kilobits per second */\n  bitrateInKbps?: Maybe<Scalars['Int']['output']>;\n  /** Codecs */\n  codecs?: Maybe<Scalars['String']['output']>;\n  /** Display aspect ratio for video streams */\n  displayAspectRatio?: Maybe<Scalars['String']['output']>;\n  /** File path to the initialization segment */\n  file?: Maybe<Scalars['String']['output']>;\n  /** File Template */\n  fileTemplate?: Maybe<Scalars['String']['output']>;\n  /** Packaging format of the stream */\n  format?: Maybe<Scalars['String']['output']>;\n  /** Frame rate of the video stream */\n  frameRate?: Maybe<Scalars['Float']['output']>;\n  /** Height of the video stream */\n  height?: Maybe<Scalars['Int']['output']>;\n  id: Scalars['Int']['output'];\n  /** Initialization Vector of the stream */\n  iv?: Maybe<Scalars['String']['output']>;\n  /** DRM Key ID */\n  keyId?: Maybe<Scalars['String']['output']>;\n  /** Label indicating the type of stream (audio/video) */\n  label?: Maybe<Scalars['String']['output']>;\n  /** The language code for audio streams */\n  languageCode?: Maybe<Scalars['String']['output']>;\n  /** Language name for audio, subtitle, or caption streams */\n  languageName?: Maybe<Scalars['String']['output']>;\n  /** Pixel aspect ratio for video streams */\n  pixelAspectRatio?: Maybe<Scalars['String']['output']>;\n  /** Sampling rate for audio streams */\n  samplingRate?: Maybe<Scalars['Int']['output']>;\n  /** Stream type */\n  type?: Maybe<VideoStreamType>;\n  /** Reads a single `SeasonVideo` that is related to this `SeasonVideoStream`. */\n  video?: Maybe<SeasonVideo>;\n  videoId?: Maybe<Scalars['Int']['output']>;\n  /** Width of the video stream */\n  width?: Maybe<Scalars['Int']['output']>;\n};\n\n/**\n * A condition to be used against `SeasonVideoStream` object types. All fields are\n * tested for equality and combined with a logical ‘and.’\n */\nexport type SeasonVideoStreamCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `type` field. */\n  type?: InputMaybe<VideoStreamType>;\n  /** Checks for equality with the object’s `videoId` field. */\n  videoId?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** A filter to be used against `SeasonVideoStream` object types. All fields are combined with a logical ‘and.’ */\nexport type SeasonVideoStreamFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<SeasonVideoStreamFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<SeasonVideoStreamFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<SeasonVideoStreamFilter>>;\n  /** Filter by the object’s `type` field. */\n  type?: InputMaybe<VideoStreamTypeFilter>;\n  /** Filter by the object’s `videoId` field. */\n  videoId?: InputMaybe<IntFilter>;\n};\n\n/** A connection to a list of `SeasonVideoStream` values. */\nexport type SeasonVideoStreamsConnection = {\n  __typename?: 'SeasonVideoStreamsConnection';\n  /** A list of edges which contains the `SeasonVideoStream` and cursor to aid in pagination. */\n  edges: Array<SeasonVideoStreamsEdge>;\n  /** A list of `SeasonVideoStream` objects. */\n  nodes: Array<SeasonVideoStream>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `SeasonVideoStream` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `SeasonVideoStream` edge in the connection. */\nexport type SeasonVideoStreamsEdge = {\n  __typename?: 'SeasonVideoStreamsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `SeasonVideoStream` at the end of the edge. */\n  node: SeasonVideoStream;\n};\n\n/** Methods to use when ordering `SeasonVideoStream`. */\nexport enum SeasonVideoStreamsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TypeAsc = 'TYPE_ASC',\n  TypeDesc = 'TYPE_DESC',\n  VideoIdAsc = 'VIDEO_ID_ASC',\n  VideoIdDesc = 'VIDEO_ID_DESC'\n}\n\n/** A connection to a list of `SeasonVideo` values. */\nexport type SeasonVideosConnection = {\n  __typename?: 'SeasonVideosConnection';\n  /** A list of edges which contains the `SeasonVideo` and cursor to aid in pagination. */\n  edges: Array<SeasonVideosEdge>;\n  /** A list of `SeasonVideo` objects. */\n  nodes: Array<SeasonVideo>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `SeasonVideo` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `SeasonVideo` edge in the connection. */\nexport type SeasonVideosEdge = {\n  __typename?: 'SeasonVideosEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `SeasonVideo` at the end of the edge. */\n  node: SeasonVideo;\n};\n\n/** Methods to use when ordering `SeasonVideo`. */\nexport enum SeasonVideosOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  SeasonIdAsc = 'SEASON_ID_ASC',\n  SeasonIdDesc = 'SEASON_ID_DESC'\n}\n\n/** A connection to a list of `Season` values. */\nexport type SeasonsConnection = {\n  __typename?: 'SeasonsConnection';\n  /** A list of edges which contains the `Season` and cursor to aid in pagination. */\n  edges: Array<SeasonsEdge>;\n  /** A list of `Season` objects. */\n  nodes: Array<Season>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Season` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `Season` edge in the connection. */\nexport type SeasonsEdge = {\n  __typename?: 'SeasonsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `Season` at the end of the edge. */\n  node: Season;\n};\n\n/** Methods to use when ordering `Season`. */\nexport enum SeasonsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TvshowIdAsc = 'TVSHOW_ID_ASC',\n  TvshowIdDesc = 'TVSHOW_ID_DESC'\n}\n\n/** A filter to be used against String fields. All fields are combined with a logical ‘and.’ */\nexport type StringFilter = {\n  /** Not equal to the specified value, treating null like an ordinary value. */\n  distinctFrom?: InputMaybe<Scalars['String']['input']>;\n  /** Not equal to the specified value, treating null like an ordinary value (case-insensitive). */\n  distinctFromInsensitive?: InputMaybe<Scalars['String']['input']>;\n  /** Ends with the specified string (case-sensitive). */\n  endsWith?: InputMaybe<Scalars['String']['input']>;\n  /** Ends with the specified string (case-insensitive). */\n  endsWithInsensitive?: InputMaybe<Scalars['String']['input']>;\n  /** Equal to the specified value. */\n  equalTo?: InputMaybe<Scalars['String']['input']>;\n  /** Equal to the specified value (case-insensitive). */\n  equalToInsensitive?: InputMaybe<Scalars['String']['input']>;\n  /** Greater than the specified value. */\n  greaterThan?: InputMaybe<Scalars['String']['input']>;\n  /** Greater than the specified value (case-insensitive). */\n  greaterThanInsensitive?: InputMaybe<Scalars['String']['input']>;\n  /** Greater than or equal to the specified value. */\n  greaterThanOrEqualTo?: InputMaybe<Scalars['String']['input']>;\n  /** Greater than or equal to the specified value (case-insensitive). */\n  greaterThanOrEqualToInsensitive?: InputMaybe<Scalars['String']['input']>;\n  /** Included in the specified list. */\n  in?: InputMaybe<Array<Scalars['String']['input']>>;\n  /** Included in the specified list (case-insensitive). */\n  inInsensitive?: InputMaybe<Array<Scalars['String']['input']>>;\n  /** Contains the specified string (case-sensitive). */\n  includes?: InputMaybe<Scalars['String']['input']>;\n  /** Contains the specified string (case-insensitive). */\n  includesInsensitive?: InputMaybe<Scalars['String']['input']>;\n  /** Is null (if `true` is specified) or is not null (if `false` is specified). */\n  isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Less than the specified value. */\n  lessThan?: InputMaybe<Scalars['String']['input']>;\n  /** Less than the specified value (case-insensitive). */\n  lessThanInsensitive?: InputMaybe<Scalars['String']['input']>;\n  /** Less than or equal to the specified value. */\n  lessThanOrEqualTo?: InputMaybe<Scalars['String']['input']>;\n  /** Less than or equal to the specified value (case-insensitive). */\n  lessThanOrEqualToInsensitive?: InputMaybe<Scalars['String']['input']>;\n  /** Matches the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */\n  like?: InputMaybe<Scalars['String']['input']>;\n  /** Matches the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */\n  likeInsensitive?: InputMaybe<Scalars['String']['input']>;\n  /** Equal to the specified value, treating null like an ordinary value. */\n  notDistinctFrom?: InputMaybe<Scalars['String']['input']>;\n  /** Equal to the specified value, treating null like an ordinary value (case-insensitive). */\n  notDistinctFromInsensitive?: InputMaybe<Scalars['String']['input']>;\n  /** Does not end with the specified string (case-sensitive). */\n  notEndsWith?: InputMaybe<Scalars['String']['input']>;\n  /** Does not end with the specified string (case-insensitive). */\n  notEndsWithInsensitive?: InputMaybe<Scalars['String']['input']>;\n  /** Not equal to the specified value. */\n  notEqualTo?: InputMaybe<Scalars['String']['input']>;\n  /** Not equal to the specified value (case-insensitive). */\n  notEqualToInsensitive?: InputMaybe<Scalars['String']['input']>;\n  /** Not included in the specified list. */\n  notIn?: InputMaybe<Array<Scalars['String']['input']>>;\n  /** Not included in the specified list (case-insensitive). */\n  notInInsensitive?: InputMaybe<Array<Scalars['String']['input']>>;\n  /** Does not contain the specified string (case-sensitive). */\n  notIncludes?: InputMaybe<Scalars['String']['input']>;\n  /** Does not contain the specified string (case-insensitive). */\n  notIncludesInsensitive?: InputMaybe<Scalars['String']['input']>;\n  /** Does not match the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */\n  notLike?: InputMaybe<Scalars['String']['input']>;\n  /** Does not match the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */\n  notLikeInsensitive?: InputMaybe<Scalars['String']['input']>;\n  /** Does not start with the specified string (case-sensitive). */\n  notStartsWith?: InputMaybe<Scalars['String']['input']>;\n  /** Does not start with the specified string (case-insensitive). */\n  notStartsWithInsensitive?: InputMaybe<Scalars['String']['input']>;\n  /** Starts with the specified string (case-sensitive). */\n  startsWith?: InputMaybe<Scalars['String']['input']>;\n  /** Starts with the specified string (case-insensitive). */\n  startsWithInsensitive?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** Definition of the TV show entity. */\nexport type Tvshow = {\n  __typename?: 'Tvshow';\n  /** Cast of the TV show. */\n  cast?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Extended synopsis. */\n  description?: Maybe<Scalars['String']['output']>;\n  /** Reads and enables pagination through a set of `TvshowGenresRelation`. */\n  genres: TvshowGenresRelationsConnection;\n  id: Scalars['String']['output'];\n  /** Reads and enables pagination through a set of `TvshowImage`. */\n  images: TvshowImagesConnection;\n  /** Reads and enables pagination through a set of `TvshowLicense`. */\n  licenses: TvshowLicensesConnection;\n  /** Original title of the TV show. */\n  originalTitle?: Maybe<Scalars['String']['output']>;\n  /** Array of production countries */\n  productionCountries?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Date of first release. */\n  released?: Maybe<Scalars['Datetime']['output']>;\n  /** Reads and enables pagination through a set of `Season`. */\n  seasons: SeasonsConnection;\n  /** Name of the producing studio. */\n  studio?: Maybe<Scalars['String']['output']>;\n  /** Short description of the main plot elements. */\n  synopsis?: Maybe<Scalars['String']['output']>;\n  /** Array of tags associated with the content. */\n  tags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Title of the TV show. */\n  title?: Maybe<Scalars['String']['output']>;\n  /** Reads and enables pagination through a set of `TvshowVideo`. */\n  videos: TvshowVideosConnection;\n};\n\n\n/** Definition of the TV show entity. */\nexport type TvshowGenresArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<TvshowGenresRelationCondition>;\n  filter?: InputMaybe<TvshowGenresRelationFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<TvshowGenresRelationsOrderBy>>;\n};\n\n\n/** Definition of the TV show entity. */\nexport type TvshowImagesArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<TvshowImageCondition>;\n  filter?: InputMaybe<TvshowImageFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<TvshowImagesOrderBy>>;\n};\n\n\n/** Definition of the TV show entity. */\nexport type TvshowLicensesArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<TvshowLicenseCondition>;\n  filter?: InputMaybe<TvshowLicenseFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<TvshowLicensesOrderBy>>;\n};\n\n\n/** Definition of the TV show entity. */\nexport type TvshowSeasonsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<SeasonCondition>;\n  filter?: InputMaybe<SeasonFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<SeasonsOrderBy>>;\n};\n\n\n/** Definition of the TV show entity. */\nexport type TvshowVideosArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<TvshowVideoCondition>;\n  filter?: InputMaybe<TvshowVideoFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<TvshowVideosOrderBy>>;\n};\n\n/** A condition to be used against `Tvshow` object types. All fields are tested for equality and combined with a logical ‘and.’ */\nexport type TvshowCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `title` field. */\n  title?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `Tvshow` object types. All fields are combined with a logical ‘and.’ */\nexport type TvshowFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<TvshowFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<TvshowFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<TvshowFilter>>;\n  /** Filter by the object’s `title` field. */\n  title?: InputMaybe<StringFilter>;\n};\n\n/** Definition of the TV show genre entity. */\nexport type TvshowGenre = {\n  __typename?: 'TvshowGenre';\n  id: Scalars['String']['output'];\n  /** Global ordering number for the genre. */\n  orderNo?: Maybe<Scalars['Int']['output']>;\n  /** Title of the genre. */\n  title?: Maybe<Scalars['String']['output']>;\n};\n\n/**\n * A condition to be used against `TvshowGenre` object types. All fields are tested\n * for equality and combined with a logical ‘and.’\n */\nexport type TvshowGenreCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `orderNo` field. */\n  orderNo?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `title` field. */\n  title?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `TvshowGenre` object types. All fields are combined with a logical ‘and.’ */\nexport type TvshowGenreFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<TvshowGenreFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<TvshowGenreFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<TvshowGenreFilter>>;\n  /** Filter by the object’s `orderNo` field. */\n  orderNo?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `title` field. */\n  title?: InputMaybe<StringFilter>;\n};\n\n/** A connection to a list of `TvshowGenre` values. */\nexport type TvshowGenresConnection = {\n  __typename?: 'TvshowGenresConnection';\n  /** A list of edges which contains the `TvshowGenre` and cursor to aid in pagination. */\n  edges: Array<TvshowGenresEdge>;\n  /** A list of `TvshowGenre` objects. */\n  nodes: Array<TvshowGenre>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `TvshowGenre` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `TvshowGenre` edge in the connection. */\nexport type TvshowGenresEdge = {\n  __typename?: 'TvshowGenresEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `TvshowGenre` at the end of the edge. */\n  node: TvshowGenre;\n};\n\n/** Methods to use when ordering `TvshowGenre`. */\nexport enum TvshowGenresOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  OrderNoAsc = 'ORDER_NO_ASC',\n  OrderNoDesc = 'ORDER_NO_DESC',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TitleAsc = 'TITLE_ASC',\n  TitleDesc = 'TITLE_DESC'\n}\n\nexport type TvshowGenresRelation = {\n  __typename?: 'TvshowGenresRelation';\n  id: Scalars['Int']['output'];\n  orderNo: Scalars['Int']['output'];\n  /** Reads a single `Tvshow` that is related to this `TvshowGenresRelation`. */\n  tvshow?: Maybe<Tvshow>;\n  /** Reads a single `TvshowGenre` that is related to this `TvshowGenresRelation`. */\n  tvshowGenre?: Maybe<TvshowGenre>;\n  tvshowGenreId?: Maybe<Scalars['String']['output']>;\n  tvshowId?: Maybe<Scalars['String']['output']>;\n};\n\n/**\n * A condition to be used against `TvshowGenresRelation` object types. All fields\n * are tested for equality and combined with a logical ‘and.’\n */\nexport type TvshowGenresRelationCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `orderNo` field. */\n  orderNo?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `tvshowGenreId` field. */\n  tvshowGenreId?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `tvshowId` field. */\n  tvshowId?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `TvshowGenresRelation` object types. All fields are combined with a logical ‘and.’ */\nexport type TvshowGenresRelationFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<TvshowGenresRelationFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<TvshowGenresRelationFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<TvshowGenresRelationFilter>>;\n  /** Filter by the object’s `orderNo` field. */\n  orderNo?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `tvshowGenreId` field. */\n  tvshowGenreId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `tvshowId` field. */\n  tvshowId?: InputMaybe<StringFilter>;\n};\n\n/** A connection to a list of `TvshowGenresRelation` values. */\nexport type TvshowGenresRelationsConnection = {\n  __typename?: 'TvshowGenresRelationsConnection';\n  /** A list of edges which contains the `TvshowGenresRelation` and cursor to aid in pagination. */\n  edges: Array<TvshowGenresRelationsEdge>;\n  /** A list of `TvshowGenresRelation` objects. */\n  nodes: Array<TvshowGenresRelation>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `TvshowGenresRelation` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `TvshowGenresRelation` edge in the connection. */\nexport type TvshowGenresRelationsEdge = {\n  __typename?: 'TvshowGenresRelationsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `TvshowGenresRelation` at the end of the edge. */\n  node: TvshowGenresRelation;\n};\n\n/** Methods to use when ordering `TvshowGenresRelation`. */\nexport enum TvshowGenresRelationsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  OrderNoAsc = 'ORDER_NO_ASC',\n  OrderNoDesc = 'ORDER_NO_DESC',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TvshowGenreIdAsc = 'TVSHOW_GENRE_ID_ASC',\n  TvshowGenreIdDesc = 'TVSHOW_GENRE_ID_DESC',\n  TvshowIdAsc = 'TVSHOW_ID_ASC',\n  TvshowIdDesc = 'TVSHOW_ID_DESC'\n}\n\n/** Asset image metadata. */\nexport type TvshowImage = {\n  __typename?: 'TvshowImage';\n  altText?: Maybe<Scalars['String']['output']>;\n  /** Height of the image in pixels. */\n  height?: Maybe<Scalars['Int']['output']>;\n  id: Scalars['Int']['output'];\n  /** URI to the image file. */\n  path?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `Tvshow` that is related to this `TvshowImage`. */\n  tvshow?: Maybe<Tvshow>;\n  tvshowId?: Maybe<Scalars['String']['output']>;\n  /** Type of the image. */\n  type?: Maybe<Scalars['String']['output']>;\n  /** Width of the image in pixels. */\n  width?: Maybe<Scalars['Int']['output']>;\n};\n\n/**\n * A condition to be used against `TvshowImage` object types. All fields are tested\n * for equality and combined with a logical ‘and.’\n */\nexport type TvshowImageCondition = {\n  /** Checks for equality with the object’s `altText` field. */\n  altText?: InputMaybe<Scalars['String']['input']>;\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `tvshowId` field. */\n  tvshowId?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `TvshowImage` object types. All fields are combined with a logical ‘and.’ */\nexport type TvshowImageFilter = {\n  /** Filter by the object’s `altText` field. */\n  altText?: InputMaybe<StringFilter>;\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<TvshowImageFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<TvshowImageFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<TvshowImageFilter>>;\n  /** Filter by the object’s `tvshowId` field. */\n  tvshowId?: InputMaybe<StringFilter>;\n};\n\n/** A connection to a list of `TvshowImage` values. */\nexport type TvshowImagesConnection = {\n  __typename?: 'TvshowImagesConnection';\n  /** A list of edges which contains the `TvshowImage` and cursor to aid in pagination. */\n  edges: Array<TvshowImagesEdge>;\n  /** A list of `TvshowImage` objects. */\n  nodes: Array<TvshowImage>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `TvshowImage` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `TvshowImage` edge in the connection. */\nexport type TvshowImagesEdge = {\n  __typename?: 'TvshowImagesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `TvshowImage` at the end of the edge. */\n  node: TvshowImage;\n};\n\n/** Methods to use when ordering `TvshowImage`. */\nexport enum TvshowImagesOrderBy {\n  AltTextAsc = 'ALT_TEXT_ASC',\n  AltTextDesc = 'ALT_TEXT_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TvshowIdAsc = 'TVSHOW_ID_ASC',\n  TvshowIdDesc = 'TVSHOW_ID_DESC'\n}\n\n/** Content metadata license that defines the content availability regions and time frame. */\nexport type TvshowLicense = {\n  __typename?: 'TvshowLicense';\n  /** Array of countries where the license applies. */\n  countries?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Time when license becomes invalid. */\n  endTime?: Maybe<Scalars['Datetime']['output']>;\n  id: Scalars['Int']['output'];\n  /** Time when license becomes valid. */\n  startTime?: Maybe<Scalars['Datetime']['output']>;\n  /** Reads a single `Tvshow` that is related to this `TvshowLicense`. */\n  tvshow?: Maybe<Tvshow>;\n  tvshowId?: Maybe<Scalars['String']['output']>;\n};\n\n/**\n * A condition to be used against `TvshowLicense` object types. All fields are\n * tested for equality and combined with a logical ‘and.’\n */\nexport type TvshowLicenseCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `tvshowId` field. */\n  tvshowId?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** A filter to be used against `TvshowLicense` object types. All fields are combined with a logical ‘and.’ */\nexport type TvshowLicenseFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<TvshowLicenseFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<TvshowLicenseFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<TvshowLicenseFilter>>;\n  /** Filter by the object’s `tvshowId` field. */\n  tvshowId?: InputMaybe<StringFilter>;\n};\n\n/** A connection to a list of `TvshowLicense` values. */\nexport type TvshowLicensesConnection = {\n  __typename?: 'TvshowLicensesConnection';\n  /** A list of edges which contains the `TvshowLicense` and cursor to aid in pagination. */\n  edges: Array<TvshowLicensesEdge>;\n  /** A list of `TvshowLicense` objects. */\n  nodes: Array<TvshowLicense>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `TvshowLicense` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `TvshowLicense` edge in the connection. */\nexport type TvshowLicensesEdge = {\n  __typename?: 'TvshowLicensesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `TvshowLicense` at the end of the edge. */\n  node: TvshowLicense;\n};\n\n/** Methods to use when ordering `TvshowLicense`. */\nexport enum TvshowLicensesOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TvshowIdAsc = 'TVSHOW_ID_ASC',\n  TvshowIdDesc = 'TVSHOW_ID_DESC'\n}\n\n/** Video stream metadata. */\nexport type TvshowVideo = {\n  __typename?: 'TvshowVideo';\n  /** Array of audio languages available in the stream. */\n  audioLanguages?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Array of caption languages available in the stream. */\n  captionLanguages?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Reads and enables pagination through a set of `TvshowVideoCuePoint`. */\n  cuePoints: TvshowVideoCuePointsConnection;\n  /** URI to a DASH manifest. */\n  dashManifest?: Maybe<Scalars['String']['output']>;\n  /** URI to an HLS manifest. */\n  hlsManifest?: Maybe<Scalars['String']['output']>;\n  id: Scalars['Int']['output'];\n  /** Indicates whether a stream is protected with DRM. */\n  isProtected?: Maybe<Scalars['Boolean']['output']>;\n  /** Length of the stream in seconds. */\n  lengthInSeconds?: Maybe<Scalars['Float']['output']>;\n  /** Output format of the stream. */\n  outputFormat?: Maybe<Scalars['String']['output']>;\n  /** Array of subtitle languages available in the stream. */\n  subtitleLanguages?: Maybe<Array<Maybe<Scalars['String']['output']>>>;\n  /** Title of the video stream */\n  title?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `Tvshow` that is related to this `TvshowVideo`. */\n  tvshow?: Maybe<Tvshow>;\n  tvshowId?: Maybe<Scalars['String']['output']>;\n  /** Type of the video stream. */\n  type?: Maybe<Scalars['String']['output']>;\n  /** Reads and enables pagination through a set of `TvshowVideoStream`. */\n  videoStreams: TvshowVideoStreamsConnection;\n};\n\n\n/** Video stream metadata. */\nexport type TvshowVideoCuePointsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<TvshowVideoCuePointCondition>;\n  filter?: InputMaybe<TvshowVideoCuePointFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<TvshowVideoCuePointsOrderBy>>;\n};\n\n\n/** Video stream metadata. */\nexport type TvshowVideoVideoStreamsArgs = {\n  after?: InputMaybe<Scalars['Cursor']['input']>;\n  before?: InputMaybe<Scalars['Cursor']['input']>;\n  condition?: InputMaybe<TvshowVideoStreamCondition>;\n  filter?: InputMaybe<TvshowVideoStreamFilter>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  last?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<TvshowVideoStreamsOrderBy>>;\n};\n\n/**\n * A condition to be used against `TvshowVideo` object types. All fields are tested\n * for equality and combined with a logical ‘and.’\n */\nexport type TvshowVideoCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `tvshowId` field. */\n  tvshowId?: InputMaybe<Scalars['String']['input']>;\n};\n\n/** Video cue point metadata */\nexport type TvshowVideoCuePoint = {\n  __typename?: 'TvshowVideoCuePoint';\n  /** Type of the cue point */\n  cuePointTypeKey: Scalars['String']['output'];\n  id: Scalars['Int']['output'];\n  /** Time in seconds at which the cue point is set within the video */\n  timeInSeconds: Scalars['Float']['output'];\n  /** Additional information associated with the cue point */\n  value?: Maybe<Scalars['String']['output']>;\n  /** Reads a single `TvshowVideo` that is related to this `TvshowVideoCuePoint`. */\n  video?: Maybe<TvshowVideo>;\n  videoId?: Maybe<Scalars['Int']['output']>;\n};\n\n/**\n * A condition to be used against `TvshowVideoCuePoint` object types. All fields\n * are tested for equality and combined with a logical ‘and.’\n */\nexport type TvshowVideoCuePointCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `videoId` field. */\n  videoId?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** A filter to be used against `TvshowVideoCuePoint` object types. All fields are combined with a logical ‘and.’ */\nexport type TvshowVideoCuePointFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<TvshowVideoCuePointFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<TvshowVideoCuePointFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<TvshowVideoCuePointFilter>>;\n  /** Filter by the object’s `videoId` field. */\n  videoId?: InputMaybe<IntFilter>;\n};\n\n/** A connection to a list of `TvshowVideoCuePoint` values. */\nexport type TvshowVideoCuePointsConnection = {\n  __typename?: 'TvshowVideoCuePointsConnection';\n  /** A list of edges which contains the `TvshowVideoCuePoint` and cursor to aid in pagination. */\n  edges: Array<TvshowVideoCuePointsEdge>;\n  /** A list of `TvshowVideoCuePoint` objects. */\n  nodes: Array<TvshowVideoCuePoint>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `TvshowVideoCuePoint` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `TvshowVideoCuePoint` edge in the connection. */\nexport type TvshowVideoCuePointsEdge = {\n  __typename?: 'TvshowVideoCuePointsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `TvshowVideoCuePoint` at the end of the edge. */\n  node: TvshowVideoCuePoint;\n};\n\n/** Methods to use when ordering `TvshowVideoCuePoint`. */\nexport enum TvshowVideoCuePointsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  VideoIdAsc = 'VIDEO_ID_ASC',\n  VideoIdDesc = 'VIDEO_ID_DESC'\n}\n\n/** A filter to be used against `TvshowVideo` object types. All fields are combined with a logical ‘and.’ */\nexport type TvshowVideoFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<TvshowVideoFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<TvshowVideoFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<TvshowVideoFilter>>;\n  /** Filter by the object’s `tvshowId` field. */\n  tvshowId?: InputMaybe<StringFilter>;\n};\n\n/** Video stream DRM metadata */\nexport type TvshowVideoStream = {\n  __typename?: 'TvshowVideoStream';\n  /** Bitrate in kilobits per second */\n  bitrateInKbps?: Maybe<Scalars['Int']['output']>;\n  /** Codecs */\n  codecs?: Maybe<Scalars['String']['output']>;\n  /** Display aspect ratio for video streams */\n  displayAspectRatio?: Maybe<Scalars['String']['output']>;\n  /** File path to the initialization segment */\n  file?: Maybe<Scalars['String']['output']>;\n  /** File Template */\n  fileTemplate?: Maybe<Scalars['String']['output']>;\n  /** Packaging format of the stream */\n  format?: Maybe<Scalars['String']['output']>;\n  /** Frame rate of the video stream */\n  frameRate?: Maybe<Scalars['Float']['output']>;\n  /** Height of the video stream */\n  height?: Maybe<Scalars['Int']['output']>;\n  id: Scalars['Int']['output'];\n  /** Initialization Vector of the stream */\n  iv?: Maybe<Scalars['String']['output']>;\n  /** DRM Key ID */\n  keyId?: Maybe<Scalars['String']['output']>;\n  /** Label indicating the type of stream (audio/video) */\n  label?: Maybe<Scalars['String']['output']>;\n  /** The language code for audio streams */\n  languageCode?: Maybe<Scalars['String']['output']>;\n  /** Language name for audio, subtitle, or caption streams */\n  languageName?: Maybe<Scalars['String']['output']>;\n  /** Pixel aspect ratio for video streams */\n  pixelAspectRatio?: Maybe<Scalars['String']['output']>;\n  /** Sampling rate for audio streams */\n  samplingRate?: Maybe<Scalars['Int']['output']>;\n  /** Stream type */\n  type?: Maybe<VideoStreamType>;\n  /** Reads a single `TvshowVideo` that is related to this `TvshowVideoStream`. */\n  video?: Maybe<TvshowVideo>;\n  videoId?: Maybe<Scalars['Int']['output']>;\n  /** Width of the video stream */\n  width?: Maybe<Scalars['Int']['output']>;\n};\n\n/**\n * A condition to be used against `TvshowVideoStream` object types. All fields are\n * tested for equality and combined with a logical ‘and.’\n */\nexport type TvshowVideoStreamCondition = {\n  /** Checks for equality with the object’s `id` field. */\n  id?: InputMaybe<Scalars['Int']['input']>;\n  /** Checks for equality with the object’s `type` field. */\n  type?: InputMaybe<VideoStreamType>;\n  /** Checks for equality with the object’s `videoId` field. */\n  videoId?: InputMaybe<Scalars['Int']['input']>;\n};\n\n/** A filter to be used against `TvshowVideoStream` object types. All fields are combined with a logical ‘and.’ */\nexport type TvshowVideoStreamFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<TvshowVideoStreamFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<TvshowVideoStreamFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<TvshowVideoStreamFilter>>;\n  /** Filter by the object’s `type` field. */\n  type?: InputMaybe<VideoStreamTypeFilter>;\n  /** Filter by the object’s `videoId` field. */\n  videoId?: InputMaybe<IntFilter>;\n};\n\n/** A connection to a list of `TvshowVideoStream` values. */\nexport type TvshowVideoStreamsConnection = {\n  __typename?: 'TvshowVideoStreamsConnection';\n  /** A list of edges which contains the `TvshowVideoStream` and cursor to aid in pagination. */\n  edges: Array<TvshowVideoStreamsEdge>;\n  /** A list of `TvshowVideoStream` objects. */\n  nodes: Array<TvshowVideoStream>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `TvshowVideoStream` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `TvshowVideoStream` edge in the connection. */\nexport type TvshowVideoStreamsEdge = {\n  __typename?: 'TvshowVideoStreamsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `TvshowVideoStream` at the end of the edge. */\n  node: TvshowVideoStream;\n};\n\n/** Methods to use when ordering `TvshowVideoStream`. */\nexport enum TvshowVideoStreamsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TypeAsc = 'TYPE_ASC',\n  TypeDesc = 'TYPE_DESC',\n  VideoIdAsc = 'VIDEO_ID_ASC',\n  VideoIdDesc = 'VIDEO_ID_DESC'\n}\n\n/** A connection to a list of `TvshowVideo` values. */\nexport type TvshowVideosConnection = {\n  __typename?: 'TvshowVideosConnection';\n  /** A list of edges which contains the `TvshowVideo` and cursor to aid in pagination. */\n  edges: Array<TvshowVideosEdge>;\n  /** A list of `TvshowVideo` objects. */\n  nodes: Array<TvshowVideo>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `TvshowVideo` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `TvshowVideo` edge in the connection. */\nexport type TvshowVideosEdge = {\n  __typename?: 'TvshowVideosEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `TvshowVideo` at the end of the edge. */\n  node: TvshowVideo;\n};\n\n/** Methods to use when ordering `TvshowVideo`. */\nexport enum TvshowVideosOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TvshowIdAsc = 'TVSHOW_ID_ASC',\n  TvshowIdDesc = 'TVSHOW_ID_DESC'\n}\n\n/** A connection to a list of `Tvshow` values. */\nexport type TvshowsConnection = {\n  __typename?: 'TvshowsConnection';\n  /** A list of edges which contains the `Tvshow` and cursor to aid in pagination. */\n  edges: Array<TvshowsEdge>;\n  /** A list of `Tvshow` objects. */\n  nodes: Array<Tvshow>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Tvshow` you could get from the connection. */\n  totalCount: Scalars['Int']['output'];\n};\n\n/** A `Tvshow` edge in the connection. */\nexport type TvshowsEdge = {\n  __typename?: 'TvshowsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']['output']>;\n  /** The `Tvshow` at the end of the edge. */\n  node: Tvshow;\n};\n\n/** Methods to use when ordering `Tvshow`. */\nexport enum TvshowsOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TitleAsc = 'TITLE_ASC',\n  TitleDesc = 'TITLE_DESC'\n}\n\nexport enum VideoStreamType {\n  /** Audio */\n  Audio = 'AUDIO',\n  /** Closed caption */\n  ClosedCaption = 'CLOSED_CAPTION',\n  /** Subtitle */\n  Subtitle = 'SUBTITLE',\n  /** Video */\n  Video = 'VIDEO'\n}\n\n/** A filter to be used against VideoStreamType fields. All fields are combined with a logical ‘and.’ */\nexport type VideoStreamTypeFilter = {\n  /** Not equal to the specified value, treating null like an ordinary value. */\n  distinctFrom?: InputMaybe<VideoStreamType>;\n  /** Equal to the specified value. */\n  equalTo?: InputMaybe<VideoStreamType>;\n  /** Greater than the specified value. */\n  greaterThan?: InputMaybe<VideoStreamType>;\n  /** Greater than or equal to the specified value. */\n  greaterThanOrEqualTo?: InputMaybe<VideoStreamType>;\n  /** Included in the specified list. */\n  in?: InputMaybe<Array<VideoStreamType>>;\n  /** Is null (if `true` is specified) or is not null (if `false` is specified). */\n  isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  /** Less than the specified value. */\n  lessThan?: InputMaybe<VideoStreamType>;\n  /** Less than or equal to the specified value. */\n  lessThanOrEqualTo?: InputMaybe<VideoStreamType>;\n  /** Equal to the specified value, treating null like an ordinary value. */\n  notDistinctFrom?: InputMaybe<VideoStreamType>;\n  /** Not equal to the specified value. */\n  notEqualTo?: InputMaybe<VideoStreamType>;\n  /** Not included in the specified list. */\n  notIn?: InputMaybe<Array<VideoStreamType>>;\n};\n\nexport type KeywordSearchQueryVariables = Exact<{\n  keyword: Scalars['String']['input'];\n}>;\n\n\nexport type KeywordSearchQuery = { __typename?: 'Query', movies?: { __typename?: 'MoviesConnection', nodes: Array<{ __typename?: 'Movie', id: string, originalTitle?: string | null, studio?: string | null, released?: any | null, cast?: Array<string | null> | null, productionCountries?: Array<string | null> | null, tags?: Array<string | null> | null, title?: string | null, description?: string | null, synopsis?: string | null, genres: { __typename?: 'MovieGenresRelationsConnection', nodes: Array<{ __typename?: 'MovieGenresRelation', movieGenre?: { __typename?: 'MovieGenre', id: string, title?: string | null } | null }> }, images: { __typename?: 'MovieImagesConnection', nodes: Array<{ __typename?: 'MovieImage', id: number, type?: string | null, width?: number | null, height?: number | null, path?: string | null, altText?: string | null }> }, licenses: { __typename?: 'MovieLicensesConnection', nodes: Array<{ __typename?: 'MovieLicense', countries?: Array<string | null> | null, startTime?: any | null, endTime?: any | null }> }, videos: { __typename?: 'MovieVideosConnection', nodes: Array<{ __typename?: 'MovieVideo', id: number, type?: string | null, title?: string | null, dashManifest?: string | null, hlsManifest?: string | null, audioLanguages?: Array<string | null> | null, subtitleLanguages?: Array<string | null> | null, outputFormat?: string | null, lengthInSeconds?: number | null, captionLanguages?: Array<string | null> | null, isProtected?: boolean | null, cuePoints: { __typename?: 'MovieVideoCuePointsConnection', nodes: Array<{ __typename?: 'MovieVideoCuePoint', id: number, cuePointTypeKey: string, timeInSeconds: number, value?: string | null }> }, videoStreams: { __typename?: 'MovieVideoStreamsConnection', nodes: Array<{ __typename?: 'MovieVideoStream', label?: string | null, format?: string | null, frameRate?: number | null, languageCode?: string | null, bitrateInKbps?: number | null, displayAspectRatio?: string | null, pixelAspectRatio?: string | null, samplingRate?: number | null, fileTemplate?: string | null, id: number, iv?: string | null, keyId?: string | null, type?: VideoStreamType | null, codecs?: string | null, height?: number | null, width?: number | null }> } }> } }> } | null, episodes?: { __typename?: 'EpisodesConnection', nodes: Array<{ __typename?: 'Episode', id: string, index?: number | null, originalTitle?: string | null, studio?: string | null, released?: any | null, cast?: Array<string | null> | null, productionCountries?: Array<string | null> | null, tags?: Array<string | null> | null, title?: string | null, description?: string | null, synopsis?: string | null, genres: { __typename?: 'EpisodeGenresRelationsConnection', nodes: Array<{ __typename?: 'EpisodeGenresRelation', tvshowGenre?: { __typename?: 'TvshowGenre', id: string, title?: string | null } | null }> }, images: { __typename?: 'EpisodeImagesConnection', nodes: Array<{ __typename?: 'EpisodeImage', id: number, type?: string | null, width?: number | null, height?: number | null, path?: string | null, altText?: string | null }> }, licenses: { __typename?: 'EpisodeLicensesConnection', nodes: Array<{ __typename?: 'EpisodeLicense', countries?: Array<string | null> | null, startTime?: any | null, endTime?: any | null }> }, videos: { __typename?: 'EpisodeVideosConnection', nodes: Array<{ __typename?: 'EpisodeVideo', id: number, type?: string | null, title?: string | null, dashManifest?: string | null, hlsManifest?: string | null, audioLanguages?: Array<string | null> | null, subtitleLanguages?: Array<string | null> | null, outputFormat?: string | null, lengthInSeconds?: number | null, captionLanguages?: Array<string | null> | null, isProtected?: boolean | null, cuePoints: { __typename?: 'EpisodeVideoCuePointsConnection', nodes: Array<{ __typename?: 'EpisodeVideoCuePoint', id: number, cuePointTypeKey: string, timeInSeconds: number, value?: string | null }> }, videoStreams: { __typename?: 'EpisodeVideoStreamsConnection', nodes: Array<{ __typename?: 'EpisodeVideoStream', label?: string | null, format?: string | null, frameRate?: number | null, languageCode?: string | null, bitrateInKbps?: number | null, displayAspectRatio?: string | null, pixelAspectRatio?: string | null, samplingRate?: number | null, fileTemplate?: string | null, id: number, iv?: string | null, keyId?: string | null, type?: VideoStreamType | null, codecs?: string | null, height?: number | null, width?: number | null }> } }> } }> } | null, tvshows?: { __typename?: 'TvshowsConnection', nodes: Array<{ __typename?: 'Tvshow', id: string, originalTitle?: string | null, studio?: string | null, released?: any | null, cast?: Array<string | null> | null, productionCountries?: Array<string | null> | null, tags?: Array<string | null> | null, title?: string | null, description?: string | null, synopsis?: string | null, genres: { __typename?: 'TvshowGenresRelationsConnection', nodes: Array<{ __typename?: 'TvshowGenresRelation', tvshowGenre?: { __typename?: 'TvshowGenre', id: string, title?: string | null } | null }> }, images: { __typename?: 'TvshowImagesConnection', nodes: Array<{ __typename?: 'TvshowImage', id: number, type?: string | null, width?: number | null, height?: number | null, path?: string | null, altText?: string | null }> }, licenses: { __typename?: 'TvshowLicensesConnection', nodes: Array<{ __typename?: 'TvshowLicense', countries?: Array<string | null> | null, startTime?: any | null, endTime?: any | null }> }, videos: { __typename?: 'TvshowVideosConnection', nodes: Array<{ __typename?: 'TvshowVideo', id: number, type?: string | null, title?: string | null, dashManifest?: string | null, hlsManifest?: string | null, audioLanguages?: Array<string | null> | null, subtitleLanguages?: Array<string | null> | null, outputFormat?: string | null, lengthInSeconds?: number | null, captionLanguages?: Array<string | null> | null, isProtected?: boolean | null, cuePoints: { __typename?: 'TvshowVideoCuePointsConnection', nodes: Array<{ __typename?: 'TvshowVideoCuePoint', id: number, cuePointTypeKey: string, timeInSeconds: number, value?: string | null }> }, videoStreams: { __typename?: 'TvshowVideoStreamsConnection', nodes: Array<{ __typename?: 'TvshowVideoStream', label?: string | null, format?: string | null, frameRate?: number | null, languageCode?: string | null, bitrateInKbps?: number | null, displayAspectRatio?: string | null, pixelAspectRatio?: string | null, samplingRate?: number | null, fileTemplate?: string | null, id: number, iv?: string | null, keyId?: string | null, type?: VideoStreamType | null, codecs?: string | null, height?: number | null, width?: number | null }> } }> } }> } | null };\n\nexport type GetAllMoviesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetAllMoviesQuery = { __typename?: 'Query', movies?: { __typename?: 'MoviesConnection', nodes: Array<{ __typename?: 'Movie', id: string, title?: string | null, genres: { __typename?: 'MovieGenresRelationsConnection', nodes: Array<{ __typename?: 'MovieGenresRelation', movieGenre?: { __typename?: 'MovieGenre', title?: string | null } | null }> } }> } | null };\n\nexport type GetAllTvShowsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetAllTvShowsQuery = { __typename?: 'Query', tvshows?: { __typename?: 'TvshowsConnection', nodes: Array<{ __typename?: 'Tvshow', id: string, title?: string | null, genres: { __typename?: 'TvshowGenresRelationsConnection', nodes: Array<{ __typename?: 'TvshowGenresRelation', tvshowGenre?: { __typename?: 'TvshowGenre', title?: string | null } | null }> } }> } | null };\n\nexport type GetAllChannelsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetAllChannelsQuery = { __typename?: 'Query', channels?: { __typename?: 'ChannelsConnection', nodes: Array<{ __typename?: 'Channel', id: string, title?: string | null, description?: string | null, dashStreamUrl?: string | null, hlsStreamUrl?: string | null, keyId?: string | null, playlists: { __typename?: 'PlaylistsConnection', nodes: Array<{ __typename?: 'Playlist', id: string, startDateTime: any, endDateTime: any, programs: { __typename?: 'ProgramsConnection', nodes: Array<{ __typename?: 'Program', id: number, sortIndex?: number | null, title?: string | null, movie?: { __typename?: 'Movie', title?: string | null } | null, episode?: { __typename?: 'Episode', title?: string | null } | null }> } }> } }> } | null };\n\nexport type GetItemQueryVariables = Exact<{\n  id: Scalars['String']['input'];\n}>;\n\n\nexport type GetItemQuery = { __typename?: 'Query', movie?: { __typename?: 'Movie', id: string, originalTitle?: string | null, studio?: string | null, released?: any | null, cast?: Array<string | null> | null, productionCountries?: Array<string | null> | null, tags?: Array<string | null> | null, title?: string | null, description?: string | null, synopsis?: string | null, genres: { __typename?: 'MovieGenresRelationsConnection', nodes: Array<{ __typename?: 'MovieGenresRelation', movieGenre?: { __typename?: 'MovieGenre', id: string, title?: string | null } | null }> }, images: { __typename?: 'MovieImagesConnection', nodes: Array<{ __typename?: 'MovieImage', id: number, type?: string | null, width?: number | null, height?: number | null, path?: string | null, altText?: string | null }> }, licenses: { __typename?: 'MovieLicensesConnection', nodes: Array<{ __typename?: 'MovieLicense', countries?: Array<string | null> | null, startTime?: any | null, endTime?: any | null }> }, videos: { __typename?: 'MovieVideosConnection', nodes: Array<{ __typename?: 'MovieVideo', id: number, type?: string | null, title?: string | null, dashManifest?: string | null, hlsManifest?: string | null, audioLanguages?: Array<string | null> | null, subtitleLanguages?: Array<string | null> | null, outputFormat?: string | null, lengthInSeconds?: number | null, captionLanguages?: Array<string | null> | null, isProtected?: boolean | null, cuePoints: { __typename?: 'MovieVideoCuePointsConnection', nodes: Array<{ __typename?: 'MovieVideoCuePoint', id: number, cuePointTypeKey: string, timeInSeconds: number, value?: string | null }> }, videoStreams: { __typename?: 'MovieVideoStreamsConnection', nodes: Array<{ __typename?: 'MovieVideoStream', label?: string | null, format?: string | null, frameRate?: number | null, languageCode?: string | null, bitrateInKbps?: number | null, displayAspectRatio?: string | null, pixelAspectRatio?: string | null, samplingRate?: number | null, fileTemplate?: string | null, id: number, iv?: string | null, keyId?: string | null, type?: VideoStreamType | null, codecs?: string | null, height?: number | null, width?: number | null }> } }> } } | null, tvshow?: { __typename?: 'Tvshow', id: string, originalTitle?: string | null, studio?: string | null, released?: any | null, cast?: Array<string | null> | null, productionCountries?: Array<string | null> | null, tags?: Array<string | null> | null, title?: string | null, description?: string | null, synopsis?: string | null, genres: { __typename?: 'TvshowGenresRelationsConnection', nodes: Array<{ __typename?: 'TvshowGenresRelation', tvshowGenre?: { __typename?: 'TvshowGenre', id: string, title?: string | null } | null }> }, images: { __typename?: 'TvshowImagesConnection', nodes: Array<{ __typename?: 'TvshowImage', id: number, type?: string | null, width?: number | null, height?: number | null, path?: string | null, altText?: string | null }> }, licenses: { __typename?: 'TvshowLicensesConnection', nodes: Array<{ __typename?: 'TvshowLicense', countries?: Array<string | null> | null, startTime?: any | null, endTime?: any | null }> }, videos: { __typename?: 'TvshowVideosConnection', nodes: Array<{ __typename?: 'TvshowVideo', id: number, type?: string | null, title?: string | null, dashManifest?: string | null, hlsManifest?: string | null, audioLanguages?: Array<string | null> | null, subtitleLanguages?: Array<string | null> | null, outputFormat?: string | null, lengthInSeconds?: number | null, captionLanguages?: Array<string | null> | null, isProtected?: boolean | null, cuePoints: { __typename?: 'TvshowVideoCuePointsConnection', nodes: Array<{ __typename?: 'TvshowVideoCuePoint', id: number, cuePointTypeKey: string, timeInSeconds: number, value?: string | null }> }, videoStreams: { __typename?: 'TvshowVideoStreamsConnection', nodes: Array<{ __typename?: 'TvshowVideoStream', label?: string | null, format?: string | null, frameRate?: number | null, languageCode?: string | null, bitrateInKbps?: number | null, displayAspectRatio?: string | null, pixelAspectRatio?: string | null, samplingRate?: number | null, fileTemplate?: string | null, id: number, iv?: string | null, keyId?: string | null, type?: VideoStreamType | null, codecs?: string | null, height?: number | null, width?: number | null }> } }> }, seasons: { __typename?: 'SeasonsConnection', nodes: Array<{ __typename?: 'Season', id: string, index?: number | null, synopsis?: string | null, episodes: { __typename?: 'EpisodesConnection', nodes: Array<{ __typename?: 'Episode', id: string, index?: number | null, originalTitle?: string | null, studio?: string | null, released?: any | null, cast?: Array<string | null> | null, productionCountries?: Array<string | null> | null, tags?: Array<string | null> | null, title?: string | null, description?: string | null, synopsis?: string | null, season?: { __typename?: 'Season', tvshowId?: string | null } | null, genres: { __typename?: 'EpisodeGenresRelationsConnection', nodes: Array<{ __typename?: 'EpisodeGenresRelation', tvshowGenre?: { __typename?: 'TvshowGenre', id: string, title?: string | null } | null }> }, images: { __typename?: 'EpisodeImagesConnection', nodes: Array<{ __typename?: 'EpisodeImage', id: number, type?: string | null, width?: number | null, height?: number | null, path?: string | null, altText?: string | null }> }, licenses: { __typename?: 'EpisodeLicensesConnection', nodes: Array<{ __typename?: 'EpisodeLicense', countries?: Array<string | null> | null, startTime?: any | null, endTime?: any | null }> }, videos: { __typename?: 'EpisodeVideosConnection', nodes: Array<{ __typename?: 'EpisodeVideo', id: number, type?: string | null, title?: string | null, dashManifest?: string | null, hlsManifest?: string | null, audioLanguages?: Array<string | null> | null, subtitleLanguages?: Array<string | null> | null, outputFormat?: string | null, lengthInSeconds?: number | null, captionLanguages?: Array<string | null> | null, isProtected?: boolean | null, cuePoints: { __typename?: 'EpisodeVideoCuePointsConnection', nodes: Array<{ __typename?: 'EpisodeVideoCuePoint', id: number, cuePointTypeKey: string, timeInSeconds: number, value?: string | null }> }, videoStreams: { __typename?: 'EpisodeVideoStreamsConnection', nodes: Array<{ __typename?: 'EpisodeVideoStream', label?: string | null, format?: string | null, frameRate?: number | null, languageCode?: string | null, bitrateInKbps?: number | null, displayAspectRatio?: string | null, pixelAspectRatio?: string | null, samplingRate?: number | null, fileTemplate?: string | null, id: number, iv?: string | null, keyId?: string | null, type?: VideoStreamType | null, codecs?: string | null, height?: number | null, width?: number | null }> } }> } }> } }> } } | null, season?: { __typename?: 'Season', id: string, index?: number | null, studio?: string | null, released?: any | null, cast?: Array<string | null> | null, productionCountries?: Array<string | null> | null, tags?: Array<string | null> | null, description?: string | null, synopsis?: string | null, genres: { __typename?: 'SeasonGenresRelationsConnection', nodes: Array<{ __typename?: 'SeasonGenresRelation', tvshowGenre?: { __typename?: 'TvshowGenre', id: string, title?: string | null } | null }> }, images: { __typename?: 'SeasonImagesConnection', nodes: Array<{ __typename?: 'SeasonImage', id: number, type?: string | null, width?: number | null, height?: number | null, path?: string | null, altText?: string | null }> }, licenses: { __typename?: 'SeasonLicensesConnection', nodes: Array<{ __typename?: 'SeasonLicense', countries?: Array<string | null> | null, startTime?: any | null, endTime?: any | null }> }, videos: { __typename?: 'SeasonVideosConnection', nodes: Array<{ __typename?: 'SeasonVideo', id: number, type?: string | null, title?: string | null, dashManifest?: string | null, hlsManifest?: string | null, audioLanguages?: Array<string | null> | null, subtitleLanguages?: Array<string | null> | null, outputFormat?: string | null, lengthInSeconds?: number | null, captionLanguages?: Array<string | null> | null, isProtected?: boolean | null, cuePoints: { __typename?: 'SeasonVideoCuePointsConnection', nodes: Array<{ __typename?: 'SeasonVideoCuePoint', id: number, cuePointTypeKey: string, timeInSeconds: number, value?: string | null }> }, videoStreams: { __typename?: 'SeasonVideoStreamsConnection', nodes: Array<{ __typename?: 'SeasonVideoStream', label?: string | null, format?: string | null, frameRate?: number | null, languageCode?: string | null, bitrateInKbps?: number | null, displayAspectRatio?: string | null, pixelAspectRatio?: string | null, samplingRate?: number | null, fileTemplate?: string | null, id: number, iv?: string | null, keyId?: string | null, type?: VideoStreamType | null, codecs?: string | null, height?: number | null, width?: number | null }> } }> } } | null, episode?: { __typename?: 'Episode', id: string, index?: number | null, originalTitle?: string | null, studio?: string | null, released?: any | null, cast?: Array<string | null> | null, productionCountries?: Array<string | null> | null, tags?: Array<string | null> | null, title?: string | null, description?: string | null, synopsis?: string | null, season?: { __typename?: 'Season', tvshowId?: string | null } | null, genres: { __typename?: 'EpisodeGenresRelationsConnection', nodes: Array<{ __typename?: 'EpisodeGenresRelation', tvshowGenre?: { __typename?: 'TvshowGenre', id: string, title?: string | null } | null }> }, images: { __typename?: 'EpisodeImagesConnection', nodes: Array<{ __typename?: 'EpisodeImage', id: number, type?: string | null, width?: number | null, height?: number | null, path?: string | null, altText?: string | null }> }, licenses: { __typename?: 'EpisodeLicensesConnection', nodes: Array<{ __typename?: 'EpisodeLicense', countries?: Array<string | null> | null, startTime?: any | null, endTime?: any | null }> }, videos: { __typename?: 'EpisodeVideosConnection', nodes: Array<{ __typename?: 'EpisodeVideo', id: number, type?: string | null, title?: string | null, dashManifest?: string | null, hlsManifest?: string | null, audioLanguages?: Array<string | null> | null, subtitleLanguages?: Array<string | null> | null, outputFormat?: string | null, lengthInSeconds?: number | null, captionLanguages?: Array<string | null> | null, isProtected?: boolean | null, cuePoints: { __typename?: 'EpisodeVideoCuePointsConnection', nodes: Array<{ __typename?: 'EpisodeVideoCuePoint', id: number, cuePointTypeKey: string, timeInSeconds: number, value?: string | null }> }, videoStreams: { __typename?: 'EpisodeVideoStreamsConnection', nodes: Array<{ __typename?: 'EpisodeVideoStream', label?: string | null, format?: string | null, frameRate?: number | null, languageCode?: string | null, bitrateInKbps?: number | null, displayAspectRatio?: string | null, pixelAspectRatio?: string | null, samplingRate?: number | null, fileTemplate?: string | null, id: number, iv?: string | null, keyId?: string | null, type?: VideoStreamType | null, codecs?: string | null, height?: number | null, width?: number | null }> } }> } } | null, channel?: { __typename?: 'Channel', id: string, title?: string | null, hlsStreamUrl?: string | null, description?: string | null, dashStreamUrl?: string | null, images: { __typename?: 'ChannelImagesConnection', nodes: Array<{ __typename?: 'ChannelImage', id: number, path?: string | null, type?: string | null }> } } | null };\n\nexport type GetCollectionQueryVariables = Exact<{\n  id: Scalars['String']['input'];\n}>;\n\n\nexport type GetCollectionQuery = { __typename?: 'Query', collection?: { __typename?: 'Collection', id: string, title?: string | null, synopsis?: string | null, description?: string | null, items: { __typename?: 'CollectionItemsRelationsConnection', nodes: Array<{ __typename?: 'CollectionItemsRelation', id: number, relationType?: string | null, episodeId?: string | null, seasonId?: string | null, tvshowId?: string | null, movieId?: string | null, episode?: { __typename?: 'Episode', id: string, index?: number | null, synopsis?: string | null, cast?: Array<string | null> | null, released?: any | null, tags?: Array<string | null> | null, genres: { __typename?: 'EpisodeGenresRelationsConnection', nodes: Array<{ __typename?: 'EpisodeGenresRelation', tvshowGenre?: { __typename?: 'TvshowGenre', title?: string | null } | null }> }, images: { __typename?: 'EpisodeImagesConnection', nodes: Array<{ __typename?: 'EpisodeImage', id: number, type?: string | null, path?: string | null }> }, videos: { __typename?: 'EpisodeVideosConnection', nodes: Array<{ __typename?: 'EpisodeVideo', id: number, dashManifest?: string | null, hlsManifest?: string | null, cuePoints: { __typename?: 'EpisodeVideoCuePointsConnection', nodes: Array<{ __typename?: 'EpisodeVideoCuePoint', id: number, cuePointTypeKey: string, timeInSeconds: number, value?: string | null }> } }> } } | null, season?: { __typename?: 'Season', id: string, index?: number | null, studio?: string | null, released?: any | null, cast?: Array<string | null> | null, productionCountries?: Array<string | null> | null, tags?: Array<string | null> | null, description?: string | null, synopsis?: string | null, genres: { __typename?: 'SeasonGenresRelationsConnection', nodes: Array<{ __typename?: 'SeasonGenresRelation', tvshowGenre?: { __typename?: 'TvshowGenre', id: string, title?: string | null } | null }> }, images: { __typename?: 'SeasonImagesConnection', nodes: Array<{ __typename?: 'SeasonImage', id: number, type?: string | null, width?: number | null, height?: number | null, path?: string | null, altText?: string | null }> }, licenses: { __typename?: 'SeasonLicensesConnection', nodes: Array<{ __typename?: 'SeasonLicense', countries?: Array<string | null> | null, startTime?: any | null, endTime?: any | null }> }, videos: { __typename?: 'SeasonVideosConnection', nodes: Array<{ __typename?: 'SeasonVideo', id: number, type?: string | null, title?: string | null, dashManifest?: string | null, hlsManifest?: string | null, audioLanguages?: Array<string | null> | null, subtitleLanguages?: Array<string | null> | null, outputFormat?: string | null, lengthInSeconds?: number | null, captionLanguages?: Array<string | null> | null, isProtected?: boolean | null, cuePoints: { __typename?: 'SeasonVideoCuePointsConnection', nodes: Array<{ __typename?: 'SeasonVideoCuePoint', id: number, cuePointTypeKey: string, timeInSeconds: number, value?: string | null }> }, videoStreams: { __typename?: 'SeasonVideoStreamsConnection', nodes: Array<{ __typename?: 'SeasonVideoStream', label?: string | null, format?: string | null, frameRate?: number | null, languageCode?: string | null, bitrateInKbps?: number | null, displayAspectRatio?: string | null, pixelAspectRatio?: string | null, samplingRate?: number | null, fileTemplate?: string | null, id: number, iv?: string | null, keyId?: string | null, type?: VideoStreamType | null, codecs?: string | null, height?: number | null, width?: number | null }> } }> } } | null, tvshow?: { __typename?: 'Tvshow', id: string, originalTitle?: string | null, studio?: string | null, released?: any | null, cast?: Array<string | null> | null, productionCountries?: Array<string | null> | null, tags?: Array<string | null> | null, title?: string | null, description?: string | null, synopsis?: string | null, genres: { __typename?: 'TvshowGenresRelationsConnection', nodes: Array<{ __typename?: 'TvshowGenresRelation', tvshowGenre?: { __typename?: 'TvshowGenre', id: string, title?: string | null } | null }> }, images: { __typename?: 'TvshowImagesConnection', nodes: Array<{ __typename?: 'TvshowImage', id: number, type?: string | null, width?: number | null, height?: number | null, path?: string | null, altText?: string | null }> }, licenses: { __typename?: 'TvshowLicensesConnection', nodes: Array<{ __typename?: 'TvshowLicense', countries?: Array<string | null> | null, startTime?: any | null, endTime?: any | null }> }, videos: { __typename?: 'TvshowVideosConnection', nodes: Array<{ __typename?: 'TvshowVideo', id: number, type?: string | null, title?: string | null, dashManifest?: string | null, hlsManifest?: string | null, audioLanguages?: Array<string | null> | null, subtitleLanguages?: Array<string | null> | null, outputFormat?: string | null, lengthInSeconds?: number | null, captionLanguages?: Array<string | null> | null, isProtected?: boolean | null, cuePoints: { __typename?: 'TvshowVideoCuePointsConnection', nodes: Array<{ __typename?: 'TvshowVideoCuePoint', id: number, cuePointTypeKey: string, timeInSeconds: number, value?: string | null }> }, videoStreams: { __typename?: 'TvshowVideoStreamsConnection', nodes: Array<{ __typename?: 'TvshowVideoStream', label?: string | null, format?: string | null, frameRate?: number | null, languageCode?: string | null, bitrateInKbps?: number | null, displayAspectRatio?: string | null, pixelAspectRatio?: string | null, samplingRate?: number | null, fileTemplate?: string | null, id: number, iv?: string | null, keyId?: string | null, type?: VideoStreamType | null, codecs?: string | null, height?: number | null, width?: number | null }> } }> }, seasons: { __typename?: 'SeasonsConnection', nodes: Array<{ __typename?: 'Season', id: string, index?: number | null, synopsis?: string | null, episodes: { __typename?: 'EpisodesConnection', nodes: Array<{ __typename?: 'Episode', id: string, index?: number | null, title?: string | null, synopsis?: string | null }> } }> } } | null, movie?: { __typename?: 'Movie', id: string, originalTitle?: string | null, studio?: string | null, released?: any | null, cast?: Array<string | null> | null, productionCountries?: Array<string | null> | null, tags?: Array<string | null> | null, title?: string | null, description?: string | null, synopsis?: string | null, genres: { __typename?: 'MovieGenresRelationsConnection', nodes: Array<{ __typename?: 'MovieGenresRelation', movieGenre?: { __typename?: 'MovieGenre', id: string, title?: string | null } | null }> }, images: { __typename?: 'MovieImagesConnection', nodes: Array<{ __typename?: 'MovieImage', id: number, type?: string | null, width?: number | null, height?: number | null, path?: string | null, altText?: string | null }> }, licenses: { __typename?: 'MovieLicensesConnection', nodes: Array<{ __typename?: 'MovieLicense', countries?: Array<string | null> | null, startTime?: any | null, endTime?: any | null }> }, videos: { __typename?: 'MovieVideosConnection', nodes: Array<{ __typename?: 'MovieVideo', id: number, type?: string | null, title?: string | null, dashManifest?: string | null, hlsManifest?: string | null, audioLanguages?: Array<string | null> | null, subtitleLanguages?: Array<string | null> | null, outputFormat?: string | null, lengthInSeconds?: number | null, captionLanguages?: Array<string | null> | null, isProtected?: boolean | null, cuePoints: { __typename?: 'MovieVideoCuePointsConnection', nodes: Array<{ __typename?: 'MovieVideoCuePoint', id: number, cuePointTypeKey: string, timeInSeconds: number, value?: string | null }> }, videoStreams: { __typename?: 'MovieVideoStreamsConnection', nodes: Array<{ __typename?: 'MovieVideoStream', label?: string | null, format?: string | null, frameRate?: number | null, languageCode?: string | null, bitrateInKbps?: number | null, displayAspectRatio?: string | null, pixelAspectRatio?: string | null, samplingRate?: number | null, fileTemplate?: string | null, id: number, iv?: string | null, keyId?: string | null, type?: VideoStreamType | null, codecs?: string | null, height?: number | null, width?: number | null }> } }> } } | null }> } } | null };\n\n\nexport const KeywordSearchDocument = gql`\n    query KeywordSearch($keyword: String!) {\n  movies(filter: {title: {includesInsensitive: $keyword}}) {\n    nodes {\n      id\n      originalTitle\n      studio\n      released\n      cast\n      productionCountries\n      tags\n      title\n      description\n      synopsis\n      genres {\n        nodes {\n          movieGenre {\n            id\n            title\n          }\n        }\n      }\n      images {\n        nodes {\n          id\n          type\n          width\n          height\n          path\n          altText\n        }\n      }\n      licenses {\n        nodes {\n          countries\n          startTime\n          endTime\n        }\n      }\n      videos {\n        nodes {\n          id\n          type\n          title\n          dashManifest\n          hlsManifest\n          audioLanguages\n          subtitleLanguages\n          outputFormat\n          lengthInSeconds\n          captionLanguages\n          isProtected\n          cuePoints {\n            nodes {\n              id\n              cuePointTypeKey\n              timeInSeconds\n              value\n            }\n          }\n          videoStreams {\n            nodes {\n              label\n              format\n              frameRate\n              languageCode\n              bitrateInKbps\n              displayAspectRatio\n              pixelAspectRatio\n              samplingRate\n              fileTemplate\n              bitrateInKbps\n              id\n              iv\n              keyId\n              type\n              fileTemplate\n              codecs\n              height\n              width\n              displayAspectRatio\n            }\n          }\n        }\n      }\n    }\n  }\n  episodes(filter: {title: {includesInsensitive: $keyword}}) {\n    nodes {\n      id\n      index\n      originalTitle\n      studio\n      released\n      cast\n      productionCountries\n      tags\n      title\n      description\n      synopsis\n      genres {\n        nodes {\n          tvshowGenre {\n            id\n            title\n          }\n        }\n      }\n      images {\n        nodes {\n          id\n          type\n          width\n          height\n          path\n          altText\n        }\n      }\n      licenses {\n        nodes {\n          countries\n          startTime\n          endTime\n        }\n      }\n      videos {\n        nodes {\n          id\n          type\n          title\n          dashManifest\n          hlsManifest\n          audioLanguages\n          subtitleLanguages\n          outputFormat\n          lengthInSeconds\n          captionLanguages\n          isProtected\n          cuePoints {\n            nodes {\n              id\n              cuePointTypeKey\n              timeInSeconds\n              value\n            }\n          }\n          videoStreams {\n            nodes {\n              label\n              format\n              frameRate\n              languageCode\n              bitrateInKbps\n              displayAspectRatio\n              pixelAspectRatio\n              samplingRate\n              fileTemplate\n              bitrateInKbps\n              id\n              iv\n              keyId\n              type\n              fileTemplate\n              codecs\n              height\n              width\n              displayAspectRatio\n            }\n          }\n        }\n      }\n    }\n  }\n  tvshows(filter: {title: {includesInsensitive: $keyword}}) {\n    nodes {\n      id\n      originalTitle\n      studio\n      released\n      cast\n      productionCountries\n      tags\n      title\n      description\n      synopsis\n      genres {\n        nodes {\n          tvshowGenre {\n            id\n            title\n          }\n        }\n      }\n      images {\n        nodes {\n          id\n          type\n          width\n          height\n          path\n          altText\n        }\n      }\n      licenses {\n        nodes {\n          countries\n          startTime\n          endTime\n        }\n      }\n      videos {\n        nodes {\n          id\n          type\n          title\n          dashManifest\n          hlsManifest\n          audioLanguages\n          subtitleLanguages\n          outputFormat\n          lengthInSeconds\n          captionLanguages\n          isProtected\n          cuePoints {\n            nodes {\n              id\n              cuePointTypeKey\n              timeInSeconds\n              value\n            }\n          }\n          videoStreams {\n            nodes {\n              label\n              format\n              frameRate\n              languageCode\n              bitrateInKbps\n              displayAspectRatio\n              pixelAspectRatio\n              samplingRate\n              fileTemplate\n              bitrateInKbps\n              id\n              iv\n              keyId\n              type\n              fileTemplate\n              codecs\n              height\n              width\n              displayAspectRatio\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    `;\n\n/**\n * __useKeywordSearchQuery__\n *\n * To run a query within a React component, call `useKeywordSearchQuery` and pass it any options that fit your needs.\n * When your component renders, `useKeywordSearchQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useKeywordSearchQuery({\n *   variables: {\n *      keyword: // value for 'keyword'\n *   },\n * });\n */\nexport function useKeywordSearchQuery(baseOptions: Apollo.QueryHookOptions<KeywordSearchQuery, KeywordSearchQueryVariables> & ({ variables: KeywordSearchQueryVariables; skip?: boolean; } | { skip: boolean; }) ) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<KeywordSearchQuery, KeywordSearchQueryVariables>(KeywordSearchDocument, options);\n      }\nexport function useKeywordSearchLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<KeywordSearchQuery, KeywordSearchQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<KeywordSearchQuery, KeywordSearchQueryVariables>(KeywordSearchDocument, options);\n        }\nexport function useKeywordSearchSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<KeywordSearchQuery, KeywordSearchQueryVariables>) {\n          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<KeywordSearchQuery, KeywordSearchQueryVariables>(KeywordSearchDocument, options);\n        }\nexport type KeywordSearchQueryHookResult = ReturnType<typeof useKeywordSearchQuery>;\nexport type KeywordSearchLazyQueryHookResult = ReturnType<typeof useKeywordSearchLazyQuery>;\nexport type KeywordSearchSuspenseQueryHookResult = ReturnType<typeof useKeywordSearchSuspenseQuery>;\nexport type KeywordSearchQueryResult = Apollo.QueryResult<KeywordSearchQuery, KeywordSearchQueryVariables>;\nexport const GetAllMoviesDocument = gql`\n    query GetAllMovies {\n  movies {\n    nodes {\n      id\n      title\n      genres {\n        nodes {\n          movieGenre {\n            title\n          }\n        }\n      }\n    }\n  }\n}\n    `;\n\n/**\n * __useGetAllMoviesQuery__\n *\n * To run a query within a React component, call `useGetAllMoviesQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAllMoviesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAllMoviesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetAllMoviesQuery(baseOptions?: Apollo.QueryHookOptions<GetAllMoviesQuery, GetAllMoviesQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<GetAllMoviesQuery, GetAllMoviesQueryVariables>(GetAllMoviesDocument, options);\n      }\nexport function useGetAllMoviesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetAllMoviesQuery, GetAllMoviesQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<GetAllMoviesQuery, GetAllMoviesQueryVariables>(GetAllMoviesDocument, options);\n        }\nexport function useGetAllMoviesSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<GetAllMoviesQuery, GetAllMoviesQueryVariables>) {\n          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<GetAllMoviesQuery, GetAllMoviesQueryVariables>(GetAllMoviesDocument, options);\n        }\nexport type GetAllMoviesQueryHookResult = ReturnType<typeof useGetAllMoviesQuery>;\nexport type GetAllMoviesLazyQueryHookResult = ReturnType<typeof useGetAllMoviesLazyQuery>;\nexport type GetAllMoviesSuspenseQueryHookResult = ReturnType<typeof useGetAllMoviesSuspenseQuery>;\nexport type GetAllMoviesQueryResult = Apollo.QueryResult<GetAllMoviesQuery, GetAllMoviesQueryVariables>;\nexport const GetAllTvShowsDocument = gql`\n    query GetAllTvShows {\n  tvshows {\n    nodes {\n      id\n      title\n      genres {\n        nodes {\n          tvshowGenre {\n            title\n          }\n        }\n      }\n    }\n  }\n}\n    `;\n\n/**\n * __useGetAllTvShowsQuery__\n *\n * To run a query within a React component, call `useGetAllTvShowsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAllTvShowsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAllTvShowsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetAllTvShowsQuery(baseOptions?: Apollo.QueryHookOptions<GetAllTvShowsQuery, GetAllTvShowsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<GetAllTvShowsQuery, GetAllTvShowsQueryVariables>(GetAllTvShowsDocument, options);\n      }\nexport function useGetAllTvShowsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetAllTvShowsQuery, GetAllTvShowsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<GetAllTvShowsQuery, GetAllTvShowsQueryVariables>(GetAllTvShowsDocument, options);\n        }\nexport function useGetAllTvShowsSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<GetAllTvShowsQuery, GetAllTvShowsQueryVariables>) {\n          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<GetAllTvShowsQuery, GetAllTvShowsQueryVariables>(GetAllTvShowsDocument, options);\n        }\nexport type GetAllTvShowsQueryHookResult = ReturnType<typeof useGetAllTvShowsQuery>;\nexport type GetAllTvShowsLazyQueryHookResult = ReturnType<typeof useGetAllTvShowsLazyQuery>;\nexport type GetAllTvShowsSuspenseQueryHookResult = ReturnType<typeof useGetAllTvShowsSuspenseQuery>;\nexport type GetAllTvShowsQueryResult = Apollo.QueryResult<GetAllTvShowsQuery, GetAllTvShowsQueryVariables>;\nexport const GetAllChannelsDocument = gql`\n    query GetAllChannels {\n  channels {\n    nodes {\n      id\n      title\n      description\n      dashStreamUrl\n      hlsStreamUrl\n      keyId\n      playlists {\n        nodes {\n          id\n          startDateTime\n          endDateTime\n          programs(orderBy: SORT_INDEX_ASC) {\n            nodes {\n              id\n              sortIndex\n              title\n              movie {\n                title\n              }\n              episode {\n                title\n              }\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    `;\n\n/**\n * __useGetAllChannelsQuery__\n *\n * To run a query within a React component, call `useGetAllChannelsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAllChannelsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAllChannelsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetAllChannelsQuery(baseOptions?: Apollo.QueryHookOptions<GetAllChannelsQuery, GetAllChannelsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<GetAllChannelsQuery, GetAllChannelsQueryVariables>(GetAllChannelsDocument, options);\n      }\nexport function useGetAllChannelsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetAllChannelsQuery, GetAllChannelsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<GetAllChannelsQuery, GetAllChannelsQueryVariables>(GetAllChannelsDocument, options);\n        }\nexport function useGetAllChannelsSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<GetAllChannelsQuery, GetAllChannelsQueryVariables>) {\n          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<GetAllChannelsQuery, GetAllChannelsQueryVariables>(GetAllChannelsDocument, options);\n        }\nexport type GetAllChannelsQueryHookResult = ReturnType<typeof useGetAllChannelsQuery>;\nexport type GetAllChannelsLazyQueryHookResult = ReturnType<typeof useGetAllChannelsLazyQuery>;\nexport type GetAllChannelsSuspenseQueryHookResult = ReturnType<typeof useGetAllChannelsSuspenseQuery>;\nexport type GetAllChannelsQueryResult = Apollo.QueryResult<GetAllChannelsQuery, GetAllChannelsQueryVariables>;\nexport const GetItemDocument = gql`\n    query GetItem($id: String!) {\n  movie(id: $id) {\n    id\n    originalTitle\n    studio\n    released\n    cast\n    productionCountries\n    tags\n    title\n    description\n    synopsis\n    genres {\n      nodes {\n        movieGenre {\n          id\n          title\n        }\n      }\n    }\n    images {\n      nodes {\n        id\n        type\n        width\n        height\n        path\n        altText\n      }\n    }\n    licenses {\n      nodes {\n        countries\n        startTime\n        endTime\n      }\n    }\n    videos {\n      nodes {\n        id\n        type\n        title\n        dashManifest\n        hlsManifest\n        audioLanguages\n        subtitleLanguages\n        outputFormat\n        lengthInSeconds\n        captionLanguages\n        isProtected\n        cuePoints {\n          nodes {\n            id\n            cuePointTypeKey\n            timeInSeconds\n            value\n          }\n        }\n        videoStreams {\n          nodes {\n            label\n            format\n            frameRate\n            languageCode\n            bitrateInKbps\n            displayAspectRatio\n            pixelAspectRatio\n            samplingRate\n            fileTemplate\n            bitrateInKbps\n            id\n            iv\n            keyId\n            type\n            fileTemplate\n            codecs\n            height\n            width\n            displayAspectRatio\n          }\n        }\n      }\n    }\n  }\n  tvshow(id: $id) {\n    id\n    originalTitle\n    studio\n    released\n    cast\n    productionCountries\n    tags\n    title\n    description\n    synopsis\n    genres {\n      nodes {\n        tvshowGenre {\n          id\n          title\n        }\n      }\n    }\n    images {\n      nodes {\n        id\n        type\n        width\n        height\n        path\n        altText\n      }\n    }\n    licenses {\n      nodes {\n        countries\n        startTime\n        endTime\n      }\n    }\n    videos {\n      nodes {\n        id\n        type\n        title\n        dashManifest\n        hlsManifest\n        audioLanguages\n        subtitleLanguages\n        outputFormat\n        lengthInSeconds\n        captionLanguages\n        isProtected\n        cuePoints {\n          nodes {\n            id\n            cuePointTypeKey\n            timeInSeconds\n            value\n          }\n        }\n        videoStreams {\n          nodes {\n            label\n            format\n            frameRate\n            languageCode\n            bitrateInKbps\n            displayAspectRatio\n            pixelAspectRatio\n            samplingRate\n            fileTemplate\n            bitrateInKbps\n            id\n            iv\n            keyId\n            type\n            fileTemplate\n            codecs\n            height\n            width\n            displayAspectRatio\n          }\n        }\n      }\n    }\n    seasons {\n      nodes {\n        id\n        index\n        synopsis\n        episodes {\n          nodes {\n            id\n            index\n            originalTitle\n            studio\n            released\n            cast\n            productionCountries\n            tags\n            title\n            description\n            synopsis\n            season {\n              tvshowId\n            }\n            genres {\n              nodes {\n                tvshowGenre {\n                  id\n                  title\n                }\n              }\n            }\n            images {\n              nodes {\n                id\n                type\n                width\n                height\n                path\n                altText\n              }\n            }\n            licenses {\n              nodes {\n                countries\n                startTime\n                endTime\n              }\n            }\n            videos {\n              nodes {\n                id\n                type\n                title\n                dashManifest\n                hlsManifest\n                audioLanguages\n                subtitleLanguages\n                outputFormat\n                lengthInSeconds\n                captionLanguages\n                isProtected\n                cuePoints {\n                  nodes {\n                    id\n                    cuePointTypeKey\n                    timeInSeconds\n                    value\n                  }\n                }\n                videoStreams {\n                  nodes {\n                    label\n                    format\n                    frameRate\n                    languageCode\n                    bitrateInKbps\n                    displayAspectRatio\n                    pixelAspectRatio\n                    samplingRate\n                    fileTemplate\n                    bitrateInKbps\n                    id\n                    iv\n                    keyId\n                    type\n                    fileTemplate\n                    codecs\n                    height\n                    width\n                    displayAspectRatio\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  season(id: $id) {\n    id\n    index\n    studio\n    released\n    cast\n    productionCountries\n    tags\n    description\n    synopsis\n    genres {\n      nodes {\n        tvshowGenre {\n          id\n          title\n        }\n      }\n    }\n    images {\n      nodes {\n        id\n        type\n        width\n        height\n        path\n        altText\n      }\n    }\n    licenses {\n      nodes {\n        countries\n        startTime\n        endTime\n      }\n    }\n    videos {\n      nodes {\n        id\n        type\n        title\n        dashManifest\n        hlsManifest\n        audioLanguages\n        subtitleLanguages\n        outputFormat\n        lengthInSeconds\n        captionLanguages\n        isProtected\n        cuePoints {\n          nodes {\n            id\n            cuePointTypeKey\n            timeInSeconds\n            value\n          }\n        }\n        videoStreams {\n          nodes {\n            label\n            format\n            frameRate\n            languageCode\n            bitrateInKbps\n            displayAspectRatio\n            pixelAspectRatio\n            samplingRate\n            fileTemplate\n            bitrateInKbps\n            id\n            iv\n            keyId\n            type\n            fileTemplate\n            codecs\n            height\n            width\n            displayAspectRatio\n          }\n        }\n      }\n    }\n  }\n  episode(id: $id) {\n    id\n    index\n    originalTitle\n    studio\n    released\n    cast\n    productionCountries\n    tags\n    title\n    description\n    synopsis\n    season {\n      tvshowId\n    }\n    genres {\n      nodes {\n        tvshowGenre {\n          id\n          title\n        }\n      }\n    }\n    images {\n      nodes {\n        id\n        type\n        width\n        height\n        path\n        altText\n      }\n    }\n    licenses {\n      nodes {\n        countries\n        startTime\n        endTime\n      }\n    }\n    videos {\n      nodes {\n        id\n        type\n        title\n        dashManifest\n        hlsManifest\n        audioLanguages\n        subtitleLanguages\n        outputFormat\n        lengthInSeconds\n        captionLanguages\n        isProtected\n        cuePoints {\n          nodes {\n            id\n            cuePointTypeKey\n            timeInSeconds\n            value\n          }\n        }\n        videoStreams {\n          nodes {\n            label\n            format\n            frameRate\n            languageCode\n            bitrateInKbps\n            displayAspectRatio\n            pixelAspectRatio\n            samplingRate\n            fileTemplate\n            bitrateInKbps\n            id\n            iv\n            keyId\n            type\n            fileTemplate\n            codecs\n            height\n            width\n            displayAspectRatio\n          }\n        }\n      }\n    }\n  }\n  channel(id: $id) {\n    id\n    title\n    hlsStreamUrl\n    description\n    dashStreamUrl\n    images {\n      nodes {\n        id\n        path\n        type\n      }\n    }\n  }\n}\n    `;\n\n/**\n * __useGetItemQuery__\n *\n * To run a query within a React component, call `useGetItemQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetItemQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetItemQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useGetItemQuery(baseOptions: Apollo.QueryHookOptions<GetItemQuery, GetItemQueryVariables> & ({ variables: GetItemQueryVariables; skip?: boolean; } | { skip: boolean; }) ) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<GetItemQuery, GetItemQueryVariables>(GetItemDocument, options);\n      }\nexport function useGetItemLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetItemQuery, GetItemQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<GetItemQuery, GetItemQueryVariables>(GetItemDocument, options);\n        }\nexport function useGetItemSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<GetItemQuery, GetItemQueryVariables>) {\n          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<GetItemQuery, GetItemQueryVariables>(GetItemDocument, options);\n        }\nexport type GetItemQueryHookResult = ReturnType<typeof useGetItemQuery>;\nexport type GetItemLazyQueryHookResult = ReturnType<typeof useGetItemLazyQuery>;\nexport type GetItemSuspenseQueryHookResult = ReturnType<typeof useGetItemSuspenseQuery>;\nexport type GetItemQueryResult = Apollo.QueryResult<GetItemQuery, GetItemQueryVariables>;\nexport const GetCollectionDocument = gql`\n    query GetCollection($id: String!) {\n  collection(id: $id) {\n    id\n    title\n    synopsis\n    description\n    items {\n      nodes {\n        id\n        relationType\n        episodeId\n        episode {\n          id\n          index\n          synopsis\n          genres {\n            nodes {\n              tvshowGenre {\n                title\n              }\n            }\n          }\n          cast\n          released\n          tags\n          images {\n            nodes {\n              id\n              type\n              path\n            }\n          }\n          videos {\n            nodes {\n              id\n              dashManifest\n              hlsManifest\n              cuePoints {\n                nodes {\n                  id\n                  cuePointTypeKey\n                  timeInSeconds\n                  value\n                }\n              }\n            }\n          }\n        }\n        seasonId\n        season {\n          id\n          index\n          studio\n          released\n          cast\n          productionCountries\n          tags\n          description\n          synopsis\n          genres {\n            nodes {\n              tvshowGenre {\n                id\n                title\n              }\n            }\n          }\n          images {\n            nodes {\n              id\n              type\n              width\n              height\n              path\n              altText\n            }\n          }\n          licenses {\n            nodes {\n              countries\n              startTime\n              endTime\n            }\n          }\n          videos {\n            nodes {\n              id\n              type\n              title\n              dashManifest\n              hlsManifest\n              audioLanguages\n              subtitleLanguages\n              outputFormat\n              lengthInSeconds\n              captionLanguages\n              isProtected\n              cuePoints {\n                nodes {\n                  id\n                  cuePointTypeKey\n                  timeInSeconds\n                  value\n                }\n              }\n              videoStreams {\n                nodes {\n                  label\n                  format\n                  frameRate\n                  languageCode\n                  bitrateInKbps\n                  displayAspectRatio\n                  pixelAspectRatio\n                  samplingRate\n                  fileTemplate\n                  bitrateInKbps\n                  id\n                  iv\n                  keyId\n                  type\n                  fileTemplate\n                  codecs\n                  height\n                  width\n                  displayAspectRatio\n                }\n              }\n            }\n          }\n        }\n        tvshowId\n        tvshow {\n          id\n          originalTitle\n          studio\n          released\n          cast\n          productionCountries\n          tags\n          title\n          description\n          synopsis\n          genres {\n            nodes {\n              tvshowGenre {\n                id\n                title\n              }\n            }\n          }\n          images {\n            nodes {\n              id\n              type\n              width\n              height\n              path\n              altText\n            }\n          }\n          licenses {\n            nodes {\n              countries\n              startTime\n              endTime\n            }\n          }\n          videos {\n            nodes {\n              id\n              type\n              title\n              dashManifest\n              hlsManifest\n              audioLanguages\n              subtitleLanguages\n              outputFormat\n              lengthInSeconds\n              captionLanguages\n              isProtected\n              cuePoints {\n                nodes {\n                  id\n                  cuePointTypeKey\n                  timeInSeconds\n                  value\n                }\n              }\n              videoStreams {\n                nodes {\n                  label\n                  format\n                  frameRate\n                  languageCode\n                  bitrateInKbps\n                  displayAspectRatio\n                  pixelAspectRatio\n                  samplingRate\n                  fileTemplate\n                  bitrateInKbps\n                  id\n                  iv\n                  keyId\n                  type\n                  fileTemplate\n                  codecs\n                  height\n                  width\n                  displayAspectRatio\n                }\n              }\n            }\n          }\n          seasons {\n            nodes {\n              id\n              index\n              synopsis\n              episodes {\n                nodes {\n                  id\n                  index\n                  title\n                  synopsis\n                }\n              }\n            }\n          }\n        }\n        movieId\n        movie {\n          id\n          originalTitle\n          studio\n          released\n          cast\n          productionCountries\n          tags\n          title\n          description\n          synopsis\n          genres {\n            nodes {\n              movieGenre {\n                id\n                title\n              }\n            }\n          }\n          images {\n            nodes {\n              id\n              type\n              width\n              height\n              path\n              altText\n            }\n          }\n          licenses {\n            nodes {\n              countries\n              startTime\n              endTime\n            }\n          }\n          videos {\n            nodes {\n              id\n              type\n              title\n              dashManifest\n              hlsManifest\n              audioLanguages\n              subtitleLanguages\n              outputFormat\n              lengthInSeconds\n              captionLanguages\n              isProtected\n              cuePoints {\n                nodes {\n                  id\n                  cuePointTypeKey\n                  timeInSeconds\n                  value\n                }\n              }\n              videoStreams {\n                nodes {\n                  label\n                  format\n                  frameRate\n                  languageCode\n                  bitrateInKbps\n                  displayAspectRatio\n                  pixelAspectRatio\n                  samplingRate\n                  fileTemplate\n                  bitrateInKbps\n                  id\n                  iv\n                  keyId\n                  type\n                  fileTemplate\n                  codecs\n                  height\n                  width\n                  displayAspectRatio\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n    `;\n\n/**\n * __useGetCollectionQuery__\n *\n * To run a query within a React component, call `useGetCollectionQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetCollectionQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useGetCollectionQuery(baseOptions: Apollo.QueryHookOptions<GetCollectionQuery, GetCollectionQueryVariables> & ({ variables: GetCollectionQueryVariables; skip?: boolean; } | { skip: boolean; }) ) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<GetCollectionQuery, GetCollectionQueryVariables>(GetCollectionDocument, options);\n      }\nexport function useGetCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetCollectionQuery, GetCollectionQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<GetCollectionQuery, GetCollectionQueryVariables>(GetCollectionDocument, options);\n        }\nexport function useGetCollectionSuspenseQuery(baseOptions?: Apollo.SkipToken | Apollo.SuspenseQueryHookOptions<GetCollectionQuery, GetCollectionQueryVariables>) {\n          const options = baseOptions === Apollo.skipToken ? baseOptions : {...defaultOptions, ...baseOptions}\n          return Apollo.useSuspenseQuery<GetCollectionQuery, GetCollectionQueryVariables>(GetCollectionDocument, options);\n        }\nexport type GetCollectionQueryHookResult = ReturnType<typeof useGetCollectionQuery>;\nexport type GetCollectionLazyQueryHookResult = ReturnType<typeof useGetCollectionLazyQuery>;\nexport type GetCollectionSuspenseQueryHookResult = ReturnType<typeof useGetCollectionSuspenseQuery>;\nexport type GetCollectionQueryResult = Apollo.QueryResult<GetCollectionQuery, GetCollectionQueryVariables>;","import { isValid, parseISO } from 'date-fns';\nimport { injectable } from 'inversify';\nimport { getMediaStatusFromEventState } from '../utils/liveEvent';\nimport { createURL } from '../utils/urlFormatting';\nimport { getDataOrThrow } from '../utils/api';\nimport { filterMediaOffers } from '../utils/entitlements';\nimport { useConfigStore as ConfigStore } from '../stores/ConfigStore';\nimport type { GetPlaylistParams, Playlist, PlaylistItem } from '../../types/playlist';\nimport type { ContentList, GetContentSearchParams } from '../../types/content-list';\nimport type { AdSchedule } from '../../types/ad-schedule';\nimport type { EpisodeInSeries, EpisodesRes, EpisodesWithPagination, GetSeriesParams, Season, Series } from '../../types/series';\nimport env from '../env';\nimport { logError } from '../logger';\nimport { getApolloClient } from './integrations/axinom/apollo-client';\nimport { GetCollectionDocument, GetItemDocument, KeywordSearchDocument } from './integrations/axinom/types/catalog-service-auto-generated';\nimport type { GetItemQuery, GetItemQueryVariables, GetCollectionQuery, GetCollectionQueryVariables, KeywordSearchQuery, KeywordSearchQueryVariables, \n  Movie, Episode, Tvshow, Season as AxSeason } from './integrations/axinom/types/catalog-service-auto-generated';\n\n// change the values below to change the property used to look up the alternate image\nenum ImageProperty {\n  CARD = 'card',\n  BACKGROUND = 'background',\n  CHANNEL_LOGO = 'channel_logo',\n}\n\nconst PAGE_LIMIT = 20;\nconst CATALOG_API_BASE_URL = \"https://mosaic-ott-catalog.axprod.net/graphql\"\n\n@injectable()\nexport default class ApiService {\n  /**\n   * We use playlistLabel prop to define the label used for all media items inside.\n   * That way we can change the behavior of the same media items being in different playlists\n   */\n  protected generateAlternateImageURL = ({ mediaId, label, playlistLabel }: { mediaId: string; label: string; playlistLabel?: string }) => {\n    const pathname = `/v2/media/${mediaId}/images/${playlistLabel || label}.webp`;\n    const url = createURL(`${env.APP_API_BASE_URL}${pathname}`, { poster_fallback: 1, fallback: playlistLabel ? label : null });\n\n    return url;\n  };\n\n  protected parseDate = (item: PlaylistItem, prop: string) => {\n    const date = item[prop] as string | undefined;\n\n    if (date && !isValid(new Date(date))) {\n      logError('ApiService', `Invalid \"${prop}\" date provided for the \"${item.title}\" media item`, { error: new Error('Invalid date') });\n      return undefined;\n    }\n\n    return date ? parseISO(date) : undefined;\n  };\n\n  protected getTranslatedFields = (item: PlaylistItem, language?: string) => {\n    if (!language) {\n      return item;\n    }\n\n    const defaultLanguage = env.APP_DEFAULT_LANGUAGE;\n    const transformedItem = { ...item };\n\n    if (language !== defaultLanguage) {\n      for (const [key, _] of Object.entries(transformedItem)) {\n        if (item[`${key}-${language}`]) {\n          transformedItem[key] = item[`${key}-${language}`];\n        }\n      }\n    }\n\n    return transformedItem;\n  };\n\n  /**\n   * Transform incoming content lists\n   */\n  protected transformContentList = (contentList: ContentList, language: string): Playlist => {\n    const { list, ...rest } = contentList;\n\n    const playlist: Playlist = { ...rest, playlist: [] };\n\n    playlist.playlist = list.map((item) => {\n      const { custom_params, media_id, description, tags, ...rest } = item;\n\n      const playlistItem: PlaylistItem = {\n        feedid: contentList.id,\n        mediaid: media_id,\n        tags: tags.join(','),\n        description: description || '',\n        sources: [],\n        images: [],\n        image: '',\n        link: '',\n        pubdate: 0,\n        ...rest,\n        ...custom_params,\n      };\n\n      return this.transformMediaItem({ item: playlistItem, playlist, language });\n    });\n\n    return playlist;\n  };\n\n  /**\n   * Transform incoming playlists\n   */\n  protected transformPlaylist = (playlist: Playlist, relatedMediaId?: string, language?: string) => {\n    playlist.playlist = playlist.playlist.map((item) => this.transformMediaItem({ item, playlist, language }));\n\n    // remove the related media item (when this is a recommendations playlist)\n    if (relatedMediaId) {\n      playlist.playlist = playlist.playlist.filter((item) => item.mediaid !== relatedMediaId);\n    }\n\n    return playlist;\n  };\n\n  /**\n   * Transform incoming media items\n   * - Parses productId into MediaOffer[] for all cleeng offers\n   */\n  transformMediaItem = ({ item, playlist, language }: { item: PlaylistItem; playlist?: Playlist; language?: string }) => {\n    const config = ConfigStore.getState().config;\n    const offerKeys = Object.keys(config?.integrations)[0];\n    const playlistLabel = playlist?.imageLabel;\n    const mediaId = item.mediaid;\n    const translatedFields = this.getTranslatedFields(item, language);\n\n    const transformedMediaItem = {\n      ...item,\n      ...translatedFields,\n      cardImage: this.generateAlternateImageURL({ mediaId, label: ImageProperty.CARD, playlistLabel }),\n      channelLogoImage: this.generateAlternateImageURL({ mediaId, label: ImageProperty.CHANNEL_LOGO, playlistLabel }),\n      backgroundImage: this.generateAlternateImageURL({ mediaId, label: ImageProperty.BACKGROUND }),\n      mediaOffers: item.productIds ? filterMediaOffers(offerKeys, item.productIds) : undefined,\n      scheduledStart: this.parseDate(item, 'VCH.ScheduledStart'),\n      scheduledEnd: this.parseDate(item, 'VCH.ScheduledEnd'),\n    };\n\n    // add the media status to the media item after the transformation because the live media status depends on the scheduledStart and scheduledEnd\n    transformedMediaItem.mediaStatus = getMediaStatusFromEventState(transformedMediaItem);\n\n    return transformedMediaItem;\n  };\n\n  private transformEpisodes = (episodesRes: EpisodesRes, language?: string, seasonNumber?: number) => {\n    const { episodes, page, page_limit, total } = episodesRes;\n\n    // Adding images and keys for media items\n    return {\n      episodes: episodes\n        .filter((el) => el.media_item)\n        .map((el) => ({\n          ...this.transformMediaItem({ item: el.media_item as PlaylistItem, language }),\n          seasonNumber: seasonNumber?.toString() || el.season_number?.toString() || '',\n          episodeNumber: String(el.episode_number),\n        })),\n      pagination: { page, page_limit, total },\n    };\n  };\n\n  tranformSeasonToPlayListItem = (season: AxSeason) => {\n    return {\n      description: season?.description,\n      //duration: tvshow?.videos.nodes[0].lengthInSeconds,\n      feedid: 'foo',\n      image: 'foo',      \n      link: '',\n      mediaid: season?.id,\n      pubdate: 0,      \n      tags: '',\n      title:season.index,\n      //tracks: [],\n      contentType: 'season',\n      cardImage: 'https://image.service.eu.axinom.net' + season?.images.nodes.find(p=>p.type == \"COVER\")?.path,\n      backgroundImage: 'https://image.service.eu.axinom.net' + season?.images.nodes.find(p=>p.type == \"TEASER\")?.path,\n      images: season?.images.nodes\n        .filter(node => node.path && node.width) // Only include non-null\n        .map(node => ({\n          src: 'https://image.service.eu.axinom.net' + node.path,\n          type: node.type,\n          width: node.width\n        })),     \n      // channelLogoImage: this.generateAlternateImageURL({ mediaId, label: ImageProperty.CHANNEL_LOGO, playlistLabel }),      \n      //mediaOffers: item.productIds ? filterMediaOffers(offerKeys, item.productIds) : undefined,\n      //scheduledStart: this.parseDate(item, 'VCH.ScheduledStart'),\n      //scheduledEnd: this.parseDate(item, 'VCH.ScheduledEnd'),\n    };\n  }\n\n  tranformTvShowToPlayListItem = (tvshow: Tvshow) => {\n    return {\n      description: tvshow?.description,\n      //duration: tvshow?.videos.nodes[0].lengthInSeconds,\n      feedid: 'foo',\n      image: 'foo',      \n      link: '',\n      mediaid: tvshow?.id,\n      pubdate: 0,      \n      tags: tvshow?.tags ? tvshow.tags.join(',') : '',\n      title: tvshow.title,\n      //tracks: [],\n      contentType: 'series',\n      cardImage: 'https://image.service.eu.axinom.net' + tvshow?.images.nodes.find(p=>p.type == \"COVER\")?.path,\n      backgroundImage: 'https://image.service.eu.axinom.net' + tvshow?.images.nodes.find(p=>p.type == \"TEASER\")?.path,\n      images: tvshow?.images.nodes\n        .filter(node => node.path && node.width) // Only include non-null\n        .map(node => ({\n          src: 'https://image.service.eu.axinom.net' + node.path,\n          type: node.type,\n          width: node.width\n        })),     \n      \n      // channelLogoImage: this.generateAlternateImageURL({ mediaId, label: ImageProperty.CHANNEL_LOGO, playlistLabel }),      \n      //mediaOffers: item.productIds ? filterMediaOffers(offerKeys, item.productIds) : undefined,\n      //scheduledStart: this.parseDate(item, 'VCH.ScheduledStart'),\n      //scheduledEnd: this.parseDate(item, 'VCH.ScheduledEnd'),\n    };\n  }\n\n\n  tranformEpisodeToPlayListItem = (episode: Episode) => {\n    return {\n      description: episode?.description,\n      duration: episode?.videos?.nodes!= null && episode?.videos.nodes.length>0 ? episode?.videos.nodes[0].lengthInSeconds : 0,\n      feedid: 'foo',\n      image: \"\",    \n      link: '',\n      mediaid: episode?.id,\n      pubdate: 0,      \n      tags: episode?.tags ? episode.tags.join(',') : '',\n      title: episode.title,\n      //tracks: [],\n      contentType: 'episode',\n      cardImage:  'https://image.service.eu.axinom.net' + (episode?.images?.nodes != null ? episode?.images.nodes.find(p=>p.type == \"COVER\")?.path : '/404.png'),\n      backgroundImage: 'https://image.service.eu.axinom.net' + (episode?.images?.nodes != null ? episode?.images.nodes.find(p=>p.type == \"TEASER\")?.path : '/404.png'),\n      images: episode?.images?.nodes != null ? episode?.images?.nodes\n        .filter(node => node.path && node.width) // Only include non-null\n        .map(node => ({\n          src: 'https://image.service.eu.axinom.net' + node.path,\n          type: node.type,\n          width: node.width\n        })) : [],\n      sources: episode?.videos?.nodes != null ? episode?.videos?.nodes\n        .filter(node => node.hlsManifest) // Only include nodes with a non-null hlsManifest\n        .map(node => ({\n          file: node.hlsManifest, // Map hlsManifest to file\n          type: 'application/vnd.apple.mpegurl'\n        })) : []\n      // channelLogoImage: this.generateAlternateImageURL({ mediaId, label: ImageProperty.CHANNEL_LOGO, playlistLabel }),      \n      //mediaOffers: item.productIds ? filterMediaOffers(offerKeys, item.productIds) : undefined,\n      //scheduledStart: this.parseDate(item, 'VCH.ScheduledStart'),\n      //scheduledEnd: this.parseDate(item, 'VCH.ScheduledEnd'),\n    };\n  }\n\n\n  tranformMovieToPlayListItem = (movie: Movie, isTrailer?: boolean) => {\n    return {\n      description: movie?.description,\n      duration: movie?.videos?.nodes!= null && movie?.videos.nodes.length>0 ? movie?.videos.nodes[0].lengthInSeconds : 0,\n      feedid: 'foo',\n      image: \"\",     \n      link: '',\n      mediaid: movie?.id,\n      pubdate: 0,      \n      tags: movie?.tags ? movie.tags.join(',') : '',\n      title: movie?.title,\n      trailerId: \"TRAILER_\" + movie?.id,\n      //tracks: [],\n      contentType: 'movie',\n      cardImage: 'https://image.service.eu.axinom.net' + movie?.images.nodes.find(p=>p.type == \"COVER\")?.path,\n      backgroundImage: 'https://image.service.eu.axinom.net' + movie?.images.nodes.find(p=>p.type == \"TEASER\")?.path,\n      images: movie?.images.nodes\n        .filter(node => node.path && node.width) // Only include non-null\n        .map(node => ({\n          src: 'https://image.service.eu.axinom.net' + node.path,\n          type: node.type,\n          width: node.width\n        })),\n      sources: movie?.videos.nodes\n        .filter(node => node.hlsManifest && (isTrailer ? node.type == \"TRAILER\" : node.type == \"MAIN\")) // Only include nodes with a non-null hlsManifest\n        .map(node => ({\n          file: node.hlsManifest, // Map hlsManifest to file\n          type: 'application/vnd.apple.mpegurl'\n        }))\n      // channelLogoImage: this.generateAlternateImageURL({ mediaId, label: ImageProperty.CHANNEL_LOGO, playlistLabel }),      \n      //mediaOffers: item.productIds ? filterMediaOffers(offerKeys, item.productIds) : undefined,\n      //scheduledStart: this.parseDate(item, 'VCH.ScheduledStart'),\n      //scheduledEnd: this.parseDate(item, 'VCH.ScheduledEnd'),\n    };\n  }\n\n  transformAxinomMediaItem = (query_result: GetItemQuery, isTrailer?: boolean) => {\n    if (query_result.movie) {\n      return this.tranformMovieToPlayListItem(query_result.movie, isTrailer);\n    } else if (query_result.episode) {\n      return this.tranformEpisodeToPlayListItem(query_result.episode);    \n    } else if (query_result.tvshow) {\n      return this.tranformTvShowToPlayListItem(query_result.tvshow);\n    } else if (query_result.season) {\n      return this.tranformSeasonToPlayListItem(query_result.season);\n    }\n    return {      \n      title: \"not found\"\n    }\n  }\n\n  /**\n   * Get watchlist by playlistId\n   */\n  getMediaByWatchlist = async ({\n    playlistId,\n    mediaIds,\n    token,\n    language,\n  }: {\n    playlistId: string;\n    mediaIds: string[];\n    token?: string;\n    language?: string;\n  }): Promise<PlaylistItem[] | undefined> => {\n    if (!mediaIds?.length) {\n      return [];\n    }\n\n    const pathname = `/apps/watchlists/${playlistId}`;\n    const url = createURL(`${env.APP_API_BASE_URL}${pathname}`, { token, media_ids: mediaIds });\n    const response = await fetch(url);\n    const data = (await getDataOrThrow(response)) as Playlist;\n\n    if (!data) throw new Error(`The data was not found using the watchlist ${playlistId}`);\n\n    return (data.playlist || []).map((item) => this.transformMediaItem({ item, language }));\n  };\n\n  /**\n   * Get media by id\n   */\n  getMediaById = async ({\n    id,\n    token,\n    drmPolicyId,\n    language,\n  }: {\n    id: string;\n    token?: string;\n    drmPolicyId?: string;\n    language?: string;\n  }): Promise<PlaylistItem | undefined> => {\n\n    //console.log(\"getMediaById \" + id);    \n    const apolloClient = getApolloClient(CATALOG_API_BASE_URL);\n    const result = await apolloClient.query<GetItemQuery, GetItemQueryVariables>({\n      context: {\n        headers: language\n          ? {\n              'mosaic-locale': language,\n            }\n          : undefined,\n      },\n      query: GetItemDocument,\n      //variables: { id: \"movie-67\" ?? id },\n      variables: { id: id.replace(\"TRAILER_\",'') },\n      fetchPolicy: 'no-cache',\n    });\n\n    if (result.errors) {      \n      throw new Error('MediaItem not found');\n    }    \n    const movie = result.data?.movie;\n    console.log(\"result axinom:\");        \n    console.log(movie)    \n    \n    //Transform the movie to media item\n    \n    const transformedMediaItemAxinom = this.transformAxinomMediaItem(result.data, id.startsWith(\"TRAILER_\"));\n    console.log(\"result axinom - transformed:\");        \n    console.log(transformedMediaItemAxinom)    \n    \n\n    try {\n    // const pathname = drmPolicyId ? `/v2/media/${id}/drm/${drmPolicyId}` : `/v2/media/${id}`;\n    // const url = createURL(`${env.APP_API_BASE_URL}${pathname}`, { token });\n    // const response = await fetch(url);\n    // const data = (await getDataOrThrow(response)) as Playlist;\n    // const mediaItem = data.playlist[0];\n    // if (!mediaItem) throw new Error('MediaItem not found');\n    \n    // console.log(\"result non-axinom:\");\n    // console.log(mediaItem);\n    \n    // const transformedMediaItem = this.transformMediaItem({ item: mediaItem, language });\n    // console.log(\"result non-axinom - transformed:\");\n    // console.log(transformedMediaItem);\n    }\n    catch(e) {\n      \n    }\n    return transformedMediaItemAxinom;\n  };\n\n  /**\n   * Get media by id with passport\n   */\n  getMediaByIdWithPassport = async ({\n    id,\n    siteId,\n    planId,\n    passport,\n    language,\n  }: {\n    id: string;\n    siteId: string;\n    planId: string;\n    passport: string;\n    language?: string;\n  }): Promise<PlaylistItem | undefined> => {\n    const pathname = `/v2/sites/${siteId}/media/${id}/playback.json`;\n    const url = createURL(`${env.APP_API_BASE_URL}${pathname}`, { passport, plan_id: planId });\n    const response = await fetch(url);\n    const data = (await getDataOrThrow(response)) as Playlist;\n    const mediaItem = data.playlist[0];\n\n    if (!mediaItem) throw new Error('MediaItem not found');\n\n    return this.transformMediaItem({ item: mediaItem, language });\n  };\n\n  /**\n   * Get series by id\n   * @param {string} id\n   * @param params\n   */\n  getSeries = async (id: string, params: GetSeriesParams = {}): Promise<Series | undefined> => {\n    if (!id) {\n      throw new Error('Series ID is required');\n    }\n\n    //Query axinom\n    const apolloClient = getApolloClient(CATALOG_API_BASE_URL);\n    const result = await apolloClient.query<GetItemQuery, GetItemQueryVariables>({\n      query: GetItemDocument,\n      //variables: { id: \"movie-67\" ?? id },\n      variables: { id: id },\n      fetchPolicy: 'no-cache',\n    });\n\n    console.log(\"Got the Serie!\");\n    console.log(result?.data?.tvshow);\n\n    let episodes_count = 0;\n    result?.data?.tvshow?.seasons.nodes.forEach(season => {\n      season.episodes.nodes.forEach(season_episode => { \n        episodes_count++;\n      });\n    });\n\n    const transformedSerie =  {\n      series_id: result.data.tvshow?.id ?? '',\n      episode_count: episodes_count,\n      season_count: result.data.tvshow?.seasons.nodes.length ?? 0,\n      total_duration: episodes_count * 10,\n      seasons: []    \n  }\n\n\n\n  try {\n    const pathname = `/apps/series/${id}`;\n    const url = createURL(`${env.APP_API_BASE_URL}${pathname}`, params);\n    const response = await fetch(url);\n  } catch(e) {}\n\n  return transformedSerie;\n  //  return (await getDataOrThrow(response)) as Series;\n  };\n\n  /**\n   * Get all series for the given media_ids\n   */\n  getSeriesByMediaIds = async (mediaIds: string[]): Promise<Record<string, EpisodeInSeries[]> | undefined> => {\n    const pathname = `/apps/series`;\n    const url = `${env.APP_API_BASE_URL}${pathname}?media_ids=${mediaIds.join(',')}`;\n    console.log(url);\n\n    const mediaId = mediaIds[0];\n    \n    const apolloClient = getApolloClient(CATALOG_API_BASE_URL);\n    const result = await apolloClient.query<GetItemQuery, GetItemQueryVariables>({\n      query: GetItemDocument,\n      //variables: { id: \"movie-67\" ?? id },\n      variables: { id: mediaId },\n      fetchPolicy: 'no-cache',\n    });\n\n    \n    return {\n       mediaId : [   {\n        \"series_id\": result.data.episode?.season?.tvshowId ?? \"404\",     \n        \"episode_number\": 1,\n        \"season_number\": null\n        }\n      ]\n    };\n\n    //const response = await fetch(url);\n    //https://cdn.jwplayer.com/apps/series?media_ids=0t21PUiy\n    //{\n    //  0t21PUiy: [\n    //  {\n    //  series_id: \"lsFXY5xn\",\n    //  episode_number: 1,\n    //  season_number: null\n    //  },\n    //  {\n    //  series_id: \"meziALQ0\",\n    //  episode_number: 1,\n    //  season_number: null\n    //  }\n    //  ]\n    //}\n    //Basically gets serie info for epsiode\n    //return (await getDataOrThrow(response)) as Record<string, EpisodeInSeries[]>;\n  };\n\n  /**\n   * Get all episodes of the selected series (when no particular season is selected or when episodes are attached to series)\n   */\n  getEpisodes = async ({\n    seriesId,\n    pageOffset,\n    pageLimit = PAGE_LIMIT,\n    afterId,\n    language,\n  }: {\n    seriesId: string | undefined;\n    pageOffset?: number;\n    pageLimit?: number;\n    afterId?: string;\n    language?: string;\n  }): Promise<EpisodesWithPagination> => {\n    if (!seriesId) {\n      throw new Error('Series ID is required');\n    }\n\n    //Foo .. we don't have that kind of quering logic ... unless it is a serie with thousands of episodes, we can just query the entire serie and pinpoint there the right episode.\n\n\n\n    const pathname = `/apps/series/${seriesId}/episodes`;\n    const url = createURL(`${env.APP_API_BASE_URL}${pathname}`, {\n      page_offset: pageOffset,\n      page_limit: pageLimit,\n      after_id: afterId,\n    });\n    console.log(url);\n\n\n    const apolloClient = getApolloClient(CATALOG_API_BASE_URL);\n    const result = await apolloClient.query<GetItemQuery, GetItemQueryVariables>({\n      context: {\n        headers: language\n          ? {\n              'mosaic-locale': language,\n            }\n          : undefined,\n      },\n      query: GetItemDocument,\n      //variables: { id: \"movie-67\" ?? id },\n      variables: { id: seriesId },\n      fetchPolicy: 'no-cache',\n    });\n\n    if (result.errors) {      \n      throw new Error('MediaItem not found');\n    }    \n    const serie = result.data?.tvshow;\n    console.log(\"serie result axinom:\");        \n    console.log(serie)    \n    \n    const episodes = [];\n    serie?.seasons.nodes.forEach(season => {\n      season.episodes.nodes.forEach(season_episode => { \n        if (episodes.length < pageLimit) {\n        episodes.push( {\n          ...this.tranformEpisodeToPlayListItem(season_episode),\n          seasonNumber: season.index,\n          episodeNumber: season_episode.index,      \n        });}\n\n      });\n    });\n   \n  const pagination = { \n    page: pageOffset + 1,\n    page_limit: pageLimit,\n    total: episodes.length ?? 1\n   };\n\n   console.log(pagination);\n\n    return {\n      episodes: episodes,\n      pagination: pagination,\n    };\n\n    \n    //const response = await fetch(url);\n    //const episodesResponse = (await getDataOrThrow(response)) as EpisodesRes;\n\n    //return this.transformEpisodes(episodesResponse, language);\n\n\n  };\n\n  /**\n   * Get season of the selected series\n   */\n  getSeasonWithEpisodes = async ({\n    seriesId,\n    seasonNumber,\n    pageOffset,\n    pageLimit = PAGE_LIMIT,\n    language,\n  }: {\n    seriesId: string | undefined;\n    language: string;\n    seasonNumber: number;\n    pageOffset?: number;\n    pageLimit?: number;\n  }): Promise<EpisodesWithPagination> => {\n    if (!seriesId) {\n      throw new Error('Series ID is required');\n    }\n\n    console.log(\"foo\")\n\n    const pathname = `/apps/series/${seriesId}/seasons/${seasonNumber}/episodes`;\n    const url = createURL(`${env.APP_API_BASE_URL}${pathname}`, { page_offset: pageOffset, page_limit: pageLimit });\n\n    const response = await fetch(url);\n    const episodesRes = (await getDataOrThrow(response)) as EpisodesRes;\n\n    return this.transformEpisodes(episodesRes, language, seasonNumber);\n  };\n\n  getAdSchedule = async (id: string | undefined | null): Promise<AdSchedule | undefined> => {\n    if (!id) {\n      throw new Error('Ad Schedule ID is required');\n    }\n\n    const url = env.APP_API_BASE_URL + `/v2/advertising/schedules/${id}.json`;\n    const response = await fetch(url, { credentials: 'omit' });\n\n    return (await getDataOrThrow(response)) as AdSchedule;\n  };\n\n\n\n  doKeyWordSearch = async (params: GetPlaylistParams = {}, language: string = env.APP_DEFAULT_LANGUAGE): Promise<Playlist | undefined> => {\n\n    //First we query get a playlist\n    const apolloClient = getApolloClient(CATALOG_API_BASE_URL);\n    const result = await apolloClient.query<KeywordSearchQuery, KeywordSearchQueryVariables>({\n      context: {\n      headers: language\n       ? {\n           'mosaic-locale': language,\n         }\n       : undefined,\n    },\n    query: KeywordSearchDocument,\n    variables: { keyword:  params.search ?? '' },\n    fetchPolicy: 'no-cache',\n    });\n\n    const transformedCollection: Playlist = {\n      description: 'Search result'      \n    }\n    \n    transformedCollection.playlist = [];\n\n    result.data.movies?.nodes.forEach((item) => {\n      console.log(item); // Do something with each item      \n      transformedCollection.playlist.push(this.tranformMovieToPlayListItem(item));            \n    });\n    result.data.episodes?.nodes.forEach((item) => {\n      console.log(item); // Do something with each item      \n      transformedCollection.playlist.push(this.tranformMovieToPlayListItem(item));            \n    });\n    result.data.tvshows?.nodes.forEach((item) => {\n      console.log(item); // Do something with each item      \n      transformedCollection.playlist.push(this.tranformMovieToPlayListItem(item));            \n    });\n\n    return transformedCollection;\n  }\n\n\n  /**\n   * Get playlist by id\n   */\n  getPlaylistById = async (id?: string, params: GetPlaylistParams = {}, language: string = env.APP_DEFAULT_LANGUAGE): Promise<Playlist | undefined> => {\n\n    console.log(\"getPlaylistById \" + id);\n    //console.log(params);\n\n    if (!id) {\n      return undefined;\n    }\n\n  if (id == \"KEYWORD-SEARCH\") {\n    return this.doKeyWordSearch(params, language);\n  }\n\n  //First we query get a playlist\n  const apolloClient = getApolloClient(CATALOG_API_BASE_URL);\n  const result = await apolloClient.query<GetCollectionQuery, GetCollectionQueryVariables>({\n    context: {\n      headers: language\n        ? {\n            'mosaic-locale': language,\n          }\n        : undefined,\n    },\n    query: GetCollectionDocument,\n    variables: { id:  id },\n    fetchPolicy: 'no-cache',\n  });\n\n  if (result.errors) {      \n    throw new Error('MediaItem not found');\n  }\n  const collection = result.data?.collection;\n  console.log(\"result axinom:\");        \n  console.log(collection)    \n\n\n    const transformedCollection: Playlist = {\n      description: collection?.description ?? '',\n      //feed_instance_id?: string;\n      //feedid?: string;\n      //kind?: string;\n      //links?: Link;\n      //playlist: PlaylistItem[];\n      title: \"foo title\",\n      //contentType?: string;\n      cardImageAspectRatio: \"2:3\",\n      imageLabel: \"foo imageLabel\",\n      //[key: string]: unknown;\n    }\n    \n    transformedCollection.playlist = [];\n\n    collection?.items?.nodes.forEach((item) => {\n      console.log(item); // Do something with each item      \n      switch (item.relationType) {\n        case \"MOVIE\":\n          if (item.movie!=null) {\n            transformedCollection.playlist.push(this.tranformMovieToPlayListItem(item.movie));\n          }\n          break;\n        case \"EPISODE\":\n            if (item.episode!=null) {\n              transformedCollection.playlist.push(this.tranformEpisodeToPlayListItem(item.episode));\n            }\n            break;\n        case \"TVSHOW\":\n            if (item.tvshow!=null) {\n              transformedCollection.playlist.push(this.tranformTvShowToPlayListItem(item.tvshow));\n            }\n            break;\n      }\n      \n    });\n  \n    console.log(\"transformed result axinom:\");        \n    console.log(transformedCollection)    \n    return transformedCollection;\n\n    const pathname = `/v2/playlists/${id}`;\n    const url = createURL(`${env.APP_API_BASE_URL}${pathname}`, params);\n    const response = await fetch(url);\n    const data = (await getDataOrThrow(response)) as Playlist;\n\n    return this.transformPlaylist(data, params.related_media_id, language);\n  };\n\n  getContentList = async ({ id, siteId, language }: { id: string | undefined; siteId: string; language: string }): Promise<Playlist | undefined> => {\n\n    console.log(\"getContentList \" + id);\n\n    if (!id || !siteId) {\n      throw new Error('List ID and Site ID are required');\n    }\n\n    const pathname = `/v2/sites/${siteId}/content_lists/${id}`;\n    const url = createURL(`${env.APP_API_BASE_URL}${pathname}`, {});\n    const response = await fetch(url);\n    const data = (await getDataOrThrow(response)) as ContentList;\n\n    return this.transformContentList(data, language);\n  };\n\n  getContentSearch = async ({ siteId, params }: { siteId: string; params: GetContentSearchParams }) => {\n    const pathname = `/v2/sites/${siteId}/app_content/media/search`;\n\n    const url = createURL(`${env.APP_API_BASE_URL}${pathname}`, {\n      search_query: params.searchTerm,\n    });\n\n    const response = await fetch(url);\n    const data = (await getDataOrThrow(response)) as Playlist;\n\n    return this.transformPlaylist(data);\n  };\n}\n","export default abstract class StorageService {\n  abstract initialize(prefix: string): void;\n\n  abstract getItem<T>(key: string, parse: boolean, usePrefix?: boolean): Promise<T | null>;\n\n  abstract setItem(key: string, value: string, usePrefix?: boolean): Promise<void>;\n\n  abstract removeItem(key: string): Promise<void>;\n\n  abstract base64Decode(input: string): string;\n\n  abstract base64Encode(input: string): string;\n}\n","import type { AccessModel, Config } from '../../../types/config';\nimport type {\n  ChangePassword,\n  ChangePasswordWithOldPassword,\n  DeleteAccount,\n  ExportAccountData,\n  GetCaptureStatus,\n  GetCustomerConsents,\n  GetPublisherConsents,\n  Login,\n  NotificationsData,\n  Register,\n  ResetPassword,\n  GetSocialURLs,\n  UpdateCaptureAnswers,\n  UpdateCustomerConsents,\n  Logout,\n  GetAuthData,\n  UpdateCustomer,\n  UpdateWatchHistory,\n  UpdateFavorites,\n  GetWatchHistory,\n  GetFavorites,\n  GetUser,\n} from '../../../types/account';\n\nexport type AccountServiceFeatures = {\n  readonly canUpdateEmail: boolean;\n  readonly canSupportEmptyFullName: boolean;\n  readonly canChangePasswordWithOldPassword: boolean;\n  readonly canRenewSubscription: boolean;\n  readonly canExportAccountData: boolean;\n  readonly canDeleteAccount: boolean;\n  readonly canUpdatePaymentMethod: boolean;\n  readonly canShowReceipts: boolean;\n  readonly hasSocialURLs: boolean;\n  readonly hasNotifications: boolean;\n  readonly watchListSizeLimit: number;\n};\n\nexport default abstract class AccountService {\n  readonly features: AccountServiceFeatures;\n\n  abstract accessModel: AccessModel;\n  abstract svodOfferIds: string[];\n  abstract sandbox: boolean;\n\n  protected constructor(features: AccountServiceFeatures) {\n    this.features = features;\n  }\n\n  abstract initialize: (config: Config, url: string, logoutCallback: () => Promise<void>) => Promise<void>;\n\n  abstract getAuthData: GetAuthData;\n\n  abstract login: Login;\n\n  abstract register: Register;\n\n  abstract logout: Logout;\n\n  abstract getUser: GetUser;\n\n  abstract getPublisherConsents: GetPublisherConsents;\n\n  abstract getCustomerConsents: GetCustomerConsents;\n\n  abstract updateCustomerConsents: UpdateCustomerConsents;\n\n  abstract getCaptureStatus: GetCaptureStatus;\n\n  abstract updateCaptureAnswers: UpdateCaptureAnswers;\n\n  abstract resetPassword: ResetPassword;\n\n  abstract changePasswordWithResetToken: ChangePassword;\n\n  abstract changePasswordWithOldPassword: ChangePasswordWithOldPassword;\n\n  abstract updateCustomer: UpdateCustomer;\n\n  abstract updateWatchHistory: UpdateWatchHistory;\n\n  abstract updateFavorites: UpdateFavorites;\n\n  abstract getWatchHistory: GetWatchHistory;\n\n  abstract getFavorites: GetFavorites;\n\n  abstract subscribeToNotifications: NotificationsData;\n\n  abstract getSocialUrls?: GetSocialURLs;\n\n  abstract exportAccountData?: ExportAccountData;\n\n  abstract deleteAccount?: DeleteAccount;\n}\n","import { inject, injectable } from 'inversify';\nimport { array, number, object, string } from 'yup';\n\nimport type { PlaylistItem } from '../../types/playlist';\nimport type { SerializedWatchHistoryItem, WatchHistoryItem } from '../../types/watchHistory';\nimport type { Customer } from '../../types/account';\nimport { getNamedModule } from '../modules/container';\nimport { INTEGRATION_TYPE } from '../modules/types';\nimport { MAX_WATCHLIST_ITEMS_COUNT } from '../constants';\nimport { logError } from '../logger';\n\nimport ApiService from './ApiService';\nimport StorageService from './StorageService';\nimport AccountService from './integrations/AccountService';\n\nconst schema = array(\n  object().shape({\n    mediaid: string(),\n    progress: number(),\n  }),\n);\n\n@injectable()\nexport default class WatchHistoryService {\n  protected PERSIST_KEY_WATCH_HISTORY = 'history';\n\n  protected readonly apiService;\n  protected readonly storageService;\n  protected readonly accountService;\n\n  constructor(\n    @inject(INTEGRATION_TYPE) integrationType: string,\n    @inject(ApiService) apiService: ApiService,\n    @inject(StorageService) storageService: StorageService,\n  ) {\n    this.apiService = apiService;\n    this.storageService = storageService;\n    this.accountService = getNamedModule(AccountService, integrationType);\n  }\n\n  // Retrieve watch history media items info using a provided watch list\n  protected getWatchHistoryItems = async (continueWatchingList: string, ids: string[], language?: string): Promise<Record<string, PlaylistItem>> => {\n    const watchHistoryItems = await this.apiService.getMediaByWatchlist({ playlistId: continueWatchingList, mediaIds: ids, language });\n    const watchHistoryItemsDict = Object.fromEntries((watchHistoryItems || []).map((item) => [item.mediaid, item]));\n\n    return watchHistoryItemsDict;\n  };\n\n  // We store separate episodes in the watch history and to show series card in the Continue Watching shelf we need to get their parent media items\n  protected getWatchHistorySeriesItems = async (\n    continueWatchingList: string,\n    ids: string[],\n    language?: string,\n  ): Promise<Record<string, PlaylistItem | undefined>> => {\n    const mediaWithSeries = await this.apiService.getSeriesByMediaIds(ids);\n    const seriesIds = Object.keys(mediaWithSeries || {})\n      .map((key) => mediaWithSeries?.[key]?.[0]?.series_id)\n      .filter(Boolean) as string[];\n    const uniqueSerieIds = [...new Set(seriesIds)];\n    const seriesItems = await this.apiService.getMediaByWatchlist({ playlistId: continueWatchingList, mediaIds: uniqueSerieIds, language });\n    const seriesItemsDict = Object.keys(mediaWithSeries || {}).reduce((acc, key) => {\n      const seriesItemId = mediaWithSeries?.[key]?.[0]?.series_id;\n      if (seriesItemId) {\n        acc[key] = seriesItems?.find((el) => el.mediaid === seriesItemId);\n      }\n      return acc;\n    }, {} as Record<string, PlaylistItem | undefined>);\n\n    return seriesItemsDict;\n  };\n\n  protected validateWatchHistory(history: unknown) {\n    if (history && schema.validateSync(history)) {\n      return history as SerializedWatchHistoryItem[];\n    }\n\n    return [];\n  }\n\n  protected async getWatchHistoryFromAccount(user: Customer) {\n    const history = await this.accountService.getWatchHistory({ user });\n\n    return this.validateWatchHistory(history);\n  }\n\n  protected async getWatchHistoryFromStorage() {\n    const history = await this.storageService.getItem(this.PERSIST_KEY_WATCH_HISTORY, true);\n\n    return this.validateWatchHistory(history);\n  }\n\n  getWatchHistory = async (user: Customer | null, continueWatchingList: string, language?: string) => {\n    const savedItems = user ? await this.getWatchHistoryFromAccount(user) : await this.getWatchHistoryFromStorage();\n\n    // When item is an episode of the new flow -> show the card as a series one, but keep episode to redirect in a right way\n    const ids = savedItems.map(({ mediaid }) => mediaid);\n\n    if (!ids.length) {\n      return [];\n    }\n\n    try {\n      const watchHistoryItems = await this.getWatchHistoryItems(continueWatchingList, ids, language);\n      const seriesItems = await this.getWatchHistorySeriesItems(continueWatchingList, ids, language);\n\n      return savedItems\n        .map((item) => {\n          const parentSeries = seriesItems?.[item.mediaid];\n          const historyItem = watchHistoryItems[item.mediaid];\n\n          if (historyItem) {\n            return this.createWatchHistoryItem(parentSeries || historyItem, item.mediaid, parentSeries?.mediaid, item.progress);\n          }\n        })\n        .filter((item): item is WatchHistoryItem => Boolean(item));\n    } catch (error: unknown) {\n      logError('WatchHistoryService', 'Failed to get watch history items', { error });\n    }\n\n    return [];\n  };\n\n  serializeWatchHistory = (watchHistory: WatchHistoryItem[]): SerializedWatchHistoryItem[] =>\n    watchHistory.map(({ mediaid, progress }) => ({\n      mediaid,\n      progress,\n    }));\n\n  persistWatchHistory = async (watchHistory: WatchHistoryItem[], user: Customer | null) => {\n    if (user) {\n      await this.accountService?.updateWatchHistory({\n        history: this.serializeWatchHistory(watchHistory),\n        user,\n      });\n    } else {\n      await this.storageService.setItem(this.PERSIST_KEY_WATCH_HISTORY, JSON.stringify(this.serializeWatchHistory(watchHistory)));\n    }\n  };\n\n  /** Use mediaid of originally watched movie / episode.\n   * A playlistItem can be either a series item (to show series card) or media item\n   * */\n  createWatchHistoryItem = (item: PlaylistItem, mediaid: string, seriesId: string | undefined, videoProgress: number): WatchHistoryItem => {\n    return {\n      mediaid,\n      seriesId,\n      title: item.title,\n      tags: item.tags,\n      duration: item.duration,\n      progress: videoProgress,\n      playlistItem: item,\n    } as WatchHistoryItem;\n  };\n\n  getMaxWatchHistoryCount = () => {\n    return this.accountService?.features?.watchListSizeLimit || MAX_WATCHLIST_ITEMS_COUNT;\n  };\n\n  /**\n   *  If we already have an element with continue watching state, we:\n   *    1. Update the progress\n   *    2. Move the element to the continue watching list start\n   *  Otherwise:\n   *    1. Move the element to the continue watching list start\n   *    2. If there are many elements in continue watching state we remove the oldest one\n   */\n  saveItem = async (item: PlaylistItem, seriesItem: PlaylistItem | undefined, videoProgress: number | null, watchHistory: WatchHistoryItem[]) => {\n    if (!videoProgress) return;\n\n    const watchHistoryItem = this.createWatchHistoryItem(seriesItem || item, item.mediaid, seriesItem?.mediaid, videoProgress);\n    // filter out the existing watch history item, so we can add it to the beginning of the list\n    const updatedHistory = watchHistory.filter(({ mediaid, seriesId }) => {\n      return mediaid !== watchHistoryItem.mediaid && (!seriesId || seriesId !== watchHistoryItem.seriesId);\n    });\n\n    updatedHistory.unshift(watchHistoryItem);\n    updatedHistory.splice(this.getMaxWatchHistoryCount());\n\n    return updatedHistory;\n  };\n}\n","import { injectable } from 'inversify';\n\nimport type { GetMediaParams } from '../../types/media';\nimport type { GetTokenResponse } from '../../types/entitlement';\n\n@injectable()\nexport default class GenericEntitlementService {\n  protected getToken = async <T>(url: string, body: unknown = {}, jwt?: string): Promise<T> => {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        Authorization: jwt ? `Bearer ${jwt}` : '',\n      },\n      body: JSON.stringify(body),\n    });\n\n    return (await response.json()) as T;\n  };\n\n  getMediaToken = async (host: string, id: string, jwt?: string, params?: GetMediaParams, drmPolicyId?: string) => {\n    const data = await this.getToken<GetTokenResponse>(`${host}/media/${id}/sign${drmPolicyId ? `/drm/${drmPolicyId}` : ''}`, params, jwt);\n\n    if (!data.entitled) throw new Error('Unauthorized');\n\n    return data.token;\n  };\n}\n","import { inject, injectable } from 'inversify';\n\nimport StorageService from '../../StorageService';\n\nimport type { JWPError } from './types';\n\nconst INPLAYER_TOKEN_KEY = 'inplayer_token';\nconst INPLAYER_IOT_KEY = 'inplayer_iot';\n\nconst CONTENT_TYPES = {\n  json: 'application/json',\n  form: 'application/x-www-form-urlencoded',\n};\n\ntype RequestOptions = {\n  withAuthentication?: boolean;\n  keepalive?: boolean;\n  contentType?: keyof typeof CONTENT_TYPES;\n  responseType?: 'json' | 'blob';\n  includeFullResponse?: boolean;\n};\n\n@injectable()\nexport default class JWPAPIService {\n  protected readonly storageService: StorageService;\n\n  protected useSandboxEnv = true;\n\n  constructor(@inject(StorageService) storageService: StorageService) {\n    this.storageService = storageService;\n  }\n\n  setup = (useSandboxEnv: boolean) => {\n    this.useSandboxEnv = useSandboxEnv;\n  };\n\n  private getBaseUrl = () => (this.useSandboxEnv ? 'https://staging-sims.jwplayer.com' : 'https://sims.jwplayer.com');\n\n  setToken = (token: string, refreshToken = '', expires: number) => {\n    return this.storageService.setItem(INPLAYER_TOKEN_KEY, JSON.stringify({ token, refreshToken, expires }), false);\n  };\n\n  getToken = async () => {\n    const tokenObject = await this.storageService.getItem(INPLAYER_TOKEN_KEY, true, false);\n\n    if (tokenObject) {\n      return tokenObject as { token: string; refreshToken: string; expires: number };\n    }\n\n    return { token: '', refreshToken: '', expires: 0 };\n  };\n\n  removeToken = async () => {\n    await Promise.all([this.storageService.removeItem(INPLAYER_TOKEN_KEY), this.storageService.removeItem(INPLAYER_IOT_KEY)]);\n  };\n\n  isAuthenticated = async () => {\n    const tokenObject = await this.getToken();\n\n    return !!tokenObject.token && tokenObject.expires > Date.now() / 1000;\n  };\n\n  private performRequest = async (\n    path: string = '/',\n    method = 'GET',\n    body?: Record<string, unknown>,\n    { contentType = 'form', responseType = 'json', withAuthentication = false, keepalive, includeFullResponse = false }: RequestOptions = {},\n    searchParams?: Record<string, string | number>,\n  ) => {\n    const headers: Record<string, string> = {\n      'Content-Type': CONTENT_TYPES[contentType],\n    };\n\n    if (withAuthentication) {\n      const tokenObject = await this.getToken();\n\n      if (tokenObject.token) {\n        headers.Authorization = `Bearer ${tokenObject.token}`;\n      }\n    }\n\n    const formData = new URLSearchParams();\n\n    if (body) {\n      Object.entries(body).forEach(([key, value]) => {\n        if (value || value === 0) {\n          if (typeof value === 'object') {\n            Object.entries(value as Record<string, string | number>).forEach(([innerKey, innerValue]) => {\n              formData.append(`${key}[${innerKey}]`, innerValue.toString());\n            });\n          } else {\n            formData.append(key, value.toString());\n          }\n        }\n      });\n    }\n\n    const endpoint = `${path.startsWith('http') ? path : `${this.getBaseUrl()}${path}`}${\n      searchParams ? `?${new URLSearchParams(searchParams as Record<string, string>).toString()}` : ''\n    }`;\n\n    const resp = await fetch(endpoint, {\n      headers,\n      keepalive,\n      method,\n      body: body && formData.toString(),\n    });\n\n    const resParsed = await resp[responseType]?.();\n\n    if (!resp.ok) {\n      throw { response: { data: resParsed } };\n    }\n\n    if (includeFullResponse) {\n      return { ...resp, data: resParsed };\n    }\n\n    return resParsed;\n  };\n\n  get = <T>(path: string, options?: RequestOptions, searchParams?: Record<string, string | number>) =>\n    this.performRequest(path, 'GET', undefined, options, searchParams) as Promise<T>;\n\n  patch = <T>(path: string, body?: Record<string, unknown>, options?: RequestOptions) => this.performRequest(path, 'PATCH', body, options) as Promise<T>;\n\n  put = <T>(path: string, body?: Record<string, unknown>, options?: RequestOptions) => this.performRequest(path, 'PUT', body, options) as Promise<T>;\n\n  post = <T>(path: string, body?: Record<string, unknown>, options?: RequestOptions) => this.performRequest(path, 'POST', body, options) as Promise<T>;\n\n  remove = <T>(path: string, options?: RequestOptions, body?: Record<string, unknown>) => this.performRequest(path, 'DELETE', body, options) as Promise<T>;\n\n  static isCommonError = (error: unknown): error is JWPError => {\n    return (\n      typeof error === 'object' &&\n      error !== null &&\n      'response' in error &&\n      typeof (error as JWPError).response?.data?.code === 'number' &&\n      typeof (error as JWPError).response?.data?.message === 'string'\n    );\n  };\n}\n","import { inject, injectable } from 'inversify';\n\nimport type { GetEntitledPlans } from '../../types/checkout';\nimport type { PlansResponse } from '../../types/plans';\n\nimport type { SignedMediaResponse } from './integrations/jwp/types';\nimport JWPAPIService from './integrations/jwp/JWPAPIService';\n\n@injectable()\nexport default class JWPEntitlementService {\n  protected readonly apiService;\n\n  constructor(@inject(JWPAPIService) apiService: JWPAPIService) {\n    this.apiService = apiService;\n  }\n\n  getJWPMediaToken = async (configId: string = '', mediaId: string) => {\n    try {\n      const data = await this.apiService.get<SignedMediaResponse>(\n        '/v2/items/jw-media/token',\n        {\n          withAuthentication: true,\n        },\n        {\n          app_config_id: configId,\n          media_id: mediaId,\n        },\n      );\n\n      return data.token;\n    } catch {\n      throw new Error('Unauthorized');\n    }\n  };\n\n  getEntitledPlans: GetEntitledPlans = async ({ siteId }) => {\n    try {\n      const data = await this.apiService.get<PlansResponse>(`/v3/sites/${siteId}/entitlements`, {\n        withAuthentication: await this.apiService.isAuthenticated(),\n      });\n      return data;\n    } catch {\n      throw new Error('Failed to fetch entitled plans');\n    }\n  };\n}\n","import { inject, injectable } from 'inversify';\nimport { array, object, string } from 'yup';\n\nimport type { Favorite, SerializedFavorite } from '../../types/favorite';\nimport type { PlaylistItem } from '../../types/playlist';\nimport type { Customer } from '../../types/account';\nimport { getNamedModule } from '../modules/container';\nimport { INTEGRATION_TYPE } from '../modules/types';\nimport { MAX_WATCHLIST_ITEMS_COUNT } from '../constants';\nimport { logError } from '../logger';\n\nimport ApiService from './ApiService';\nimport StorageService from './StorageService';\nimport AccountService from './integrations/AccountService';\n\nconst schema = array(\n  object().shape({\n    mediaid: string(),\n  }),\n);\n\n@injectable()\nexport default class FavoriteService {\n  private PERSIST_KEY_FAVORITES = 'favorites';\n\n  protected readonly apiService;\n  protected readonly storageService;\n  protected readonly accountService;\n\n  constructor(\n    @inject(INTEGRATION_TYPE) integrationType: string,\n    @inject(ApiService) apiService: ApiService,\n    @inject(StorageService) storageService: StorageService,\n  ) {\n    this.apiService = apiService;\n    this.storageService = storageService;\n    this.accountService = getNamedModule(AccountService, integrationType, false);\n  }\n\n  protected validateFavorites(favorites: unknown) {\n    if (favorites && schema.validateSync(favorites)) {\n      return favorites as SerializedFavorite[];\n    }\n\n    return [];\n  }\n\n  protected async getFavoritesFromAccount(user: Customer) {\n    const favorites = await this.accountService?.getFavorites({ user });\n\n    return this.validateFavorites(favorites);\n  }\n\n  protected async getFavoritesFromStorage() {\n    const favorites = await this.storageService.getItem(this.PERSIST_KEY_FAVORITES, true);\n\n    return this.validateFavorites(favorites);\n  }\n\n  getFavorites = async (user: Customer | null, favoritesList: string, language?: string) => {\n    const savedItems = user ? await this.getFavoritesFromAccount(user) : await this.getFavoritesFromStorage();\n    const mediaIds = savedItems.map(({ mediaid }) => mediaid);\n\n    if (!mediaIds) {\n      return [];\n    }\n\n    try {\n      const playlistItems = await this.apiService.getMediaByWatchlist({ playlistId: favoritesList, mediaIds, language });\n\n      return (playlistItems || []).map((item) => this.createFavorite(item));\n    } catch (error: unknown) {\n      logError('FavoriteService', 'Failed to get favorites', { error });\n    }\n\n    return [];\n  };\n\n  serializeFavorites = (favorites: Favorite[]): SerializedFavorite[] => {\n    return favorites.map(({ mediaid }) => ({ mediaid }));\n  };\n\n  persistFavorites = async (favorites: Favorite[], user: Customer | null) => {\n    if (user) {\n      return this.accountService?.updateFavorites({\n        favorites: this.serializeFavorites(favorites),\n        user,\n      });\n    } else {\n      await this.storageService.setItem(this.PERSIST_KEY_FAVORITES, JSON.stringify(this.serializeFavorites(favorites)));\n    }\n  };\n\n  getMaxFavoritesCount = () => {\n    return this.accountService?.features?.watchListSizeLimit || MAX_WATCHLIST_ITEMS_COUNT;\n  };\n\n  createFavorite = (item: PlaylistItem): Favorite => {\n    return {\n      mediaid: item.mediaid,\n      title: item.title,\n      tags: item.tags,\n      duration: item.duration,\n      playlistItem: item,\n    } as Favorite;\n  };\n}\n","import { array, boolean, mixed, number, object, type SchemaOf, string, StringSchema } from 'yup';\n\nimport type { Cleeng, Config, Content, Features, JWP, Menu, Styling } from '../../types/config';\n\nconst contentSchema: SchemaOf<Content> = object({\n  contentId: string().notRequired(),\n  title: string().notRequired(),\n  featured: boolean().notRequired(),\n  backgroundColor: string().nullable().notRequired(),\n  type: mixed().oneOf(['playlist', 'continue_watching', 'favorites', 'content_list']),\n  custom: object().notRequired(),\n}).defined();\n\nconst menuSchema: SchemaOf<Menu> = object().shape({\n  label: string().defined(),\n  contentId: string().defined(),\n  filterTags: string().notRequired(),\n  type: mixed().oneOf(['playlist', 'content_list', 'media']).notRequired(),\n  custom: object().notRequired(),\n});\n\nconst featuresSchema: SchemaOf<Features> = object({\n  recommendationsPlaylist: string().nullable(),\n  searchPlaylist: string().nullable(),\n  continueWatchingList: string().nullable(),\n  favoritesList: string().nullable(),\n});\n\nconst cleengSchema: SchemaOf<Cleeng> = object({\n  id: string().nullable(),\n  monthlyOffer: string().nullable(),\n  yearlyOffer: string().nullable(),\n  useSandbox: boolean().default(true),\n});\n\nconst jwpSchema: SchemaOf<JWP> = object({\n  clientId: string().nullable(),\n  assetId: number().nullable(),\n  useSandbox: boolean().default(true),\n});\n\nconst stylingSchema: SchemaOf<Styling> = object({\n  backgroundColor: string().nullable(),\n  highlightColor: string().nullable(),\n  headerBackground: string().nullable(),\n  footerText: string().nullable(),\n});\n\nexport const configSchema: SchemaOf<Config> = object({\n  id: string().notRequired(),\n  siteName: string().notRequired(),\n  description: string().defined(),\n  analyticsToken: string().nullable(),\n  adSchedule: string().nullable(),\n  adDeliveryMethod: mixed().oneOf(['csai', 'ssai']).notRequired(),\n  adConfig: string().nullable(),\n  siteId: string().defined(),\n  assets: object({\n    banner: string().notRequired().nullable(),\n  }).notRequired(),\n  content: array().of(contentSchema),\n  menu: array().of(menuSchema),\n  styling: stylingSchema.notRequired(),\n  features: featuresSchema.notRequired(),\n  integrations: object({\n    cleeng: cleengSchema.notRequired(),\n    jwp: jwpSchema.notRequired(),\n  }).notRequired(),\n  adScheduleUrls: object({\n    json: string().notRequired().nullable(),\n    xml: string().notRequired().nullable(),\n  }).notRequired(),\n  custom: object().notRequired(),\n  contentSigningService: object().shape({\n    // see {@link https://github.com/jquense/yup/issues/1367}\n    host: string().required() as StringSchema<string>,\n    drmPolicyId: string().notRequired(),\n  }),\n  contentProtection: object()\n    .shape({\n      accessModel: string().oneOf(['free', 'freeauth', 'authvod', 'svod']).notRequired(),\n      drm: object({\n        defaultPolicyId: string(),\n      }).notRequired(),\n    })\n    .notRequired(),\n}).defined();\n","type Payload = {\n  title: string;\n  description: string;\n  helpLink: string;\n};\n\nexport class AppError extends Error {\n  payload: Payload;\n\n  constructor(message: string, payload: Payload) {\n    super(message);\n    this.name = 'AppError';\n    this.payload = payload;\n  }\n}\n","import i18next from 'i18next';\nimport { injectable } from 'inversify';\nimport { getI18n } from 'react-i18next';\n\nimport { configSchema } from '../utils/configSchema';\nimport { AppError } from '../utils/error';\nimport type { Config } from '../../types/config';\nimport env from '../env';\nimport mosaicConfig from '@jwp/ott-testing/fixtures/mosaic-ott-demo-config.json';\n\n/**\n * Set config setup changes in both config.service.ts and config.d.ts\n * */\n\n@injectable()\nexport default class ConfigService {\n  protected CONFIG_HOST = env.APP_API_BASE_URL;\n  // Explicitly set default config here as a local variable,\n  // otherwise if it's a module level const, the merge below causes changes to nested properties\n  protected DEFAULT_CONFIG: Config = {\n    id: '',\n    siteName: '',\n    description: '',\n    siteId: '',\n    assets: {\n      banner: '/images/logo.png',\n    },\n    content: [],\n    menu: [],\n    integrations: {},\n    styling: {\n      footerText: '',\n    },\n    features: {},\n  };\n\n  protected enrichConfig = (config: Config): Config => {\n    const { content, siteName } = config;\n    const updatedContent = content.map((content) => Object.assign({ featured: false }, content));\n\n    return { ...config, siteName: siteName || i18next.t('common:default_site_name'), content: updatedContent };\n  };\n\n  getDefaultConfig = (): Config => {\n    return this.DEFAULT_CONFIG;\n  };\n\n  validateConfig = (config?: Config): Promise<Config> => {\n    return configSchema.validate(config, {\n      strict: true,\n    }) as Promise<Config>;\n  };\n\n  formatSourceLocation = (source?: string) => {\n    if (!source) {\n      return undefined;\n    }\n\n    if (source.match(/^[a-z,\\d]{8}$/)) {\n      return `${this.CONFIG_HOST}/apps/configs/${source}.json`;\n    }\n\n    return source;\n  };\n\n  loadConfig = async (configLocation: string | undefined) => {\n    console.log(\"loadConfig \" + configLocation);\n    const i18n = getI18n();\n\n    return this.enrichConfig(mosaicConfig as Config);\n    \n\n    const errorPayload = {\n      title: i18n.t('error:config_invalid'),\n      description: i18n.t('error:check_your_config'),\n      helpLink: 'https://github.com/jwplayer/ott-web-app/blob/develop/docs/configuration.md',\n    };\n\n    if (!configLocation) {\n      throw new AppError('No config location found', errorPayload);\n    }\n\n    const response = await fetch(configLocation, {\n      headers: {\n        Accept: 'application/json',\n      },\n      method: 'GET',\n    }).catch(() => {\n      throw new AppError('Failed to load the config', errorPayload);\n    });\n\n    if (!response.ok) {\n      throw new AppError('Failed to load the config', errorPayload);\n    }\n\n    const data = (await response.json()) as Config;\n\n    if (!data) {\n      throw new Error('No config found');\n    }\n\n    console.log(\"data:\");\n    console.log(data);\n\n    const data_enriched  =  this.enrichConfig(data);\n    console.log(\"data_enriched:\");\n    console.log(data_enriched);\n    return data_enriched;\n  };\n}\n","import { inject, injectable } from 'inversify';\nimport ini from 'ini';\nimport { getI18n } from 'react-i18next';\n\nimport { CONFIG_FILE_STORAGE_KEY, CONFIG_QUERY_KEY, OTT_GLOBAL_PLAYER_ID } from '../constants';\nimport { AppError } from '../utils/error';\nimport type { Settings } from '../../types/settings';\nimport env from '../env';\nimport { logDebug, logWarn } from '../logger';\n\nimport StorageService from './StorageService';\n\n@injectable()\nexport default class SettingsService {\n  protected readonly storageService;\n\n  constructor(@inject(StorageService) storageService: StorageService) {\n    this.storageService = storageService;\n  }\n\n  async getConfigSource(settings: Settings | undefined, url: string) {\n    if (!settings) {\n      return '';\n    }\n\n    const urlParams = new URLSearchParams(url.split('?')[1]);\n    const configKey = urlParams.get(CONFIG_QUERY_KEY);\n\n    // Skip all the fancy logic below if there aren't any other options besides the default anyhow\n    if (!settings.UNSAFE_allowAnyConfigSource && (settings.additionalAllowedConfigSources?.length || 0) <= 0) {\n      return settings.defaultConfigSource;\n    }\n\n    if (configKey !== null) {\n      // If the query param exists but the value is empty, clear the storage and allow fallback to the default config\n      if (!configKey) {\n        await this.storageService.removeItem(CONFIG_FILE_STORAGE_KEY);\n        return settings.defaultConfigSource;\n      }\n\n      // If it's valid, store it and return it\n      if (this.isValidConfigSource(configKey, settings)) {\n        await this.storageService.setItem(CONFIG_FILE_STORAGE_KEY, configKey);\n        return configKey;\n      }\n\n      logWarn('SettingsService', `Invalid app-config query param: ${configKey}`);\n    }\n    // Yes this falls through from above to look up the stored value if the query string is invalid and that's OK\n\n    const storedSource = await this.storageService.getItem(CONFIG_FILE_STORAGE_KEY, false);\n\n    // Make sure the stored value is still valid before returning it\n    if (storedSource && typeof storedSource === 'string') {\n      if (this.isValidConfigSource(storedSource, settings)) {\n        return storedSource;\n      }\n\n      logWarn('SettingsService', 'Invalid stored config: ' + storedSource);\n      await this.storageService.removeItem(CONFIG_FILE_STORAGE_KEY);\n    }\n\n    return settings.defaultConfigSource;\n  }\n\n  isValidConfigSource = (source: string, settings: Settings) => {\n    // Dynamic values are valid as long as they are defined\n    if (settings?.UNSAFE_allowAnyConfigSource) {\n      return !!source;\n    }\n\n    return (\n      settings?.defaultConfigSource === source || (settings?.additionalAllowedConfigSources && settings?.additionalAllowedConfigSources.indexOf(source) >= 0)\n    );\n  };\n\n  initialize = async () => {\n    const settings = await fetch('/.webapp.ini')\n      .then((result) => result.text())\n      .then((iniString) => ini.parse(iniString) as Settings)\n      .catch((error) => {\n        logDebug('SettingsService', 'Failed to fetch or parse the ini settings', { error });\n        // It's possible to not use the ini settings files, so an error doesn't have to be fatal\n        return {} as Settings;\n      });\n\n    const i18n = getI18n();\n\n    // @TODO: use `i18next.t()`?\n    // t('error:settings_invalid')\n    // t('error:check_your_settings')\n    const errorPayload = {\n      title: i18n.t('error:settings_invalid'),\n      description: i18n.t('error:check_your_settings'),\n      helpLink: 'https://github.com/jwplayer/ott-web-app/blob/develop/docs/initialization-file.md',\n    };\n\n    if (!settings) {\n      throw new AppError('Unable to load .webapp.ini', errorPayload);\n    }\n\n    // The ini file values will be used if provided, even if compile-time values are set\n    settings.defaultConfigSource ||= env.APP_DEFAULT_CONFIG_SOURCE;\n    settings.playerId ||= env.APP_PLAYER_ID || OTT_GLOBAL_PLAYER_ID;\n    settings.playerLicenseKey ||= env.APP_PLAYER_LICENSE_KEY;\n    settings.apiAccessBridgeUrl ||= env.APP_API_ACCESS_BRIDGE_URL;\n\n    // The player key should be set if using the global ott player\n    if (settings.playerId === OTT_GLOBAL_PLAYER_ID && !settings.playerLicenseKey) {\n      logWarn('SettingsService', 'Using Global OTT Player without setting player key. Some features, such as analytics, may not work correctly.');\n    }\n\n    // This will result in an unusable app\n    if (\n      !settings.defaultConfigSource &&\n      (!settings.additionalAllowedConfigSources || settings.additionalAllowedConfigSources?.length === 0) &&\n      !settings.UNSAFE_allowAnyConfigSource\n    ) {\n      throw new AppError('No usable config sources', errorPayload);\n    }\n\n    return settings;\n  };\n}\n","import type { Plan } from '../../types/plans';\nimport type { CustomFormField, Customer, CustomerConsent } from '../../types/account';\nimport type { Offer } from '../../types/checkout';\nimport type { PaymentDetail, Subscription, Transaction } from '../../types/subscription';\n\nimport { createStore } from './utils';\n\ntype AccountStore = {\n  loading: boolean;\n  user: Customer | null;\n  subscription: Subscription | null;\n  transactions: Transaction[] | null;\n  entitledPlan: Plan | null;\n  activePayment: PaymentDetail | null;\n  customerConsents: CustomerConsent[] | null;\n  publisherConsents: CustomFormField[] | null;\n  publisherConsentsLoading: boolean;\n  pendingOffer: Offer | null;\n  setLoading: (loading: boolean) => void;\n  getAccountInfo: () => { customerId: string; customer: Customer; customerConsents: CustomerConsent[] | null };\n};\n\nexport const useAccountStore = createStore<AccountStore>('AccountStore', (set, get) => ({\n  loading: false,\n  user: null,\n  subscription: null,\n  transactions: null,\n  entitledPlan: null,\n  activePayment: null,\n  customerConsents: null,\n  publisherConsents: null,\n  publisherConsentsLoading: false,\n  pendingOffer: null,\n  setLoading: (loading: boolean) => set({ loading }),\n  getAccountInfo: () => {\n    const user = get().user;\n    const customerConsents = get().customerConsents;\n\n    if (!user?.id) throw new Error('user not logged in');\n\n    return { customerId: user?.id, customer: user, customerConsents };\n  },\n}));\n","import { PersonalShelf, VideoProgressMinMax } from '../constants';\nimport type { WatchHistoryItem } from '../../types/watchHistory';\nimport type { Playlist, PlaylistItem } from '../../types/playlist';\n\nimport { createStore } from './utils';\n\ntype WatchHistoryState = {\n  watchHistory: WatchHistoryItem[];\n  playlistItemsLoaded: boolean;\n  continueWatchingPlaylistId: string;\n  getItem: (item: PlaylistItem) => WatchHistoryItem | undefined;\n  getPlaylist: () => Playlist;\n  getDictionaryWithEpisodes: () => { [key: string]: number };\n  getDictionaryWithSeries: () => { [key: string]: number };\n};\n\nexport const useWatchHistoryStore = createStore<WatchHistoryState>('WatchHistoryStore', (_, get) => ({\n  watchHistory: [],\n  playlistItemsLoaded: false,\n  continueWatchingPlaylistId: PersonalShelf.ContinueWatching,\n  getItem: (item: PlaylistItem) =>\n    get().watchHistory.find(({ mediaid, progress }) => {\n      return mediaid === item.mediaid && progress > VideoProgressMinMax.Min && progress < VideoProgressMinMax.Max;\n    }),\n  getPlaylist: () =>\n    ({\n      feedid: get().continueWatchingPlaylistId || PersonalShelf.ContinueWatching,\n      title: 'Continue watching',\n      playlist: get()\n        .watchHistory.filter(({ playlistItem, progress }) => !!playlistItem && progress > VideoProgressMinMax.Min && progress < VideoProgressMinMax.Max)\n        .map(({ playlistItem }) => playlistItem),\n    } as Playlist),\n  getDictionaryWithEpisodes: () =>\n    get().watchHistory.reduce((dict: { [key: string]: number }, item) => {\n      const key = item.mediaid;\n\n      dict[key] = item.progress;\n\n      return dict;\n    }, {}),\n  getDictionaryWithSeries: () =>\n    get().watchHistory.reduce((dict: { [key: string]: number }, item) => {\n      const key = item.seriesId || item.mediaid;\n\n      dict[key] = item.progress;\n\n      return dict;\n    }, {}),\n}));\n","import { injectable } from 'inversify';\n\nimport WatchHistoryService from '../services/WatchHistoryService';\nimport type { PlaylistItem } from '../../types/playlist';\nimport type { WatchHistoryItem } from '../../types/watchHistory';\nimport { useAccountStore } from '../stores/AccountStore';\nimport { useConfigStore } from '../stores/ConfigStore';\nimport { useWatchHistoryStore } from '../stores/WatchHistoryStore';\n\n@injectable()\nexport default class WatchHistoryController {\n  private readonly watchHistoryService: WatchHistoryService;\n\n  constructor(watchHistoryService: WatchHistoryService) {\n    this.watchHistoryService = watchHistoryService;\n  }\n\n  initialize = async (language: string) => {\n    await this.restoreWatchHistory(language);\n  };\n\n  restoreWatchHistory = async (language?: string) => {\n    const { user } = useAccountStore.getState();\n    const continueWatchingList = useConfigStore.getState().config.features?.continueWatchingList;\n\n    if (!continueWatchingList) {\n      return;\n    }\n\n    const watchHistory = await this.watchHistoryService.getWatchHistory(user, continueWatchingList, language);\n\n    useWatchHistoryStore.setState({\n      watchHistory: watchHistory.filter((item): item is WatchHistoryItem => !!item?.mediaid),\n      playlistItemsLoaded: true,\n      continueWatchingPlaylistId: continueWatchingList,\n    });\n  };\n\n  persistWatchHistory = async () => {\n    const { watchHistory } = useWatchHistoryStore.getState();\n    const { user } = useAccountStore.getState();\n\n    await this.watchHistoryService.persistWatchHistory(watchHistory, user);\n  };\n\n  /**\n   *  If we already have an element with continue watching state, we:\n   *    1. Update the progress\n   *    2. Move the element to the continue watching list start\n   *  Otherwise:\n   *    1. Move the element to the continue watching list start\n   *    2. If there are many elements in continue watching state we remove the oldest one\n   */\n  saveItem = async (item: PlaylistItem, seriesItem: PlaylistItem | undefined, videoProgress: number | null) => {\n    const { watchHistory } = useWatchHistoryStore.getState();\n\n    if (!videoProgress) return;\n\n    const updatedHistory = await this.watchHistoryService.saveItem(item, seriesItem, videoProgress, watchHistory);\n\n    if (updatedHistory) {\n      useWatchHistoryStore.setState({ watchHistory: updatedHistory });\n      await this.persistWatchHistory();\n    }\n  };\n}\n","import type {\n  AddAdyenPaymentDetails,\n  CreateOrder,\n  DeletePaymentMethod,\n  FinalizeAdyenPaymentDetails,\n  GetAdyenPaymentSession,\n  GetDirectPostCardPayment,\n  GetEntitlements,\n  GetFinalizeAdyenPayment,\n  GetInitialAdyenPayment,\n  GetOffer,\n  GetOffers,\n  GetOrder,\n  GetPaymentMethods,\n  GetSubscriptionSwitch,\n  GetSubscriptionSwitches,\n  PaymentWithoutDetails,\n  PaymentWithPayPal,\n  SwitchSubscription,\n  UpdateOrder,\n  UpdatePaymentWithPayPal,\n} from '../../../types/checkout';\n\nexport default abstract class CheckoutService {\n  abstract getOffers: GetOffers;\n\n  abstract createOrder: CreateOrder;\n\n  abstract updateOrder: UpdateOrder;\n\n  abstract getPaymentMethods: GetPaymentMethods;\n\n  abstract paymentWithoutDetails: PaymentWithoutDetails;\n\n  abstract paymentWithPayPal: PaymentWithPayPal;\n\n  abstract getEntitlements: GetEntitlements;\n\n  abstract directPostCardPayment: GetDirectPostCardPayment;\n\n  abstract getOffer?: GetOffer;\n\n  abstract getOrder?: GetOrder;\n\n  abstract switchSubscription?: SwitchSubscription;\n\n  abstract getSubscriptionSwitches?: GetSubscriptionSwitches;\n\n  abstract getSubscriptionSwitch?: GetSubscriptionSwitch;\n\n  abstract createAdyenPaymentSession?: GetAdyenPaymentSession;\n\n  abstract initialAdyenPayment?: GetInitialAdyenPayment;\n\n  abstract finalizeAdyenPayment?: GetFinalizeAdyenPayment;\n\n  abstract updatePaymentMethodWithPayPal?: UpdatePaymentWithPayPal;\n\n  abstract deletePaymentMethod?: DeletePaymentMethod;\n\n  abstract addAdyenPaymentDetails?: AddAdyenPaymentDetails;\n\n  abstract finalizeAdyenPaymentDetails?: FinalizeAdyenPaymentDetails;\n}\n","import type {\n  ChangeSubscription,\n  FetchReceipt,\n  GetActivePayment,\n  GetActiveSubscription,\n  GetAllTransactions,\n  GetPaymentDetails,\n  GetSubscriptions,\n  GetTransactions,\n  UpdateCardDetails,\n  UpdateSubscription,\n} from '../../../types/subscription';\n\nexport default abstract class SubscriptionService {\n  abstract getActiveSubscription: GetActiveSubscription;\n\n  abstract getAllTransactions: GetAllTransactions;\n\n  abstract getActivePayment: GetActivePayment;\n\n  abstract getSubscriptions: GetSubscriptions;\n\n  abstract updateSubscription: UpdateSubscription;\n\n  abstract fetchReceipt: FetchReceipt;\n\n  abstract changeSubscription?: ChangeSubscription;\n\n  abstract updateCardDetails?: UpdateCardDetails;\n\n  abstract getPaymentDetails?: GetPaymentDetails;\n\n  abstract getTransactions?: GetTransactions;\n}\n","import type { Offer, Order, PaymentMethod } from '../../types/checkout';\nimport type { MediaOffer } from '../../types/media';\n\nimport { createStore } from './utils';\n\ntype CheckoutStore = {\n  requestedMediaOffers: MediaOffer[];\n  mediaOffers: Offer[];\n  subscriptionOffers: Offer[];\n  switchSubscriptionOffers: Offer[];\n  selectedOffer: Offer | null;\n  defaultOfferId: string | null;\n  order: Order | null;\n  paymentMethods: PaymentMethod[] | null;\n  setRequestedMediaOffers: (requestedMediaOffers: MediaOffer[]) => void;\n  setOrder: (order: Order | null) => void;\n  setPaymentMethods: (paymentMethods: PaymentMethod[] | null) => void;\n};\n\nexport const useCheckoutStore = createStore<CheckoutStore>('CheckoutStore', (set) => ({\n  requestedMediaOffers: [],\n  mediaOffers: [],\n  subscriptionOffers: [],\n  switchSubscriptionOffers: [],\n  selectedOffer: null,\n  defaultOfferId: null,\n  order: null,\n  paymentMethods: null,\n  setRequestedMediaOffers: (requestedMediaOffers) => set({ requestedMediaOffers }),\n  setOrder: (order) => set({ order }),\n  setPaymentMethods: (paymentMethods) => set({ paymentMethods }),\n}));\n","type FormValidationErrors = Record<string, string[]>;\n\nexport class FormValidationError extends Error {\n  public errors: FormValidationErrors;\n\n  constructor(errors: FormValidationErrors) {\n    super(Object.values(errors).flat().join(';'));\n\n    this.errors = errors;\n  }\n}\n","import type { Subscription } from '../../types/subscription';\n\nexport const determineSwitchDirection = (subscription: Subscription | null) => {\n  const currentPeriod = subscription?.period;\n\n  if (currentPeriod === 'month') return 'upgrade';\n  if (currentPeriod === 'year') return 'downgrade';\n\n  return 'upgrade'; // Default to 'upgrade' if the period is not 'month' or 'year'\n};\n","import type { PaymentMethod } from '@jwp/ott-common/types/checkout';\n\nexport const findDefaultCardMethodId = (paymentMethods: PaymentMethod[] | null) => paymentMethods?.find((el) => el.methodName === 'card')?.id?.toString() || '';\n","import { inject, injectable } from 'inversify';\nimport i18next from 'i18next';\n\nimport type {\n  AddAdyenPaymentDetailsResponse,\n  AdyenPaymentSession,\n  CardPaymentData,\n  CreateOrderArgs,\n  FinalizeAdyenPayment,\n  FinalizeAdyenPaymentDetailsResponse,\n  GetEntitlements,\n  GetOffers,\n  InitialAdyenPayment,\n  Offer,\n  Order,\n  Payment,\n  PaymentMethod,\n} from '../../types/checkout';\nimport CheckoutService from '../services/integrations/CheckoutService';\nimport SubscriptionService from '../services/integrations/SubscriptionService';\nimport type { IntegrationType } from '../../types/config';\nimport { assertModuleMethod, getNamedModule } from '../modules/container';\nimport { GET_CUSTOMER_IP, INTEGRATION_TYPE } from '../modules/types';\nimport type { GetCustomerIP } from '../../types/get-customer-ip';\nimport AccountService from '../services/integrations/AccountService';\nimport { useCheckoutStore } from '../stores/CheckoutStore';\nimport { useAccountStore } from '../stores/AccountStore';\nimport { FormValidationError } from '../errors/FormValidationError';\nimport { determineSwitchDirection } from '../utils/subscription';\nimport { findDefaultCardMethodId } from '../utils/payments';\n\n@injectable()\nexport default class CheckoutController {\n  private readonly accountService: AccountService;\n  private readonly checkoutService: CheckoutService;\n  private readonly subscriptionService: SubscriptionService;\n  private readonly getCustomerIP: GetCustomerIP;\n\n  constructor(@inject(INTEGRATION_TYPE) integrationType: IntegrationType, @inject(GET_CUSTOMER_IP) getCustomerIP: GetCustomerIP) {\n    this.getCustomerIP = getCustomerIP;\n    this.accountService = getNamedModule(AccountService, integrationType);\n    this.checkoutService = getNamedModule(CheckoutService, integrationType);\n    this.subscriptionService = getNamedModule(SubscriptionService, integrationType);\n  }\n\n  initialiseOffers = async () => {\n    const requestedMediaOffers = useCheckoutStore.getState().requestedMediaOffers;\n    const mediaOffers = requestedMediaOffers ? await this.getOffers({ offerIds: requestedMediaOffers.map(({ offerId }) => offerId) }) : [];\n    useCheckoutStore.setState({ mediaOffers });\n\n    if (!useCheckoutStore.getState().subscriptionOffers.length && this.accountService.svodOfferIds) {\n      const subscriptionOffers = await this.getOffers({ offerIds: this.accountService.svodOfferIds });\n      useCheckoutStore.setState({ subscriptionOffers });\n    }\n\n    if (!useCheckoutStore.getState().switchSubscriptionOffers.length) {\n      const subscriptionSwitches = await this.getSubscriptionSwitches();\n      const switchSubscriptionOffers = subscriptionSwitches ? await this.getOffers({ offerIds: subscriptionSwitches }) : [];\n      useCheckoutStore.setState({ switchSubscriptionOffers });\n    }\n  };\n\n  getSubscriptionOfferIds = () => this.accountService.svodOfferIds;\n\n  chooseOffer = async (selectedOffer: Offer) => {\n    useCheckoutStore.setState({ selectedOffer });\n  };\n\n  initialiseOrder = async (offer: Offer): Promise<void> => {\n    const { getAccountInfo } = useAccountStore.getState();\n    const { customer } = getAccountInfo();\n\n    const paymentMethods = await this.getPaymentMethods();\n    const paymentMethodId = parseInt(findDefaultCardMethodId(paymentMethods));\n\n    const createOrderArgs: CreateOrderArgs = {\n      offer,\n      customerId: customer.id,\n      country: customer?.country || '',\n      paymentMethodId,\n    };\n\n    const response = await this.checkoutService.createOrder(createOrderArgs);\n\n    if (response?.errors?.length > 0) {\n      useCheckoutStore.getState().setOrder(null);\n\n      throw new Error(response?.errors[0]);\n    }\n\n    useCheckoutStore.getState().setOrder(response.responseData?.order);\n  };\n\n  updateOrder = async (order: Order, paymentMethodId?: number, couponCode?: string | null): Promise<void> => {\n    try {\n      const response = await this.checkoutService.updateOrder({ order, paymentMethodId, couponCode });\n\n      if (response.responseData.order) {\n        useCheckoutStore.getState().setOrder(response.responseData?.order);\n      }\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        if (error.message === 'Order not found') {\n          useCheckoutStore.getState().setOrder(null);\n        } else if (error.message === 'Invalid coupon code') {\n          throw new FormValidationError({ couponCode: [i18next.t('account:checkout.coupon_not_valid')] });\n        } else if (error.message === 'Invalid coupon code for this offer') {\n          throw new FormValidationError({ couponCode: [i18next.t('account:checkout.coupon_not_valid_for_offer')] });\n        }\n      }\n\n      throw new FormValidationError({ form: [i18next.t('error:unknown_error')] });\n    }\n  };\n\n  getPaymentMethods = async (): Promise<PaymentMethod[]> => {\n    const { paymentMethods } = useCheckoutStore.getState();\n\n    if (paymentMethods) return paymentMethods; // already fetched payment methods\n\n    const response = await this.checkoutService.getPaymentMethods();\n\n    if (response.errors.length > 0) throw new Error(response.errors[0]);\n\n    useCheckoutStore.getState().setPaymentMethods(response.responseData?.paymentMethods);\n\n    return response.responseData?.paymentMethods;\n  };\n\n  //\n  paymentWithoutDetails = async ({ captchaValue }: { captchaValue?: string } = {}): Promise<Payment> => {\n    const { order } = useCheckoutStore.getState();\n\n    if (!order) throw new Error('No order created');\n\n    const response = await this.checkoutService.paymentWithoutDetails({ orderId: order.id, captchaValue });\n\n    if (response.errors.length > 0) throw new Error(response.errors[0]);\n    if (response.responseData.rejectedReason) throw new Error(response.responseData.rejectedReason);\n\n    return response.responseData;\n  };\n\n  directPostCardPayment = async ({ cardPaymentPayload, referrer, returnUrl }: { cardPaymentPayload: CardPaymentData; referrer: string; returnUrl: string }) => {\n    const { order } = useCheckoutStore.getState();\n\n    if (!order) throw new Error('No order created');\n\n    return await this.checkoutService.directPostCardPayment(cardPaymentPayload, order, referrer, returnUrl);\n  };\n\n  createAdyenPaymentSession = async (returnUrl: string, isInitialPayment: boolean = true): Promise<AdyenPaymentSession> => {\n    const { order } = useCheckoutStore.getState();\n    const orderId = order?.id;\n\n    if (isInitialPayment && !orderId) throw new Error('There is no order to pay for');\n\n    assertModuleMethod(this.checkoutService.createAdyenPaymentSession, 'createAdyenPaymentSession is not available in checkout service');\n\n    const response = await this.checkoutService.createAdyenPaymentSession({\n      orderId: orderId,\n      returnUrl: returnUrl,\n    });\n\n    if (response.errors.length > 0) {\n      throw new Error(response.errors[0]);\n    }\n\n    return response.responseData;\n  };\n\n  initialAdyenPayment = async (paymentMethod: AdyenPaymentMethod, returnUrl: string, captchaValue?: string): Promise<InitialAdyenPayment> => {\n    const { order } = useCheckoutStore.getState();\n\n    if (!order) throw new Error('No order created');\n\n    assertModuleMethod(this.checkoutService.initialAdyenPayment, 'initialAdyenPayment is not available in checkout service');\n\n    const response = await this.checkoutService.initialAdyenPayment({\n      orderId: order.id,\n      returnUrl: returnUrl,\n      paymentMethod,\n      customerIP: await this.getCustomerIP(),\n      captchaValue,\n    });\n\n    if (response.errors.length > 0) throw new Error(response.errors[0]);\n\n    return response.responseData;\n  };\n\n  finalizeAdyenPayment = async (details: unknown, orderId?: number, paymentData?: string): Promise<FinalizeAdyenPayment> => {\n    if (!orderId) throw new Error('No order created');\n\n    assertModuleMethod(this.checkoutService.finalizeAdyenPayment, 'finalizeAdyenPayment is not available in checkout service');\n\n    const response = await this.checkoutService.finalizeAdyenPayment({\n      orderId,\n      details,\n      paymentData,\n    });\n\n    if (response.errors.length > 0) {\n      throw new Error(response.errors[0]);\n    }\n\n    return response.responseData;\n  };\n\n  paypalPayment = async ({\n    successUrl,\n    waitingUrl,\n    cancelUrl,\n    errorUrl,\n    couponCode = '',\n    captchaValue,\n  }: {\n    successUrl: string;\n    waitingUrl: string;\n    cancelUrl: string;\n    errorUrl: string;\n    couponCode: string;\n    captchaValue?: string;\n  }): Promise<{ redirectUrl: string }> => {\n    const { order } = useCheckoutStore.getState();\n\n    if (!order) throw new Error('No order created');\n\n    const response = await this.checkoutService.paymentWithPayPal({\n      order: order,\n      successUrl,\n      waitingUrl,\n      cancelUrl,\n      errorUrl,\n      couponCode,\n      captchaValue,\n    });\n\n    if (response.errors.length > 0) throw new Error(response.errors[0]);\n\n    return {\n      redirectUrl: response.responseData.redirectUrl,\n    };\n  };\n\n  getSubscriptionSwitches = async (): Promise<string[] | null> => {\n    const { getAccountInfo } = useAccountStore.getState();\n\n    const { customerId } = getAccountInfo();\n    const { subscription } = useAccountStore.getState();\n\n    if (!subscription || !this.checkoutService.getSubscriptionSwitches) return null;\n\n    assertModuleMethod(this.checkoutService.getOffer, 'getOffer is not available in checkout service');\n\n    const response = await this.checkoutService.getSubscriptionSwitches({\n      customerId: customerId,\n      offerId: subscription.offerId,\n    });\n\n    if (!response.responseData.available.length) return null;\n\n    return response.responseData.available.map(({ toOfferId }) => toOfferId);\n  };\n\n  switchSubscription = async () => {\n    const selectedOffer = useCheckoutStore.getState().selectedOffer;\n    const subscription = useAccountStore.getState().subscription;\n    const { getAccountInfo } = useAccountStore.getState();\n    const { customerId } = getAccountInfo();\n\n    if (!selectedOffer || !subscription) throw new Error('No offer selected');\n\n    assertModuleMethod(this.checkoutService.switchSubscription, 'switchSubscription is not available in checkout service');\n\n    const switchDirection: 'upgrade' | 'downgrade' = determineSwitchDirection(subscription);\n\n    const switchSubscriptionPayload = {\n      toOfferId: selectedOffer.offerId,\n      customerId: customerId,\n      offerId: subscription.offerId,\n      switchDirection: switchDirection,\n    };\n\n    await this.checkoutService.switchSubscription(switchSubscriptionPayload);\n  };\n\n  changeSubscription = async ({ accessFeeId, subscriptionId }: { accessFeeId: string; subscriptionId: string }) => {\n    assertModuleMethod(this.subscriptionService.changeSubscription, 'changeSubscription is not available in subscription service');\n\n    const { responseData } = await this.subscriptionService.changeSubscription({\n      accessFeeId,\n      subscriptionId,\n    });\n\n    return responseData;\n  };\n\n  updatePayPalPaymentMethod = async (\n    successUrl: string,\n    waitingUrl: string,\n    cancelUrl: string,\n    errorUrl: string,\n    paymentMethodId: number,\n    currentPaymentId?: number,\n  ) => {\n    assertModuleMethod(this.checkoutService.updatePaymentMethodWithPayPal, 'updatePaymentMethodWithPayPal is not available in checkout service');\n    assertModuleMethod(this.checkoutService.deletePaymentMethod, 'deletePaymentMethod is not available in checkout service');\n\n    const response = await this.checkoutService.updatePaymentMethodWithPayPal({\n      paymentMethodId,\n      successUrl,\n      waitingUrl,\n      cancelUrl,\n      errorUrl,\n    });\n\n    if (response.errors.length > 0) throw new Error(response.errors[0]);\n\n    if (currentPaymentId) {\n      await this.checkoutService.deletePaymentMethod({ paymentDetailsId: currentPaymentId });\n    }\n\n    return response.responseData;\n  };\n\n  addAdyenPaymentDetails = async (paymentMethod: AdyenPaymentMethod, paymentMethodId: number, returnUrl: string): Promise<AddAdyenPaymentDetailsResponse> => {\n    assertModuleMethod(this.checkoutService.addAdyenPaymentDetails, 'addAdyenPaymentDetails is not available in checkout service');\n\n    const response = await this.checkoutService.addAdyenPaymentDetails({\n      paymentMethodId,\n      returnUrl,\n      paymentMethod,\n      customerIP: await this.getCustomerIP(),\n    });\n\n    if (response.errors.length > 0) throw new Error(response.errors[0]);\n\n    return response.responseData;\n  };\n\n  finalizeAdyenPaymentDetails = async (details: unknown, paymentMethodId: number, paymentData?: string): Promise<FinalizeAdyenPaymentDetailsResponse> => {\n    assertModuleMethod(this.checkoutService.finalizeAdyenPaymentDetails, 'finalizeAdyenPaymentDetails is not available in checkout service');\n\n    const response = await this.checkoutService.finalizeAdyenPaymentDetails({\n      paymentMethodId,\n      details,\n      paymentData,\n    });\n\n    if (response.errors.length > 0) throw new Error(response.errors[0]);\n\n    return response.responseData;\n  };\n\n  getOffers: GetOffers = (payload) => {\n    return this.checkoutService.getOffers(payload);\n  };\n\n  getEntitlements: GetEntitlements = (payload) => {\n    return this.checkoutService.getEntitlements(payload);\n  };\n}\n","import { PersonalShelf } from '../constants';\nimport type { Favorite } from '../../types/favorite';\nimport type { Playlist, PlaylistItem } from '../../types/playlist';\n\nimport { createStore } from './utils';\n\ntype FavoritesState = {\n  favorites: Favorite[];\n  warning: string | null;\n  favoritesPlaylistId: string;\n  hasItem: (item: PlaylistItem) => boolean;\n  getPlaylist: () => Playlist;\n  setWarning: (warning: string) => void;\n  clearWarning: () => void;\n};\n\nexport const useFavoritesStore = createStore<FavoritesState>('FavoritesState', (set, get) => ({\n  favorites: [],\n  warning: null,\n  favoritesPlaylistId: PersonalShelf.Favorites,\n  setWarning: (message: string | null) => set({ warning: message }),\n  clearWarning: () => set({ warning: null }),\n  hasItem: (item: PlaylistItem) => get().favorites.some((favoriteItem) => favoriteItem.mediaid === item.mediaid),\n  getPlaylist: () =>\n    ({\n      feedid: get().favoritesPlaylistId || PersonalShelf.Favorites,\n      title: 'Favorites',\n      playlist: get().favorites.map(({ playlistItem }) => playlistItem),\n    } as Playlist),\n}));\n","import i18next from 'i18next';\nimport { injectable } from 'inversify';\n\nimport FavoriteService from '../services/FavoriteService';\nimport type { PlaylistItem } from '../../types/playlist';\nimport { useAccountStore } from '../stores/AccountStore';\nimport { useFavoritesStore } from '../stores/FavoritesStore';\nimport { useConfigStore } from '../stores/ConfigStore';\n\n@injectable()\nexport default class FavoritesController {\n  private readonly favoritesService: FavoriteService;\n\n  constructor(favoritesService: FavoriteService) {\n    this.favoritesService = favoritesService;\n  }\n\n  initialize = async (language: string) => {\n    await this.restoreFavorites(language);\n  };\n\n  restoreFavorites = async (language?: string) => {\n    const { user } = useAccountStore.getState();\n    const favoritesList = useConfigStore.getState().config.features?.favoritesList;\n\n    if (!favoritesList) {\n      return;\n    }\n\n    const favorites = await this.favoritesService.getFavorites(user, favoritesList, language);\n\n    useFavoritesStore.setState({ favorites, favoritesPlaylistId: favoritesList });\n  };\n\n  persistFavorites = async () => {\n    const { favorites } = useFavoritesStore.getState();\n    const { user } = useAccountStore.getState();\n\n    await this.favoritesService.persistFavorites(favorites, user);\n  };\n\n  saveItem = async (item: PlaylistItem) => {\n    const { favorites } = useFavoritesStore.getState();\n\n    if (!favorites.some(({ mediaid }) => mediaid === item.mediaid)) {\n      const items = [this.favoritesService.createFavorite(item)].concat(favorites);\n      useFavoritesStore.setState({ favorites: items });\n      await this.persistFavorites();\n    }\n  };\n\n  removeItem = async (item: PlaylistItem) => {\n    const { favorites } = useFavoritesStore.getState();\n\n    const items = favorites.filter(({ mediaid }) => mediaid !== item.mediaid);\n    useFavoritesStore.setState({ favorites: items });\n\n    await this.persistFavorites();\n  };\n\n  toggleFavorite = async (item: PlaylistItem | undefined) => {\n    const { favorites, hasItem, setWarning } = useFavoritesStore.getState();\n\n    if (!item) {\n      return;\n    }\n\n    const isFavorite = hasItem(item);\n\n    if (isFavorite) {\n      await this.removeItem(item);\n\n      return;\n    }\n\n    // If we exceed the max available number of favorites, we show a warning\n    if (favorites.length > this.favoritesService.getMaxFavoritesCount()) {\n      setWarning(i18next.t('video:favorites_warning', { maxCount: this.favoritesService.getMaxFavoritesCount() }));\n      return;\n    }\n\n    await this.saveItem(item);\n  };\n\n  clear = async () => {\n    useFavoritesStore.setState({ favorites: [] });\n\n    await this.persistFavorites();\n  };\n}\n","import { inject, injectable } from 'inversify';\n\nimport type { AccessTokens } from '../../types/access';\nimport { logError } from '../logger';\nimport { API_ACCESS_BRIDGE_URL } from '../modules/types';\n\n@injectable()\nexport default class AccessService {\n  private readonly apiAccessBridgeUrl;\n\n  constructor(@inject(API_ACCESS_BRIDGE_URL) apiAccessBridgeUrl: string) {\n    this.apiAccessBridgeUrl = apiAccessBridgeUrl;\n  }\n\n  generateAccessTokens = async (siteId: string, jwt?: string): Promise<AccessTokens | null> => {\n    const url = `${this.apiAccessBridgeUrl}/v2/sites/${siteId}/access/generate`;\n    const response = await fetch(url, {\n      method: 'PUT',\n      headers: {\n        Authorization: jwt ? `Bearer ${jwt}` : '',\n      },\n    });\n\n    if (!response.ok) {\n      logError('AccessService', 'Failed to generateAccessTokens', {\n        status: response.status,\n        error: response.json(),\n      });\n\n      return null;\n    }\n\n    return (await response.json()) as AccessTokens;\n  };\n\n  refreshAccessTokens = async (siteId: string, refresh_token: string): Promise<AccessTokens | null> => {\n    const url = `${this.apiAccessBridgeUrl}/v2/sites/${siteId}/access/refresh`;\n    const response = await fetch(url, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        refresh_token,\n      }),\n    });\n\n    if (!response.ok) {\n      logError('AccessService', 'Failed to refreshAccessTokens', {\n        status: response.status,\n        error: response.json(),\n      });\n\n      return null;\n    }\n\n    return (await response.json()) as AccessTokens;\n  };\n}\n","import { createStore } from './utils';\n\ntype AccessStore = {\n  passport: string | null;\n};\n\nexport const useAccessStore = createStore<AccessStore>('AccessStore', () => ({\n  passport: null,\n}));\n","import { inject, injectable } from 'inversify';\n\nimport type { IntegrationType } from '../../types/config';\nimport type { AccessTokens } from '../../types/access';\nimport ApiService from '../services/ApiService';\nimport AccessService from '../services/AccessService';\nimport AccountService from '../services/integrations/AccountService';\nimport StorageService from '../services/StorageService';\nimport { useConfigStore } from '../stores/ConfigStore';\nimport { INTEGRATION_TYPE } from '../modules/types';\nimport { getNamedModule } from '../modules/container';\nimport { useAccountStore } from '../stores/AccountStore';\nimport { ApiError } from '../utils/api';\nimport { useAccessStore } from '../stores/AccessStore';\n\nconst ACCESS_TOKENS = 'access_tokens';\n\n@injectable()\nexport default class AccessController {\n  private readonly apiService: ApiService;\n  private readonly accessService: AccessService;\n  private readonly accountService: AccountService;\n  private readonly storageService: StorageService;\n\n  private siteId: string = '';\n\n  constructor(\n    @inject(INTEGRATION_TYPE) integrationType: IntegrationType,\n    @inject(ApiService) apiService: ApiService,\n    @inject(StorageService) storageService: StorageService,\n    @inject(AccessService) accessService: AccessService,\n  ) {\n    this.apiService = apiService;\n    this.accessService = accessService;\n    this.storageService = storageService;\n    this.accountService = getNamedModule(AccountService, integrationType);\n  }\n\n  initialize = async () => {\n    const { config, accessModel } = useConfigStore.getState();\n    this.siteId = config.siteId;\n\n    // For the AVOD access model, signing and DRM are not supported, so access tokens generation is skipped\n    if (accessModel === 'AVOD') {\n      return;\n    }\n\n    // Not awaiting to avoid blocking the loading process,\n    // as the initial access tokens can be stored asynchronously without affecting the app's performance\n    void this.generateOrRefreshAccessTokens();\n  };\n\n  /**\n   * Retrieves media by its ID using a passport token.\n   * If no access tokens exist, it attempts to generate them, if the passport token is expired, it attempts to refresh them.\n   * If an access token retrieval fails or the user is not entitled to the content, an error is thrown.\n   */\n  getMediaById = async (mediaId: string) => {\n    const { entitledPlan } = useAccountStore.getState();\n\n    if (!this.siteId || !entitledPlan) {\n      return;\n    }\n\n    try {\n      const accessTokens = await this.generateOrRefreshAccessTokens();\n      if (!accessTokens?.passport) {\n        throw new Error('Failed to get / generate access tokens and retrieve media.');\n      }\n      return await this.apiService.getMediaByIdWithPassport({ id: mediaId, siteId: this.siteId, planId: entitledPlan.id, passport: accessTokens.passport });\n    } catch (error: unknown) {\n      if (error instanceof ApiError && error.code === 403) {\n        // If the passport is invalid or expired, refresh the access tokens and try to get the media again.\n        const accessTokens = await this.refreshAccessTokens();\n        if (accessTokens?.passport) {\n          return await this.apiService.getMediaByIdWithPassport({ id: mediaId, siteId: this.siteId, planId: entitledPlan.id, passport: accessTokens.passport });\n        }\n\n        throw new Error('Failed to refresh access tokens and retrieve media.');\n      }\n      throw error;\n    }\n  };\n\n  /**\n   * Generates or refreshes access tokens based on their current validity.\n   * If existing tokens are expired, they are refreshed; if no tokens exist, they are generated.\n   * If the existing tokens are valid, it retrieves them.\n   */\n  generateOrRefreshAccessTokens = async (): Promise<AccessTokens | null> => {\n    const existingAccessTokens = await this.getAccessTokens();\n    const shouldRefresh = existingAccessTokens && Date.now() > existingAccessTokens.expires;\n\n    if (!existingAccessTokens) {\n      await this.generateAccessTokens();\n    }\n\n    if (shouldRefresh) {\n      return await this.refreshAccessTokens();\n    }\n\n    return existingAccessTokens;\n  };\n\n  /**\n   * Generates access tokens based on the viewer auth data.\n   * If the viewer is not authenticated it generates only access for free plans (if they are defined).\n   * Stores the access tokens in local storage.\n   */\n  generateAccessTokens = async (): Promise<AccessTokens | null> => {\n    if (!this.siteId) {\n      return null;\n    }\n\n    const auth = await this.accountService.getAuthData();\n\n    const accessTokens = await this.accessService.generateAccessTokens(this.siteId, auth?.jwt);\n    if (accessTokens) {\n      await this.setAccessTokens(accessTokens);\n      return accessTokens;\n    }\n\n    return null;\n  };\n\n  /**\n   * Refreshes the access tokens using the refresh token if they exist.\n   * If no tokens are found, it cannot refresh and returns null.\n   * Updates the localstorage with the newly generated access tokens.\n   */\n  refreshAccessTokens = async (): Promise<AccessTokens | null> => {\n    const existingAccessTokens = await this.getAccessTokens();\n    // there is no access tokens stored, nothing to refresh\n    if (!existingAccessTokens) {\n      return null;\n    }\n\n    const accessTokens = await this.accessService.refreshAccessTokens(this.siteId, existingAccessTokens.refresh_token);\n    if (accessTokens) {\n      await this.setAccessTokens(accessTokens);\n      return accessTokens;\n    }\n\n    return null;\n  };\n\n  /**\n   * Stores the access tokens in local storage, adding an expiration timestamp of 1 hour (passport validity).\n   * The expiration timestamp helps determine when the passport token should be refreshed.\n   */\n  setAccessTokens = async (accessTokens: AccessTokens) => {\n    useAccessStore.setState({ passport: accessTokens.passport });\n    // Since the actual valid time for a passport token is 1 hour, set the expires to one hour from now.\n    // The expires field here is used as a helper to manage the passport's validity and refresh process.\n    const expires = new Date(Date.now() + 3600 * 1000).getTime();\n    return await this.storageService.setItem(ACCESS_TOKENS, JSON.stringify({ ...accessTokens, expires }), true);\n  };\n\n  /**\n   * Retrieves the access tokens from local storage (if any) along with their expiration timestamp.\n   */\n  getAccessTokens = async (): Promise<(AccessTokens & { expires: number }) | null> => {\n    const accessTokens = await this.storageService.getItem<AccessTokens & { expires: number }>(ACCESS_TOKENS, true, true);\n    if (accessTokens) {\n      useAccessStore.setState({ passport: accessTokens.passport });\n    }\n\n    return accessTokens;\n  };\n\n  /**\n   * Removes the access tokens from local storage (if any).\n   */\n  removeAccessTokens = async () => {\n    useAccessStore.setState({ passport: null });\n    return await this.storageService.removeItem(ACCESS_TOKENS);\n  };\n}\n","import i18next from 'i18next';\nimport { inject, injectable } from 'inversify';\n\nimport { DEFAULT_FEATURES } from '../constants';\nimport type { IntegrationType } from '../../types/config';\nimport CheckoutService from '../services/integrations/CheckoutService';\nimport AccountService, { type AccountServiceFeatures } from '../services/integrations/AccountService';\nimport SubscriptionService from '../services/integrations/SubscriptionService';\nimport JWPEntitlementService from '../services/JWPEntitlementService';\nimport type { Offer } from '../../types/checkout';\nimport type { Plan } from '../../types/plans';\nimport type {\n  Capture,\n  Customer,\n  CustomerConsent,\n  EmailConfirmPasswordInput,\n  FirstLastNameInput,\n  GetCaptureStatusResponse,\n  SubscribeToNotificationsPayload,\n} from '../../types/account';\nimport { assertFeature, assertModuleMethod, getModule, getNamedModule } from '../modules/container';\nimport { INTEGRATION_TYPE } from '../modules/types';\nimport type { ServiceResponse } from '../../types/service';\nimport { useAccountStore } from '../stores/AccountStore';\nimport { useConfigStore } from '../stores/ConfigStore';\nimport { FormValidationError } from '../errors/FormValidationError';\nimport { logError } from '../logger';\n\nimport WatchHistoryController from './WatchHistoryController';\nimport FavoritesController from './FavoritesController';\nimport AccessController from './AccessController';\n\n@injectable()\nexport default class AccountController {\n  private readonly checkoutService: CheckoutService;\n  private readonly accountService: AccountService;\n  private readonly subscriptionService: SubscriptionService;\n  private readonly entitlementService: JWPEntitlementService;\n  private readonly accessController: AccessController;\n  private readonly favoritesController: FavoritesController;\n  private readonly watchHistoryController: WatchHistoryController;\n  private readonly features: AccountServiceFeatures;\n\n  // temporary callback for refreshing the query cache until we've updated to react-query v4 or v5\n  private refreshEntitlements: (() => Promise<void>) | undefined;\n\n  constructor(\n    @inject(INTEGRATION_TYPE) integrationType: IntegrationType,\n    accessController: AccessController,\n    favoritesController: FavoritesController,\n    watchHistoryController: WatchHistoryController,\n  ) {\n    this.checkoutService = getNamedModule(CheckoutService, integrationType);\n    this.accountService = getNamedModule(AccountService, integrationType);\n    this.subscriptionService = getNamedModule(SubscriptionService, integrationType);\n    this.entitlementService = getModule(JWPEntitlementService);\n\n    // @TODO: Controllers shouldn't be depending on other controllers, but we've agreed to keep this as is for now\n    this.accessController = accessController;\n    this.favoritesController = favoritesController;\n    this.watchHistoryController = watchHistoryController;\n\n    this.features = integrationType ? this.accountService.features : DEFAULT_FEATURES;\n  }\n\n  loadUserData = async () => {\n    try {\n      const authData = await this.accountService.getAuthData();\n\n      if (authData) {\n        await this.getAccount();\n      }\n    } catch (error: unknown) {\n      logError('AccountController', 'Failed to get user', { error });\n\n      // clear the session when the token was invalid\n      // don't clear the session when the error is unknown (network hiccup or something similar)\n      if (error instanceof Error && error.message.includes('Invalid JWT token')) {\n        await this.logout();\n      }\n    }\n  };\n\n  initialize = async (url: string, refreshEntitlements?: () => Promise<void>) => {\n    this.refreshEntitlements = refreshEntitlements;\n\n    useAccountStore.setState({ loading: true });\n    const config = useConfigStore.getState().config;\n\n    await this.accountService.initialize(config, url, this.logout);\n\n    // set the accessModel before restoring the user session\n    useConfigStore.setState({ accessModel: this.accountService.accessModel });\n\n    await this.loadUserData();\n    await this.getEntitledPlans();\n\n    useAccountStore.setState({ loading: false });\n  };\n\n  getSandbox() {\n    return this.accountService.sandbox;\n  }\n\n  updateUser = async (values: FirstLastNameInput | EmailConfirmPasswordInput): Promise<ServiceResponse<Customer>> => {\n    useAccountStore.setState({ loading: true });\n\n    const { user } = useAccountStore.getState();\n    const { canUpdateEmail, canSupportEmptyFullName } = this.getFeatures();\n\n    if (Object.prototype.hasOwnProperty.call(values, 'email') && !canUpdateEmail) {\n      throw new Error('Email update not supported');\n    }\n\n    if (!user) {\n      throw new Error('User not logged in');\n    }\n\n    const errors = this.validateInputLength(values as FirstLastNameInput);\n    if (errors.length) {\n      return {\n        errors,\n        responseData: {} as Customer,\n      };\n    }\n\n    let payload = values;\n    // this is needed as a fallback when the name is empty (cannot be empty on JWP integration)\n    if (!canSupportEmptyFullName) {\n      payload = { ...values, email: user.email };\n    }\n\n    const updatedUser = await this.accountService.updateCustomer({ ...payload, id: user.id.toString() });\n\n    if (!updatedUser) {\n      throw new Error('Unknown error');\n    }\n\n    useAccountStore.setState({ user: updatedUser });\n\n    return { errors: [], responseData: updatedUser };\n  };\n\n  getAccount = async () => {\n    const { config } = useConfigStore.getState();\n\n    try {\n      const response = await this.accountService.getUser({ config });\n\n      if (response) {\n        await this.afterLogin(response.user, response.customerConsents);\n      }\n\n      useAccountStore.setState({ loading: false });\n    } catch (error: unknown) {\n      useAccountStore.setState({\n        user: null,\n        subscription: null,\n        transactions: null,\n        activePayment: null,\n        customerConsents: null,\n        publisherConsents: null,\n        loading: false,\n      });\n    }\n  };\n\n  login = async (email: string, password: string, referrer: string) => {\n    useAccountStore.setState({ loading: true });\n\n    try {\n      const response = await this.accountService.login({ email, password, referrer });\n\n      if (response) {\n        await this.accessController?.generateAccessTokens();\n        await this.afterLogin(response.user, response.customerConsents);\n        return;\n      }\n    } catch (error: unknown) {\n      if (error instanceof Error && error.message.toLowerCase().includes('invalid param email')) {\n        throw new FormValidationError({ email: [i18next.t('account:login.wrong_email')] });\n      }\n    } finally {\n      useAccountStore.setState({ loading: false });\n    }\n\n    // consider any unknown response as a wrong combinations error (we could specify this even more)\n    throw new FormValidationError({ form: [i18next.t('account:login.wrong_combination')] });\n  };\n\n  logout = async () => {\n    await this.accountService?.logout();\n    await this.accessController?.removeAccessTokens();\n    await this.clearLoginState();\n\n    // let the application know to refresh all entitlements\n    await this.refreshEntitlements?.();\n  };\n\n  register = async (email: string, password: string, referrer: string, consentsValues: CustomerConsent[], captchaValue?: string) => {\n    try {\n      const response = await this.accountService.register({ email, password, consents: consentsValues, referrer, captchaValue });\n\n      if (response) {\n        const { user, customerConsents } = response;\n        await this.afterLogin(user, customerConsents, true);\n\n        return;\n      }\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        const errorMessage = error.message.toLowerCase();\n\n        if (errorMessage.includes('customer already exists') || errorMessage.includes('account already exists')) {\n          throw new FormValidationError({ form: [i18next.t('account:registration.user_exists')] });\n        } else if (errorMessage.includes('please enter a valid e-mail address')) {\n          throw new FormValidationError({ email: [i18next.t('account:registration.field_is_not_valid_email')] });\n        } else if (errorMessage.includes('invalid param password')) {\n          throw new FormValidationError({ password: [i18next.t('account:registration.invalid_password')] });\n        }\n      }\n    }\n\n    // in case the endpoint fails\n    throw new FormValidationError({ form: [i18next.t('account:registration.failed_to_create')] });\n  };\n\n  updateConsents = async (customerConsents: CustomerConsent[]): Promise<ServiceResponse<CustomerConsent[]>> => {\n    const { getAccountInfo } = useAccountStore.getState();\n    const { customer } = getAccountInfo();\n\n    useAccountStore.setState({ loading: true });\n\n    try {\n      const updatedConsents = await this.accountService?.updateCustomerConsents({\n        customer,\n        consents: customerConsents,\n      });\n\n      if (updatedConsents) {\n        useAccountStore.setState({ customerConsents: updatedConsents });\n        return {\n          responseData: updatedConsents,\n          errors: [],\n        };\n      }\n      return {\n        responseData: [],\n        errors: [],\n      };\n    } finally {\n      useAccountStore.setState({ loading: false });\n    }\n  };\n\n  // TODO: Decide if it's worth keeping this or just leave combined with getUser\n  // noinspection JSUnusedGlobalSymbols\n  getCustomerConsents = async () => {\n    const { getAccountInfo } = useAccountStore.getState();\n    const { customer } = getAccountInfo();\n\n    const consents = await this.accountService.getCustomerConsents({ customer });\n\n    if (consents) {\n      useAccountStore.setState({ customerConsents: consents });\n    }\n\n    return consents;\n  };\n\n  getPublisherConsents = async () => {\n    const { config } = useConfigStore.getState();\n\n    useAccountStore.setState({ publisherConsentsLoading: true });\n    const consents = await this.accountService.getPublisherConsents(config);\n\n    useAccountStore.setState({ publisherConsents: consents, publisherConsentsLoading: false });\n  };\n\n  getCaptureStatus = async (): Promise<GetCaptureStatusResponse> => {\n    const { getAccountInfo } = useAccountStore.getState();\n    const { customer } = getAccountInfo();\n\n    return this.accountService.getCaptureStatus({ customer });\n  };\n\n  updateCaptureAnswers = async (capture: Capture): Promise<Capture> => {\n    const { getAccountInfo } = useAccountStore.getState();\n    const { customer, customerConsents } = getAccountInfo();\n\n    const updatedCustomer = await this.accountService.updateCaptureAnswers({ customer, ...capture });\n\n    useAccountStore.setState({\n      user: updatedCustomer,\n      customerConsents,\n    });\n\n    return updatedCustomer;\n  };\n\n  resetPassword = async (email: string, resetUrl: string) => {\n    await this.accountService.resetPassword({\n      customerEmail: email,\n      resetUrl,\n    });\n  };\n\n  changePasswordWithOldPassword = async (oldPassword: string, newPassword: string, newPasswordConfirmation: string) => {\n    await this.accountService.changePasswordWithOldPassword({\n      oldPassword,\n      newPassword,\n      newPasswordConfirmation,\n    });\n  };\n\n  changePasswordWithToken = async (customerEmail: string, newPassword: string, resetPasswordToken: string, newPasswordConfirmation: string) => {\n    await this.accountService.changePasswordWithResetToken({\n      customerEmail,\n      newPassword,\n      resetPasswordToken,\n      newPasswordConfirmation,\n    });\n  };\n\n  updateSubscription = async (status: 'active' | 'cancelled'): Promise<unknown> => {\n    const { getAccountInfo } = useAccountStore.getState();\n\n    const { customerId } = getAccountInfo();\n\n    const { subscription } = useAccountStore.getState();\n    if (!subscription) throw new Error('user has no active subscription');\n\n    const response = await this.subscriptionService?.updateSubscription({\n      customerId,\n      offerId: subscription.offerId,\n      status,\n      unsubscribeUrl: subscription.unsubscribeUrl,\n    });\n\n    if (response.errors.length > 0) throw new Error(response.errors[0]);\n\n    await this.reloadSubscriptions({ retry: 10 });\n\n    return response?.responseData;\n  };\n\n  updateCardDetails = async ({\n    cardName,\n    cardNumber,\n    cvc,\n    expMonth,\n    expYear,\n    currency,\n  }: {\n    cardName: string;\n    cardNumber: string;\n    cvc: number;\n    expMonth: number;\n    expYear: number;\n    currency: string;\n  }) => {\n    const { getAccountInfo } = useAccountStore.getState();\n\n    const { customerId } = getAccountInfo();\n\n    assertModuleMethod(this.subscriptionService.updateCardDetails, 'updateCardDetails is not available in subscription service');\n\n    const response = await this.subscriptionService.updateCardDetails({\n      cardName,\n      cardNumber,\n      cvc,\n      expMonth,\n      expYear,\n      currency,\n    });\n    const activePayment = (await this.subscriptionService.getActivePayment({ customerId })) || null;\n\n    useAccountStore.setState({\n      loading: false,\n      activePayment,\n    });\n    return response;\n  };\n\n  checkEntitlements = async (offerId?: string): Promise<unknown> => {\n    if (!offerId) {\n      return false;\n    }\n\n    const { responseData } = await this.checkoutService.getEntitlements({ offerId });\n    return !!responseData?.accessGranted;\n  };\n\n  // This currently supports only one plan, as the current usage for the media metadata requires only one plan_id provided.\n  // TODO: Support for multiple plans should be added. Revisit this logic once the dependency on plan_id is changed.\n  getEntitledPlans = async (): Promise<Plan | null> => {\n    const { config, settings } = useConfigStore.getState();\n    const siteId = config.siteId;\n    const isAccessBridgeEnabled = !!settings?.apiAccessBridgeUrl;\n\n    // This should be only used when access bridge is defined, regardless of the integration type.\n    if (!isAccessBridgeEnabled) {\n      return null;\n    }\n\n    const response = await this.entitlementService.getEntitledPlans({ siteId });\n    if (response?.plans?.length) {\n      // Find the SVOD plan or fallback to the first available plan\n      const entitledPlan = response.plans.find((plan) => plan.metadata.access_model === 'svod') || response.plans[0];\n      useAccountStore.setState({ entitledPlan });\n      return entitledPlan;\n    }\n\n    return null;\n  };\n\n  reloadSubscriptions = async (\n    { delay, retry }: { delay?: number; retry?: number } = {\n      delay: 0,\n      retry: 0,\n    },\n  ): Promise<unknown> => {\n    useAccountStore.setState({ loading: true });\n\n    const { getAccountInfo } = useAccountStore.getState();\n    const { customerId } = getAccountInfo();\n    const { accessModel } = useConfigStore.getState();\n\n    // The subscription data takes a few seconds to load after it's purchased,\n    // so here's a delay mechanism to give it time to process\n    if (delay && delay > 0) {\n      return new Promise((resolve: (value?: unknown) => void) => {\n        setTimeout(() => {\n          this.reloadSubscriptions({ retry }).finally(resolve);\n        }, delay);\n      });\n    }\n\n    // For non-SVOD platforms, there could be TVOD items, so we only reload entitlements\n    if (accessModel !== 'SVOD') {\n      await this.refreshEntitlements?.();\n\n      return useAccountStore.setState({ loading: false });\n    }\n\n    const [activeSubscription, transactions, activePayment] = await Promise.all([\n      this.subscriptionService.getActiveSubscription({ customerId }),\n      this.subscriptionService.getAllTransactions({ customerId }),\n      this.subscriptionService.getActivePayment({ customerId }),\n    ]);\n\n    let pendingOffer: Offer | null = null;\n\n    if (!activeSubscription && !!retry && retry > 0) {\n      const retryDelay = 1500; // Any initial delay has already occurred, so we can set this to a fixed value\n\n      return await this.reloadSubscriptions({ delay: retryDelay, retry: retry - 1 });\n    }\n\n    // resolve and fetch the pending offer after upgrade/downgrade\n    try {\n      if (activeSubscription?.pendingSwitchId) {\n        assertModuleMethod(this.checkoutService.getOffer, 'getOffer is not available in checkout service');\n        assertModuleMethod(this.checkoutService.getSubscriptionSwitch, 'getSubscriptionSwitch is not available in checkout service');\n\n        const switchOffer = await this.checkoutService.getSubscriptionSwitch({ switchId: activeSubscription.pendingSwitchId });\n        const offerResponse = await this.checkoutService.getOffer({ offerId: switchOffer.responseData.toOfferId });\n\n        pendingOffer = offerResponse.responseData;\n      }\n    } catch (error: unknown) {\n      logError('AccountController', 'Failed to fetch the pending offer', { error });\n    }\n\n    // let the app know to refresh the entitlements\n    await this.refreshEntitlements?.();\n\n    useAccountStore.setState({\n      subscription: activeSubscription,\n      loading: false,\n      pendingOffer,\n      transactions,\n      activePayment,\n    });\n  };\n\n  exportAccountData = async () => {\n    const { canExportAccountData } = this.getFeatures();\n\n    assertModuleMethod(this.accountService.exportAccountData, 'exportAccountData is not available in account service');\n    assertFeature(canExportAccountData, 'Export account');\n\n    return this.accountService?.exportAccountData(undefined);\n  };\n\n  getSocialLoginUrls = (redirectUrl: string) => {\n    const { hasSocialURLs } = this.getFeatures();\n\n    assertModuleMethod(this.accountService.getSocialUrls, 'getSocialUrls is not available in account service');\n    assertFeature(hasSocialURLs, 'Social logins');\n\n    return this.accountService.getSocialUrls({ redirectUrl });\n  };\n\n  deleteAccountData = async (password: string) => {\n    const { canDeleteAccount } = this.getFeatures();\n\n    assertModuleMethod(this.accountService.deleteAccount, 'deleteAccount is not available in account service');\n    assertFeature(canDeleteAccount, 'Delete account');\n\n    try {\n      await this.accountService.deleteAccount({ password });\n    } catch (error: unknown) {\n      const message = error instanceof Error ? error.message.toLowerCase() : '';\n\n      if (message.includes('invalid credentials')) {\n        throw new FormValidationError({ form: [i18next.t('user:account.delete_account.invalid_credentials')] });\n      }\n\n      throw new FormValidationError({ form: [i18next.t('user:account.delete_account.error')] });\n    }\n  };\n\n  getReceipt = async (transactionId: string) => {\n    assertModuleMethod(this.subscriptionService.fetchReceipt, 'fetchReceipt is not available in subscription service');\n\n    const { responseData } = await this.subscriptionService.fetchReceipt({ transactionId });\n\n    return responseData;\n  };\n\n  getAuthData = async () => {\n    return this.accountService.getAuthData();\n  };\n\n  subscribeToNotifications = async ({ uuid, onMessage }: SubscribeToNotificationsPayload) => {\n    return this.accountService.subscribeToNotifications({ uuid, onMessage });\n  };\n\n  getFeatures() {\n    return this.features;\n  }\n\n  private async afterLogin(user: Customer, customerConsents: CustomerConsent[] | null, registration = false) {\n    useAccountStore.setState({\n      user,\n      customerConsents,\n    });\n\n    await Promise.allSettled([\n      this.reloadSubscriptions(),\n      this.getPublisherConsents(),\n      // after registration, transfer the personal shelves to the account\n      registration ? this.favoritesController.persistFavorites() : this.favoritesController.restoreFavorites(),\n      registration ? this.watchHistoryController.persistWatchHistory() : this.watchHistoryController.restoreWatchHistory(),\n    ]);\n\n    useAccountStore.setState({ loading: false });\n  }\n\n  private validateInputLength = (values: { firstName: string; lastName: string }) => {\n    const errors: string[] = [];\n    if (Number(values?.firstName?.length) > 50) {\n      errors.push(i18next.t('account:validation.first_name'));\n    }\n    if (Number(values?.lastName?.length) > 50) {\n      errors.push(i18next.t('account:validation.last_name'));\n    }\n\n    return errors;\n  };\n\n  private clearLoginState = async () => {\n    useAccountStore.setState({\n      user: null,\n      subscription: null,\n      transactions: null,\n      activePayment: null,\n      customerConsents: null,\n      publisherConsents: null,\n      loading: false,\n    });\n\n    await this.favoritesController.restoreFavorites();\n    await this.watchHistoryController.restoreWatchHistory();\n  };\n}\n","import merge from 'lodash.merge';\nimport { inject, injectable } from 'inversify';\n\nimport { PersonalShelf } from '../constants';\nimport SettingsService from '../services/SettingsService';\nimport ConfigService from '../services/ConfigService';\nimport { container, getModule } from '../modules/container';\nimport StorageService from '../services/StorageService';\nimport type { Config } from '../../types/config';\nimport type { CalculateIntegrationType } from '../../types/calculate-integration-type';\nimport { DETERMINE_INTEGRATION_TYPE } from '../modules/types';\nimport { useConfigStore } from '../stores/ConfigStore';\nimport { logDebug } from '../logger';\n\nimport WatchHistoryController from './WatchHistoryController';\nimport FavoritesController from './FavoritesController';\nimport AccountController from './AccountController';\nimport AccessController from './AccessController';\n\n@injectable()\nexport default class AppController {\n  private readonly configService: ConfigService;\n  private readonly settingsService: SettingsService;\n  private readonly storageService: StorageService;\n\n  constructor(\n    @inject(ConfigService) configService: ConfigService,\n    @inject(SettingsService) settingsService: SettingsService,\n    @inject(StorageService) storageService: StorageService,\n  ) {\n    this.configService = configService;\n    this.settingsService = settingsService;\n    this.storageService = storageService;\n  }\n\n  loadAndValidateConfig = async (configSource: string | undefined) => {\n    const configLocation = this.configService.formatSourceLocation(configSource);\n    const defaultConfig = this.configService.getDefaultConfig();\n\n    if (!configLocation) {\n      useConfigStore.setState({ config: defaultConfig });\n    }\n\n    let config = await this.configService.loadConfig(configLocation);\n\n    config.id = configSource;\n    config.assets = config.assets || {};\n\n    // make sure the banner always defaults to the JWP banner when not defined in the config\n    if (!config.assets.banner) {\n      config.assets.banner = defaultConfig.assets.banner;\n    }\n\n    // Store the logo right away and set css variables so the error page will be branded\n    useConfigStore.setState((state) => merge({}, state, { config: { assets: { banner: config.assets.banner } } }));\n\n    config = await this.configService.validateConfig(config);\n    config = merge({}, defaultConfig, config);\n\n    return config;\n  };\n\n  initializeApp = async (url: string, language: string, refreshEntitlements?: () => Promise<void>) => {\n    logDebug('AppController', 'Initializing app', { url });\n\n    const settings = await this.settingsService.initialize();\n    const configSource = await this.settingsService.getConfigSource(settings, url);\n    const config = await this.loadAndValidateConfig(configSource);\n    const integrationType = this.calculateIntegrationType(config);\n\n    // update the config store\n    useConfigStore.setState({ config, loaded: true, integrationType });\n\n    // we could add the configSource to the storage prefix, but this would cause a breaking change for end users\n    // (since 'window.configId' isn't used anymore, all platforms currently use the same prefix)\n    this.storageService.initialize('jwapp');\n\n    // update settings in the config store\n    useConfigStore.setState({ settings });\n\n    // when an integration is set, we initialize the AccountController\n    if (integrationType) {\n      await getModule(AccountController).initialize(url, refreshEntitlements);\n    }\n\n    // when the apiAccessBridgeUrl is set up in the .ini file, we initialize the AccessController\n    if (settings?.apiAccessBridgeUrl) {\n      await getModule(AccessController).initialize();\n    }\n\n    if (config.features?.continueWatchingList && config.content.some((el) => el.type === PersonalShelf.ContinueWatching)) {\n      await getModule(WatchHistoryController).initialize(language);\n    }\n\n    if (config.features?.favoritesList && config.content.some((el) => el.type === PersonalShelf.Favorites)) {\n      await getModule(FavoritesController).initialize(language);\n    }\n\n    return { config, settings, configSource };\n  };\n\n  calculateIntegrationType = (config: Config) => {\n    const registerIntegrationTypes = container.getAll<CalculateIntegrationType>(DETERMINE_INTEGRATION_TYPE);\n\n    const activatedIntegrationTypes = registerIntegrationTypes.reduce((previousValue, calculateIntegrationType) => {\n      const integrationType = calculateIntegrationType(config);\n\n      return integrationType ? [...previousValue, integrationType] : previousValue;\n    }, [] as string[]);\n\n    if (activatedIntegrationTypes.length > 1) {\n      throw new Error(`Failed to initialize app, more than 1 integrations are enabled: ${activatedIntegrationTypes.join(', ')}`);\n    }\n\n    return activatedIntegrationTypes[0] || null;\n  };\n\n  getIntegrationType = (): string | null => {\n    const configState = useConfigStore.getState();\n\n    if (!configState.loaded) throw new Error('A call to `AppController#getIntegrationType()` was made before loading the config');\n\n    return configState.integrationType;\n  };\n\n  getApiAccessBridgeUrl = (): string | undefined => {\n    const configState = useConfigStore.getState();\n\n    if (!configState.loaded) throw new Error('A call to `AppController#getApiAccessBridgeUrl()` was made before loading the config');\n    return configState.settings?.apiAccessBridgeUrl || undefined;\n  };\n}\n","import type { EpgProgram } from '../../types/epg';\nimport type { PlaylistItem } from '../../types/playlist';\n\nexport default abstract class EpgService {\n  /**\n   * Fetch the schedule data for the given PlaylistItem\n   */\n  abstract fetchSchedule: (item: PlaylistItem) => Promise<unknown>;\n\n  /**\n   * Validate the given data with the schema and transform it into an EpgProgram\n   */\n  abstract transformProgram: (data: unknown) => Promise<EpgProgram>;\n}\n","import { addDays, differenceInDays } from 'date-fns';\nimport { injectable } from 'inversify';\n\nimport EpgService from '../services/EpgService';\nimport { EPG_TYPE } from '../constants';\nimport { getNamedModule } from '../modules/container';\nimport type { PlaylistItem } from '../../types/playlist';\nimport type { EpgChannel, EpgProgram } from '../../types/epg';\nimport { logDebug, logError, logWarn } from '../logger';\n\nexport const isFulfilled = <T>(input: PromiseSettledResult<T>): input is PromiseFulfilledResult<T> => {\n  if (input.status === 'fulfilled') {\n    return true;\n  }\n\n  logError('EpgController', `An error occurred resolving a promise: `, { error: input.reason });\n  return false;\n};\n\n@injectable()\nexport default class EpgController {\n  /**\n   * Update the start and end time properties of the given programs with the current date.\n   * This can be used when having a static schedule or while developing\n   */\n  private generateDemoPrograms(programs: EpgProgram[]) {\n    const today = new Date();\n    const startDate = new Date(programs[0]?.startTime);\n\n    // this makes sure that the start of the day is correct. `startOfDay(startDate)` doesn't work since it can yield\n    // a different date depending on the timezone.\n    // for example, given a startTime of `2022-08-03T23:00:00Z` will parse to `2022-08-04T01:00:00+0200` in\n    // Europe/Amsterdam (GMT+2) which makes startOfDay return `2022-08-04T00:00:00+0200`.\n    const utcStartDate = new Date(Date.UTC(startDate.getUTCFullYear(), startDate.getUTCMonth(), startDate.getUTCDate()));\n    const daysDelta = differenceInDays(today, utcStartDate);\n\n    return programs.map((program, idx) => ({\n      ...program,\n      id: `${program.id}_${idx}`,\n      startTime: addDays(new Date(program.startTime), daysDelta).toJSON(),\n      endTime: addDays(new Date(program.endTime), daysDelta).toJSON(),\n    }));\n  }\n\n  /**\n   * Ensure the given data validates to the EpgProgram schema\n   */\n  parseSchedule = async (data: unknown, item: PlaylistItem) => {\n    const demo = !!item.scheduleDemo || false;\n\n    const epgService = this.getEpgService(item);\n\n    if (!Array.isArray(data)) return [];\n\n    const transformResults = await Promise.allSettled(\n      data.map((program) =>\n        epgService\n          ?.transformProgram(program)\n          // This quiets promise resolution errors in the console\n          .catch((error) => {\n            logDebug('EpgController', 'Failed to transform a program', { error, program });\n            return undefined;\n          }),\n      ),\n    );\n\n    const programs = transformResults\n      .filter(isFulfilled)\n      .map((result) => result.value)\n      .filter((program): program is EpgProgram => !!program);\n\n    return demo ? this.generateDemoPrograms(programs) : programs;\n  };\n\n  /**\n   * Fetch and parse the EPG schedule for the given PlaylistItem.\n   * When there is no program (empty schedule) or the request fails, it returns a static program.\n   */\n  getSchedule = async (item: PlaylistItem) => {\n    const epgService = this.getEpgService(item);\n\n    const schedule = await epgService?.fetchSchedule(item);\n    const programs = await this.parseSchedule(schedule, item);\n\n    const catchupHours = item.catchupHours && parseInt(item.catchupHours);\n\n    return {\n      id: item.mediaid,\n      title: item.title,\n      description: item.description,\n      catchupHours: catchupHours || 8,\n      channelLogoImage: item.channelLogoImage,\n      backgroundImage: item.backgroundImage,\n      programs,\n    } as EpgChannel;\n  };\n\n  getEpgService = (item: PlaylistItem) => {\n    const scheduleType = item?.scheduleType?.toLocaleLowerCase() || EPG_TYPE.jwp;\n    const service = getNamedModule(EpgService, scheduleType, false);\n\n    if (!service) {\n      logWarn('EpgController', `No epg service was added for the ${scheduleType} schedule type`);\n    }\n\n    return service;\n  };\n\n  /**\n   * Get all schedules for the given PlaylistItem's\n   */\n  getSchedules = async (items: PlaylistItem[]) => {\n    return Promise.all(items.map((item) => this.getSchedule(item)));\n  };\n}\n","import { object, string } from 'yup';\nimport { parse } from 'date-fns';\nimport { injectable } from 'inversify';\n\nimport EpgService from '../EpgService';\nimport type { PlaylistItem } from '../../../types/playlist';\nimport type { EpgProgram } from '../../../types/epg';\nimport { logError, logWarn } from '../../logger';\n\nconst viewNexaEpgProgramSchema = object().shape({\n  'episode-num': object().shape({\n    '#text': string().required(),\n  }),\n  title: object().shape({\n    '#text': string().required(),\n  }),\n  desc: object().shape({\n    '#text': string(),\n  }),\n  icon: object().shape({\n    src: string(),\n  }),\n  start: string().required(),\n  stop: string().required(),\n});\n\nconst parseData = (date: string): string => parse(date, 'yyyyMdHms xxxx', new Date()).toISOString();\n\n@injectable()\nexport default class ViewNexaEpgService extends EpgService {\n  transformProgram = async (data: unknown): Promise<EpgProgram> => {\n    const program = await viewNexaEpgProgramSchema.validate(data);\n\n    return {\n      id: program['episode-num']['#text'],\n      title: program['title']['#text'],\n      startTime: parseData(program['start']),\n      endTime: parseData(program['stop']),\n      description: program?.['desc']?.['#text'],\n      cardImage: program?.['icon']?.['src'],\n      backgroundImage: program?.['icon']?.['src'],\n    };\n  };\n\n  fetchSchedule = async (item: PlaylistItem) => {\n    const { XMLParser } = await import('fast-xml-parser');\n\n    const scheduleUrl = item.scheduleUrl;\n\n    if (!scheduleUrl) {\n      logWarn('ViewNexaEpgService', 'Tried requesting a schedule for an item with missing `scheduleUrl`', { item });\n      return undefined;\n    }\n\n    const xmlParserOptions = {\n      ignoreAttributes: false,\n      attributeNamePrefix: '',\n    };\n\n    try {\n      const data = await fetch(scheduleUrl).then((res) => res.text());\n      const parser = new XMLParser(xmlParserOptions);\n      const schedule = parser.parse(data);\n\n      return schedule?.tv?.programme || [];\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        logError('ViewNexaEpgService', `Fetch failed for View Nexa EPG schedule: '${scheduleUrl}'`, { error });\n      }\n    }\n  };\n}\n","import { array, object, string } from 'yup';\nimport { isValid } from 'date-fns';\nimport { injectable } from 'inversify';\n\nimport EpgService from '../EpgService';\nimport type { PlaylistItem } from '../../../types/playlist';\nimport type { EpgProgram } from '../../../types/epg';\nimport { getDataOrThrow } from '../../utils/api';\nimport { logError, logWarn } from '../../logger';\n\nconst AUTHENTICATION_HEADER = 'API-KEY';\n\nconst jwEpgProgramSchema = object().shape({\n  id: string().required(),\n  title: string().required(),\n  startTime: string()\n    .required()\n    .test((value) => (value ? isValid(new Date(value)) : false)),\n  endTime: string()\n    .required()\n    .test((value) => (value ? isValid(new Date(value)) : false)),\n  chapterPointCustomProperties: array().of(\n    object().shape({\n      key: string().required(),\n      value: string().test('required-but-empty', 'value is required', (value: unknown) => typeof value === 'string'),\n    }),\n  ),\n});\n\n@injectable()\nexport default class JWEpgService extends EpgService {\n  transformProgram = async (data: unknown): Promise<EpgProgram> => {\n    const program = await jwEpgProgramSchema.validate(data);\n    const image = program.chapterPointCustomProperties?.find((item) => item.key === 'image')?.value || undefined;\n\n    return {\n      id: program.id,\n      title: program.title,\n      startTime: program.startTime,\n      endTime: program.endTime,\n      cardImage: image,\n      backgroundImage: image,\n      description: program.chapterPointCustomProperties?.find((item) => item.key === 'description')?.value || undefined,\n    };\n  };\n\n  fetchSchedule = async (item: PlaylistItem) => {\n    if (!item.scheduleUrl) {\n      logWarn('JWEpgService', 'Tried requesting a schedule for an item with missing `scheduleUrl`', { item });\n      return undefined;\n    }\n\n    const headers = new Headers();\n\n    // add authentication token when `scheduleToken` is defined\n    if (item.scheduleToken) {\n      headers.set(AUTHENTICATION_HEADER, item.scheduleToken);\n    }\n\n    try {\n      const response = await fetch(item.scheduleUrl, {\n        headers,\n      });\n\n      // await needed to ensure the error is caught here\n      return await getDataOrThrow(response);\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        logError('JWEpgService', `Fetch failed for EPG schedule: '${item.scheduleUrl}'`, { error });\n      }\n    }\n  };\n}\n","import type { interfaces } from 'inversify';\n\nimport AppController from '../../controllers/AppController';\n\n/**\n * Retrieves the access bridge URL from the AppController.\n * If the access bridge URL is defined in the application's .ini configuration file,\n * the function returns the URL. If the value is not defined, it returns `undefined`.\n */\nexport const getApiAccessBridgeUrl = (context: interfaces.Context) => {\n  return context.container.get(AppController).getApiAccessBridgeUrl();\n};\n","type QueueItem<T> = {\n  resolve: (data?: T) => void;\n  reject: (reason?: unknown) => void;\n};\n\n/**\n * A really simple promise queue implementation that can be used to enqueue a promise to be resolved later from within\n * the same context.\n *\n * For example, when a request needs to refresh an access token but multiple requests are called parallel (without\n * knowing from each other), a promise queue can be used to wait for the main process to be resolved.\n *\n * So the first request decides the access token needs to be refreshed and enqueues a request to the refresh endpoint.\n * The next request that is performed also sees that access token needs to be refreshed, but since the first request\n * already is performing the refresh, it is added to the promise queue and waits until the main promise is resolved\n * (or rejected).\n */\nexport class PromiseQueue<T = undefined> {\n  private queue: QueueItem<T>[] = [];\n\n  getLength() {\n    return this.queue.length;\n  }\n\n  /**\n   * Enqueues a promise and wait for the promise to be resolved (or rejected).\n   */\n  async enqueue() {\n    return new Promise<T | undefined>((resolve, reject) => {\n      this.queue.push({ resolve, reject });\n    });\n  }\n\n  /**\n   * Resolve all promises and clear the queue. Optionally pas in data confirming to the type.\n   */\n  async resolve(data?: T) {\n    const promises = this.queue.map(({ resolve }) => resolve(data));\n    this.queue = [];\n\n    // optionally wait for all promises\n    await Promise.allSettled(promises);\n  }\n\n  /**\n   * Reject all promises and clear the queue. Optionally pas in a reason.\n   */\n  async reject(reason?: unknown) {\n    const promises = this.queue.map(({ reject }) => reject(reason));\n    this.queue = [];\n\n    // optionally wait for all promises\n    await Promise.allSettled(promises);\n  }\n}\n","import { jwtDecode } from 'jwt-decode';\nimport { object, string } from 'yup';\nimport { inject, injectable, optional } from 'inversify';\n\nimport { IS_DEVELOPMENT_BUILD } from '../../../utils/common';\nimport { PromiseQueue } from '../../../utils/promiseQueue';\nimport type { AuthData } from '../../../../types/account';\nimport StorageService from '../../StorageService';\nimport { BROADCAST_CHANNEL, GET_CUSTOMER_IP } from '../../../modules/types';\nimport type { GetCustomerIP } from '../../../../types/get-customer-ip';\nimport { logDebug, logError } from '../../../logger';\nimport type { BroadcastChannel } from '../../../../types/broadcast-channel';\n\nimport type { GetLocalesResponse } from './types/account';\nimport type { Response } from './types/api';\n\nconst AUTH_PERSIST_KEY = 'auth';\n\ntype Tokens = {\n  accessToken: string;\n  refreshToken: string;\n};\n\ntype MessageAction = 'refreshing' | 'resolved' | 'rejected';\n\ntype MessageData = {\n  action: MessageAction;\n  tokens?: Tokens;\n};\n\ntype JWTPayload = {\n  exp?: number;\n};\n\ntype RequestOptions = {\n  authenticate?: boolean;\n  keepalive?: boolean;\n};\n\nconst tokensSchema = object().shape({\n  accessToken: string().required(),\n  refreshToken: string().required(),\n});\n\n/**\n * Validate the given input if it confirms to the tokenSchema\n */\nconst isValidTokens = (candidate: unknown): candidate is Tokens => {\n  return tokensSchema.isValidSync(candidate);\n};\n\n/**\n * Given an JWT, return token expiration in milliseconds. Returns -1 when the token is invalid.\n */\nconst getTokenExpiration = (token: string) => {\n  try {\n    const decodedToken: JWTPayload = jwtDecode(token);\n\n    if (typeof decodedToken.exp === 'number') {\n      return decodedToken.exp * 1000;\n    }\n  } catch (error: unknown) {\n    // failed to parse the JWT string\n  }\n\n  return -1;\n};\n\n/**\n * The AuthService is responsible for managing JWT access tokens and refresh tokens.\n *\n * Once an access token and refresh token is set, it will automatically refresh the access token when it is about to\n * expire.\n *\n * It uses a PromiseQueue to prevent multiple instances refreshing the same token which fails.\n *\n * The Broadcaster ensures that all potential browser tabs are notified about the updated token. This prevents\n * race-conditions when the user has multiple tabs open (but also very helpful while developing).\n */\n\n@injectable()\nexport default class CleengService {\n  protected readonly storageService;\n  protected readonly getCustomerIP;\n  protected readonly channel: BroadcastChannel<MessageData> | undefined;\n  protected readonly queue = new PromiseQueue();\n  protected isRefreshing = false;\n  protected expiration = -1;\n\n  sandbox = false;\n  tokens: Tokens | null = null;\n\n  constructor(\n    @inject(StorageService) storageService: StorageService,\n    @inject(GET_CUSTOMER_IP) getCustomerIP: GetCustomerIP,\n    @inject(BROADCAST_CHANNEL) @optional() channel?: BroadcastChannel<MessageData>,\n  ) {\n    this.storageService = storageService;\n    this.getCustomerIP = getCustomerIP;\n\n    this.channel = channel;\n    this.channel?.addEventListener('message', this.handleBroadcastMessage);\n  }\n\n  /**\n   * Persist the given token in the storage. Removes the token when the given token is `null`.\n   */\n  private async persistInStorage(tokens: Tokens | null) {\n    if (tokens) {\n      await this.storageService.setItem(AUTH_PERSIST_KEY, JSON.stringify(tokens));\n    } else {\n      await this.storageService.removeItem(AUTH_PERSIST_KEY);\n    }\n  }\n\n  /**\n   * The `logoutCallback` is a delegate that can be set to handle what should happen when the token is expired or not\n   * valid anymore. Since this service shouldn't care about the UI or Zustand state, a controller can use this delegate\n   * to update the UI and clear the logged in state. Alternatively, this could dispatch an event, but a delegate is\n   * easier to align with the InPlayer integration.\n   */\n  private logoutCallback?: () => Promise<void>;\n\n  /**\n   * This function does the actual refresh of the access token by calling the `refreshToken` endpoint in the Cleeng\n   * service.\n   */\n  private getNewTokens: (tokens: Tokens) => Promise<Tokens | null> = async ({ refreshToken }) => {\n    try {\n      const { responseData: newTokens } = await this.post<Response<AuthData>>('/auths/refresh_token', JSON.stringify({ refreshToken }));\n\n      return {\n        accessToken: newTokens.jwt,\n        refreshToken: newTokens.refreshToken,\n      };\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        logDebug('CleengService', 'Failed to refresh accessToken', { error });\n\n        // only logout when the token is expired or invalid, this prevents logging out users when the request failed due to a\n        // network error or for aborted requests\n        if (error.message.includes('Refresh token is expired or does not exist') || error.message.includes('Missing or invalid parameter')) {\n          if (!this.logoutCallback) {\n            logDebug('CleengService', 'logoutCallback is not set');\n          }\n          await this.logoutCallback?.();\n        }\n      }\n\n      throw error;\n    }\n  };\n\n  /**\n   * This function is called when a broadcast message is received from another browser tab (same origin)\n   */\n  private handleBroadcastMessage = async (data: MessageData) => {\n    this.isRefreshing = data.action === 'refreshing';\n\n    if (data.tokens) {\n      await this.setTokens(data.tokens);\n    }\n\n    if (data.action === 'resolved') {\n      await this.queue.resolve();\n    } else if (data.action === 'rejected') {\n      await this.queue.reject();\n    }\n  };\n\n  /**\n   * Notify other browser tabs about a change in the auth state\n   */\n  private sendBroadcastMessage = (state: MessageAction, tokens?: Tokens) => {\n    if (!this.channel) return;\n\n    const message: MessageData = {\n      action: state,\n      tokens,\n    };\n\n    this.channel.postMessage(message);\n  };\n\n  private getBaseUrl = () => (this.sandbox ? 'https://mediastore-sandbox.cleeng.com' : 'https://mediastore.cleeng.com');\n\n  private performRequest = async (path: string = '/', method = 'GET', body?: string, options: RequestOptions = {}) => {\n    try {\n      const token = options.authenticate ? await this.getAccessTokenOrThrow() : undefined;\n\n      const resp = await fetch(`${this.getBaseUrl()}${path}`, {\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          Authorization: token ? `Bearer ${token}` : '',\n        },\n        keepalive: options.keepalive,\n        method,\n        body,\n      });\n\n      return await resp.json();\n    } catch (error: unknown) {\n      return {\n        errors: Array.of(error instanceof Error ? error.message : String(error)),\n      };\n    }\n  };\n\n  /**\n   * Initialize the auth service and try to restore the session from the storage.\n   *\n   * When a valid session is found, it refreshes the access token when needed.\n   *\n   * For development builds, a small random delay is added to prevent all open tabs refreshing the same token when\n   * being fully refreshed.\n   */\n  initialize = async (sandbox: boolean, logoutCallback: () => Promise<void>) => {\n    this.sandbox = sandbox;\n    this.logoutCallback = logoutCallback;\n\n    await this.restoreTokensFromStorage();\n\n    // wait a random time to prevent refresh token race-conditions when multiple tabs are open\n    // this is only needed when dealing with a live reload environment\n    if (IS_DEVELOPMENT_BUILD) {\n      await new Promise((resolve) => setTimeout(resolve, Math.random() * 500));\n    }\n\n    await this.maybeRefreshAccessToken();\n  };\n\n  /**\n   * Set tokens and persist the tokens in the storage\n   */\n  setTokens = async (tokens: Tokens) => {\n    this.tokens = tokens;\n    this.expiration = getTokenExpiration(tokens.accessToken);\n\n    await this.persistInStorage(this.tokens);\n  };\n\n  /**\n   * Remove tokens and clear the storage\n   */\n  clearTokens = async () => {\n    this.tokens = null;\n\n    await this.persistInStorage(null);\n  };\n\n  /**\n   * Try to restore tokens from the storage and overwrite the current when they are newer.\n   */\n  restoreTokensFromStorage = async () => {\n    const tokensString = await this.storageService.getItem(AUTH_PERSIST_KEY, false);\n    let tokens;\n\n    if (typeof tokensString !== 'string') return;\n\n    try {\n      tokens = JSON.parse(tokensString);\n\n      if (!isValidTokens(tokens)) return;\n    } catch {\n      return;\n    }\n\n    const expires = getTokenExpiration(tokens.accessToken);\n\n    // verify if the token from storage is newer than the one we have in the current session\n    if (expires > this.expiration) {\n      this.tokens = tokens;\n      this.expiration = expires;\n    }\n  };\n\n  /**\n   * Returns true when the current access token is expired\n   */\n  accessTokenIsExpired = () => {\n    if (!this.tokens) return false;\n\n    return this.expiration > -1 && Date.now() - this.expiration > 0;\n  };\n\n  hasTokens = () => {\n    return !!this.tokens;\n  };\n\n  /**\n   * Don't use this method directly, but use the `maybeRefreshAccessToken` method instead.\n   * This function will fetch new tokens and updates the isRefreshing state. It also resolves or rejects the promise\n   * queue.\n   */\n  private refreshTokens = async (tokens: Tokens) => {\n    this.sendBroadcastMessage('refreshing');\n    this.isRefreshing = true;\n\n    try {\n      const newTokens = await this.getNewTokens(tokens);\n\n      if (newTokens) {\n        await this.setTokens(newTokens);\n        this.isRefreshing = false;\n        this.sendBroadcastMessage('resolved', newTokens);\n        await this.queue.resolve();\n\n        return;\n      }\n    } catch (error: unknown) {\n      logDebug('CleengService', 'Failed to refresh tokens', { error });\n    }\n\n    // if we are here, we didn't receive new tokens\n    await this.clearTokens();\n    this.isRefreshing = false;\n    this.sendBroadcastMessage('rejected');\n    await this.queue.reject();\n  };\n\n  /**\n   * Use this function ensure that the access token is not expired. If the current token is expired, it will request\n   * new tokens. When another session is already refreshing the tokens it will wait in queue instead and use the same\n   * results.\n   */\n  maybeRefreshAccessToken = async () => {\n    try {\n      // token is already refreshing, let's wait for it\n      if (this.isRefreshing) {\n        logDebug('CleengService', 'Token is already refreshing, waiting in queue...');\n        return await this.queue.enqueue();\n      }\n\n      // token is not expired or there is no session\n      if (!this.accessTokenIsExpired() || !this.tokens) {\n        return;\n      }\n\n      await this.refreshTokens(this.tokens);\n    } catch (error: unknown) {\n      logError('CleengService', 'Error caught while refreshing the access token', { error });\n    }\n  };\n\n  /**\n   * Get access optional token\n   */\n  getAccessToken = async () => {\n    await this.maybeRefreshAccessToken();\n\n    // fallback to always \"syncing\" the tokens from storage in case the broadcast channel isn't supported\n    await this.restoreTokensFromStorage();\n\n    return this.tokens?.accessToken;\n  };\n\n  /**\n   * Get access token or throw an error\n   */\n  getAccessTokenOrThrow = async () => {\n    const accessToken = await this.getAccessToken();\n\n    if (!accessToken) {\n      throw new Error('Access token is missing');\n    }\n\n    return accessToken;\n  };\n\n  getLocales = async () => {\n    const customerIP = await this.getCustomerIP();\n\n    return this.get<GetLocalesResponse>(`/locales${customerIP ? '?customerIP=' + customerIP : ''}`);\n  };\n\n  get = <T>(path: string, options?: RequestOptions) => this.performRequest(path, 'GET', undefined, options) as Promise<T>;\n\n  patch = <T>(path: string, body?: string, options?: RequestOptions) => this.performRequest(path, 'PATCH', body, options) as Promise<T>;\n\n  put = <T>(path: string, body?: string, options?: RequestOptions) => this.performRequest(path, 'PUT', body, options) as Promise<T>;\n\n  post = <T>(path: string, body?: string, options?: RequestOptions) => this.performRequest(path, 'POST', body, options) as Promise<T>;\n\n  remove = <T>(path: string, options?: RequestOptions) => this.performRequest(path, 'DELETE', undefined, options) as Promise<T>;\n}\n","import type { CleengCustomer } from '../types/models';\nimport type { Customer } from '../../../../../types/account';\n\nexport const formatCustomer = (customer: CleengCustomer): Customer => {\n  return {\n    id: customer.id,\n    email: customer.email,\n    country: customer.country,\n    firstName: customer.firstName,\n    lastName: customer.lastName,\n    fullName: `${customer.firstName} ${customer.lastName}`,\n    // map `externalData` to `metadata` (NOTE; The Cleeng API returns parsed values)\n    metadata: customer.externalData || {},\n  };\n};\n","import type { PublisherConsent } from '../types/models';\nimport type { CustomFormField } from '../../../../../types/account';\n\nexport const formatPublisherConsent = (consent: PublisherConsent): CustomFormField => {\n  return {\n    type: 'checkbox',\n    name: consent.name,\n    label: consent.label,\n    defaultValue: '',\n    required: consent.required,\n    placeholder: consent.placeholder,\n    options: {},\n    enabledByDefault: false,\n    version: consent.version,\n  };\n};\n","import { jwtDecode } from 'jwt-decode';\nimport { inject, injectable } from 'inversify';\n\nimport type { AccessModel, Config } from '../../../../types/config';\nimport type {\n  AuthData,\n  ChangePassword,\n  ChangePasswordWithOldPassword,\n  GetCaptureStatus,\n  GetCaptureStatusResponse,\n  GetCustomerConsents,\n  GetPublisherConsents,\n  JwtDetails,\n  Login,\n  LoginPayload,\n  NotificationsData,\n  Register,\n  RegisterPayload,\n  ResetPassword,\n  UpdateCaptureAnswers,\n  UpdateCaptureAnswersPayload,\n  UpdateCustomer,\n  UpdateCustomerConsents,\n  UpdateCustomerConsentsPayload,\n  UpdateCustomerPayload,\n  UpdateFavorites,\n  UpdateWatchHistory,\n} from '../../../../types/account';\nimport AccountService from '../AccountService';\nimport { GET_CUSTOMER_IP } from '../../../modules/types';\nimport type { GetCustomerIP } from '../../../../types/get-customer-ip';\nimport { ACCESS_MODEL } from '../../../constants';\nimport type { ServiceResponse } from '../../../../types/service';\nimport type { SerializedWatchHistoryItem } from '../../../../types/watchHistory';\nimport type { SerializedFavorite } from '../../../../types/favorite';\n\nimport CleengService from './CleengService';\nimport type {\n  GetCustomerResponse,\n  GetCustomerConsentsResponse,\n  GetPublisherConsentsResponse,\n  UpdateConsentsResponse,\n  UpdateCustomerResponse,\n  AuthResponse,\n} from './types/account';\nimport { formatCustomer } from './formatters/customer';\nimport { formatPublisherConsent } from './formatters/consents';\nimport type { Response } from './types/api';\n\n@injectable()\nexport default class CleengAccountService extends AccountService {\n  protected readonly cleengService;\n  protected readonly getCustomerIP;\n  protected publisherId = '';\n\n  protected externalData: Record<string, unknown> = {};\n\n  accessModel: AccessModel = ACCESS_MODEL.AUTHVOD;\n  svodOfferIds: string[] = [];\n  sandbox = false;\n\n  constructor(@inject(CleengService) cleengService: CleengService, @inject(GET_CUSTOMER_IP) getCustomerIP: GetCustomerIP) {\n    super({\n      canUpdateEmail: true,\n      canSupportEmptyFullName: true,\n      canChangePasswordWithOldPassword: false,\n      canRenewSubscription: true,\n      canExportAccountData: false,\n      canDeleteAccount: false,\n      canUpdatePaymentMethod: true,\n      canShowReceipts: false,\n      hasSocialURLs: false,\n      hasNotifications: false,\n      // The 'externalData' attribute of Cleeng can contain max 4000 characters\n      watchListSizeLimit: 48,\n    });\n\n    this.cleengService = cleengService;\n    this.getCustomerIP = getCustomerIP;\n  }\n\n  private handleErrors = (errors: string[]) => {\n    if (errors.length > 0) {\n      throw new Error(errors[0]);\n    }\n  };\n\n  private getCustomerIdFromAuthData = (auth: AuthData) => {\n    const decodedToken: JwtDetails = jwtDecode(auth.jwt);\n    return decodedToken.customerId;\n  };\n\n  private getCustomer = async ({ customerId }: { customerId: string }) => {\n    const { responseData, errors } = await this.cleengService.get<GetCustomerResponse>(`/customers/${customerId}`, {\n      authenticate: true,\n    });\n\n    this.handleErrors(errors);\n    this.externalData = responseData.externalData || {};\n\n    return formatCustomer(responseData);\n  };\n\n  private getLocales = async () => {\n    return this.cleengService.getLocales();\n  };\n\n  initialize = async (config: Config, _url: string, logoutCallback: () => Promise<void>) => {\n    const cleengConfig = config?.integrations?.cleeng;\n\n    if (!cleengConfig?.id) {\n      throw new Error('Failed to initialize Cleeng integration. The publisherId is missing.');\n    }\n\n    // set accessModel and publisherId\n    this.publisherId = cleengConfig.id;\n    this.accessModel = cleengConfig.monthlyOffer || cleengConfig.yearlyOffer ? ACCESS_MODEL.SVOD : ACCESS_MODEL.AUTHVOD;\n    this.svodOfferIds = [cleengConfig?.monthlyOffer, cleengConfig?.yearlyOffer].filter(Boolean).map(String);\n\n    // initialize the Cleeng service\n    this.sandbox = !!cleengConfig.useSandbox;\n    await this.cleengService.initialize(this.sandbox, logoutCallback);\n  };\n\n  getAuthData = async () => {\n    if (this.cleengService.tokens) {\n      return {\n        jwt: this.cleengService.tokens.accessToken,\n        refreshToken: this.cleengService.tokens.refreshToken,\n      } as AuthData;\n    }\n\n    return null;\n  };\n\n  getCustomerConsents: GetCustomerConsents = async (payload) => {\n    const { customer } = payload;\n    const response = await this.cleengService.get<GetCustomerConsentsResponse>(`/customers/${customer?.id}/consents`, {\n      authenticate: true,\n    });\n    this.handleErrors(response.errors);\n\n    return response?.responseData?.consents || [];\n  };\n\n  updateCustomerConsents: UpdateCustomerConsents = async (payload) => {\n    const { customer } = payload;\n\n    const params: UpdateCustomerConsentsPayload = {\n      id: customer.id,\n      consents: payload.consents,\n    };\n\n    const response = await this.cleengService.put<UpdateConsentsResponse>(`/customers/${customer?.id}/consents`, JSON.stringify(params), {\n      authenticate: true,\n    });\n    this.handleErrors(response.errors);\n\n    return await this.getCustomerConsents(payload);\n  };\n\n  login: Login = async ({ email, password }) => {\n    const payload: LoginPayload = {\n      email,\n      password,\n      publisherId: this.publisherId,\n      customerIP: await this.getCustomerIP(),\n    };\n\n    const { responseData: auth, errors } = await this.cleengService.post<AuthResponse>('/auths', JSON.stringify(payload));\n    this.handleErrors(errors);\n\n    await this.cleengService.setTokens({ accessToken: auth.jwt, refreshToken: auth.refreshToken });\n\n    const { user, customerConsents } = await this.getUser();\n\n    return {\n      user,\n      auth,\n      customerConsents,\n    };\n  };\n\n  register: Register = async ({ email, password, consents, captchaValue }) => {\n    const localesResponse = await this.getLocales();\n\n    this.handleErrors(localesResponse.errors);\n\n    const payload: RegisterPayload = {\n      email,\n      password,\n      locale: localesResponse.responseData.locale,\n      country: localesResponse.responseData.country,\n      currency: localesResponse.responseData.currency,\n      publisherId: this.publisherId,\n      customerIP: await this.getCustomerIP(),\n      captchaValue,\n    };\n\n    const { responseData: auth, errors }: ServiceResponse<AuthData> = await this.cleengService.post('/customers', JSON.stringify(payload));\n    this.handleErrors(errors);\n\n    await this.cleengService.setTokens({ accessToken: auth.jwt, refreshToken: auth.refreshToken });\n\n    const { user } = await this.getUser();\n\n    const customerConsents = await this.updateCustomerConsents({ consents, customer: user }).catch(() => {\n      // error caught while updating the consents, but continue the registration process\n      return [];\n    });\n\n    return {\n      user,\n      auth,\n      customerConsents,\n    };\n  };\n\n  logout = async () => {\n    // clear the persisted access tokens\n    await this.cleengService.clearTokens();\n  };\n\n  getUser = async () => {\n    const authData = await this.getAuthData();\n\n    if (!authData) throw new Error('Not logged in');\n\n    const customerId = this.getCustomerIdFromAuthData(authData);\n    const user = await this.getCustomer({ customerId });\n    const consents = await this.getCustomerConsents({ customer: user });\n\n    return {\n      user,\n      customerConsents: consents,\n    };\n  };\n\n  getPublisherConsents: GetPublisherConsents = async () => {\n    const response = await this.cleengService.get<GetPublisherConsentsResponse>(`/publishers/${this.publisherId}/consents`);\n\n    this.handleErrors(response.errors);\n\n    return (response.responseData?.consents || []).map(formatPublisherConsent);\n  };\n\n  getCaptureStatus: GetCaptureStatus = async ({ customer }) => {\n    const response: ServiceResponse<GetCaptureStatusResponse> = await this.cleengService.get(`/customers/${customer?.id}/capture/status`, {\n      authenticate: true,\n    });\n\n    this.handleErrors(response.errors);\n\n    return response.responseData;\n  };\n\n  updateCaptureAnswers: UpdateCaptureAnswers = async ({ customer, ...payload }) => {\n    const params: UpdateCaptureAnswersPayload = {\n      customerId: customer.id,\n      ...payload,\n    };\n\n    const response = await this.cleengService.put<UpdateConsentsResponse>(`/customers/${customer.id}/capture`, JSON.stringify(params), {\n      authenticate: true,\n    });\n    this.handleErrors(response.errors);\n\n    return this.getCustomer({ customerId: customer.id });\n  };\n\n  resetPassword: ResetPassword = async (payload) => {\n    const response = await this.cleengService.put<Response<unknown>>(\n      '/customers/passwords',\n      JSON.stringify({\n        ...payload,\n        publisherId: this.publisherId,\n      }),\n    );\n\n    this.handleErrors(response.errors);\n  };\n\n  changePasswordWithResetToken: ChangePassword = async (payload) => {\n    const response = await this.cleengService.patch<Response<unknown>>(\n      '/customers/passwords',\n      JSON.stringify({\n        ...payload,\n        publisherId: this.publisherId,\n      }),\n    );\n\n    this.handleErrors(response.errors);\n  };\n\n  changePasswordWithOldPassword: ChangePasswordWithOldPassword = async () => {\n    // Cleeng doesn't support this feature\n  };\n\n  updateCustomer: UpdateCustomer = async (payload) => {\n    const { id, metadata, fullName, ...rest } = payload;\n    const params: UpdateCustomerPayload = {\n      id,\n      ...rest,\n    };\n\n    // enable keepalive to ensure data is persisted when closing the browser/tab\n    const { responseData, errors } = await this.cleengService.patch<UpdateCustomerResponse>(`/customers/${id}`, JSON.stringify(params), {\n      authenticate: true,\n      keepalive: true,\n    });\n\n    this.handleErrors(errors);\n    this.externalData = responseData.externalData || {};\n\n    return formatCustomer(responseData);\n  };\n\n  updateWatchHistory: UpdateWatchHistory = async ({ user, history }) => {\n    const payload = { id: user.id, externalData: { ...this.externalData, history } };\n    const { errors, responseData } = await this.cleengService.patch<UpdateCustomerResponse>(`/customers/${user.id}`, JSON.stringify(payload), {\n      authenticate: true,\n      keepalive: true,\n    });\n\n    this.handleErrors(errors);\n    this.externalData = responseData.externalData || {};\n  };\n\n  updateFavorites: UpdateFavorites = async ({ user, favorites }) => {\n    const payload = { id: user.id, externalData: { ...this.externalData, favorites } };\n    const { errors, responseData } = await this.cleengService.patch<UpdateCustomerResponse>(`/customers/${user.id}`, JSON.stringify(payload), {\n      authenticate: true,\n      keepalive: true,\n    });\n\n    this.handleErrors(errors);\n    this.externalData = responseData.externalData || {};\n  };\n\n  getWatchHistory = async () => {\n    return (this.externalData['history'] || []) as SerializedWatchHistoryItem[];\n  };\n\n  getFavorites = async () => {\n    return (this.externalData['favorites'] || []) as SerializedFavorite[];\n  };\n\n  subscribeToNotifications: NotificationsData = async () => {\n    return false;\n  };\n\n  getSocialUrls: undefined;\n\n  exportAccountData: undefined;\n\n  deleteAccount: undefined;\n}\n","import { inject, injectable } from 'inversify';\n\nimport type {\n  AddAdyenPaymentDetails,\n  CreateOrder,\n  CreateOrderPayload,\n  DeletePaymentMethod,\n  FinalizeAdyenPaymentDetails,\n  GetAdyenPaymentSession,\n  GetEntitlements,\n  GetFinalizeAdyenPayment,\n  GetInitialAdyenPayment,\n  GetOffer,\n  GetOffers,\n  GetOrder,\n  GetPaymentMethods,\n  GetSubscriptionSwitch,\n  GetSubscriptionSwitches,\n  PaymentWithoutDetails,\n  PaymentWithPayPal,\n  SwitchSubscription,\n  UpdateOrder,\n  UpdateOrderResponse,\n  UpdatePaymentWithPayPal,\n} from '../../../../types/checkout';\nimport CheckoutService from '../CheckoutService';\nimport { GET_CUSTOMER_IP } from '../../../modules/types';\nimport type { GetCustomerIP } from '../../../../types/get-customer-ip';\nimport type { ServiceResponse } from '../../../../types/service';\n\nimport CleengService from './CleengService';\n\n@injectable()\nexport default class CleengCheckoutService extends CheckoutService {\n  protected readonly cleengService: CleengService;\n  protected readonly getCustomerIP: GetCustomerIP;\n\n  constructor(@inject(CleengService) cleengService: CleengService, @inject(GET_CUSTOMER_IP) getCustomerIP: GetCustomerIP) {\n    super();\n    this.cleengService = cleengService;\n    this.getCustomerIP = getCustomerIP;\n  }\n\n  getOffers: GetOffers = async (payload) => {\n    return await Promise.all(\n      payload.offerIds.map(async (offerId) => {\n        const response = await this.getOffer({ offerId: String(offerId) });\n\n        if (response.errors.length > 0) {\n          throw new Error(response.errors[0]);\n        }\n\n        return response.responseData;\n      }),\n    );\n  };\n\n  getOffer: GetOffer = async (payload) => {\n    const customerIP = await this.getCustomerIP();\n\n    return this.cleengService.get(`/offers/${payload.offerId}${customerIP ? '?customerIP=' + customerIP : ''}`);\n  };\n\n  createOrder: CreateOrder = async (payload) => {\n    const locales = await this.cleengService.getLocales();\n\n    if (locales.errors.length > 0) throw new Error(locales.errors[0]);\n\n    const customerIP = locales.responseData.ipAddress;\n\n    const createOrderPayload: CreateOrderPayload = {\n      offerId: payload.offer.offerId,\n      customerId: payload.customerId,\n      country: payload.country,\n      currency: locales?.responseData?.currency || 'EUR',\n      customerIP,\n      paymentMethodId: payload.paymentMethodId,\n    };\n\n    return this.cleengService.post('/orders', JSON.stringify(createOrderPayload), { authenticate: true });\n  };\n\n  getOrder: GetOrder = async ({ orderId }) => {\n    return this.cleengService.get(`/orders/${orderId}`, { authenticate: true });\n  };\n\n  updateOrder: UpdateOrder = async ({ order, ...payload }) => {\n    const response = await this.cleengService.patch<ServiceResponse<UpdateOrderResponse>>(`/orders/${order.id}`, JSON.stringify(payload), {\n      authenticate: true,\n    });\n\n    if (response.errors.length) {\n      if (response.errors[0].includes(`Order with ${order.id} not found`)) {\n        throw new Error('Order not found');\n      }\n\n      if (response.errors[0].includes(`Coupon ${payload.couponCode} not found`)) {\n        throw new Error('Invalid coupon code');\n      }\n\n      if (response.errors[0].includes(`Coupon ${payload.couponCode} cannot be applied on this offer`)) {\n        throw new Error('Invalid coupon code for this offer');\n      }\n    }\n\n    return response;\n  };\n\n  getPaymentMethods: GetPaymentMethods = async () => {\n    return this.cleengService.get('/payment-methods', { authenticate: true });\n  };\n\n  paymentWithoutDetails: PaymentWithoutDetails = async (payload) => {\n    return this.cleengService.post('/payments', JSON.stringify(payload), { authenticate: true });\n  };\n\n  paymentWithPayPal: PaymentWithPayPal = async (payload) => {\n    const { order, successUrl, cancelUrl, errorUrl, captchaValue } = payload;\n\n    const paypalPayload = {\n      orderId: order.id,\n      successUrl,\n      cancelUrl,\n      errorUrl,\n      captchaValue,\n    };\n\n    return this.cleengService.post('/connectors/paypal/v1/tokens', JSON.stringify(paypalPayload), { authenticate: true });\n  };\n\n  getSubscriptionSwitches: GetSubscriptionSwitches = async (payload) => {\n    return this.cleengService.get(`/customers/${payload.customerId}/subscription_switches/${payload.offerId}/availability`, { authenticate: true });\n  };\n\n  getSubscriptionSwitch: GetSubscriptionSwitch = async (payload) => {\n    return this.cleengService.get(`/subscription_switches/${payload.switchId}`, { authenticate: true });\n  };\n\n  switchSubscription: SwitchSubscription = async (payload) => {\n    return this.cleengService.post(\n      `/customers/${payload.customerId}/subscription_switches/${payload.offerId}`,\n      JSON.stringify({ toOfferId: payload.toOfferId, switchDirection: payload.switchDirection }),\n      { authenticate: true },\n    );\n  };\n\n  getEntitlements: GetEntitlements = async (payload) => {\n    return this.cleengService.get(`/entitlements/${payload.offerId}`, { authenticate: true });\n  };\n\n  createAdyenPaymentSession: GetAdyenPaymentSession = async (payload) => {\n    return await this.cleengService.post('/connectors/adyen/sessions', JSON.stringify(payload), { authenticate: true });\n  };\n\n  initialAdyenPayment: GetInitialAdyenPayment = async (payload) =>\n    this.cleengService.post(\n      '/connectors/adyen/initial-payment',\n      JSON.stringify({ ...payload, attemptAuthentication: this.cleengService.sandbox ? 'always' : undefined }),\n      { authenticate: true },\n    );\n\n  finalizeAdyenPayment: GetFinalizeAdyenPayment = async (payload) =>\n    this.cleengService.post('/connectors/adyen/initial-payment/finalize', JSON.stringify(payload), { authenticate: true });\n\n  updatePaymentMethodWithPayPal: UpdatePaymentWithPayPal = async (payload) => {\n    return this.cleengService.post('/connectors/paypal/v1/payment_details/tokens', JSON.stringify(payload), { authenticate: true });\n  };\n\n  deletePaymentMethod: DeletePaymentMethod = async (payload) => {\n    return this.cleengService.remove(`/payment_details/${payload.paymentDetailsId}`, { authenticate: true });\n  };\n\n  addAdyenPaymentDetails: AddAdyenPaymentDetails = async (payload) =>\n    this.cleengService.post(\n      '/connectors/adyen/payment-details',\n      JSON.stringify({\n        ...payload,\n        attemptAuthentication: this.cleengService.sandbox ? 'always' : undefined,\n      }),\n      { authenticate: true },\n    );\n\n  finalizeAdyenPaymentDetails: FinalizeAdyenPaymentDetails = async (payload) =>\n    this.cleengService.post('/connectors/adyen/payment-details/finalize', JSON.stringify(payload), { authenticate: true });\n\n  directPostCardPayment = async () => false;\n}\n","import { inject, injectable } from 'inversify';\n\nimport { createURL } from '../../../utils/urlFormatting';\nimport type {\n  FetchReceipt,\n  GetActivePayment,\n  GetActiveSubscription,\n  GetAllTransactions,\n  GetPaymentDetails,\n  GetSubscriptions,\n  GetTransactions,\n  UpdateSubscription,\n} from '../../../../types/subscription';\nimport SubscriptionService from '../SubscriptionService';\n\nimport CleengService from './CleengService';\n\n@injectable()\nexport default class CleengSubscriptionService extends SubscriptionService {\n  protected readonly cleengService: CleengService;\n\n  constructor(@inject(CleengService) cleengService: CleengService) {\n    super();\n    this.cleengService = cleengService;\n  }\n\n  getActiveSubscription: GetActiveSubscription = async ({ customerId }) => {\n    const response = await this.getSubscriptions({ customerId });\n\n    if (response.errors.length > 0) return null;\n\n    return response.responseData.items.find((item) => item.status === 'active' || item.status === 'cancelled') || null;\n  };\n\n  getAllTransactions: GetAllTransactions = async ({ customerId }) => {\n    const response = await this.getTransactions({ customerId });\n\n    if (response.errors.length > 0) return null;\n\n    return response.responseData.items;\n  };\n\n  getActivePayment: GetActivePayment = async ({ customerId }) => {\n    const response = await this.getPaymentDetails({ customerId });\n\n    if (response.errors.length > 0) return null;\n\n    return response.responseData.paymentDetails.find((paymentDetails) => paymentDetails.active) || null;\n  };\n\n  getSubscriptions: GetSubscriptions = async (payload) => {\n    return this.cleengService.get(`/customers/${payload.customerId}/subscriptions`, { authenticate: true });\n  };\n\n  updateSubscription: UpdateSubscription = async (payload) => {\n    return this.cleengService.patch(`/customers/${payload.customerId}/subscriptions`, JSON.stringify(payload), { authenticate: true });\n  };\n\n  getPaymentDetails: GetPaymentDetails = async (payload) => {\n    return this.cleengService.get(`/customers/${payload.customerId}/payment_details`, { authenticate: true });\n  };\n\n  getTransactions: GetTransactions = async ({ customerId, limit, offset }) => {\n    return this.cleengService.get(createURL(`/customers/${customerId}/transactions`, { limit, offset }), { authenticate: true });\n  };\n\n  fetchReceipt: FetchReceipt = async ({ transactionId }) => {\n    return this.cleengService.get(`/receipt/${transactionId}`, { authenticate: true });\n  };\n\n  updateCardDetails: undefined;\n\n  changeSubscription: undefined;\n}\n","import type { CustomFormField, CustomerConsent } from '../../types/account';\nimport type { Config } from '../../types/config';\nimport type { GenericFormValues } from '../../types/form';\nimport type { Playlist, PlaylistItem } from '../../types/playlist';\nimport { CARD_ASPECT_RATIOS } from '../constants';\n\nexport type PosterAspectRatio = (typeof CARD_ASPECT_RATIOS)[number];\n\nconst getFiltersFromConfig = (config: Config, playlistId: string | undefined): string[] => {\n  const menuItem = config.menu.find((item) => item.contentId === playlistId);\n  const filters = menuItem?.filterTags?.split(',').filter(Boolean);\n\n  return filters || [];\n};\n\nconst filterPlaylist = (playlist: Playlist, filter: string) => {\n  if (filter === '') return playlist;\n\n  return {\n    ...playlist,\n    playlist: playlist.playlist.filter(({ tags }) => (tags ? tags.split(',').includes(filter) : false)),\n  };\n};\n\nconst chunk = <T>(input: T[], size: number) => {\n  return input?.reduce((arr: T[][], item, idx: number) => {\n    return idx % size === 0 ? [...arr, [item]] : [...arr.slice(0, -1), [...arr.slice(-1)[0], item]];\n  }, []);\n};\n\nconst findPlaylistImageForWidth = (playlistItem: PlaylistItem, width: number): string =>\n  playlistItem.images.find((img) => img.width === width)?.src || playlistItem.image;\n\nconst generatePlaylistPlaceholder = (playlistLength: number = 15): Playlist => ({\n  title: '',\n  playlist: new Array(playlistLength).fill({}).map(\n    (_value, index) =>\n      ({\n        description: '',\n        duration: 0,\n        feedid: '',\n        image: '',\n        images: [],\n        cardImage: '',\n        backgroundImage: '',\n        channelLogoImage: '',\n        link: '',\n        genre: '',\n        mediaid: `placeholder_${index}`,\n        pubdate: 0,\n        rating: '',\n        sources: [],\n        tags: '',\n        title: '',\n        tracks: [],\n      } as PlaylistItem),\n  ),\n});\n\nconst formatConsentValues = (publisherConsents: CustomFormField[] | null = [], customerConsents: CustomerConsent[] | null = []) => {\n  if (!publisherConsents || !customerConsents) {\n    return {};\n  }\n\n  const values = publisherConsents?.reduce((acc, publisherConsent) => {\n    const consent = customerConsents?.find((customerConsent) => customerConsent.name === publisherConsent.name);\n\n    if (consent) {\n      const value = publisherConsent.isCustomRegisterField ? consent.value ?? '' : consent.state === 'accepted';\n      acc[publisherConsent.name] = value;\n    }\n\n    return acc;\n  }, {} as Record<string, string | boolean>);\n\n  return values;\n};\n\nconst formatConsents = (publisherConsents: CustomFormField[] | null = [], customerConsents: CustomerConsent[] | null = []) => {\n  if (!publisherConsents || !customerConsents) {\n    return {};\n  }\n  const values: Record<string, boolean> = {};\n  publisherConsents?.forEach((publisherConsent) => {\n    if (customerConsents?.find((customerConsent) => customerConsent.name === publisherConsent.name && customerConsent.state === 'accepted')) {\n      values[publisherConsent.name] = true;\n    }\n  });\n\n  return values;\n};\n\nconst extractConsentValues = (consents?: CustomFormField[]) => {\n  const values: Record<string, string | boolean> = {};\n\n  if (!consents) {\n    return values;\n  }\n\n  consents?.forEach((consent) => {\n    values[consent.name] = consent.type === 'checkbox' ? consent.enabledByDefault === true : consent.defaultValue ?? '';\n  });\n\n  return values;\n};\n\nconst formatConsentsFromValues = (publisherConsents: CustomFormField[] | null, values?: GenericFormValues) => {\n  const consents: CustomerConsent[] = [];\n\n  if (!publisherConsents || !values) return consents;\n\n  publisherConsents.forEach((consent) => {\n    consents.push({\n      name: consent.name,\n      version: consent.version,\n      state: values[consent.name] ? 'accepted' : 'declined',\n      value: values[consent.name] ?? '',\n    });\n  });\n\n  return consents;\n};\n\nconst checkConsentsFromValues = (publisherConsents: CustomFormField[], consents: Record<string, string | boolean>) => {\n  const customerConsents: CustomerConsent[] = [];\n  const consentsErrors: string[] = [];\n\n  if (!publisherConsents || !consents) return { customerConsents, consentsErrors };\n\n  publisherConsents.forEach((consent) => {\n    if (consent.required && !consents[consent.name]) {\n      consentsErrors.push(consent.name);\n    }\n\n    customerConsents.push({\n      name: consent.name,\n      version: consent.version,\n      state: consents[consent.name] ? 'accepted' : 'declined',\n      value: consents[consent.name] ?? '',\n    });\n  });\n\n  return { customerConsents, consentsErrors };\n};\n\nconst isNotEmptyConsent = (consent: CustomerConsent) => consent.value !== '';\n\nconst formatConsentToRegisterField = ({ name, value = '' }: CustomerConsent, _: number, collection: CustomerConsent[]) => {\n  const val = (() => {\n    if (name === 'us_state') {\n      if (collection.find(({ name, value }) => name === 'country' && value === 'us')) {\n        return value === 'n/a' ? '' : value;\n      }\n\n      return 'n/a';\n    }\n\n    const isBoolean = value === true || value === false;\n\n    if (isBoolean && name !== 'terms') {\n      return value ? 'on' : 'off';\n    }\n\n    return value;\n  })();\n\n  return [name, val] as const;\n};\n\nconst formatConsentsToRegisterFields = (consents: CustomerConsent[]) =>\n  Object.fromEntries(consents.filter(isNotEmptyConsent).map(formatConsentToRegisterField));\n\nconst deepCopy = (obj: unknown) => {\n  if (Array.isArray(obj) || (typeof obj === 'object' && obj !== null)) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n  return obj;\n};\n\nconst parseAspectRatio = (input: unknown) => {\n  if (typeof input === 'string' && (CARD_ASPECT_RATIOS as readonly string[]).includes(input)) return input as PosterAspectRatio;\n};\n\nconst parseTilesDelta = (posterAspect?: PosterAspectRatio) => {\n  if (!posterAspect) {\n    return 0;\n  }\n\n  const parts = posterAspect.split(':');\n\n  return parts.length === 2 ? Math.floor(parseInt(parts[1]) / parseInt(parts[0])) : 0;\n};\n\nexport {\n  getFiltersFromConfig,\n  filterPlaylist,\n  chunk,\n  findPlaylistImageForWidth,\n  generatePlaylistPlaceholder,\n  formatConsentValues,\n  formatConsents,\n  formatConsentsFromValues,\n  extractConsentValues,\n  checkConsentsFromValues,\n  deepCopy,\n  parseAspectRatio,\n  parseTilesDelta,\n  isNotEmptyConsent,\n  formatConsentToRegisterField,\n  formatConsentsToRegisterFields,\n};\n","import InPlayer, { Env } from '@inplayer-org/inplayer.js';\nimport i18next from 'i18next';\nimport { inject, injectable } from 'inversify';\n\nimport { formatConsentsToRegisterFields } from '../../../utils/collection';\nimport type {\n  AuthData,\n  ChangePassword,\n  ChangePasswordWithOldPassword,\n  CustomFormField,\n  Customer,\n  CustomerConsent,\n  CustomRegisterFieldVariant,\n  DeleteAccount,\n  ExportAccountData,\n  GetCaptureStatus,\n  GetCustomerConsents,\n  GetPublisherConsents,\n  Login,\n  NotificationsData,\n  Register,\n  ResetPassword,\n  GetSocialURLs,\n  UpdateCaptureAnswers,\n  UpdateCustomerArgs,\n  UpdateCustomerConsents,\n  UpdateFavorites,\n  UpdateWatchHistory,\n  UpdateCustomer,\n} from '../../../../types/account';\nimport type { AccessModel, Config } from '../../../../types/config';\nimport type { SerializedFavorite } from '../../../../types/favorite';\nimport type { SerializedWatchHistoryItem } from '../../../../types/watchHistory';\nimport AccountService from '../AccountService';\nimport StorageService from '../../StorageService';\nimport { ACCESS_MODEL } from '../../../constants';\n\nimport type {\n  JWPAuthData,\n  GetRegisterFieldsResponse,\n  RegisterField,\n  CreateAccount,\n  AccountData,\n  CommonResponse,\n  GetWatchHistoryResponse,\n  WatchHistory,\n  FavoritesData,\n  GetFavoritesResponse,\n  ListSocialURLs,\n} from './types';\nimport JWPAPIService from './JWPAPIService';\n\nenum InPlayerEnv {\n  Development = 'development',\n  Production = 'production',\n  Daily = 'daily',\n}\n\nconst JW_TERMS_URL = 'https://inplayer.com/legal/terms';\n\n@injectable()\nexport default class JWPAccountService extends AccountService {\n  protected readonly storageService;\n  protected readonly apiService;\n\n  protected clientId = '';\n\n  accessModel: AccessModel = ACCESS_MODEL.AUTHVOD;\n  assetId: number | null = null;\n  svodOfferIds: string[] = [];\n  sandbox = false;\n\n  constructor(@inject(StorageService) storageService: StorageService, @inject(JWPAPIService) apiService: JWPAPIService) {\n    super({\n      canUpdateEmail: false,\n      canSupportEmptyFullName: false,\n      canChangePasswordWithOldPassword: true,\n      canRenewSubscription: false,\n      canExportAccountData: true,\n      canUpdatePaymentMethod: false,\n      canShowReceipts: true,\n      canDeleteAccount: true,\n      hasNotifications: true,\n      hasSocialURLs: true,\n      // Limit of media_ids length passed to the /apps/watchlists endpoint\n      watchListSizeLimit: 48,\n    });\n\n    this.storageService = storageService;\n    this.apiService = apiService;\n  }\n\n  private parseJson = (value: string, fallback = {}) => {\n    try {\n      return JSON.parse(value);\n    } catch {\n      return fallback;\n    }\n  };\n\n  private formatFavorite = (favorite: FavoritesData): SerializedFavorite => {\n    return {\n      mediaid: favorite.media_id,\n    };\n  };\n\n  private formatHistoryItem = (history: WatchHistory): SerializedWatchHistoryItem => {\n    return {\n      mediaid: history.media_id,\n      progress: history.progress,\n    };\n  };\n\n  private formatAccount = (account: AccountData): Customer => {\n    const { id, uuid, email, full_name: fullName, metadata, created_at: createdAt } = account;\n    const regDate = new Date(createdAt * 1000).toLocaleString();\n\n    const firstName = metadata?.first_name as string;\n    const lastName = metadata?.surname as string;\n\n    return {\n      id: id.toString(),\n      uuid,\n      email,\n      fullName,\n      firstName,\n      lastName,\n      metadata,\n      regDate,\n      country: '',\n      lastUserIp: '',\n    };\n  };\n\n  private formatAuth(auth: JWPAuthData): AuthData {\n    const { access_token: jwt } = auth;\n    return {\n      jwt,\n      refreshToken: '',\n    };\n  }\n\n  initialize = async (config: Config, url: string, _logoutFn: () => Promise<void>) => {\n    const jwpConfig = config.integrations?.jwp;\n\n    if (!jwpConfig?.clientId) {\n      throw new Error('Failed to initialize JWP integration. The clientId is missing.');\n    }\n\n    // set environment\n    this.sandbox = !!jwpConfig.useSandbox;\n\n    const env: string = this.sandbox ? InPlayerEnv.Development : InPlayerEnv.Production;\n    InPlayer.setConfig(env as Env);\n\n    this.apiService.setup(this.sandbox);\n\n    // calculate access model\n    if (jwpConfig.clientId) {\n      this.clientId = jwpConfig.clientId;\n    }\n\n    if (jwpConfig.assetId) {\n      this.accessModel = ACCESS_MODEL.SVOD;\n      this.assetId = jwpConfig.assetId;\n      this.svodOfferIds = jwpConfig.assetId ? [String(jwpConfig.assetId)] : [];\n    }\n\n    // restore session from URL params\n    const queryParams = new URLSearchParams(url.split('#')[1]);\n    const token = queryParams.get('token');\n    const refreshToken = queryParams.get('refresh_token');\n    const expires = queryParams.get('expires');\n\n    if (!token || !refreshToken || !expires) {\n      return;\n    }\n\n    this.apiService.setToken(token, refreshToken, parseInt(expires));\n  };\n\n  getAuthData = async () => {\n    if (await this.apiService.isAuthenticated()) {\n      const credentials = await this.apiService.getToken();\n\n      return {\n        jwt: credentials.token,\n        refreshToken: credentials.refreshToken,\n      } as AuthData;\n    }\n\n    return null;\n  };\n\n  getPublisherConsents: GetPublisherConsents = async () => {\n    try {\n      const data = await this.apiService.get<GetRegisterFieldsResponse>(`/accounts/register-fields/${this.clientId}`);\n\n      const terms = data?.collection.find(({ name }) => name === 'terms');\n\n      const result = data?.collection\n        // we exclude these fields because we already have them by default\n        .filter((field) => !['email_confirmation', 'first_name', 'surname'].includes(field.name) && ![terms].includes(field))\n        .map(\n          (field): CustomFormField => ({\n            type: field.type as CustomRegisterFieldVariant,\n            isCustomRegisterField: true,\n            name: field.name,\n            label: field.label,\n            placeholder: field.placeholder,\n            required: field.required,\n            options: field.options,\n            defaultValue: '',\n            version: '1',\n            ...(field.type === 'checkbox'\n              ? {\n                  enabledByDefault: field.default_value === 'true',\n                }\n              : {\n                  defaultValue: field.default_value,\n                }),\n          }),\n        );\n\n      return terms ? [this.getTermsConsent(terms), ...result] : result;\n    } catch {\n      throw new Error('Failed to fetch publisher consents.');\n    }\n  };\n\n  getCustomerConsents: GetCustomerConsents = async (payload) => {\n    try {\n      if (!payload?.customer) {\n        return {\n          consents: [],\n        };\n      }\n\n      const { customer } = payload;\n\n      return this.parseJson(customer.metadata?.consents as string, []);\n    } catch {\n      throw new Error('Unable to fetch Customer consents.');\n    }\n  };\n\n  updateCustomerConsents: UpdateCustomerConsents = async (payload) => {\n    try {\n      const { customer, consents } = payload;\n\n      const existingAccountData = this.formatUpdateAccount(customer);\n\n      const params = {\n        ...existingAccountData,\n        metadata: {\n          ...existingAccountData.metadata,\n          ...formatConsentsToRegisterFields(consents),\n          consents: JSON.stringify(consents),\n        },\n      };\n\n      const data = await this.apiService.put<AccountData>('/accounts', params, { withAuthentication: true });\n\n      return this.parseJson(data?.metadata?.consents as string, []);\n    } catch {\n      throw new Error('Unable to update Customer consents');\n    }\n  };\n\n  updateCaptureAnswers: UpdateCaptureAnswers = async ({ customer, ...newAnswers }) => {\n    return this.updateCustomer({ ...customer, ...newAnswers });\n  };\n\n  changePasswordWithOldPassword: ChangePasswordWithOldPassword = async (payload) => {\n    const { oldPassword, newPassword, newPasswordConfirmation } = payload;\n\n    try {\n      await this.apiService.post<void>(\n        '/accounts/change-password',\n        {\n          old_password: oldPassword,\n          password: newPassword,\n          password_confirmation: newPasswordConfirmation,\n        },\n        { withAuthentication: true },\n      );\n    } catch (error: unknown) {\n      if (JWPAPIService.isCommonError(error)) {\n        throw new Error(error.response.data.message);\n      }\n      throw new Error('Failed to change password');\n    }\n  };\n\n  resetPassword: ResetPassword = async ({ customerEmail }) => {\n    try {\n      await this.apiService.post<CommonResponse>('/accounts/forgot-password', {\n        email: customerEmail,\n        merchant_uuid: this.clientId,\n        branding_id: 0,\n      });\n    } catch {\n      throw new Error('Failed to reset password.');\n    }\n  };\n\n  login: Login = async ({ email, password, referrer }) => {\n    try {\n      const data = await this.apiService.post<CreateAccount>('/v2/accounts/authenticate', {\n        client_id: this.clientId || '',\n        grant_type: 'password',\n        referrer,\n        username: email,\n        password,\n      });\n\n      this.apiService.setToken(data.access_token, '', data.expires);\n\n      const user = this.formatAccount(data.account);\n\n      return {\n        auth: this.formatAuth(data),\n        user,\n        customerConsents: this.parseJson(user?.metadata?.consents as string, []),\n      };\n    } catch {\n      throw new Error('Failed to authenticate user.');\n    }\n  };\n\n  register: Register = async ({ email, password, referrer, consents }) => {\n    try {\n      const data = await this.apiService.post<CreateAccount>('/accounts', {\n        full_name: email,\n        username: email,\n        password,\n        password_confirmation: password,\n        client_id: this.clientId || '',\n        type: 'consumer',\n        referrer,\n        grant_type: 'password',\n        metadata: {\n          first_name: ' ',\n          surname: ' ',\n          ...formatConsentsToRegisterFields(consents),\n          consents: JSON.stringify(consents),\n        },\n      });\n\n      this.apiService.setToken(data.access_token, '', data.expires);\n\n      const user = this.formatAccount(data.account);\n\n      return {\n        auth: this.formatAuth(data),\n        user,\n        customerConsents: this.parseJson(user?.metadata?.consents as string, []),\n      };\n    } catch (error: unknown) {\n      if (JWPAPIService.isCommonError(error)) {\n        throw new Error(error.response.data.message);\n      }\n      throw new Error('Failed to create account.');\n    }\n  };\n\n  logout = async () => {\n    try {\n      if (InPlayer.Notifications.isSubscribed()) {\n        InPlayer.Notifications.unsubscribe();\n      }\n\n      if (await this.apiService.isAuthenticated()) {\n        await this.apiService.get<undefined>('/accounts/logout', { withAuthentication: true });\n        await this.apiService.removeToken();\n      }\n    } catch {\n      throw new Error('Failed to sign out.');\n    }\n  };\n\n  getUser = async () => {\n    try {\n      const data = await this.apiService.get<AccountData>(`/accounts`, { withAuthentication: true });\n\n      const user = this.formatAccount(data);\n\n      return {\n        user,\n        customerConsents: this.parseJson(user?.metadata?.consents as string, []) as CustomerConsent[],\n      };\n    } catch {\n      throw new Error('Failed to fetch user data.');\n    }\n  };\n\n  updateCustomer: UpdateCustomer = async (customer) => {\n    try {\n      const data = await this.apiService.put<AccountData>('/accounts', this.formatUpdateAccount(customer), { withAuthentication: true });\n\n      return this.formatAccount(data);\n    } catch {\n      throw new Error('Failed to update user data.');\n    }\n  };\n\n  formatUpdateAccount = (customer: UpdateCustomerArgs) => {\n    const firstName = customer.firstName?.trim() || '';\n    const lastName = customer.lastName?.trim() || '';\n    const fullName = `${firstName} ${lastName}`.trim() || (customer.email as string);\n\n    const metadata: Record<string, string> = {\n      ...customer.metadata,\n      first_name: firstName,\n      surname: lastName,\n    };\n\n    const data = {\n      full_name: fullName,\n      metadata,\n    };\n\n    return data;\n  };\n\n  getCaptureStatus: GetCaptureStatus = async ({ customer: { firstName, lastName } }) => {\n    const firstNameTrimmed = firstName?.trim() || '';\n    const lastNameTrimmed = lastName?.trim() || '';\n\n    return {\n      isCaptureEnabled: true,\n      shouldCaptureBeDisplayed: !firstNameTrimmed || !lastNameTrimmed,\n      settings: [\n        {\n          answer: {\n            firstName: firstNameTrimmed || null,\n            lastName: lastNameTrimmed || null,\n          },\n          enabled: true,\n          key: 'firstNameLastName',\n          required: true,\n        },\n      ],\n    };\n  };\n\n  changePasswordWithResetToken: ChangePassword = async (payload) => {\n    const { resetPasswordToken = '', newPassword, newPasswordConfirmation = '' } = payload;\n    try {\n      await this.apiService.put<void>(`/accounts/forgot-password/${resetPasswordToken}`, {\n        password: newPassword,\n        password_confirmation: newPasswordConfirmation,\n        branding_id: 0,\n      });\n    } catch (error: unknown) {\n      if (JWPAPIService.isCommonError(error)) {\n        throw new Error(error.response.data.message);\n      }\n      throw new Error('Failed to change password.');\n    }\n  };\n\n  getTermsConsent = ({ label: termsUrl }: RegisterField): CustomFormField => {\n    const termsLink = `<a href=\"${termsUrl || JW_TERMS_URL}\" target=\"_blank\">${i18next.t('account:registration.terms_and_conditions')}</a>`;\n\n    // t('account:registration.terms_consent_jwplayer')\n    // t('account:registration.terms_consent')\n    return {\n      type: 'checkbox',\n      isCustomRegisterField: true,\n      required: true,\n      name: 'terms',\n      defaultValue: '',\n      label: termsUrl\n        ? i18next.t('account:registration.terms_consent', { termsLink })\n        : i18next.t('account:registration.terms_consent_jwplayer', { termsLink }),\n      enabledByDefault: false,\n      placeholder: '',\n      options: {},\n      version: '1',\n    };\n  };\n\n  updateWatchHistory: UpdateWatchHistory = async ({ history }) => {\n    const current = await this.getWatchHistory();\n    const savedHistory = current.map((e) => e.mediaid) || [];\n\n    await Promise.allSettled(\n      history.map(({ mediaid, progress }) => {\n        if (!savedHistory.includes(mediaid) || current.some((e) => e.mediaid == mediaid && e.progress != progress)) {\n          return this.apiService.patch<WatchHistory>(\n            '/v2/accounts/media/watch-history',\n            {\n              media_id: mediaid,\n              progress,\n            },\n            { withAuthentication: true },\n          );\n        }\n      }),\n    );\n  };\n\n  updateFavorites: UpdateFavorites = async ({ favorites }) => {\n    const current = await this.getFavorites();\n    const currentFavoriteIds = current.map((e) => e.mediaid) || [];\n    const payloadFavoriteIds = favorites.map((e) => e.mediaid);\n\n    // save new favorites\n    await Promise.allSettled(\n      payloadFavoriteIds.map((media_id) => {\n        return !currentFavoriteIds.includes(media_id)\n          ? this.apiService.post<FavoritesData>('/v2/accounts/media/favorites', { media_id }, { withAuthentication: true })\n          : Promise.resolve();\n      }),\n    );\n\n    // delete removed favorites\n    await Promise.allSettled(\n      currentFavoriteIds.map((mediaId) => {\n        return !payloadFavoriteIds.includes(mediaId)\n          ? this.apiService.remove<CommonResponse>(`/v2/accounts/media/favorites/${mediaId}`, { withAuthentication: true })\n          : Promise.resolve();\n      }),\n    );\n  };\n\n  getFavorites = async () => {\n    const favoritesData = await this.apiService.get<GetFavoritesResponse>('/v2/accounts/media/favorites', { withAuthentication: true });\n\n    return favoritesData?.collection?.map(this.formatFavorite) || [];\n  };\n\n  getWatchHistory = async () => {\n    const watchHistoryData = await this.apiService.get<GetWatchHistoryResponse>(\n      '/v2/accounts/media/watch-history',\n      {\n        withAuthentication: true,\n      },\n      {\n        filter: 'currently_watching',\n      },\n    );\n\n    return watchHistoryData?.collection?.map(this.formatHistoryItem) || [];\n  };\n\n  subscribeToNotifications: NotificationsData = async ({ uuid, onMessage }) => {\n    try {\n      if (!InPlayer.Notifications.isSubscribed()) {\n        InPlayer.subscribe(uuid, {\n          onMessage: onMessage,\n          onOpen: () => true,\n        });\n      }\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  exportAccountData: ExportAccountData = async () => {\n    // password is sent as undefined because it is now optional on BE\n    try {\n      return await this.apiService.post<CommonResponse>('/accounts/export', { password: undefined, branding_id: 0 }, { withAuthentication: true });\n    } catch {\n      throw new Error('Failed to export account data');\n    }\n  };\n\n  deleteAccount: DeleteAccount = async ({ password }) => {\n    try {\n      return await this.apiService.remove<CommonResponse>('/accounts/erase', { withAuthentication: true }, { password, branding_id: 0 });\n    } catch (error: unknown) {\n      if (JWPAPIService.isCommonError(error)) {\n        throw new Error(error.response.data.message || 'Failed to delete account');\n      }\n\n      throw new Error('Failed to delete account');\n    }\n  };\n\n  getSocialUrls: GetSocialURLs = async ({ redirectUrl }) => {\n    const socialState = this.storageService.base64Encode(\n      JSON.stringify({\n        client_id: this.clientId || '',\n        redirect: redirectUrl,\n      }),\n    );\n\n    const socialResponse = await this.apiService.get<{ status: number; data: ListSocialURLs }>(\n      '/accounts/social',\n      {\n        includeFullResponse: true,\n      },\n      {\n        state: socialState,\n      },\n    );\n\n    if (socialResponse.status !== 200) {\n      throw new Error('Failed to fetch social urls');\n    }\n\n    return socialResponse.data.social_urls;\n  };\n}\n","import type { DurationAbbreviation } from '../../types/i18n';\n\nexport const formatDurationTag = (seconds: number, { minutesAbbreviation }: Pick<DurationAbbreviation, 'minutesAbbreviation'>) => {\n  if (!seconds) return '';\n\n  const minutes = Math.ceil(seconds / 60);\n\n  return `${minutes} ${minutesAbbreviation}`;\n};\n\n/**\n * @param duration Duration in seconds\n *\n * Calculates hours and minutes into a string\n * Hours are only shown if at least 1\n * Minutes get rounded\n *\n * @returns string, such as '2hrs 24min' or '31min'\n */\n\nexport const formatDuration = (duration: number, { hoursAbbreviation, minutesAbbreviation }: DurationAbbreviation) => {\n  if (!duration) return '';\n\n  const hours = Math.floor(duration / 3600);\n  const minutes = Math.round((duration - hours * 3600) / 60);\n\n  const hoursString = hours ? `${hours}${hoursAbbreviation}` : '';\n  const minutesString = minutes ? `${minutes}${minutesAbbreviation}` : '';\n\n  return [hoursString, minutesString].filter(Boolean).join(' ');\n};\n\nexport const formatPrice = (price: number, currency: string, country?: string) => {\n  return new Intl.NumberFormat(country || 'en-US', {\n    style: 'currency',\n    currency: currency,\n  }).format(price);\n};\n\nexport const formatSeriesMetaString = (seasonNumber?: string, episodeNumber?: string) => {\n  if (!seasonNumber && !episodeNumber) {\n    return '';\n  }\n\n  return seasonNumber && seasonNumber !== '0' ? `S${seasonNumber}:E${episodeNumber}` : `E${episodeNumber}`;\n};\n\nexport const formatVideoSchedule = (locale: string, scheduledStart?: Date, scheduledEnd?: Date) => {\n  if (!scheduledStart) {\n    return '';\n  }\n\n  if (!scheduledEnd) {\n    return formatLocalizedDateTime(scheduledStart, locale, ' • ');\n  }\n\n  return `${formatLocalizedDateTime(scheduledStart, locale, ' • ')} - ${formatLocalizedTime(scheduledEnd, locale)}`;\n};\n\nexport const formatLocalizedDate = (date: Date, locale: string) => {\n  return new Intl.DateTimeFormat(locale, { day: 'numeric', month: 'long', year: 'numeric' }).format(date);\n};\n\nexport const formatLocalizedTime = (date: Date, locale: string) => {\n  return new Intl.DateTimeFormat(locale, { hour: 'numeric', minute: 'numeric' }).format(date);\n};\n\nexport const formatLocalizedDateTime = (date: Date, locale: string, separator = ' ') => {\n  return `${formatLocalizedDate(date, locale)}${separator}${formatLocalizedTime(date, locale)}`;\n};\n","import type { Offer, Order } from '../../types/checkout';\n\nimport { formatPrice } from './formatting';\n\nexport const getOfferPrice = (offer: Offer) => formatPrice(offer.customerPriceInclTax, offer.customerCurrency, offer.customerCountry);\n\nexport const isSVODOffer = (offer: Offer | Order) => offer.offerId?.[0] === 'S';\n","import { inject, injectable } from 'inversify';\n\nimport { isSVODOffer } from '../../../utils/offers';\nimport type {\n  CardPaymentData,\n  CreateOrder,\n  CreateOrderArgs,\n  GetEntitlements,\n  GetEntitlementsResponse,\n  GetOffers,\n  GetPaymentMethods,\n  Offer,\n  Order,\n  Payment,\n  PaymentMethod,\n  PaymentWithAdyen,\n  PaymentWithoutDetails,\n  PaymentWithPayPal,\n  UpdateOrder,\n} from '../../../../types/checkout';\nimport CheckoutService from '../CheckoutService';\nimport type { ServiceResponse } from '../../../../types/service';\n\nimport type {\n  CommonResponse,\n  GetAccessFeesResponse,\n  AccessFee,\n  MerchantPaymentMethod,\n  GeneratePayPalParameters,\n  VoucherDiscountPrice,\n  GetItemAccessResponse,\n} from './types';\nimport JWPAPIService from './JWPAPIService';\n\n@injectable()\nexport default class JWPCheckoutService extends CheckoutService {\n  protected readonly cardPaymentProvider = 'stripe';\n\n  protected readonly apiService;\n\n  constructor(@inject(JWPAPIService) apiService: JWPAPIService) {\n    super();\n    this.apiService = apiService;\n  }\n\n  private formatPaymentMethod = (method: MerchantPaymentMethod, cardPaymentProvider: string): PaymentMethod => {\n    return {\n      id: method.id,\n      methodName: method.method_name.toLocaleLowerCase(),\n      provider: cardPaymentProvider,\n      logoUrl: '',\n    } as PaymentMethod;\n  };\n\n  private formatEntitlements = (expiresAt: number = 0, accessGranted: boolean = false): ServiceResponse<GetEntitlementsResponse> => {\n    return {\n      errors: [],\n      responseData: {\n        accessGranted,\n        expiresAt,\n      },\n    };\n  };\n\n  /**\n   * Format a (Cleeng like) offer id for the given access fee (pricing option). For JWP, we need the asset id and\n   * access fee id in some cases.\n   */\n  private formatOfferId(offer: AccessFee) {\n    const ppvOffers = ['ppv', 'ppv_custom'];\n\n    return ppvOffers.includes(offer.access_type.name) ? `C${offer.item_id}_${offer.id}` : `S${offer.item_id}_${offer.id}`;\n  }\n\n  /**\n   * Parse the given offer id and extract the asset id.\n   * The offer id might be the Cleeng format (`S<assetId>_<pricingOptionId>`) or the asset id as string.\n   */\n  private parseOfferId(offerId: string | number) {\n    if (typeof offerId === 'string') {\n      // offer id format `S<assetId>_<pricingOptionId>`\n      if (offerId.startsWith('C') || offerId.startsWith('S')) {\n        return parseInt(offerId.slice(1).split('_')[0]);\n      }\n\n      // offer id format `<assetId>`\n      return parseInt(offerId);\n    }\n\n    return offerId;\n  }\n\n  private formatOffer = (offer: AccessFee): Offer => {\n    return {\n      id: offer.id,\n      offerId: this.formatOfferId(offer),\n      offerCurrency: offer.currency,\n      customerPriceInclTax: offer.amount,\n      customerCurrency: offer.currency,\n      offerTitle: offer.description,\n      active: true,\n      period: offer.access_type.period === 'month' && offer.access_type.quantity === 12 ? 'year' : offer.access_type.period,\n      freePeriods: offer.trial_period ? 1 : 0,\n      planSwitchEnabled: offer.item.plan_switch_enabled ?? false,\n    } as Offer;\n  };\n\n  private formatOrder = (payload: CreateOrderArgs): Order => {\n    return {\n      id: payload.offer.id,\n      customerId: payload.customerId,\n      offerId: payload.offer.offerId,\n      totalPrice: payload.offer.customerPriceInclTax,\n      priceBreakdown: {\n        offerPrice: payload.offer.customerPriceInclTax,\n        // @TODO is this correct?\n        discountAmount: payload.offer.customerPriceInclTax,\n        discountedPrice: payload.offer.customerPriceInclTax,\n        paymentMethodFee: 0,\n        taxValue: 0,\n      },\n      taxRate: 0,\n      currency: payload.offer.offerCurrency || 'EUR',\n      requiredPaymentDetails: true,\n    } as Order;\n  };\n\n  createOrder: CreateOrder = async (payload) => {\n    return {\n      errors: [],\n      responseData: {\n        message: '',\n        order: this.formatOrder(payload),\n        success: true,\n      },\n    };\n  };\n\n  getOffers: GetOffers = async (payload) => {\n    const offers = await Promise.all(\n      payload.offerIds.map(async (offerId) => {\n        try {\n          const data = await this.apiService.get<GetAccessFeesResponse>(`/v2/items/${this.parseOfferId(offerId)}/access-fees`);\n\n          return data?.map((offer) => this.formatOffer(offer));\n        } catch {\n          throw new Error('Failed to get offers');\n        }\n      }),\n    );\n\n    return offers.flat();\n  };\n\n  getPaymentMethods: GetPaymentMethods = async () => {\n    try {\n      const data = await this.apiService.get<MerchantPaymentMethod[]>('/payments/methods', { withAuthentication: true });\n      const paymentMethods: PaymentMethod[] = [];\n      data.forEach((method: MerchantPaymentMethod) => {\n        if (['card', 'paypal'].includes(method.method_name.toLowerCase())) {\n          paymentMethods.push(this.formatPaymentMethod(method, this.cardPaymentProvider));\n        }\n      });\n      return {\n        errors: [],\n        responseData: {\n          message: '',\n          paymentMethods,\n          status: 1,\n        },\n      };\n    } catch {\n      throw new Error('Failed to get payment methods');\n    }\n  };\n\n  paymentWithPayPal: PaymentWithPayPal = async (payload) => {\n    try {\n      const data = await this.apiService.post<GeneratePayPalParameters>(\n        '/external-payments',\n        {\n          origin: payload.waitingUrl,\n          access_fee: payload.order.id,\n          payment_method: 2,\n          voucher_code: payload.couponCode,\n        },\n        { withAuthentication: true },\n      );\n\n      if (data?.id) {\n        return {\n          errors: ['Already have an active access'],\n          responseData: {\n            redirectUrl: payload.errorUrl,\n          },\n        };\n      }\n      return {\n        errors: [],\n        responseData: {\n          redirectUrl: data.endpoint,\n        },\n      };\n    } catch {\n      throw new Error('Failed to generate PayPal payment url');\n    }\n  };\n\n  iFrameCardPayment: PaymentWithAdyen = async () => {\n    return {\n      errors: [],\n      responseData: {} as Payment,\n    };\n  };\n\n  paymentWithoutDetails: PaymentWithoutDetails = async () => {\n    return {\n      errors: [],\n      responseData: {} as Payment,\n    };\n  };\n\n  updateOrder: UpdateOrder = async ({ order, couponCode }) => {\n    try {\n      const data = await this.apiService.post<VoucherDiscountPrice>(\n        '/vouchers/discount',\n        {\n          voucher_code: `${couponCode}`,\n          access_fee_id: order.id,\n        },\n        { withAuthentication: true },\n      );\n\n      const discountAmount = order.totalPrice - data.amount;\n      const updatedOrder: Order = {\n        ...order,\n        totalPrice: data.amount,\n        priceBreakdown: {\n          ...order.priceBreakdown,\n          discountAmount,\n          discountedPrice: discountAmount,\n        },\n        discount: {\n          applied: true,\n          type: 'coupon',\n          periods: data.discount_duration,\n        },\n      };\n\n      return {\n        errors: [],\n        responseData: {\n          message: 'successfully updated',\n          order: updatedOrder,\n          success: true,\n        },\n      };\n    } catch (error: unknown) {\n      if (JWPAPIService.isCommonError(error) && error.response.data.message === 'Voucher not found') {\n        throw new Error('Invalid coupon code');\n      }\n\n      throw new Error('An unknown error occurred');\n    }\n  };\n\n  getEntitlements: GetEntitlements = async ({ offerId }) => {\n    try {\n      const data = await this.apiService.get<GetItemAccessResponse>(`/items/${this.parseOfferId(offerId)}/access`, {\n        withAuthentication: true,\n      });\n\n      return this.formatEntitlements(data.expires_at, true);\n    } catch {\n      return this.formatEntitlements();\n    }\n  };\n\n  directPostCardPayment = async (cardPaymentPayload: CardPaymentData, order: Order, referrer: string, returnUrl: string) => {\n    const payload = {\n      number: cardPaymentPayload.cardNumber.replace(/\\s/g, ''),\n      card_name: cardPaymentPayload.cardholderName,\n      exp_month: cardPaymentPayload.cardExpMonth || '',\n      exp_year: cardPaymentPayload.cardExpYear || '',\n      cvv: cardPaymentPayload.cardCVC,\n      access_fee: order.id,\n      payment_method: 1,\n      voucher_code: cardPaymentPayload.couponCode,\n      referrer,\n      return_url: returnUrl,\n    };\n\n    try {\n      if (isSVODOffer(order)) {\n        await this.apiService.post<CommonResponse>('/subscriptions', payload, { withAuthentication: true });\n      } else {\n        await this.apiService.post<CommonResponse>('/payments', payload, { withAuthentication: true });\n      }\n\n      return true;\n    } catch {\n      throw new Error('Failed to make payment');\n    }\n  };\n\n  getSubscriptionSwitches = undefined;\n\n  getOrder = undefined;\n\n  switchSubscription = undefined;\n\n  getSubscriptionSwitch = undefined;\n\n  createAdyenPaymentSession = undefined;\n\n  initialAdyenPayment = undefined;\n\n  finalizeAdyenPayment = undefined;\n\n  updatePaymentMethodWithPayPal = undefined;\n\n  deletePaymentMethod = undefined;\n\n  addAdyenPaymentDetails = undefined;\n\n  finalizeAdyenPaymentDetails = undefined;\n\n  getOffer = undefined;\n}\n","import i18next from 'i18next';\nimport { inject, injectable, named } from 'inversify';\n\nimport type {\n  ChangeSubscription,\n  GetActivePayment,\n  GetActiveSubscription,\n  GetAllTransactions,\n  PaymentDetail,\n  Subscription,\n  Transaction,\n  UpdateCardDetails,\n  UpdateSubscription,\n} from '../../../../types/subscription';\nimport SubscriptionService from '../SubscriptionService';\nimport AccountService from '../AccountService';\n\nimport type {\n  GetItemAccessResponse,\n  GetSubscriptionsResponse,\n  GetPaymentHistoryResponse,\n  GetDefaultCardResponse,\n  CancelSubscriptionResponse,\n  ChangeSubscriptionPlanResponse,\n  SetDefaultCardResponse,\n  Card,\n  PaymentHistory,\n  JWPSubscription,\n} from './types';\nimport type JWPAccountService from './JWPAccountService';\nimport JWPAPIService from './JWPAPIService';\n\ninterface SubscriptionDetails extends JWPSubscription {\n  item_id?: number;\n  item_title?: string;\n  subscription_id?: string;\n  subscription_price?: number;\n  action_type?: 'recurrent' | 'canceled' | 'free-trial' | 'ended' | 'incomplete_expired';\n  next_rebill_date?: number;\n  charged_amount?: number;\n  payment_method_name?: string;\n  access_type?: {\n    period: string;\n  };\n  access_fee_id?: number;\n}\n\n@injectable()\nexport default class JWPSubscriptionService extends SubscriptionService {\n  protected readonly accountService: JWPAccountService;\n  protected readonly apiService: JWPAPIService;\n\n  constructor(@named('JWP') accountService: AccountService, @inject(JWPAPIService) apiService: JWPAPIService) {\n    super();\n\n    this.accountService = accountService as JWPAccountService;\n    this.apiService = apiService;\n  }\n\n  private formatCardDetails = (\n    card: Card & {\n      card_type: string;\n      account_id: number;\n      currency: string;\n    },\n  ): PaymentDetail => {\n    const { number, exp_month, exp_year, card_name, card_type, account_id, currency } = card;\n    const zeroFillExpMonth = `0${exp_month}`.slice(-2);\n\n    return {\n      id: 0,\n      paymentMethodId: 0,\n      paymentGateway: 'card',\n      paymentMethod: 'card',\n      customerId: account_id.toString(),\n      paymentMethodSpecificParams: {\n        holderName: card_name,\n        variant: card_type,\n        lastCardFourDigits: String(number),\n        cardExpirationDate: `${zeroFillExpMonth}/${exp_year}`,\n      },\n      active: true,\n      currency,\n    } as PaymentDetail;\n  };\n\n  private formatTransaction = (transaction: PaymentHistory): Transaction => {\n    const purchasedAmount = transaction?.charged_amount?.toString() || '0';\n\n    return {\n      transactionId: transaction.transaction_token || i18next.t('user:payment.access_granted'),\n      transactionDate: transaction.created_at,\n      trxToken: transaction.trx_token,\n      offerId: transaction.item_id?.toString() || i18next.t('user:payment.no_transaction'),\n      offerType: transaction.item_type || '',\n      offerTitle: transaction?.item_title || '',\n      offerPeriod: '',\n      transactionPriceExclTax: purchasedAmount,\n      transactionCurrency: transaction.currency_iso || 'EUR',\n      discountedOfferPrice: purchasedAmount,\n      offerCurrency: transaction.currency_iso || 'EUR',\n      offerPriceExclTax: purchasedAmount,\n      applicableTax: '0',\n      transactionPriceInclTax: purchasedAmount,\n      customerId: transaction.consumer_id?.toString(),\n      customerEmail: '',\n      customerLocale: '',\n      customerCountry: 'en',\n      customerIpCountry: '',\n      customerCurrency: '',\n      paymentMethod: transaction.payment_method_name || i18next.t('user:payment.access_granted'),\n    };\n  };\n\n  private formatActiveSubscription = (subscription: SubscriptionDetails, expiresAt: number) => {\n    let status = '';\n    switch (subscription.action_type) {\n      case 'free-trial':\n        status = 'active_trial';\n        break;\n      case 'recurrent':\n        status = 'active';\n        break;\n      case 'canceled':\n        status = 'cancelled';\n        break;\n      case 'incomplete_expired' || 'ended':\n        status = 'expired';\n        break;\n      default:\n        status = 'terminated';\n    }\n\n    return {\n      subscriptionId: subscription.subscription_id,\n      offerId: subscription.item_id?.toString(),\n      accessFeeId: `S${subscription.access_fee_id}`,\n      status,\n      expiresAt,\n      nextPaymentAt: subscription.next_rebill_date,\n      nextPaymentPrice: subscription.subscription_price,\n      nextPaymentCurrency: subscription.currency,\n      paymentGateway: 'stripe',\n      paymentMethod: subscription.payment_method_name,\n      offerTitle: subscription.item_title,\n      period: subscription.access_type?.period,\n      totalPrice: subscription.charged_amount,\n      unsubscribeUrl: subscription.unsubscribe_url,\n      pendingSwitchId: null,\n    } as Subscription;\n  };\n\n  private formatGrantedSubscription = (subscription: GetItemAccessResponse) => {\n    return {\n      subscriptionId: '',\n      offerId: subscription.item.id.toString(),\n      status: 'active',\n      expiresAt: subscription.expires_at,\n      nextPaymentAt: subscription.expires_at,\n      nextPaymentPrice: 0,\n      nextPaymentCurrency: 'EUR',\n      paymentGateway: 'none',\n      paymentMethod: i18next.t('user:payment.access_granted'),\n      offerTitle: subscription.item.title,\n      period: 'granted',\n      totalPrice: 0,\n      unsubscribeUrl: '',\n      pendingSwitchId: null,\n    } as Subscription;\n  };\n\n  getActiveSubscription: GetActiveSubscription = async () => {\n    const assetId = this.accountService.assetId;\n\n    if (assetId === null) throw new Error(\"Couldn't fetch active subscription, there is no assetId configured\");\n\n    try {\n      const hasAccess = await this.apiService.get<GetItemAccessResponse>(`/items/${assetId}/access`, {\n        withAuthentication: true,\n      });\n\n      if (hasAccess) {\n        const data = await this.apiService.get<GetSubscriptionsResponse>(\n          '/subscriptions',\n          {\n            withAuthentication: true,\n            contentType: 'json',\n          },\n          {\n            limit: 15,\n            page: 0,\n          },\n        );\n\n        const activeSubscription = data.collection.find((subscription: SubscriptionDetails) => subscription.item_id === assetId);\n\n        if (activeSubscription) {\n          return this.formatActiveSubscription(activeSubscription, hasAccess?.expires_at);\n        }\n\n        return this.formatGrantedSubscription(hasAccess);\n      }\n      return null;\n    } catch (error: unknown) {\n      if (JWPAPIService.isCommonError(error) && error.response.data.code === 402) {\n        return null;\n      }\n      throw new Error('Unable to fetch customer subscriptions.');\n    }\n  };\n\n  getAllTransactions: GetAllTransactions = async () => {\n    try {\n      const data = await this.apiService.get<GetPaymentHistoryResponse>('/v2/accounting/payment-history', {\n        withAuthentication: true,\n        contentType: 'json',\n      });\n\n      return data?.collection?.map((transaction) => this.formatTransaction(transaction));\n    } catch {\n      throw new Error('Failed to get transactions');\n    }\n  };\n\n  getActivePayment: GetActivePayment = async () => {\n    try {\n      const data = await this.apiService.get<GetDefaultCardResponse>('/v2/payments/cards/default', {\n        withAuthentication: true,\n        contentType: 'json',\n      });\n\n      const cards: PaymentDetail[] = [];\n      for (const currency in data?.cards) {\n        cards.push(\n          this.formatCardDetails({\n            ...data.cards?.[currency],\n            currency: currency,\n          }),\n        );\n      }\n      return cards.find((paymentDetails) => paymentDetails.active) || null;\n    } catch {\n      return null;\n    }\n  };\n\n  getSubscriptions = async () => {\n    return {\n      errors: [],\n      responseData: { items: [] },\n    };\n  };\n\n  updateSubscription: UpdateSubscription = async ({ offerId, unsubscribeUrl }) => {\n    if (!unsubscribeUrl) {\n      throw new Error('Missing unsubscribe url');\n    }\n    try {\n      await this.apiService.get<CancelSubscriptionResponse>(unsubscribeUrl, { withAuthentication: true, contentType: 'json' });\n      return {\n        errors: [],\n        responseData: { offerId: offerId, status: 'cancelled', expiresAt: 0 },\n      };\n    } catch {\n      throw new Error('Failed to update subscription');\n    }\n  };\n\n  changeSubscription: ChangeSubscription = async ({ accessFeeId, subscriptionId }) => {\n    try {\n      const data = await this.apiService.post<ChangeSubscriptionPlanResponse>(\n        '/v2/subscriptions/stripe:switch',\n        {\n          inplayer_token: subscriptionId,\n          access_fee_id: accessFeeId,\n        },\n        {\n          withAuthentication: true,\n        },\n      );\n      return {\n        errors: [],\n        responseData: { message: data.message },\n      };\n    } catch {\n      throw new Error('Failed to change subscription');\n    }\n  };\n\n  updateCardDetails: UpdateCardDetails = async ({ cardName, cardNumber, cvc, expMonth, expYear, currency }) => {\n    try {\n      const responseData = await this.apiService.put<SetDefaultCardResponse>(\n        '/v2/payments/cards/default',\n        {\n          number: cardNumber,\n          card_name: cardName,\n          cvv: cvc,\n          exp_month: expMonth,\n          exp_year: expYear,\n          currency_iso: currency,\n        },\n        { withAuthentication: true },\n      );\n\n      return { errors: [], responseData };\n    } catch {\n      throw new Error('Failed to update card details');\n    }\n  };\n\n  fetchReceipt = async ({ transactionId }: { transactionId: string }) => {\n    try {\n      const responseData = await this.apiService.get<Blob>(`/v2/accounting/transactions/${transactionId}/receipt`, {\n        withAuthentication: true,\n        contentType: 'json',\n        responseType: 'blob',\n      });\n\n      return { errors: [], responseData };\n    } catch {\n      throw new Error('Failed to get billing receipt');\n    }\n  };\n\n  getPaymentDetails = undefined;\n\n  getTransactions = undefined;\n}\n","import type { interfaces } from 'inversify';\n\nimport AppController from '../../controllers/AppController';\n\n/**\n * This function is used to get the integration type from the AppController and is mainly used for getting named\n * modules from the container registry.\n */\nexport const getIntegrationType = (context: interfaces.Context) => {\n  return context.container.get(AppController).getIntegrationType();\n};\n","import type { CalculateIntegrationType } from '../../../types/calculate-integration-type';\nimport { INTEGRATION } from '../../constants';\n\nexport const isCleengIntegrationType: CalculateIntegrationType = (config) => {\n  return config.integrations?.cleeng?.id ? INTEGRATION.CLEENG : null;\n};\n\nexport const isJwpIntegrationType: CalculateIntegrationType = (config) => {\n  return config.integrations?.jwp?.clientId ? INTEGRATION.JWP : null;\n};\n","// To organize imports in a better way\n/* eslint-disable import/order */\nimport 'reflect-metadata'; // include once in the app for inversify (see: https://github.com/inversify/InversifyJS/blob/master/README.md#-installation)\nimport { INTEGRATION, EPG_TYPE } from '../constants';\nimport { container } from './container';\nimport { API_ACCESS_BRIDGE_URL, DETERMINE_INTEGRATION_TYPE, INTEGRATION_TYPE } from './types';\n\nimport ApiService from '../services/ApiService';\nimport WatchHistoryService from '../services/WatchHistoryService';\nimport GenericEntitlementService from '../services/GenericEntitlementService';\nimport JWPEntitlementService from '../services/JWPEntitlementService';\nimport FavoriteService from '../services/FavoriteService';\nimport ConfigService from '../services/ConfigService';\nimport SettingsService from '../services/SettingsService';\n\nimport WatchHistoryController from '../controllers/WatchHistoryController';\nimport CheckoutController from '../controllers/CheckoutController';\nimport AccountController from '../controllers/AccountController';\nimport AccessController from '../controllers/AccessController';\nimport FavoritesController from '../controllers/FavoritesController';\nimport AppController from '../controllers/AppController';\nimport EpgController from '../controllers/EpgController';\n\n// Epg services\nimport EpgService from '../services/EpgService';\nimport ViewNexaEpgService from '../services/epg/ViewNexaEpgService';\nimport JWEpgService from '../services/epg/JWEpgService';\n\n// Access integration\nimport AccessService from '../services/AccessService';\nimport { getApiAccessBridgeUrl } from './functions/getApiAccessBridgeUrl';\n\n// Integration interfaces\nimport AccountService from '../services/integrations/AccountService';\nimport CheckoutService from '../services/integrations/CheckoutService';\nimport SubscriptionService from '../services/integrations/SubscriptionService';\n\n// Cleeng integration\nimport CleengService from '../services/integrations/cleeng/CleengService';\nimport CleengAccountService from '../services/integrations/cleeng/CleengAccountService';\nimport CleengCheckoutService from '../services/integrations/cleeng/CleengCheckoutService';\nimport CleengSubscriptionService from '../services/integrations/cleeng/CleengSubscriptionService';\n\n// JWP integration\nimport JWPAPIService from '../services/integrations/jwp/JWPAPIService';\nimport JWPAccountService from '../services/integrations/jwp/JWPAccountService';\nimport JWPCheckoutService from '../services/integrations/jwp/JWPCheckoutService';\nimport JWPSubscriptionService from '../services/integrations/jwp/JWPSubscriptionService';\nimport { getIntegrationType } from './functions/getIntegrationType';\nimport { isCleengIntegrationType, isJwpIntegrationType } from './functions/calculateIntegrationType';\n\n// Common services\ncontainer.bind(ConfigService).toSelf();\ncontainer.bind(WatchHistoryService).toSelf();\ncontainer.bind(FavoriteService).toSelf();\ncontainer.bind(GenericEntitlementService).toSelf();\ncontainer.bind(ApiService).toSelf();\ncontainer.bind(SettingsService).toSelf();\ncontainer.bind(AccessService).toSelf();\n\n// Common controllers\ncontainer.bind(AppController).toSelf();\ncontainer.bind(WatchHistoryController).toSelf();\ncontainer.bind(FavoritesController).toSelf();\ncontainer.bind(EpgController).toSelf();\n\n// Integration controllers\ncontainer.bind(AccountController).toSelf();\ncontainer.bind(CheckoutController).toSelf();\ncontainer.bind(AccessController).toSelf();\n\n// EPG services\ncontainer.bind(EpgService).to(JWEpgService).whenTargetNamed(EPG_TYPE.jwp);\ncontainer.bind(EpgService).to(ViewNexaEpgService).whenTargetNamed(EPG_TYPE.viewNexa);\n\n// Functions\ncontainer.bind(INTEGRATION_TYPE).toDynamicValue(getIntegrationType);\ncontainer.bind(API_ACCESS_BRIDGE_URL).toDynamicValue(getApiAccessBridgeUrl);\n\n// Cleeng integration\ncontainer.bind(DETERMINE_INTEGRATION_TYPE).toConstantValue(isCleengIntegrationType);\ncontainer.bind(CleengService).toSelf();\ncontainer.bind(AccountService).to(CleengAccountService).whenTargetNamed(INTEGRATION.CLEENG);\ncontainer.bind(CheckoutService).to(CleengCheckoutService).whenTargetNamed(INTEGRATION.CLEENG);\ncontainer.bind(SubscriptionService).to(CleengSubscriptionService).whenTargetNamed(INTEGRATION.CLEENG);\n\n// JWP integration\ncontainer.bind(DETERMINE_INTEGRATION_TYPE).toConstantValue(isJwpIntegrationType);\ncontainer.bind(JWPAPIService).toSelf();\ncontainer.bind(JWPEntitlementService).toSelf();\ncontainer.bind(AccountService).to(JWPAccountService).whenTargetNamed(INTEGRATION.JWP);\ncontainer.bind(CheckoutService).to(JWPCheckoutService).whenTargetNamed(INTEGRATION.JWP);\ncontainer.bind(SubscriptionService).to(JWPSubscriptionService).whenTargetNamed(INTEGRATION.JWP);\n","import { LogLevel } from './LogLevel';\nimport LogTransporter from './LogTransporter';\n\nexport default class ConsoleTransporter extends LogTransporter {\n  constructor(private readonly logLevel: LogLevel) {\n    super();\n  }\n\n  override log(level: LogLevel, scope: string, message: string, extra?: Record<string, unknown>, error?: Error) {\n    if (level < this.logLevel) return;\n\n    switch (level) {\n      case LogLevel.ERROR:\n      case LogLevel.FATAL:\n        console.error(`${LogLevel[level]} [${scope}] ${message}`);\n        break;\n      case LogLevel.WARN:\n        console.warn(`${LogLevel[level]} [${scope}] ${message}`);\n        break;\n      default:\n        // eslint-disable-next-line no-console\n        console.log(`${LogLevel[level]} [${scope}] ${message}`);\n    }\n\n    if (error) {\n      console.error(error);\n    }\n\n    if (extra && Object.keys(extra).length > 0) {\n      // eslint-disable-next-line no-console\n      console.log(extra);\n    }\n  }\n}\n","import { injectable } from '@jwp/ott-common/src/modules/container';\nimport StorageService from '@jwp/ott-common/src/services/StorageService';\nimport { logError } from '@jwp/ott-common/src/logger';\n\n@injectable()\nexport class LocalStorageService extends StorageService {\n  prefix: string = 'jwapp';\n\n  initialize(prefix: string) {\n    this.prefix = prefix;\n  }\n\n  getStorageKey(key: string) {\n    return `${this.prefix}.${key}`;\n  }\n\n  async getItem(key: string, parse: boolean, usePrefix = true) {\n    try {\n      const value = window.localStorage.getItem(usePrefix ? this.getStorageKey(key) : key);\n\n      return value && parse ? JSON.parse(value) : value;\n    } catch (error: unknown) {\n      logError('LocalStorageService', 'Failed to parse localStorage entry', { error });\n    }\n  }\n\n  async setItem(key: string, value: string, usePrefix = true) {\n    try {\n      window.localStorage.setItem(usePrefix ? this.getStorageKey(key) : key, value);\n    } catch (error: unknown) {\n      logError('LocalStorageService', 'Failed to store localStorage entry', { error });\n    }\n  }\n\n  async removeItem(key: string) {\n    try {\n      window.localStorage.removeItem(this.getStorageKey(key));\n    } catch (error: unknown) {\n      logError('LocalStorageService', 'Failed to remove localStorage entry', { error });\n    }\n  }\n\n  // helper functions for encoding and decoding Base64 strings\n  // this might end up in a different service\n  base64Encode(input: string): string {\n    return window.btoa(input);\n  }\n\n  base64Decode(input: string): string {\n    return window.atob(input);\n  }\n}\n","import '@jwp/ott-common/src/modules/register';\nimport { container } from '@jwp/ott-common/src/modules/container';\nimport StorageService from '@jwp/ott-common/src/services/StorageService';\nimport { BROADCAST_CHANNEL, GET_CUSTOMER_IP } from '@jwp/ott-common/src/modules/types';\nimport type { GetCustomerIP } from '@jwp/ott-common/types/get-customer-ip';\nimport LogTransporter from '@jwp/ott-common/src/services/logging/LogTransporter';\nimport ConsoleTransporter from '@jwp/ott-common/src/services/logging/ConsoleTransporter';\nimport { LogLevel } from '@jwp/ott-common/src/services/logging/LogLevel';\nimport { BroadcastChannel } from 'broadcast-channel';\n\nimport { getOverrideIP } from '#src/utils/ip';\nimport { LocalStorageService } from '#src/services/LocalStorageService';\n\n/**\n * Custom integration override\n *\n * @example\n * ```ts\n * // Custom integration services\n * const MY_INTEGRATION_NAME = 'CUSTOM';\n *\n * container.bind(AccountService).to(CustomAccountService).whenTargetNamed(MY_INTEGRATION_NAME);\n * container.bind(CheckoutService).to(CustomCheckoutService).whenTargetNamed(MY_INTEGRATION_NAME);\n * container.bind(SubscriptionService).to(CustomSubscriptionService).whenTargetNamed(MY_INTEGRATION_NAME);\n *\n * // Override integration type calculation\n * container.bind(DETERMINE_INTEGRATION_TYPE).toConstantValue((config: Config) => {\n *   return config.custom?.['custom'] ? MY_INTEGRATION_NAME : null;\n * })\n * ```\n */\n\ncontainer.bind(StorageService).to(LocalStorageService);\n\ncontainer.bind(BROADCAST_CHANNEL).toConstantValue(new BroadcastChannel('jwp-refresh-token-channel'));\n\n// Currently, this is only used for e2e testing to override the customer ip from a browser cookie\ncontainer.bind<GetCustomerIP>(GET_CUSTOMER_IP).toConstantValue(async () => getOverrideIP());\n\n/**\n * Log transporters\n *\n * Add custom log transporters by registering more modules to the LogTransporter type. The custom transporter must\n * extend the LogTransporter class.\n *\n * @example\n * ```ts\n * container.bind<LogTransporter>(LogTransporter).toDynamicValue(() => new GoogleGTMTransporter(import.meta.env.DEV ? LogLevel.SILENT : LogLevel.WARN));\n * ```\n */\ncontainer.bind<LogTransporter>(LogTransporter).toDynamicValue(() => new ConsoleTransporter(import.meta.env.DEV ? LogLevel.DEBUG : LogLevel.ERROR));\n\n/**\n * UI Component override\n *\n * @example\n * ```ts\n * // Define an identifier from the component (from `ui-react` for example):\n * export const CardIdentifier = Symbol('CARD');\n *\n * // Make sure the component is wrapped in the HOC:\n * export default createInjectableComponent(CardIdentifier, Card);\n *\n * // Override the component into the associated container, from register.ts:\n * import { container as uiComponentContainer } from '@jwp/ott-ui-react/src/modules/container';\n *\n * uiComponentContainer.bind<React.FC<CardProps>>(CardIdentifier).toConstantValue(CustomCard);\n * ```\n */\n\n// Override ui-react component\n// uiComponentContainer.bind<React.FC<CardProps>>(CardIdentifier).toConstantValue(CustomCard);\n","import React from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 60 * 60 * 1000,\n      refetchOnWindowFocus: false,\n      retryOnMount: false,\n    },\n  },\n});\n\ntype QueryProviderProps = {\n  children: JSX.Element;\n};\n\nfunction QueryProvider({ children }: QueryProviderProps): JSX.Element {\n  return <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>;\n}\n\nexport default QueryProvider;\n","import React, { type ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { IS_DEMO_MODE, IS_DEVELOPMENT_BUILD, IS_PREVIEW_MODE } from '@jwp/ott-common/src/utils/common';\n\nimport DevStackTrace from '../DevStackTrace/DevStackTrace';\n\nimport styles from './ErrorPage.module.scss';\n\ninterface Props {\n  disableFallbackTranslation?: boolean;\n  title?: string | ReactNode;\n  message?: string | ReactNode;\n  learnMoreLabel?: string;\n  children?: React.ReactNode;\n  error?: Error;\n  helpLink?: string;\n}\n\nconst ErrorPage = ({ title, message, learnMoreLabel, ...rest }: Props) => {\n  const { t } = useTranslation('error');\n\n  return (\n    <ErrorPageWithoutTranslation\n      title={title || t('generic_error_heading')}\n      message={message || t('generic_error_description')}\n      learnMoreLabel={learnMoreLabel || t('learn_more')}\n      {...rest}\n    />\n  );\n};\n\nexport const ErrorPageWithoutTranslation = ({ title, children, message, learnMoreLabel, error, helpLink }: Props) => {\n  const logo = useConfigStore((s) => s.config?.assets?.banner);\n  const alt = ''; // intentionally empty for a11y, because adjacent text alternative\n\n  return (\n    <div className={styles.errorPage}>\n      <div className={styles.box}>\n        <img className={styles.image} src={logo || '/images/logo.png'} alt={alt} />\n        <h1 className={styles.title} aria-live=\"polite\">\n          {title || 'An error occurred'}\n        </h1>\n        <div className={styles.main}>\n          <p className={styles.message}>{message || 'Try refreshing this page or come back later.'}</p>\n          {children}\n          {(IS_DEVELOPMENT_BUILD || IS_DEMO_MODE || IS_PREVIEW_MODE) && helpLink && (\n            <div className={styles.links}>\n              <a href={helpLink} target={'_blank'} rel={'noreferrer'}>\n                {learnMoreLabel || 'Learn More'}\n              </a>\n              {(IS_DEVELOPMENT_BUILD || IS_PREVIEW_MODE) && error?.stack && (\n                <span className={styles.stack}>\n                  <DevStackTrace error={error} />\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import classNames from 'classnames';\nimport React from 'react';\n\nimport styles from './Spinner.module.scss';\n\ntype Props = {\n  size?: 'small' | 'medium' | 'large';\n  className?: string;\n};\n\nconst Spinner = ({ size = 'medium', className = '' }: Props): JSX.Element => {\n  return (\n    <div className={classNames(styles.buffer, className, { [styles.small]: size === 'small', [styles.large]: size === 'large' })}>\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport Spinner from '../Spinner/Spinner';\n\nimport styles from './LoadingOverlay.module.scss';\n\ntype Props = {\n  transparentBackground?: boolean;\n  inline?: boolean;\n};\n\nconst LoadingOverlay = ({ transparentBackground = false, inline = false }: Props): JSX.Element => {\n  const className = classNames(styles.loadingOverlay, {\n    [styles.transparent]: transparentBackground,\n    [styles.fixed]: !inline,\n    [styles.inline]: inline,\n  });\n\n  return (\n    <div className={className}>\n      <Spinner size=\"medium\" />\n    </div>\n  );\n};\nexport default LoadingOverlay;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport styles from './FormFeedback.module.scss';\n\ntype Props = {\n  visible?: boolean;\n  children?: React.ReactNode;\n  variant: 'info' | 'success' | 'warning' | 'error';\n};\n\nconst variantAriaMap = {\n  info: 'polite',\n  success: 'assertive',\n  warning: 'polite',\n  error: 'assertive',\n} as const;\n\nconst FormFeedback: React.FC<Props> = ({ children, variant = 'error', visible = true }: Props) => {\n  const className = classNames(styles.formFeedback, {\n    [styles.error]: variant === 'error',\n    [styles.warning]: variant === 'warning',\n    [styles.success]: variant === 'success',\n    [styles.info]: variant === 'info',\n    hidden: !visible,\n  });\n\n  const ariaLive = variantAriaMap[variant];\n\n  return (\n    <div aria-live={ariaLive} className={className}>\n      {children}\n    </div>\n  );\n};\n\nexport default FormFeedback;\n","import { secondsToMilliseconds } from 'date-fns';\nimport { type PropsWithChildren, createContext, useCallback, useContext, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport FormFeedback from '../../components/FormFeedback/FormFeedback';\n\nexport type AriaAnnouncerVariant = 'success' | 'error' | 'warning' | 'info';\ntype Announcement = { message: string; variant: AriaAnnouncerVariant };\ntype AnnounceFn = (message: string, variant: AriaAnnouncerVariant, duration?: number) => void;\ntype ContextValue = { announce: AnnounceFn };\n\nconst AriaAnnouncerContext = createContext<ContextValue | undefined>(undefined);\n\nexport const useAriaAnnouncer = () => {\n  const announce = useContext(AriaAnnouncerContext);\n\n  if (!announce) throw new Error('Announcer context is not defined');\n\n  return announce.announce;\n};\n\nexport const AriaAnnouncerProvider = ({ children }: PropsWithChildren) => {\n  const [announcement, setAnnouncement] = useState<Announcement | null>(null);\n\n  const announce = useCallback((message: string, variant: AriaAnnouncerVariant, duration = secondsToMilliseconds(10)) => {\n    setAnnouncement({ message, variant });\n\n    setTimeout(() => {\n      setAnnouncement(null);\n    }, duration);\n  }, []);\n\n  return (\n    <AriaAnnouncerContext.Provider value={{ announce }}>\n      {announcement &&\n        createPortal(\n          <FormFeedback variant={announcement.variant} visible={false}>\n            {announcement.message}\n          </FormFeedback>,\n          document.body,\n        )}\n      {children}\n    </AriaAnnouncerContext.Provider>\n  );\n};\n","import type { LanguageDefinition } from '../../types/i18n';\n\nexport const filterSupportedLanguages = (definedLanguages: LanguageDefinition[], enabledLanguages: string[]) => {\n  return enabledLanguages.reduce((languages, languageCode) => {\n    const foundLanguage = definedLanguages.find(({ code }) => code === languageCode);\n\n    if (foundLanguage) {\n      return [...languages, foundLanguage];\n    }\n\n    throw new Error(`Missing defined language for code: ${languageCode}`);\n  }, [] as LanguageDefinition[]);\n};\n","// This file is generated by i18next-parser-workspaces, do not modify manually.\n// Run `$ npx i18next-workspaces` to update this file\n\nexport const NAMESPACES = ['account', 'common', 'country', 'demo', 'epg', 'error', 'menu', 'search', 'us_state', 'user', 'video'];\n","import { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport I18NextHttpBackend from 'i18next-http-backend';\nimport i18next from 'i18next';\nimport type { LanguageDefinition } from '@jwp/ott-common/types/i18n';\nimport { filterSupportedLanguages } from '@jwp/ott-common/src/utils/i18n';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\n\nimport { NAMESPACES } from './resources';\n\n// This list contains all languages that are supported by the OTT Web app by default\n// To enable the language, make sure that the language code is added to the `APP_ENABLED_LANGUAGES` environment variable\n// Before adding a defined language, ensure that the translation files are added to the `./public/locales/${code}` folder\nexport const DEFINED_LANGUAGES: LanguageDefinition[] = [\n  {\n    code: 'en',\n    displayName: 'English',\n  },\n  {\n    code: 'es',\n    displayName: 'Español',\n  },\n];\n\nconst initI18n = async () => {\n  const enabledLanguages = import.meta.env.APP_ENABLED_LANGUAGES?.split(',') || [];\n  const defaultLanguage = import.meta.env.APP_DEFAULT_LANGUAGE || 'en';\n\n  const supportedLanguages = filterSupportedLanguages(DEFINED_LANGUAGES, enabledLanguages);\n\n  useConfigStore.setState({ supportedLanguages });\n\n  if (!supportedLanguages.some(({ code }) => code === defaultLanguage)) {\n    throw new Error(`The default language is not enabled: ${defaultLanguage}`);\n  }\n\n  await i18next\n    .use(I18NextHttpBackend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n      supportedLngs: supportedLanguages.map(({ code }) => code),\n      fallbackLng: defaultLanguage,\n      // this option ensures that empty strings in translations will fall back to the default language\n      returnEmptyString: false,\n      ns: NAMESPACES,\n      defaultNS: 'common',\n      fallbackNS: 'common',\n      interpolation: {\n        escapeValue: false,\n      },\n      detection: {\n        order: ['localStorage', 'navigator'],\n        caches: ['localStorage'],\n        lookupLocalStorage: 'jwapp.language',\n      },\n      react: {\n        // disabled suspense to prevent re-loading the app while loading the resources\n        useSuspense: false,\n      },\n    });\n};\n\nexport default initI18n;\n","import { createURL, type QueryParamsArg } from '@jwp/ott-common/src/utils/urlFormatting';\nimport type { Location } from 'react-router-dom';\n\nimport type { AccountModals } from '../containers/AccountModal/AccountModal';\n\nexport const createURLFromLocation = (location: Location, queryParams: QueryParamsArg = {}) => {\n  return createURL(`${location.pathname}${location.search || ''}`, queryParams);\n};\n\nexport const modalURLFromLocation = (location: Location, u: keyof AccountModals | null, queryParams?: QueryParamsArg) => {\n  return createURL(`${location.pathname}${location.search || ''}`, { u, ...queryParams });\n};\n\n/**\n * Create a full modal URL including the hostname, mostly for external use (e.g., for the PayPal successUrl)\n *\n * @example\n * modalURLFromWindowLocation('login', { foo: 'bar' }) === 'https://jwplayer.com/?u=login&foo=bar'\n */\nexport const modalURLFromWindowLocation = (u: keyof AccountModals, queryParams?: QueryParamsArg) => {\n  return createURL(window.location.href, { u, ...queryParams });\n};\n","import React, { useCallback, useLayoutEffect, useRef } from 'react';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * The `useEventCallback` hook can be compared to the `useCallback` hook but without dependencies. It is a \"shortcut\"\n * to prevent re-renders based on callback changes due to dependency changes. This can be useful to improve the\n * performance or to prevent adding/removing event listeners to third-party libraries such as JW Player.\n *\n * @see {https://reactjs.org/docs/hooks-faq.html#how-to-avoid-passing-callbacks-down}\n *\n * @param {function} [callback]\n */\nconst useEventCallback = <T extends (...args: any[]) => unknown>(callback?: T): T => {\n  const fnRef = useRef(() => {\n    throw new Error('Callback called in render');\n  }) as unknown as React.MutableRefObject<T | undefined>;\n\n  useLayoutEffect(() => {\n    fnRef.current = callback;\n  }, [callback]);\n\n  // @ts-ignore\n  // ignore since we just want to pass all arguments to the callback function (which we don't know)\n  return useCallback((...args) => {\n    if (typeof fnRef.current === 'function') {\n      return fnRef.current(...args);\n    }\n  }, []);\n};\n\nexport default useEventCallback;\n","import { useSearchParams } from 'react-router-dom';\n\nfunction useQueryParam(key: string): string | null {\n  const [searchParams] = useSearchParams();\n\n  return searchParams.get(key);\n}\n\nexport default useQueryParam;\n","import { useEffect, useRef, useState } from 'react';\n\nconst useCountdown = (durationSeconds: number, intervalSeconds: number = 1, completeHandler?: () => void) => {\n  const timerRef = useRef<number>();\n  const [countdown, setCountdown] = useState(durationSeconds);\n\n  useEffect(() => {\n    window.clearTimeout(timerRef.current);\n    if (countdown === 0) {\n      if (completeHandler) completeHandler();\n      return;\n    }\n\n    timerRef.current = window.setTimeout(() => {\n      setCountdown((count) => count - intervalSeconds);\n    }, intervalSeconds * 1000);\n\n    return () => {\n      window.clearTimeout(timerRef.current);\n    };\n  }, [completeHandler, countdown, intervalSeconds]);\n\n  return countdown;\n};\n\nexport default useCountdown;\n","import { Container } from 'inversify';\n\nconst container = new Container({ defaultScope: 'Singleton', skipBaseClassChecks: true });\n\nexport { container };\n","import React, { type FC } from 'react';\n\nimport { container } from './container';\n\n// This HOC is used to override a component top-level, using Inversify\n// More info: platforms/web/src/modules/register.ts\nconst createInjectableComponent = <Props extends object>(identifier: symbol, DefaultComponent: FC<Props>) => {\n  return (props: Props) => {\n    const isOverridden = container.isBound(identifier);\n\n    if (isOverridden) {\n      const OverriddenComponent = container.get<FC<Props>>(identifier);\n\n      return <OverriddenComponent {...props} />;\n    }\n\n    return <DefaultComponent {...props} />;\n  };\n};\n\nexport default createInjectableComponent;\n","import React, { type MouseEventHandler } from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nimport Spinner from '../Spinner/Spinner';\nimport createInjectableComponent from '../../modules/createInjectableComponent';\n\nimport styles from './Button.module.scss';\n\nexport const ButtonIdentifier = Symbol(`BUTTON`);\n\ntype Color = 'default' | 'primary' | 'delete';\n\ntype Variant = 'contained' | 'outlined' | 'text' | 'danger' | 'delete';\n\nexport type ButtonProps = {\n  children?: React.ReactNode;\n  label: string;\n  active?: boolean;\n  color?: Color;\n  fullWidth?: boolean;\n  startIcon?: React.ReactElement;\n  variant?: Variant;\n  onClick?: MouseEventHandler<HTMLButtonElement>;\n  tabIndex?: number;\n  size?: 'small' | 'medium' | 'large';\n  to?: string;\n  role?: string;\n  className?: string;\n  type?: 'button' | 'submit' | 'reset';\n  disabled?: boolean;\n  busy?: boolean;\n  id?: string;\n  activeClassname?: string;\n} & React.AriaAttributes;\n\nconst Button: React.FC<ButtonProps> = ({\n  label,\n  children,\n  color = 'default',\n  startIcon,\n  fullWidth = false,\n  active = false,\n  variant = 'outlined',\n  size = 'medium',\n  disabled,\n  busy,\n  type = 'button',\n  to,\n  onClick,\n  className,\n  activeClassname = '',\n  ...rest\n}: ButtonProps) => {\n  const buttonClassName = (isActive: boolean) =>\n    classNames(styles.button, className, styles[color], styles[variant], {\n      [styles.active]: isActive,\n      [activeClassname]: isActive,\n      [styles.fullWidth]: fullWidth,\n      [styles.large]: size === 'large',\n      [styles.small]: size === 'small',\n      [styles.disabled]: disabled,\n    });\n\n  const content = (\n    <>\n      {startIcon && <div className={styles.startIcon}>{startIcon}</div>}\n      {<span className={classNames({ [styles.hidden]: busy }) || undefined}>{label}</span>}\n      {children}\n      {busy && <Spinner className={styles.centerAbsolute} size={'small'} />}\n    </>\n  );\n\n  if (to) {\n    return (\n      <NavLink className={({ isActive }) => buttonClassName(isActive)} to={to} {...rest} end>\n        {content}\n      </NavLink>\n    );\n  }\n\n  return (\n    <button className={buttonClassName(active)} onClick={disabled ? undefined : onClick} type={type} aria-disabled={disabled} {...rest}>\n      {content}\n    </button>\n  );\n};\nexport default createInjectableComponent(ButtonIdentifier, Button);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useCountdown from '@jwp/ott-hooks-react/src/useCountdown';\n\nimport Button from '../Button/Button';\n\nimport styles from './Welcome.module.scss';\n\ntype Props = {\n  onCloseButtonClick?: () => void;\n  onCountdownCompleted?: () => void;\n  siteName?: string;\n};\n\nconst Welcome: React.FC<Props> = ({ onCloseButtonClick, onCountdownCompleted, siteName }) => {\n  const { t } = useTranslation('account');\n  const countdown = useCountdown(10, 1, onCountdownCompleted);\n\n  return (\n    <div className={styles.welcome}>\n      <h2>{t('checkout.welcome_title', { siteName })}</h2>\n      <p>{t('checkout.welcome_description', { siteName })}</p>\n      <Button variant=\"contained\" color=\"primary\" label={t('checkout.start_watching', { countdown })} onClick={onCloseButtonClick} size=\"large\" fullWidth />\n    </div>\n  );\n};\n\nexport default Welcome;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from '../Button/Button';\n\nimport styles from './PaymentFailed.module.scss';\n\ntype Props = {\n  type: 'error' | 'cancelled';\n  message: string | null;\n  onCloseButtonClick: () => void;\n};\n\nconst PaymentFailed: React.FC<Props> = ({ type, message, onCloseButtonClick }: Props) => {\n  const { t } = useTranslation('account');\n  return (\n    <div>\n      <h2 className={styles.title}>{type === 'cancelled' ? t('checkout.payment_cancelled') : t('checkout.payment_error')}</h2>\n      <p className={styles.message}>{type === 'cancelled' ? t('checkout.payment_cancelled_message') : message}</p>\n      <div>\n        <Button label={t('checkout.close')} onClick={onCloseButtonClick} color=\"primary\" variant=\"contained\" size=\"large\" fullWidth />\n      </div>\n    </div>\n  );\n};\n\nexport default PaymentFailed;\n","import React, { type CSSProperties, useEffect, useRef, useState } from 'react';\nimport useEventCallback from '@jwp/ott-hooks-react/src/useEventCallback';\n\ntype Props = {\n  className?: string;\n  createStyle: (status: Status) => CSSProperties;\n  open?: boolean;\n  duration?: number;\n  delay?: number;\n  children?: React.ReactNode;\n  keepMounted?: boolean;\n  onOpenAnimationEnd?: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nexport type Status = 'opening' | 'open' | 'closing' | 'closed';\n\nconst triggerReflow = (element: HTMLElement | null) => element?.scrollTop;\n\nconst Animation: React.FC<Props> = ({\n  className,\n  createStyle,\n  open = true,\n  duration = 250,\n  delay = 0,\n  onOpenAnimationEnd,\n  onCloseAnimationEnd,\n  keepMounted = false,\n  children,\n}) => {\n  const nodeRef = useRef<HTMLDivElement>(null);\n  const [status, setStatus] = useState<Status>('closed');\n  const [hasOpenedBefore, setHasOpenedBefore] = useState<boolean>(false);\n\n  const timeout = useRef<number>();\n  const timeout2 = useRef<number>();\n\n  // use event callbacks to ignore reactive dependencies\n  const openEvent = useEventCallback(() => {\n    setHasOpenedBefore(true);\n    // trigger a reflow to ensure the transition is respected after mount\n    triggerReflow(nodeRef.current);\n\n    timeout.current = window.setTimeout(() => setStatus('opening'), delay);\n    timeout2.current = window.setTimeout(() => {\n      setStatus('open');\n      onOpenAnimationEnd && onOpenAnimationEnd();\n    }, duration + delay);\n  });\n\n  const closeEvent = useEventCallback(() => {\n    if (hasOpenedBefore) {\n      timeout.current = window.setTimeout(() => setStatus('closing'), delay);\n      timeout2.current = window.setTimeout(() => {\n        setStatus('closed');\n        onCloseAnimationEnd && onCloseAnimationEnd();\n      }, duration + delay);\n    }\n  });\n\n  useEffect(() => {\n    if (open) {\n      openEvent();\n    } else {\n      closeEvent();\n    }\n\n    return () => {\n      clearTimeout(timeout.current);\n      clearTimeout(timeout2.current);\n    };\n  }, [open, openEvent, closeEvent]);\n\n  if (!open && status === 'closed' && !keepMounted) {\n    return null;\n  }\n\n  return (\n    <div style={createStyle(status)} className={className} ref={nodeRef}>\n      {children}\n    </div>\n  );\n};\n\nexport default Animation;\n","import React, { type CSSProperties, type ReactNode } from 'react';\n\nimport Animation, { type Status } from '../Animation';\n\ntype Props = {\n  open?: boolean;\n  duration?: number;\n  delay?: number;\n  onOpenAnimationEnd?: () => void;\n  onCloseAnimationEnd?: () => void;\n  children: ReactNode;\n  className?: string;\n};\n\nconst Grow = ({ open = true, duration = 250, delay = 0, onOpenAnimationEnd, onCloseAnimationEnd, children, className }: Props): JSX.Element | null => {\n  const seconds = duration / 1000;\n  const transition = `transform ${seconds}s ease-out`; // todo: -webkit-transform;\n  const createStyle = (status: Status): CSSProperties => ({\n    transition,\n    transform: status === 'opening' || status === 'open' ? 'scale(1)' : 'scale(0.7)',\n  });\n\n  return (\n    <Animation\n      createStyle={(status: Status) => createStyle(status)}\n      open={open}\n      duration={duration}\n      delay={delay}\n      onOpenAnimationEnd={onOpenAnimationEnd}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className={className}\n    >\n      {children}\n    </Animation>\n  );\n};\n\nexport default Grow;\n","export const canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nlet size: number;\n\nexport default function scrollbarSize(recalc?: boolean) {\n  if ((!size && size !== 0) || recalc) {\n    if (canUseDOM) {\n      const scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n  return size;\n}\n\nexport const addScript = (src: string): Promise<void> => {\n  return new Promise((resolve) => {\n    const script: HTMLScriptElement = document.createElement('script');\n    script.type = 'text/javascript';\n    script.async = true;\n    script.src = src;\n    script.onload = () => resolve();\n    script.onerror = (error) => {\n      console.info('Error loading external script', error);\n      throw new Error('Error loading external script');\n    };\n    document.body.appendChild(script);\n  });\n};\n","import { useCallback, useEffect } from 'react';\n\nimport scrollbarSize from '../utils/dom';\n\nconst removeBodyScrolling = () => {\n  document.body.style.marginRight = `${scrollbarSize(true)}px`;\n  document.body.style.overflowY = 'hidden';\n};\n\nconst restoreBodyScrolling = () => {\n  const dialogs = Array.from(document.querySelectorAll('dialog'));\n  const openDialogs = dialogs.filter((dialog) => dialog.open).length;\n\n  if (!openDialogs) {\n    document.body.style.removeProperty('margin-right');\n    document.body.style.removeProperty('overflow-y');\n  }\n};\n\n// shared variable between `useModal` usages\nlet originElement: HTMLElement | undefined;\n\nexport const useModal = () => {\n  const restoreFocus = useCallback(() => {\n    // restore focus when the focus is \"lost\" to the body element\n    if (!originElement || document.activeElement !== document.body) {\n      return;\n    }\n\n    const dialogs = Array.from(document.querySelectorAll('dialog'));\n    const openDialogs = dialogs.filter((dialog) => dialog.open).length;\n\n    // this was the last open dialog\n    if (openDialogs === 0) {\n      originElement.focus();\n      originElement = undefined;\n    }\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      restoreBodyScrolling();\n      restoreFocus();\n    };\n  }, [restoreFocus]);\n\n  const handleOpen = useCallback(() => {\n    if (!originElement) {\n      originElement = document.activeElement as HTMLElement;\n    }\n\n    removeBodyScrolling();\n  }, []);\n\n  const handleClose = useCallback(() => {\n    restoreFocus();\n    restoreBodyScrolling();\n  }, [restoreFocus]);\n\n  return { handleOpen, handleClose };\n};\n","import React, { type HTMLAttributes, type KeyboardEventHandler, type ReactEventHandler, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport useEventCallback from '@jwp/ott-hooks-react/src/useEventCallback';\nimport classNames from 'classnames';\n\nimport Grow from '../Animation/Grow/Grow';\nimport { useModal } from '../../hooks/useModal';\n\nimport styles from './Modal.module.scss';\n\nexport type AnimationProps = {\n  open?: boolean;\n  duration?: number;\n  delay?: number;\n  children: React.ReactNode;\n  className?: string;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype Props = {\n  children?: React.ReactNode;\n  className?: string;\n  centered?: boolean;\n  AnimationComponent?: React.ElementType<AnimationProps>;\n  open: boolean;\n  onClose?: () => void;\n  animationContainerClassName?: string;\n  role?: HTMLAttributes<HTMLElement>['role'];\n} & React.AriaAttributes;\n\nconst Modal: React.FC<Props> = ({\n  open,\n  onClose,\n  children,\n  className,\n  centered,\n  role,\n  AnimationComponent = Grow,\n  animationContainerClassName,\n  ...ariaAttributes\n}: Props) => {\n  const modalRef = useRef<HTMLDialogElement>() as React.MutableRefObject<HTMLDialogElement>;\n  const mouseEventTargetsPairRef = useRef<Record<'downTarget' | 'upTarget', HTMLElement | null>>({ downTarget: null, upTarget: null });\n\n  const { handleOpen, handleClose } = useModal();\n\n  const closeModalEvent = useEventCallback(() => {\n    const onAnimationEndHandler = () => {\n      // modalRef.current?.close();\n      modalRef.current?.classList.remove(styles.close);\n      modalRef.current?.removeEventListener('animationend', onAnimationEndHandler);\n    };\n\n    if (modalRef.current?.open) {\n      modalRef.current.addEventListener('animationend', onAnimationEndHandler);\n      modalRef.current.classList.add(styles.close);\n    }\n  });\n\n  const openModalEvent = useEventCallback(() => {\n    handleOpen();\n    modalRef.current?.showModal();\n    modalRef.current?.classList.remove(styles.close);\n  });\n\n  const keyDownHandler: KeyboardEventHandler<HTMLDialogElement> = (event) => {\n    if (event.key === 'Escape' && modalRef.current.contains(event.target as HTMLElement)) {\n      event.preventDefault();\n      onClose?.();\n    }\n  };\n\n  const closeHandler: ReactEventHandler<HTMLDialogElement> = (event) => {\n    if (modalRef.current.contains(event.target as HTMLElement)) {\n      onClose?.();\n      handleClose();\n    }\n  };\n\n  const closeAnimationEndHandler = () => {\n    modalRef.current?.close();\n  };\n\n  useEffect(() => {\n    if (open) {\n      openModalEvent();\n    } else {\n      closeModalEvent();\n    }\n  }, [openModalEvent, closeModalEvent, open]);\n\n  const clickHandler: ReactEventHandler<HTMLDialogElement> = (event) => {\n    const {\n      current: { downTarget, upTarget },\n    } = mouseEventTargetsPairRef;\n\n    // modal should only close if both mousedown and mouseup are done on the overlay\n    if (downTarget !== upTarget) {\n      return;\n    }\n\n    // Backdrop click (the dialog itself) will close the modal\n    if (event.target === modalRef.current) {\n      onClose?.();\n      handleClose();\n    }\n  };\n\n  return ReactDOM.createPortal(\n    <dialog\n      className={classNames(className, { [styles.centered]: centered })}\n      onKeyDown={keyDownHandler}\n      onClose={closeHandler}\n      onClick={clickHandler}\n      onMouseDown={(e) => {\n        mouseEventTargetsPairRef.current.downTarget = e.target as HTMLElement;\n      }}\n      onMouseUp={(e) => {\n        mouseEventTargetsPairRef.current.upTarget = e.target as HTMLElement;\n      }}\n      ref={modalRef}\n      role={role}\n      {...ariaAttributes}\n    >\n      <AnimationComponent open={open} duration={300} className={animationContainerClassName} onCloseAnimationEnd={closeAnimationEndHandler}>\n        {children}\n      </AnimationComponent>\n    </dialog>,\n    document.querySelector('body') as HTMLElement,\n  );\n};\n\nexport default Modal;\n","import React, { type CSSProperties, type ReactNode } from 'react';\n\nimport Animation, { type Status } from '../Animation';\n\ntype Props = {\n  open?: boolean;\n  duration?: number;\n  delay?: number;\n  onOpenAnimationEnd?: () => void;\n  onCloseAnimationEnd?: () => void;\n  children: ReactNode;\n  direction?: 'left' | 'top' | 'right' | 'bottom';\n  style?: CSSProperties;\n};\n\nconst Slide = ({\n  open = true,\n  duration = 250,\n  delay = 0,\n  onOpenAnimationEnd,\n  onCloseAnimationEnd,\n  children,\n  direction = 'top',\n  style = {},\n}: Props): JSX.Element | null => {\n  const seconds = duration / 1000;\n  const transition = `transform ${seconds}s ease, opacity ${seconds}s ease`; // todo: -webkit-transform;\n  const directions = {\n    left: 'translate(-15px, 0)',\n    top: 'translate(0, -15px)',\n    right: 'translate(15px, 0)',\n    bottom: 'translate(0, 15px)',\n  };\n  const createStyle = (status: Status): CSSProperties => ({\n    transition,\n    transform: status === 'opening' || status === 'open' ? 'translate(0, 0)' : directions[direction],\n    opacity: status === 'opening' || status === 'open' ? 1 : 0,\n    zIndex: 15,\n    ...style,\n  });\n\n  return (\n    <Animation\n      createStyle={(status: Status) => createStyle(status)}\n      open={open}\n      duration={duration}\n      delay={delay}\n      onOpenAnimationEnd={onOpenAnimationEnd}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {children}\n    </Animation>\n  );\n};\n\nexport default Slide;\n","import * as React from \"react\";\nconst SvgClose = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M0 0h24v24H0z\", fill: \"none\" }));\nexport default SvgClose;\n","import classNames from 'classnames';\nimport React, { type ButtonHTMLAttributes } from 'react';\n\nimport styles from './IconButton.module.scss';\n\nexport type Props = ButtonHTMLAttributes<HTMLButtonElement> & {\n  onClick?: () => void;\n  onBlur?: () => void;\n  children: JSX.Element;\n  className?: string;\n};\n\nconst IconButton: React.FC<Props> = ({ children, onClick, className, ...ariaProps }: Props) => {\n  return (\n    <button className={classNames(styles.iconButton, className)} type=\"button\" onClick={onClick} {...ariaProps}>\n      {children}\n    </button>\n  );\n};\n\nexport default IconButton;\n","import classNames from 'classnames';\nimport React, { type FC, type SVGProps } from 'react';\n\nimport styles from './Icon.module.scss';\n\nexport type Props = {\n  icon: FC<SVGProps<SVGSVGElement>>;\n  className?: string;\n};\n\nconst Icon: FC<Props> = ({ icon: IconComponent, className }) => {\n  return <IconComponent className={classNames(styles.icon, className)} aria-hidden=\"true\" />;\n};\n\nexport default Icon;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport Close from '@jwp/ott-theme/assets/icons/close.svg?react';\n\nimport IconButton from '../IconButton/IconButton';\nimport Icon from '../Icon/Icon';\n\nimport styles from './ModalCloseButton.module.scss';\n\ntype Props = {\n  onClick?: () => void;\n  visible?: boolean;\n};\n\nconst ModalCloseButton: React.FC<Props> = ({ onClick, visible = true }: Props) => {\n  const { t } = useTranslation('common');\n\n  return (\n    <IconButton onClick={onClick} aria-label={t('close_modal')} className={classNames(styles.modalCloseButton, { [styles.hidden]: !visible })}>\n      <Icon icon={Close} />\n    </IconButton>\n  );\n};\n\nexport default ModalCloseButton;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { testId } from '@jwp/ott-common/src/utils/common';\n\nimport Modal from '../Modal/Modal';\nimport Slide from '../Animation/Slide/Slide';\nimport ModalCloseButton from '../ModalCloseButton/ModalCloseButton';\n\nimport styles from './Dialog.module.scss';\n\ntype Props = {\n  open: boolean;\n  onClose: () => void;\n  size?: 'small' | 'large';\n  children: React.ReactNode;\n  role?: React.AriaRole;\n} & React.AriaAttributes;\n\nconst Dialog: React.FC<Props> = ({ open, onClose, children, size = 'small', role, ...ariaAttributes }: Props) => {\n  return (\n    <Modal open={open} onClose={onClose} AnimationComponent={Slide} role={role} centered>\n      <div className={classNames(styles.dialog, styles[size])} data-testid={testId('dialog')} {...ariaAttributes}>\n        {children}\n        <ModalCloseButton onClick={onClose} />\n      </div>\n    </Modal>\n  );\n};\n\nexport default Dialog;\n","import { useCallback, useState } from 'react';\nimport { type AnySchema, ValidationError, type SchemaOf } from 'yup';\nimport type { FormErrors, GenericFormValues, UseFormBlurHandler, UseFormChangeHandler, UseFormSubmitHandler } from '@jwp/ott-common/types/form';\nimport { FormValidationError } from '@jwp/ott-common/src/errors/FormValidationError';\nimport { useTranslation } from 'react-i18next';\n\nexport type UseFormReturnValue<T> = {\n  values: T;\n  errors: FormErrors<T>;\n  validationSchemaError: boolean;\n  submitting: boolean;\n  handleChange: UseFormChangeHandler;\n  handleBlur: UseFormBlurHandler;\n  handleSubmit: UseFormSubmitHandler;\n  setValue: (key: keyof T, value: T[keyof T]) => void;\n  setErrors: (errors: FormErrors<T>) => void;\n  setSubmitting: (submitting: boolean) => void;\n  setValidationSchemaError: (error: boolean) => void;\n  reset: () => void;\n};\n\ntype UseFormMethods<T> = {\n  setValue: (key: keyof T, value: string | boolean) => void;\n  setErrors: (errors: FormErrors<T>) => void;\n  setSubmitting: (submitting: boolean) => void;\n  setValidationSchemaError: (error: boolean) => void;\n  validate: (validationSchema: AnySchema) => boolean;\n};\n\nexport type UseFormOnSubmitHandler<T> = (values: T, formMethods: UseFormMethods<T>) => void;\n\nexport default function useForm<T extends GenericFormValues>({\n  initialValues,\n  validationSchema,\n  validateOnBlur = false,\n  onSubmit,\n  onSubmitSuccess,\n  onSubmitError,\n}: {\n  initialValues: T;\n  validationSchema?: SchemaOf<T>;\n  validateOnBlur?: boolean;\n  onSubmit: UseFormOnSubmitHandler<T>;\n  onSubmitSuccess?: (values: T) => void;\n  onSubmitError?: ({ error, resetValue }: { error: unknown; resetValue: (key: keyof T) => void }) => void;\n}): UseFormReturnValue<T> {\n  const { t } = useTranslation('error');\n  const [touched, setTouched] = useState<Record<keyof T, boolean>>(\n    Object.fromEntries((Object.keys(initialValues) as Array<keyof T>).map((key) => [key, false])) as Record<keyof T, boolean>,\n  );\n  const [values, setValues] = useState<T>(initialValues);\n  const [submitting, setSubmitting] = useState(false);\n  const [errors, setErrors] = useState<FormErrors<T>>({});\n  const [validationSchemaError, setValidationSchemaError] = useState(false);\n\n  const reset = useCallback(() => {\n    setValues(initialValues);\n    setErrors({});\n    setValidationSchemaError(false);\n    setSubmitting(false);\n    setTouched(Object.fromEntries((Object.keys(initialValues) as Array<keyof T>).map((key) => [key, false])) as Record<keyof T, boolean>);\n  }, [initialValues]);\n\n  const validateField = (name: string, formValues: T) => {\n    if (!validationSchema) return;\n\n    try {\n      validationSchema.validateSyncAt(name, formValues);\n\n      // clear error\n      setErrors((errors) => ({ ...errors, [name]: null }));\n    } catch (error: unknown) {\n      if (error instanceof ValidationError) {\n        const errorMessage = error.errors[0];\n        setErrors((errors) => ({ ...errors, [name]: errorMessage }));\n        setValidationSchemaError(true);\n      }\n    }\n  };\n\n  const setValue = useCallback((name: keyof T, value: string | boolean) => {\n    setValues((current) => ({ ...current, [name]: value }));\n  }, []);\n\n  const handleChange: UseFormChangeHandler = (event) => {\n    const name = event.target.name;\n    const value = event.target instanceof HTMLInputElement && event.target.type === 'checkbox' ? event.target.checked : event.target.value;\n\n    const newValues = { ...values, [name]: value };\n\n    setValues(newValues);\n    setTouched((current) => ({ ...current, [name]: value }));\n\n    if (errors[name]) {\n      validateField(name, newValues);\n    }\n  };\n\n  const handleBlur: UseFormBlurHandler = (event) => {\n    if (!validateOnBlur || !touched[event.target.name]) return;\n\n    validateField(event.target.name, values);\n  };\n\n  const validate = (validationSchema: AnySchema) => {\n    try {\n      validationSchema.validateSync(values, { abortEarly: false });\n\n      return true;\n    } catch (error: unknown) {\n      if (error instanceof ValidationError) {\n        const newErrors: Record<string, string> = {};\n\n        for (let index = 0; index < error.inner.length; index++) {\n          const path = error.inner[index].path as string;\n          const message = error.inner[index].errors[0] as string;\n\n          if (path && message && !newErrors[path]) {\n            newErrors[path] = message;\n          }\n        }\n\n        if (error.inner.every((error) => error.type === 'required')) {\n          newErrors.form = t('validation_form_error.required');\n        } else {\n          newErrors.form = t('validation_form_error.other');\n        }\n\n        setErrors(newErrors as FormErrors<T>);\n      }\n    }\n\n    return false;\n  };\n\n  const handleSubmit: UseFormSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (!onSubmit || submitting) return;\n\n    // reset errors before submitting\n    setErrors({});\n    setValidationSchemaError(false);\n\n    // validate values with schema\n    if (validationSchema && !validate(validationSchema)) {\n      setValidationSchemaError(true);\n      return;\n    }\n\n    // start submitting\n    setSubmitting(true);\n\n    try {\n      await onSubmit(values, { setValue, setErrors, setSubmitting, setValidationSchemaError, validate });\n      onSubmitSuccess?.(values);\n    } catch (error: unknown) {\n      const newErrors: Record<string, string> = {};\n\n      if (error instanceof FormValidationError) {\n        Object.entries(error.errors).forEach(([key, value]) => {\n          if (key && value && !newErrors[key]) {\n            newErrors[key] = value.join(',');\n          }\n        });\n      } else if (error instanceof Error) {\n        newErrors.form = error.message;\n      } else {\n        newErrors.form = t('unknown_error');\n      }\n      setErrors(newErrors as FormErrors<T>);\n\n      onSubmitError?.({\n        error,\n        resetValue: (key: keyof T) => setValue(key, ''),\n      });\n    }\n\n    setSubmitting(false);\n  };\n\n  return {\n    values,\n    errors,\n    validationSchemaError,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    submitting,\n    setValue,\n    setErrors,\n    setSubmitting,\n    setValidationSchemaError,\n    reset,\n  };\n}\n","import { useState } from 'react';\n\nconst useToggle = (initialState: boolean = false): [boolean, (forceValue?: boolean) => void] => {\n  const [state, setState] = useState(initialState);\n\n  const toggle = (forceValue?: boolean) => setState((current) => (typeof forceValue !== 'undefined' ? forceValue : !current));\n\n  return [state, toggle];\n};\n\nexport default useToggle;\n","import * as React from \"react\";\nconst SvgVisibility = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z\" }));\nexport default SvgVisibility;\n","import * as React from \"react\";\nconst SvgVisibilityOff = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M11.83,9L15,12.16C15,12.11 15,12.05 15,12A3,3 0 0,0 12,9C11.94,9 11.89,9 11.83,9M7.53,9.8L9.08,11.35C9.03,11.56 9,11.77 9,12A3,3 0 0,0 12,15C12.22,15 12.44,14.97 12.65,14.92L14.2,16.47C13.53,16.8 12.79,17 12,17A5,5 0 0,1 7,12C7,11.21 7.2,10.47 7.53,9.8M2,4.27L4.28,6.55L4.73,7C3.08,8.3 1.78,10 1,12C2.73,16.39 7,19.5 12,19.5C13.55,19.5 15.03,19.2 16.38,18.66L16.81,19.08L19.73,22L21,20.73L3.27,3M12,7A5,5 0 0,1 17,12C17,12.64 16.87,13.26 16.64,13.82L19.57,16.75C21.07,15.5 22.27,13.86 23,12C21.27,7.61 17,4.5 12,4.5C10.6,4.5 9.26,4.75 8,5.2L10.17,7.35C10.74,7.13 11.35,7 12,7Z\" }));\nexport default SvgVisibilityOff;\n","import { IS_TEST_MODE } from '@jwp/ott-common/src/utils/common';\nimport { useEffect, useState } from 'react';\n\nconst generateId = (prefix?: string, suffix?: string) => {\n  // This test code ensures that ID's in snapshots are always the same.\n  // Ideally it would be mocked in the test setup but there seems to be a bug with vitest if you mock Math.random\n  const randomId = IS_TEST_MODE ? 1235 : Math.random() * 10000;\n\n  return [prefix, Math.round(randomId), suffix]\n    .filter(Boolean)\n    .join('_')\n    .replace(/[\\s.]+/g, '_')\n    .toLowerCase();\n};\n\nconst useOpaqueId = (prefix?: string, suffix?: string, override?: string): string => {\n  const [id, setId] = useState(override || generateId(prefix, suffix));\n\n  useEffect(() => {\n    setId(override || generateId(prefix, suffix));\n  }, [override, prefix, suffix]);\n\n  return id;\n};\n\nexport default useOpaqueId;\n","import React from 'react';\nimport classNames from 'classnames';\nimport useOpaqueId from '@jwp/ott-hooks-react/src/useOpaqueId';\n\nimport styles from './HelperText.module.scss';\n\ntype Props = {\n  children: React.ReactNode;\n  className?: string;\n  error?: boolean;\n  id?: string;\n};\n\nconst HelperText: React.FC<Props> = ({ children, className, error, id }: Props) => {\n  const helperId = useOpaqueId('helper_text', undefined, id);\n\n  return children ? (\n    <div id={helperId} className={classNames(styles.helperText, { [styles.error]: error }, className)}>\n      {children}\n    </div>\n  ) : null;\n};\n\nexport default HelperText;\n","import React from 'react';\nimport classNames from 'classnames';\nimport useOpaqueId from '@jwp/ott-hooks-react/src/useOpaqueId';\n\nimport HelperText from '../HelperText/HelperText';\nimport type { FormControlProps } from '../../types/form';\n\nimport styles from './FormField.module.scss';\n\ntype RenderInputProps = {\n  helperTextId: string;\n  id: string;\n};\n\ntype Props = {\n  helperText?: React.ReactNode;\n  renderInput: (fieldProps: RenderInputProps) => React.ReactElement;\n} & Omit<FormControlProps, 'value' | 'placeholder'>;\n\nexport const FormField = ({ className, renderInput, required, label, error, helperText, testId, editing = true, name }: Props) => {\n  const formFieldClassName = classNames(styles.formField, className);\n  const id = useOpaqueId('text-field', name);\n  const helperTextId = useOpaqueId('helper_text', name);\n\n  return (\n    <div className={formFieldClassName} data-testid={testId}>\n      {!!label && (\n        <label htmlFor={id} className={styles.label}>\n          {label}\n          {required && editing ? <span aria-hidden=\"true\">*</span> : null}\n        </label>\n      )}\n      {renderInput({ helperTextId, id })}\n      {editing && (\n        <HelperText id={helperTextId} error={error}>\n          {helperText}\n        </HelperText>\n      )}\n    </div>\n  );\n};\n","import React, { type InputHTMLAttributes, type RefObject, type TextareaHTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nimport type { FormControlProps } from '../../types/form';\n\nimport styles from './Input.module.scss';\n\ntype CommonProps = {\n  id?: string;\n  helperTextId?: string;\n  leftControl?: React.ReactNode;\n  rightControl?: React.ReactNode;\n  multiline?: boolean;\n} & FormControlProps;\n\ntype HTMLInputProps = Omit<InputHTMLAttributes<HTMLInputElement>, 'size'>;\ntype HTMLTextAreaProps = Omit<TextareaHTMLAttributes<HTMLTextAreaElement>, 'size'>;\n\ntype InputProps = HTMLInputProps & {\n  type?: InputHTMLAttributes<HTMLInputElement>['type'];\n  multiline?: boolean;\n  inputRef?: RefObject<HTMLInputElement>;\n  textAreaRef?: never;\n} & CommonProps;\ntype TextAreaProps = HTMLTextAreaProps & { type?: never; multiline: true; inputRef?: never; textAreaRef?: RefObject<HTMLTextAreaElement> } & CommonProps;\n\nexport type Props = InputProps | TextAreaProps;\n\nconst isTextArea = (_props: HTMLInputProps | HTMLTextAreaProps, multiline?: boolean): _props is HTMLTextAreaProps => !!multiline;\n\nconst Input = ({\n  required,\n  className,\n  disabled,\n  editing = true,\n  value,\n  id,\n  name,\n  multiline,\n  error,\n  helperTextId,\n  type,\n  textAreaRef,\n  inputRef,\n  leftControl,\n  rightControl,\n  ...inputProps\n}: Props) => {\n  // Default to 'text' if 'type' property is absent, which occurs in textareas.\n  const inputType = type || 'text';\n  const containerClassName = classNames(\n    styles.container,\n    {\n      [styles.error]: error,\n      [styles.disabled]: disabled,\n      [styles.leftControl]: !!leftControl,\n      [styles.rightControl]: !!rightControl,\n    },\n    className,\n  );\n\n  const ariaAttributes = {\n    'aria-required': !!required,\n    'aria-invalid': Boolean(required && error && value !== ''),\n    'aria-describedby': helperTextId,\n  } as const;\n\n  const commonProps: HTMLInputProps | HTMLTextAreaProps = {\n    id,\n    name,\n    value,\n    disabled,\n    rows: multiline ? 3 : undefined,\n    className: styles.input,\n    readOnly: !editing,\n    required: required,\n    ...ariaAttributes,\n    ...inputProps,\n  };\n\n  const input = isTextArea(commonProps, multiline) ? (\n    <textarea {...commonProps} ref={textAreaRef} />\n  ) : (\n    <input {...commonProps} type={inputType} ref={inputRef} />\n  );\n\n  return editing ? (\n    <div className={containerClassName}>\n      {leftControl ? <div className={styles.control}>{leftControl}</div> : null}\n      {input}\n      {rightControl ? <div className={styles.control}>{rightControl}</div> : null}\n    </div>\n  ) : (\n    input\n  );\n};\n\nexport default Input;\n","import React, { type InputHTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nimport { FormField } from '../../FormField/FormField';\nimport Input from '../../Input/Input';\nimport type { FormControlProps } from '../../../types/form';\n\nimport styles from './TextField.module.scss';\n\ntype InputProps = Omit<InputHTMLAttributes<HTMLInputElement>, 'size'>;\n\ntype Props = InputProps & {\n  helperText?: React.ReactNode;\n  multiline?: boolean;\n  leftControl?: React.ReactNode;\n  rightControl?: React.ReactNode;\n} & FormControlProps;\n\nconst TextField: React.FC<Props> = ({ className, helperText, label, error, required, editing = true, testId, name, ...inputProps }) => {\n  return (\n    <FormField\n      className={classNames(styles.textField, className)}\n      error={error}\n      helperText={helperText}\n      label={label}\n      required={required}\n      editing={editing}\n      testId={testId}\n      name={name}\n      renderInput={(fieldProps) => <Input editing={editing} error={error} name={name} required={required} {...fieldProps} {...inputProps} />}\n    />\n  );\n};\n\nexport default TextField;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport styles from './PasswordStrength.module.scss';\n\ntype Props = {\n  password: string;\n};\n\nconst PASSWORD_REGEX = /^(?=.*[a-z])(?=.*[0-9]).{8,}$/;\n\nconst PasswordStrength: React.FC<Props> = ({ password }: Props) => {\n  const { t } = useTranslation('account');\n\n  const passwordStrength = (password: string) => {\n    let strength = 0;\n\n    if (!password.match(PASSWORD_REGEX)) return strength;\n\n    if (password.match(/[A-Z]+/)) {\n      strength += 1;\n    }\n\n    if (password.match(/(\\d.*\\d)/)) {\n      strength += 1;\n    }\n\n    if (password.match(/[!,@#$%^&*?_~]/)) {\n      strength += 1;\n    }\n\n    if (password.match(/([!,@#$%^&*?_~].*[!,@#$%^&*?_~])/)) {\n      strength += 1;\n    }\n\n    return strength;\n  };\n  const strength = passwordStrength(password);\n  const labels = [\n    t('registration.password_strength.invalid'),\n    t('registration.password_strength.weak'),\n    t('registration.password_strength.fair'),\n    t('registration.password_strength.strong'),\n    t('registration.password_strength.very_strong'),\n  ];\n\n  if (!strength) return null;\n\n  return (\n    <div className={styles.passwordStrength} data-strength={strength}>\n      <div className={styles.passwordStrengthBar}>\n        <div className={styles.passwordStrengthFill} />\n      </div>\n      <span className=\"hidden\">{t('registration.password_strength_prefix')}</span> <span className={styles.label}>{labels[strength]}</span>\n    </div>\n  );\n};\n\nexport default PasswordStrength;\n","import React, { type InputHTMLAttributes } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useToggle from '@jwp/ott-hooks-react/src/useToggle';\nimport Visibility from '@jwp/ott-theme/assets/icons/visibility.svg?react';\nimport VisibilityOff from '@jwp/ott-theme/assets/icons/visibility_off.svg?react';\n\nimport TextField from '../TextField/TextField';\nimport PasswordStrength from '../../PasswordStrength/PasswordStrength';\nimport IconButton from '../../IconButton/IconButton';\nimport Icon from '../../Icon/Icon';\nimport type { FormControlProps } from '../../../types/form';\n\ntype InputProps = Omit<InputHTMLAttributes<HTMLInputElement>, 'size'>;\n\ntype Props = InputProps & {\n  helperText?: React.ReactNode;\n  showToggleView?: boolean;\n  showHelperText?: boolean;\n} & FormControlProps;\n\nconst PasswordField: React.FC<Props> = ({ value, showToggleView = true, helperText, showHelperText = true, ...props }: Props) => {\n  const { t } = useTranslation('account');\n  const [viewPassword, toggleViewPassword] = useToggle();\n\n  return (\n    <TextField\n      {...props}\n      helperText={\n        helperText ??\n        (showHelperText ? (\n          <React.Fragment>\n            <PasswordStrength password={value || ''} />\n            {t('reset.password_helper_text')}\n          </React.Fragment>\n        ) : null)\n      }\n      type={viewPassword ? 'text' : 'password'}\n      rightControl={\n        showToggleView ? (\n          <IconButton aria-label={t('reset.view_password')} onClick={() => toggleViewPassword()} aria-pressed={viewPassword}>\n            <Icon icon={viewPassword ? Visibility : VisibilityOff} />\n          </IconButton>\n        ) : null\n      }\n      required\n    />\n  );\n};\n\nexport default PasswordField;\n","import { getModule } from '@jwp/ott-common/src/modules/container';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport type { DeleteAccountFormData } from '@jwp/ott-common/types/account';\nimport useForm from '@jwp/ott-hooks-react/src/useForm';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from 'react-query';\nimport { useLocation, useNavigate } from 'react-router';\nimport { object, string } from 'yup';\nimport { FormValidationError } from '@jwp/ott-common/src/errors/FormValidationError';\nimport classNames from 'classnames';\n\nimport { useAriaAnnouncer } from '../../containers/AnnouncementProvider/AnnoucementProvider';\nimport { modalURLFromLocation } from '../../utils/location';\nimport Button from '../Button/Button';\nimport PasswordField from '../form-fields/PasswordField/PasswordField';\nimport useQueryParam from '../../hooks/useQueryParam';\nimport FormFeedback from '../FormFeedback/FormFeedback';\n\nimport styles from './DeleteAccountModal.module.scss';\n\nconst DeleteAccountModal = () => {\n  const accountController = getModule(AccountController);\n\n  const { t } = useTranslation('user');\n  const announce = useAriaAnnouncer();\n  const u = useQueryParam('u');\n\n  const [enteredPassword, setEnteredPassword] = useState<string>('');\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    errors,\n    setErrors,\n    reset: resetForm,\n  } = useForm<DeleteAccountFormData>({\n    initialValues: { password: '' },\n    validationSchema: object().shape({ password: string().required(t('login.field_required')) }),\n    onSubmit: (values) => {\n      setEnteredPassword(values.password);\n      navigate(modalURLFromLocation(location, 'delete-account-confirmation'), { replace: true });\n    },\n  });\n\n  const deleteAccount = useMutation(accountController.deleteAccountData, {\n    onSuccess: async () => {\n      navigate('/');\n      await accountController.logout();\n      announce(t('account.delete_account.success'), 'success');\n    },\n    onError: (error: unknown) => {\n      if (error instanceof FormValidationError) {\n        setErrors(error.errors);\n        navigate(modalURLFromLocation(location, 'delete-account'), { replace: true });\n      }\n      setEnteredPassword('');\n    },\n  });\n\n  useEffect(() => {\n    // when the user navigates directly to the confirmation step\n    if (u === 'delete-account-confirmation' && !enteredPassword) {\n      navigate(modalURLFromLocation(location, 'delete-account'), { replace: true });\n    }\n  }, [location, u, navigate, enteredPassword, deleteAccount, resetForm]);\n\n  const handleCancel = useCallback(() => {\n    navigate(modalURLFromLocation(location, null), { replace: true });\n  }, [location, navigate]);\n\n  // step 2: delete account confirmation\n  if (enteredPassword) {\n    return (\n      <div>\n        <h2 className={styles.heading}>{t('account.delete_account.title')}</h2>\n        <div className={styles.disclaimer}>\n          <p>{t('account.delete_account.modal.text_data_erasure')}</p>\n          <p>{t('account.delete_account.modal.text_revoked_access')}</p>\n          <div className={styles.warningBox}>\n            <p>{t('account.delete_account.modal.warning')}</p>\n          </div>\n          <p>\n            {t('account.delete_account.modal.text_cant_be_undone')} <br />\n            {t('account.delete_account.modal.text_contacts')}\n          </p>\n        </div>\n        <div className={styles.buttons}>\n          <Button disabled={deleteAccount.isLoading} variant=\"text\" label={t('account.cancel')} onClick={handleCancel} />\n          <Button\n            disabled={deleteAccount.isLoading}\n            variant=\"delete\"\n            label={t('account.delete_account.title')}\n            onClick={() => {\n              deleteAccount.mutate(enteredPassword);\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  // step 1: enter your password\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className={styles.heading}>{t('account.delete_account.title')}</h2>\n      <p className={styles.paragraph}>{t('account.delete_account.modal.description')}</p>\n      {errors.form && <FormFeedback variant=\"error\">{errors.form}</FormFeedback>}\n      <PasswordField\n        value={values.password}\n        onChange={handleChange}\n        label={t('account.password')}\n        placeholder={t('account.delete_account.modal.placeholder')}\n        error={!!errors.password || !!errors.form}\n        helperText={errors.password}\n        name=\"password\"\n        showHelperText={false}\n      />\n      <div className={classNames(styles.buttons, styles.stacked)}>\n        <Button type=\"submit\" color=\"primary\" label={t('account.continue')} fullWidth />\n        <Button type=\"button\" onClick={handleCancel} variant=\"text\" label={t('account.cancel')} fullWidth />\n      </div>\n    </form>\n  );\n};\n\nexport default DeleteAccountModal;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useNavigate } from 'react-router';\nimport { useSearchParams } from 'react-router-dom';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport CheckoutController from '@jwp/ott-common/src/controllers/CheckoutController';\nimport { ACCESS_MODEL } from '@jwp/ott-common/src/constants';\nimport useEventCallback from '@jwp/ott-hooks-react/src/useEventCallback';\n\nimport Button from '../Button/Button';\nimport Spinner from '../Spinner/Spinner';\nimport { modalURLFromLocation } from '../../utils/location';\nimport { useAriaAnnouncer } from '../../containers/AnnouncementProvider/AnnoucementProvider';\n\nimport styles from './FinalizePayment.module.scss';\n\nconst FinalizePayment = () => {\n  const accountController = getModule(AccountController);\n  const checkoutController = getModule(CheckoutController);\n\n  const { t } = useTranslation('account');\n  const announce = useAriaAnnouncer();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const { accessModel } = useConfigStore(({ accessModel }) => ({ accessModel }));\n  const [searchParams] = useSearchParams();\n  const redirectResult = searchParams.get('redirectResult');\n  const orderIdQueryParam = searchParams.get('orderId');\n\n  const [errorMessage, setErrorMessage] = useState<string>();\n\n  const paymentSuccessUrl = useMemo(() => {\n    return modalURLFromLocation(location, accessModel === ACCESS_MODEL.SVOD ? 'welcome' : null);\n  }, [accessModel, location]);\n\n  const checkPaymentResult = useEventCallback(async (redirectResult: string) => {\n    const orderId = orderIdQueryParam ? parseInt(orderIdQueryParam, 10) : undefined;\n\n    try {\n      await checkoutController.finalizeAdyenPayment({ redirectResult: decodeURI(redirectResult) }, orderId);\n      await accountController.reloadSubscriptions({ retry: 10 });\n\n      announce(t('checkout.payment_success'), 'success');\n      navigate(paymentSuccessUrl);\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        setErrorMessage(error.message);\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (!redirectResult) return;\n\n    checkPaymentResult(redirectResult);\n  }, [checkPaymentResult, redirectResult]);\n\n  return (\n    <div className={styles.container}>\n      {errorMessage ? (\n        <>\n          <h2 className={styles.title}>{errorMessage}</h2>\n          <Button\n            label={t('checkout.go_back_to_checkout')}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={() => navigate(modalURLFromLocation(location, 'checkout'))}\n            fullWidth\n          />\n        </>\n      ) : (\n        <div>\n          <Spinner />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FinalizePayment;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport CheckoutController from '@jwp/ott-common/src/controllers/CheckoutController';\n\ntype IntervalCheckAccessPayload = {\n  interval?: number;\n  iterations?: number;\n  offerId?: string;\n  callback?: ({ hasAccess, offerId }: { hasAccess: boolean; offerId: string }) => void;\n};\n\nconst useCheckAccess = () => {\n  const accountController = getModule(AccountController);\n  const checkoutController = getModule(CheckoutController);\n\n  const intervalRef = useRef<number>();\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n  const { t } = useTranslation('user');\n\n  const offers = checkoutController.getSubscriptionOfferIds();\n\n  const intervalCheckAccess = useCallback(\n    ({ interval = 3000, iterations = 5, offerId = offers?.[0], callback }: IntervalCheckAccessPayload) => {\n      if (!offerId) {\n        callback?.({ hasAccess: false, offerId: '' });\n        return;\n      }\n\n      intervalRef.current = window.setInterval(async () => {\n        const hasAccess = await accountController.checkEntitlements(offerId);\n\n        if (hasAccess) {\n          window.clearInterval(intervalRef.current);\n          // No duplicate retry mechanism. This can also be a TVOD offer which isn't validated using the\n          // reloadSubscriptions method.\n          await accountController.reloadSubscriptions();\n          callback?.({ hasAccess: true, offerId: offerId || '' });\n        } else if (--iterations === 0) {\n          window.clearInterval(intervalRef.current);\n          setErrorMessage(t('payment.longer_than_usual'));\n          callback?.({ hasAccess: false, offerId: offerId || '' });\n        }\n      }, interval);\n    },\n    [offers, t, accountController],\n  );\n\n  useEffect(() => {\n    return () => {\n      window.clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  return { intervalCheckAccess, errorMessage };\n};\n\nexport default useCheckAccess;\n","import React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport useCheckAccess from '@jwp/ott-hooks-react/src/useCheckAccess';\nimport { modalURLFromLocation } from '@jwp/ott-ui-react/src/utils/location';\n\nimport Spinner from '../Spinner/Spinner';\nimport { useAriaAnnouncer } from '../../containers/AnnouncementProvider/AnnoucementProvider';\nimport useQueryParam from '../../hooks/useQueryParam';\n\nimport styles from './WaitingForPayment.module.scss';\n\nconst WaitingForPayment = () => {\n  const { t } = useTranslation('account');\n  const offerId = useQueryParam('offerId') || undefined;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const announce = useAriaAnnouncer();\n  const { intervalCheckAccess, errorMessage } = useCheckAccess();\n\n  useEffect(() => {\n    intervalCheckAccess({\n      interval: 3000,\n      iterations: 5,\n      offerId,\n      callback: ({ hasAccess, offerId }) => {\n        if (!hasAccess) return;\n\n        announce(t('checkout.payment_success'), 'success');\n\n        // close the modal for PPV/TVOD offers\n        if (offerId.startsWith('C') || offerId.startsWith('P')) {\n          // @TODO should we show a dedicated modal for TVOD access?\n          navigate(modalURLFromLocation(location, null));\n        } else {\n          navigate(modalURLFromLocation(location, 'welcome'));\n        }\n      },\n    });\n    //eslint-disable-next-line\n  }, []);\n  return (\n    <div className={styles.center}>\n      {errorMessage ? (\n        <h2>{errorMessage}</h2>\n      ) : (\n        <>\n          <Spinner />\n          <h2>{t('checkout.waiting_for_payment')}</h2>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default WaitingForPayment;\n","import React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from '../Button/Button';\nimport { type AriaAnnouncerVariant, useAriaAnnouncer } from '../../containers/AnnouncementProvider/AnnoucementProvider';\n\nimport styles from './UpgradeSubscription.module.scss';\n\ntype Props = {\n  type: 'error' | 'success' | 'pending';\n  onCloseButtonClick: () => void;\n};\n\nconst UpgradeSubscription: React.FC<Props> = ({ type, onCloseButtonClick }: Props) => {\n  const { t } = useTranslation('account');\n  const announce = useAriaAnnouncer();\n\n  // these comments exist for extracting dynamic i18n keys\n  // t('account:checkout.upgrade_success');\n  // t('account:checkout.upgrade_success_message');\n  // t('account:checkout.upgrade_pending');\n  // t('account:checkout.upgrade_pending_message');\n  // t('account:checkout.upgrade_error');\n  // t('account:checkout.upgrade_error_message');\n  const title = t(`checkout.upgrade_${type}`);\n  const message = t(`checkout.upgrade_${type}_message`);\n\n  useEffect(() => {\n    const typeToAnnounce = { error: 'error', success: 'succes', pending: 'info' }[type] as AriaAnnouncerVariant;\n\n    announce(message, typeToAnnounce);\n  }, [announce, message, type]);\n\n  return (\n    <div>\n      <h2 className={styles.title}>{title}</h2>\n      <p className={styles.message}>{message}</p>\n      <div>\n        <Button label={t('checkout.close')} onClick={onCloseButtonClick} color=\"primary\" variant=\"contained\" size=\"large\" fullWidth />\n      </div>\n    </div>\n  );\n};\n\nexport default UpgradeSubscription;\n","import { useTranslation } from 'react-i18next';\nimport { useLocation, useNavigate } from 'react-router';\nimport { useCallback, useState } from 'react';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\n\nimport Button from '../Button/Button';\nimport FormFeedback from '../FormFeedback/FormFeedback';\nimport { modalURLFromLocation } from '../../utils/location';\n\nimport styles from './DeleteAccountPasswordWarning.module.scss';\n\nconst DeleteAccountPasswordWarning = () => {\n  const accountController = getModule(AccountController);\n\n  const { t } = useTranslation('user');\n  const email = useAccountStore((state) => state.user?.email);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleCancel = useCallback(() => {\n    navigate(modalURLFromLocation(location, null), { replace: true });\n  }, [location, navigate]);\n  const proceedToAddPasswordClickHandler = async () => {\n    try {\n      if (email) {\n        await accountController.resetPassword(email, '');\n        navigate(modalURLFromLocation(location, 'add-password'));\n      }\n    } catch (error: unknown) {\n      setErrorMessage(t('account.add_password_error'));\n    }\n  };\n\n  return (\n    <div className={styles.formContainer}>\n      {errorMessage && (\n        <div className={styles.formFeedback}>\n          <FormFeedback variant=\"error\">{errorMessage}</FormFeedback>\n        </div>\n      )}\n      <h2 className={styles.heading}>{t('account.delete_account_password_warning.title')}</h2>\n      <p className={styles.paragraph}>{t('account.delete_account_password_warning.text')}</p>\n      <div className={styles.passwordButtonsContainer}>\n        <Button\n          type=\"submit\"\n          onClick={proceedToAddPasswordClickHandler}\n          className={styles.button}\n          color=\"primary\"\n          fullWidth\n          label={t('account.proceed_to_adding_a_password')}\n        />\n        <Button type=\"button\" onClick={handleCancel} className={styles.button} variant=\"text\" fullWidth label={t('account.cancel')} />\n      </div>\n    </div>\n  );\n};\n\nexport default DeleteAccountPasswordWarning;\n","import * as React from \"react\";\nconst SvgCreditcard = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { fill: \"currentColor\", d: \"M20,8H4V6H20M20,18H4V12H20M20,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V6C22,4.89 21.1,4 20,4Z\" }));\nexport default SvgCreditcard;\n","import * as React from \"react\";\nconst SvgPaypal = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M7.37083 12.6026c-.70164 0-1.28549-.0571-1.72496-.1142l-1.34375 6.9595H.179688L3.83225.516163C5.08988.201006 7.07827 0 8.97801 0c1.75279 0 3.79949.286619 5.23309 1.28917 1.3172.88839 2.1354 2.23464 2.1354 4.0958 0 2.4344-1.1386 4.26703-2.6901 5.44083-1.6084 1.2333-3.8881 1.7768-6.28557 1.7768zm1.72496-9.30834c-.78902 0-1.34375.05832-1.69457.14393L6.28924 9.13832c.43821.08561.90681.14269 1.60845.14269 2.54311 0 4.20851-1.60433 4.20851-3.52257 0-1.8624-1.3741-2.46418-3.01041-2.46418zm7.22271.21844c.523.18487 1.0195.4169 1.4552.72213 1.3158.88715 2.1353 2.23339 2.1365 4.09456 0 2.43441-1.1398 4.26701-2.69 5.44201-1.6084 1.2321-3.8869 1.7756-6.2856 1.7756-.7016 0-1.28676-.0571-1.72497-.1154l-1.34501 6.9595H3.74219l.31915-1.6577h1.30702l1.34502-6.9582c.4382.057 1.02206.1141 1.72496.1141 2.39746 0 4.67586-.5447 6.28556-1.7755 1.549-1.1738 2.6888-3.00769 2.6888-5.44209 0-1.29909-.4053-2.34258-1.0942-3.15901z\" }));\nexport default SvgPaypal;\n","import React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport type { PaymentMethod } from '@jwp/ott-common/types/checkout';\nimport CreditCard from '@jwp/ott-theme/assets/icons/creditcard.svg?react';\nimport PayPal from '@jwp/ott-theme/assets/icons/paypal.svg?react';\n\nimport Button from '../Button/Button';\nimport LoadingOverlay from '../LoadingOverlay/LoadingOverlay';\nimport Icon from '../Icon/Icon';\nimport { useAriaAnnouncer } from '../../containers/AnnouncementProvider/AnnoucementProvider';\n\nimport styles from './PaymentMethodForm.module.scss';\n\ntype Props = {\n  paymentMethodId?: number;\n  onCloseButtonClick: () => void;\n  paymentMethods?: PaymentMethod[];\n  onPaymentMethodChange: React.ChangeEventHandler<HTMLInputElement>;\n  renderPaymentMethod?: () => JSX.Element | null;\n  submitting: boolean;\n  updateSuccess: boolean;\n};\n\nconst PaymentMethodForm: React.FC<Props> = ({\n  paymentMethodId,\n  paymentMethods,\n  onCloseButtonClick,\n  onPaymentMethodChange,\n  renderPaymentMethod,\n  submitting,\n  updateSuccess,\n}) => {\n  const { t } = useTranslation('account');\n  const announce = useAriaAnnouncer();\n  // t('payment.longer_than_usual');\n\n  const cardPaymentMethod = paymentMethods?.find((method) => method.methodName === 'card');\n  const paypalPaymentMethod = paymentMethods?.find((method) => method.methodName === 'paypal');\n\n  useEffect(() => {\n    updateSuccess && announce(t('checkout.payment_success'), 'success');\n  }, [updateSuccess, announce, t]);\n\n  return (\n    <>\n      <h1 className={styles.title}>{t('payment.update_payment_details')}</h1>\n      {updateSuccess ? (\n        <>\n          <p className={styles.success}>{t('payment.update_payment_success')}</p>\n          <Button label={t('payment.back_to_profile')} onClick={onCloseButtonClick} color=\"primary\" fullWidth />\n        </>\n      ) : (\n        <>\n          <div className={styles.paymentMethodsInputs}>\n            {cardPaymentMethod ? (\n              <div className={styles.paymentMethod}>\n                <input\n                  className={styles.radio}\n                  type=\"radio\"\n                  name=\"paymentMethod\"\n                  value={cardPaymentMethod.id}\n                  id=\"card\"\n                  checked={paymentMethodId === cardPaymentMethod.id}\n                  onChange={onPaymentMethodChange}\n                />\n                <label className={styles.paymentMethodLabel} htmlFor=\"card\">\n                  <Icon icon={CreditCard} />\n                  {t('payment.credit_card')}\n                </label>\n              </div>\n            ) : null}\n            {paypalPaymentMethod ? (\n              <div className={styles.paymentMethod}>\n                <input\n                  className={styles.radio}\n                  type=\"radio\"\n                  name=\"paymentMethod\"\n                  value={paypalPaymentMethod.id}\n                  id=\"paypal\"\n                  checked={paymentMethodId === paypalPaymentMethod.id}\n                  onChange={onPaymentMethodChange}\n                />\n                <label className={styles.paymentMethodLabel} htmlFor=\"paypal\">\n                  <Icon icon={PayPal} /> {t('payment.paypal')}\n                </label>\n              </div>\n            ) : null}\n          </div>\n          <div>{renderPaymentMethod ? renderPaymentMethod() : null}</div>\n          {submitting && <LoadingOverlay transparentBackground inline />}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default PaymentMethodForm;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from '../Button/Button';\nimport FormFeedback from '../FormFeedback/FormFeedback';\n\nimport styles from './PayPal.module.scss';\n\ntype Props = {\n  onSubmit?: () => void;\n  error: string | null;\n};\n\nconst PayPal: React.FC<Props> = ({ onSubmit, error }) => {\n  const { t } = useTranslation('account');\n\n  return (\n    <div className={styles.payPal}>\n      {error ? <FormFeedback variant=\"error\">{error}</FormFeedback> : null}\n      <p>{t('checkout.paypal_instructions')}</p>\n      <Button label={t('checkout.continue')} variant=\"contained\" color=\"primary\" size=\"large\" onClick={onSubmit} fullWidth />\n    </div>\n  );\n};\n\nexport default PayPal;\n","import React, { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport AdyenCheckout from '@adyen/adyen-web';\nimport type { CoreOptions } from '@adyen/adyen-web/dist/types/core/types';\nimport type { PaymentMethods } from '@adyen/adyen-web/dist/types/types';\n\nimport Button from '../Button/Button';\nimport FormFeedback from '../FormFeedback/FormFeedback';\n\nimport styles from './Adyen.module.scss';\nimport '@adyen/adyen-web/dist/adyen.css';\nimport './AdyenForm.scss';\n\ntype Props = {\n  configuration: CoreOptions;\n  error?: string;\n  type: AdyenPaymentMethodType;\n};\n\nconst Adyen: React.FC<Props> = ({ configuration, error, type }) => {\n  const { t } = useTranslation('account');\n  const checkoutElementRef = useRef(null);\n  const checkoutRef = useRef<InstanceType<PaymentMethods[typeof type]>>();\n\n  useEffect(() => {\n    if (!checkoutElementRef.current || !configuration.session) {\n      return;\n    }\n\n    const createCheckout = async () => {\n      const checkout = await AdyenCheckout(configuration);\n\n      if (checkoutElementRef.current) {\n        checkoutRef.current = checkout.create(type);\n        checkoutRef.current?.mount(checkoutElementRef.current);\n      }\n    };\n\n    createCheckout();\n\n    return () => {\n      checkoutRef.current?.unmount();\n    };\n  }, [configuration, type]);\n\n  return (\n    <div className={styles.adyen}>\n      {error ? <FormFeedback variant=\"error\">{error}</FormFeedback> : null}\n      <div className={styles.container} ref={checkoutElementRef} />\n      <Button\n        label={t('checkout.continue')}\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        onClick={() => {\n          checkoutRef.current && checkoutRef.current.submit();\n        }}\n        fullWidth\n      />\n    </div>\n  );\n};\n\nexport default Adyen;\n","import type { CoreOptions } from '@adyen/adyen-web/dist/types/core/types';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport type DropinElement from '@adyen/adyen-web/dist/types/components/Dropin/Dropin';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport type { AdyenPaymentSession } from '@jwp/ott-common/types/checkout';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport CheckoutController from '@jwp/ott-common/src/controllers/CheckoutController';\nimport { modalURLFromLocation, modalURLFromWindowLocation } from '@jwp/ott-ui-react/src/utils/location';\nimport { ADYEN_LIVE_CLIENT_KEY, ADYEN_TEST_CLIENT_KEY } from '@jwp/ott-common/src/constants';\nimport useQueryParam from '@jwp/ott-ui-react/src/hooks/useQueryParam';\nimport useEventCallback from '@jwp/ott-hooks-react/src/useEventCallback';\nimport { useTranslation } from 'react-i18next';\n\nimport Adyen from '../../components/Adyen/Adyen';\nimport { useAriaAnnouncer } from '../AnnouncementProvider/AnnoucementProvider';\n\ntype Props = {\n  setProcessing: (loading: boolean) => void;\n  setPaymentError: (errorMessage?: string) => void;\n  paymentMethodId: number;\n  type: AdyenPaymentMethodType;\n  error?: string;\n};\n\nexport default function AdyenPaymentDetails({ setProcessing, type, setPaymentError, error, paymentMethodId }: Props) {\n  const accountController = getModule(AccountController);\n  const checkoutController = getModule(CheckoutController);\n\n  const isSandbox = accountController.getSandbox();\n  const { t } = useTranslation('account');\n  const announce = useAriaAnnouncer();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [session, setSession] = useState<AdyenPaymentSession>();\n\n  const redirectResult = useQueryParam('redirectResult');\n  const finalize = !!redirectResult;\n  const paymentSuccessUrl = modalURLFromLocation(location, 'payment-method-success');\n\n  const finalizePaymentDetails = useEventCallback(async (redirectResult: string) => {\n    try {\n      setProcessing(true);\n\n      await checkoutController.finalizeAdyenPaymentDetails({ redirectResult: decodeURI(redirectResult) }, paymentMethodId);\n      await accountController.reloadSubscriptions({ retry: 10 });\n\n      setProcessing(false);\n\n      announce(t('checkout.payment_success'), 'success');\n      navigate(paymentSuccessUrl);\n    } catch (error: unknown) {\n      setProcessing(false);\n\n      if (error instanceof Error) {\n        setPaymentError(error.message);\n        navigate(modalURLFromLocation(location, 'payment-method'), { replace: true });\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (!redirectResult) return;\n\n    finalizePaymentDetails(redirectResult);\n  }, [finalizePaymentDetails, redirectResult]);\n\n  useEffect(() => {\n    if (finalize) return;\n\n    const createSession = async () => {\n      setProcessing(true);\n\n      try {\n        const session = await checkoutController.createAdyenPaymentSession(window.origin, false);\n\n        setSession(session);\n      } catch (error: unknown) {\n        if (error instanceof Error) {\n          setPaymentError(error.message);\n        }\n      }\n\n      setProcessing(false);\n    };\n\n    createSession();\n  }, [setProcessing, setPaymentError, finalize, navigate, location, checkoutController]);\n\n  const onSubmit = useCallback(\n    async (state: AdyenEventData, handleAction: DropinElement['handleAction']) => {\n      if (!state.isValid) return;\n\n      try {\n        setProcessing(true);\n        setPaymentError(undefined);\n\n        const returnUrl = modalURLFromWindowLocation('payment-method', { paymentMethodId: `${paymentMethodId}` });\n        const result = await checkoutController.addAdyenPaymentDetails(state.data.paymentMethod, paymentMethodId, returnUrl);\n\n        if ('action' in result) {\n          handleAction(result.action);\n        }\n\n        await accountController.reloadSubscriptions({ retry: 5 });\n\n        navigate(paymentSuccessUrl, { replace: true });\n      } catch (error: unknown) {\n        if (error instanceof Error) {\n          setPaymentError(error.message);\n        }\n      }\n\n      setProcessing(false);\n    },\n    [navigate, paymentMethodId, paymentSuccessUrl, setPaymentError, setProcessing, accountController, checkoutController],\n  );\n\n  const adyenConfiguration: CoreOptions = useMemo(\n    () => ({\n      session,\n      showPayButton: false,\n      environment: isSandbox ? 'test' : 'live',\n      clientKey: isSandbox ? ADYEN_TEST_CLIENT_KEY : ADYEN_LIVE_CLIENT_KEY,\n      paymentMethodsConfiguration: {\n        card: {\n          hasHolderName: true,\n          holderNameRequired: true,\n        },\n      },\n      onAdditionalDetails: async (state: AdyenAdditionalEventData) => {\n        try {\n          setProcessing(true);\n\n          await checkoutController.finalizeAdyenPayment(state.data.details, paymentMethodId);\n\n          navigate(paymentSuccessUrl, { replace: true });\n        } catch (error: unknown) {\n          if (error instanceof Error) {\n            setPaymentError(error.message);\n            setProcessing(false);\n          }\n        }\n      },\n      onSubmit: (state: AdyenEventData, component: DropinElement) => onSubmit(state, component.handleAction),\n      onError: (error: Error) => setPaymentError(error.message),\n    }),\n    [session, isSandbox, setProcessing, paymentMethodId, navigate, paymentSuccessUrl, setPaymentError, onSubmit, checkoutController],\n  );\n\n  return <Adyen configuration={adyenConfiguration} type={type} error={error} />;\n}\n","import React, { useEffect, useState } from 'react';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useCheckoutStore } from '@jwp/ott-common/src/stores/CheckoutStore';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport CheckoutController from '@jwp/ott-common/src/controllers/CheckoutController';\nimport useQueryParam from '@jwp/ott-ui-react/src/hooks/useQueryParam';\n\nimport LoadingOverlay from '../../components/LoadingOverlay/LoadingOverlay';\nimport PaymentMethodForm from '../../components/PaymentMethodForm/PaymentMethodForm';\nimport PayPal from '../../components/PayPal/PayPal';\nimport AdyenPaymentDetails from '../AdyenPaymentDetails/AdyenPaymentDetails';\nimport { modalURLFromWindowLocation } from '../../utils/location';\n\ntype Props = {\n  onCloseButtonClick: () => void;\n};\n\nconst UpdatePaymentMethod = ({ onCloseButtonClick }: Props) => {\n  const checkoutController = getModule(CheckoutController);\n\n  const updateSuccess = useQueryParam('u') === 'payment-method-success';\n  const paymentMethodIdQueryParam = useQueryParam('paymentMethodId');\n  const parsedPaymentMethodId = paymentMethodIdQueryParam ? parseInt(paymentMethodIdQueryParam) : undefined;\n\n  const activePayment = useAccountStore((state) => state.activePayment);\n  const currentPaymentId = activePayment?.id;\n  const [paymentError, setPaymentError] = useState<string | undefined>(undefined);\n  const [paymentMethodId, setPaymentMethodId] = useState<number | undefined>(parsedPaymentMethodId);\n\n  const paymentMethods = useCheckoutStore((state) => state.paymentMethods);\n\n  const [processing, setProcessing] = useState<boolean>(false);\n\n  useEffect(() => {\n    checkoutController.getPaymentMethods();\n  }, [checkoutController]);\n\n  const handlePaymentMethodChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const toPaymentMethodId = parseInt(event.target.value);\n\n    setPaymentMethodId(toPaymentMethodId);\n    setPaymentError(undefined);\n  };\n\n  const handlePayPalSubmit = async () => {\n    setProcessing(true);\n\n    try {\n      setPaymentError(undefined);\n\n      const successUrl = modalURLFromWindowLocation('payment-method-success');\n      const waitingUrl = modalURLFromWindowLocation('waiting-for-payment');\n      const cancelUrl = modalURLFromWindowLocation('payment-cancelled');\n      const errorUrl = modalURLFromWindowLocation('payment-error');\n\n      const response = await checkoutController.updatePayPalPaymentMethod(\n        successUrl,\n        waitingUrl,\n        cancelUrl,\n        errorUrl,\n        paymentMethodId as number,\n        currentPaymentId,\n      );\n\n      if (response) {\n        window.location.href = response.redirectUrl;\n      }\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        setPaymentError(error.message);\n      }\n    }\n    setProcessing(false);\n  };\n\n  const renderPaymentMethod = () => {\n    const paymentMethod = paymentMethods?.find((method) => method.id === paymentMethodId);\n\n    if (paymentMethod?.methodName === 'card') {\n      return (\n        <AdyenPaymentDetails\n          paymentMethodId={paymentMethod.id}\n          setPaymentError={setPaymentError}\n          setProcessing={setProcessing}\n          error={paymentError}\n          type=\"card\"\n        />\n      );\n    } else if (paymentMethod?.methodName === 'paypal') {\n      return <PayPal onSubmit={handlePayPalSubmit} error={paymentError || null} />;\n    }\n\n    return null;\n  };\n\n  // loading state\n  if (!paymentMethods) {\n    return (\n      <div style={{ height: 300 }}>\n        <LoadingOverlay inline />\n      </div>\n    );\n  }\n\n  return (\n    <PaymentMethodForm\n      onCloseButtonClick={onCloseButtonClick}\n      paymentMethods={paymentMethods}\n      paymentMethodId={paymentMethodId}\n      onPaymentMethodChange={handlePaymentMethodChange}\n      renderPaymentMethod={renderPaymentMethod}\n      updateSuccess={updateSuccess}\n      submitting={processing}\n    />\n  );\n};\n\nexport default UpdatePaymentMethod;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from '../Button/Button';\nimport LoadingOverlay from '../LoadingOverlay/LoadingOverlay';\n\nimport styles from './EditCardDetailsForm.module.scss';\n\ntype Props = {\n  renderPaymentMethod?: () => JSX.Element | null;\n  submitting: boolean;\n  onCancel: () => void;\n};\n\nconst EditCardDetailsForm: React.FC<Props> = ({ renderPaymentMethod, submitting, onCancel }) => {\n  const { t } = useTranslation(['common', 'user']);\n  return (\n    <div>\n      <div className={styles.title}>\n        <h1>{t('user:payment.add_card_details')}</h1>\n      </div>\n      <div>{renderPaymentMethod ? renderPaymentMethod() : null}</div>\n      <Button onClick={onCancel} className={styles.cancelButton} fullWidth label={t('common:confirmation_dialog.close')} />\n      {submitting && <LoadingOverlay transparentBackground inline />}\n    </div>\n  );\n};\n\nexport default EditCardDetailsForm;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport TextField from '../TextField/TextField';\n\ntype Props = {\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n  onBlur?: React.FocusEventHandler<HTMLInputElement>;\n  error?: string;\n  value?: string;\n};\n\nconst CreditCardCVCField: React.FC<Props> = ({ value, onChange, error, ...props }: Props) => {\n  const { t } = useTranslation('user');\n  const formatCVC: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    const clearValue = e.target.value.replace(/\\D+/g, '');\n    if (onChange) {\n      e.target.value = clearValue.slice(0, 4);\n      onChange(e);\n    }\n  };\n  return (\n    <TextField\n      label={t('payment.security_code')}\n      aria-label={t('payment.security_code')}\n      {...props}\n      error={!!error}\n      helperText={error ? error : null}\n      name=\"cardCVC\"\n      className=\"directPostSecurityCode\"\n      type=\"text\"\n      value={value}\n      onChange={formatCVC}\n      pattern=\"\\d*\"\n      placeholder=\"###\"\n      autoComplete=\"cc-csc\"\n      required\n    />\n  );\n};\n\nexport default CreditCardCVCField;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport TextField from '../TextField/TextField';\n\ntype Props = {\n  onChange?: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  error?: string;\n  value?: string;\n};\n\nconst CreditCardExpiryField: React.FC<Props> = ({ value, onChange, error, ...props }: Props) => {\n  const { t } = useTranslation('account');\n  const formatExpirationDate: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    let clearValue = e.target.value.replace(/\\D+/g, '');\n\n    if (clearValue.length === 1) {\n      if (Number(clearValue) > 1) {\n        clearValue = '0' + clearValue;\n      }\n    } else if (clearValue.length === 2) {\n      if (Number(clearValue) > 12) {\n        clearValue = '12';\n      }\n    }\n\n    if (clearValue.length >= 3) {\n      e.target.value = `${clearValue.slice(0, 2)}/${clearValue.slice(2, 4)}`;\n    } else {\n      e.target.value = clearValue;\n    }\n    if (onChange) {\n      onChange(e);\n    }\n  };\n  return (\n    <TextField\n      label={t('payment.credit_card_expiry_date')}\n      {...props}\n      name=\"cardExpiry\"\n      className=\"directPostExpiryDate\"\n      value={value}\n      error={!!error}\n      helperText={error ? error : null}\n      onChange={formatExpirationDate}\n      type=\"text\"\n      pattern=\"\\d*\"\n      placeholder=\"MM/YY\"\n      autoComplete=\"cc-exp\"\n      required\n    />\n  );\n};\n\nexport default CreditCardExpiryField;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Payment from 'payment';\n\nimport TextField from '../TextField/TextField';\n\nimport styles from './CreditCardNumberField.module.scss';\n\ntype Props = {\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n  onBlur?: React.FocusEventHandler<HTMLInputElement>;\n  error?: string;\n  value?: string;\n};\n\nconst cardIssuers: { [key: string]: string } = {\n  visa: '/images/payments/visa.svg',\n  mastercard: '/images/payments/mastercard.svg',\n  maestro: '/images/payments/maestro.svg',\n  amex: '/images/payments/amex.svg',\n  discover: '/images/payments/discover.svg',\n  diners: '/images/payments/diners.svg',\n  dinersclub: '/images/payments/diners.svg',\n  unionpay: '/images/payments/unionpay.svg',\n  hiper: '/images/payments/hiper.svg',\n};\n\nconst CreditCardNumberField: React.FC<Props> = ({ value, error, onChange, onBlur, ...props }: Props) => {\n  const { t } = useTranslation('account');\n  const [cardIssuer, setCardIssuer] = useState<JSX.Element | null>(null);\n\n  const formatCreditCardNumber: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    const issuer = Payment.fns.cardType(e.target?.value);\n    const clearValue = e.target?.value.replace(/\\D+/g, '');\n\n    let nextValue;\n    setCardIssuer(\n      cardIssuers?.[issuer] ? (\n        <div className={styles.cardTypeWrapper}>\n          <img src={cardIssuers[issuer]} alt={issuer} height=\"25\" />\n        </div>\n      ) : null,\n    );\n\n    switch (issuer) {\n      case 'amex':\n        nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(4, 10)} ${clearValue.slice(10, 15)}`;\n        break;\n      case 'dinersclub':\n        nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(4, 10)} ${clearValue.slice(10, 14)}`;\n        break;\n      default:\n        nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(4, 8)} ${clearValue.slice(8, 12)} ${clearValue.slice(12, 16)}`;\n        break;\n    }\n\n    if (onChange) {\n      e.target.value = nextValue.trim();\n      onChange(e);\n    }\n  };\n\n  return (\n    <TextField\n      value={value}\n      name=\"cardNumber\"\n      label={t('payment.credit_card_number')}\n      className=\"directPostCreditCardNumber\"\n      onChange={formatCreditCardNumber}\n      onBlur={onBlur}\n      error={!!error}\n      helperText={error ? error : null}\n      pattern=\"\\d*\"\n      {...props}\n      type=\"text\"\n      placeholder=\"1234 5678 9012 3456\"\n      rightControl={cardIssuer}\n      autoComplete=\"cc-number\"\n      required\n    />\n  );\n};\n\nexport default CreditCardNumberField;\n","import { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Payment from 'payment';\nimport { object, string } from 'yup';\nimport { useMutation } from 'react-query';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport useForm from '@jwp/ott-hooks-react/src/useForm';\n\nimport Button from '../Button/Button';\nimport CreditCardCVCField from '../form-fields/CreditCardCVCField/CreditCardCVCField';\nimport CreditCardExpiryField from '../form-fields/CreditCardExpiryField/CreditCardExpiryField';\nimport CreditCardNumberField from '../form-fields/CreditCardNumberField/CreditCardNumberField';\nimport TextField from '../form-fields/TextField/TextField';\nimport { useAriaAnnouncer } from '../../containers/AnnouncementProvider/AnnoucementProvider';\n\nimport styles from './EditCardPaymentForm.module.scss';\n\ntype EditCardPaymentFormData = {\n  cardholderName: string;\n  cardNumber: string;\n  cardExpiry: string;\n  cardCVC: string;\n  cardExpMonth: string;\n  cardExpYear: string;\n};\n\ntype Props = {\n  onCancel: () => void;\n  setUpdatingCardDetails: (e: boolean) => void;\n};\n\nconst EditCardPaymentForm: React.FC<Props> = ({ onCancel, setUpdatingCardDetails }) => {\n  const accountController = getModule(AccountController);\n  const announce = useAriaAnnouncer();\n\n  const { t } = useTranslation('account');\n  const { mutate: mutateCardDetails, isLoading } = useMutation(accountController.updateCardDetails);\n  const { activePayment } = useAccountStore(({ activePayment }) => ({ activePayment }), shallow);\n\n  const paymentData = useForm<EditCardPaymentFormData>({\n    initialValues: { cardholderName: '', cardNumber: '', cardExpiry: '', cardCVC: '', cardExpMonth: '', cardExpYear: '' },\n    validationSchema: object().shape({\n      cardholderName: string().required(),\n      cardNumber: string()\n        .required()\n        .test('card number validation', t('checkout.invalid_card_number'), (value) => {\n          return Payment.fns.validateCardNumber(value as string);\n        }),\n      cardExpiry: string()\n        .required()\n        .test('card expiry validation', t('checkout.invalid_card_expiry'), (value) => {\n          return Payment.fns.validateCardExpiry(value as string);\n        }),\n      cardCVC: string()\n        .required()\n        .test('cvc validation', t('checkout.invalid_cvc_number'), (value) => {\n          const issuer = Payment.fns.cardType(paymentData?.values?.cardNumber);\n\n          return Payment.fns.validateCardCVC(value as string, issuer);\n        }),\n      cardExpMonth: string().required(),\n      cardExpYear: string().required(),\n    }),\n    validateOnBlur: true,\n    onSubmit: async () => {\n      setUpdatingCardDetails(true);\n      mutateCardDetails(\n        {\n          cardName: paymentData.values.cardholderName,\n          cardNumber: paymentData.values.cardNumber.replace(/\\s+/g, ''),\n          cvc: parseInt(paymentData.values.cardCVC),\n          expMonth: parseInt(paymentData.values.cardExpMonth),\n          expYear: parseInt(paymentData.values.cardExpYear),\n          currency: activePayment?.currency || '',\n        },\n        {\n          onSettled: () => onCancel(),\n          onSuccess: () => {\n            announce(t('checkout.card_details_updated'), 'success');\n          },\n        },\n      );\n    },\n  });\n\n  useEffect(() => {\n    if (paymentData.values.cardExpiry) {\n      const expiry = Payment.fns.cardExpiryVal(paymentData.values.cardExpiry);\n      if (expiry.month) {\n        paymentData.setValue('cardExpMonth', expiry.month.toString());\n      }\n      if (expiry.year) {\n        paymentData.setValue('cardExpYear', expiry.year.toString());\n      }\n    }\n    //eslint-disable-next-line\n  }, [paymentData.values.cardExpiry]);\n\n  return (\n    <div className={styles.paymentForm}>\n      <div>\n        <TextField\n          label={t('checkout.card_holder_name')}\n          name=\"cardholderName\"\n          value={paymentData?.values?.cardholderName}\n          onChange={paymentData?.handleChange}\n          onBlur={paymentData?.handleBlur}\n          placeholder={t('checkout.credit_card_name')}\n          autoComplete=\"cc-name\"\n          required\n        />\n      </div>\n      <div>\n        <CreditCardNumberField\n          value={paymentData?.values?.cardNumber?.toString()}\n          error={paymentData?.errors?.cardNumber}\n          onBlur={paymentData?.handleBlur}\n          onChange={paymentData?.handleChange}\n        />\n      </div>\n      <div className={styles.columns}>\n        <div>\n          <CreditCardExpiryField\n            value={paymentData?.values?.cardExpiry}\n            onBlur={paymentData?.handleBlur}\n            onChange={paymentData?.handleChange}\n            error={paymentData?.errors?.cardExpiry}\n          />\n        </div>\n        <div>\n          <CreditCardCVCField\n            value={paymentData?.values?.cardCVC}\n            onBlur={paymentData?.handleBlur}\n            onChange={paymentData?.handleChange}\n            error={paymentData?.errors?.cardCVC}\n          />\n        </div>\n      </div>\n      <div>\n        <Button\n          disabled={isLoading}\n          label={t('checkout.save')}\n          variant=\"contained\"\n          onClick={paymentData.handleSubmit as () => void}\n          type=\"submit\"\n          color=\"primary\"\n          size=\"large\"\n          fullWidth\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default EditCardPaymentForm;\n","import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router';\nimport { modalURLFromLocation } from '@jwp/ott-ui-react/src/utils/location';\n\nimport EditCardDetailsForm from '../../../components/EditForm/EditCardDetailsForm';\nimport EditCardPaymentForm from '../../../components/EditCardPaymentForm/EditCardPaymentForm';\n\nconst EditCardDetails = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [updatingCardDetails, setUpdatingCardDetails] = useState(false);\n\n  const closeHandler = () => {\n    navigate(modalURLFromLocation(location, null), { replace: false });\n  };\n\n  const renderPaymentMethod = () => {\n    return <EditCardPaymentForm onCancel={closeHandler} setUpdatingCardDetails={setUpdatingCardDetails} />;\n  };\n\n  return <EditCardDetailsForm onCancel={closeHandler} renderPaymentMethod={renderPaymentMethod} submitting={updatingCardDetails} />;\n};\n\nexport default EditCardDetails;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport type { EditPasswordFormData } from '@jwp/ott-common/types/account';\nimport type { FormErrors } from '@jwp/ott-common/types/form';\nimport { testId } from '@jwp/ott-common/src/utils/common';\n\nimport PasswordField from '../form-fields/PasswordField/PasswordField';\nimport TextField from '../form-fields/TextField/TextField';\nimport Button from '../Button/Button';\nimport FormFeedback from '../FormFeedback/FormFeedback';\nimport LoadingOverlay from '../LoadingOverlay/LoadingOverlay';\n\nimport styles from './EditPasswordForm.module.scss';\n\ntype Props = {\n  onSubmit: React.FormEventHandler<HTMLFormElement>;\n  onChange: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  setValue?: (key: keyof EditPasswordFormData, value: string) => void;\n  onBlur: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  error?: string;\n  errors: FormErrors<EditPasswordFormData>;\n  value: EditPasswordFormData;\n  validationError?: boolean;\n  submitting: boolean;\n  showOldPasswordField?: boolean;\n  showResetTokenField?: boolean;\n  email?: string;\n  onResendEmailClick?: () => void;\n};\n\nconst EditPasswordForm: React.FC<Props> = ({\n  onSubmit,\n  onChange,\n  onBlur,\n  showOldPasswordField,\n  showResetTokenField,\n  value,\n  errors,\n  submitting,\n  validationError,\n  email,\n  onResendEmailClick,\n}: Props) => {\n  const { t } = useTranslation(['account', 'user']);\n  return (\n    <form onSubmit={onSubmit} data-testid={testId('forgot-password-form')} noValidate>\n      {errors.form && (\n        <FormFeedback variant=\"error\" visible={!validationError}>\n          {errors.form}\n        </FormFeedback>\n      )}\n      <h2 className={styles.title}>{showOldPasswordField && showResetTokenField ? t('user:account.add_password') : t('reset.password_reset')}</h2>\n      {showOldPasswordField && showResetTokenField && (\n        <p className={styles.paragraph}>\n          {t('user:account.add_password_modal_text', { email: email })}\n          <a className={styles.resendLink} onClick={onResendEmailClick}>\n            {t('user:account.resend_mail')}\n          </a>\n        </p>\n      )}\n      {showOldPasswordField && !showResetTokenField && (\n        <PasswordField\n          value={value.oldPassword}\n          onChange={onChange}\n          onBlur={onBlur}\n          label={t('reset.old_password')}\n          placeholder={t('reset.old_password')}\n          error={!!errors.oldPassword}\n          name=\"oldPassword\"\n          showToggleView={false}\n          showHelperText={false}\n          autoComplete=\"current-password\"\n          required\n        />\n      )}\n      {showResetTokenField && (\n        <TextField\n          className={styles.textField}\n          value={value.resetPasswordToken || ''}\n          onChange={onChange}\n          onBlur={onBlur}\n          label={t('reset.reset_password_token')}\n          placeholder={t('reset.reset_password_token')}\n          name=\"resetPasswordToken\"\n          type=\"text\"\n          autoComplete=\"\"\n          required\n        />\n      )}\n\n      <PasswordField\n        value={value.password}\n        onChange={onChange}\n        onBlur={onBlur}\n        label={t('reset.new_password')}\n        placeholder={t('reset.password')}\n        error={!!errors.password}\n        name=\"password\"\n        autoComplete=\"new-password\"\n        required\n      />\n\n      <PasswordField\n        value={value.passwordConfirmation}\n        onChange={onChange}\n        onBlur={onBlur}\n        label={t('reset.repeat_new_password')}\n        placeholder={t('reset.repeat_new_password')}\n        error={!!errors.passwordConfirmation}\n        name=\"passwordConfirmation\"\n        autoComplete=\"new-password\"\n        showHelperText={false}\n        required\n      />\n\n      <Button type=\"submit\" className={styles.button} fullWidth color=\"primary\" disabled={submitting} label={t('reset.confirm')} />\n      {submitting && <LoadingOverlay transparentBackground inline />}\n    </form>\n  );\n};\n\nexport default EditPasswordForm;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { object, string } from 'yup';\nimport { useTranslation } from 'react-i18next';\nimport type { EditPasswordFormData } from '@jwp/ott-common/types/account';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport useForm, { type UseFormOnSubmitHandler } from '@jwp/ott-hooks-react/src/useForm';\nimport { modalURLFromLocation } from '@jwp/ott-ui-react/src/utils/location';\nimport useQueryParam from '@jwp/ott-ui-react/src/hooks/useQueryParam';\n\nimport EditPasswordForm from '../../../components/EditPasswordForm/EditPasswordForm';\nimport { useAriaAnnouncer } from '../../AnnouncementProvider/AnnoucementProvider';\n\nconst ResetPassword = ({ type }: { type?: 'add' }) => {\n  const accountController = getModule(AccountController);\n\n  const { t } = useTranslation('account');\n  const announce = useAriaAnnouncer();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const resetPasswordTokenParam = useQueryParam('resetPasswordToken');\n  const emailParam = useQueryParam('email');\n  const email = useAccountStore((state) => state.user?.email);\n  const user = useAccountStore.getState().user;\n\n  const passwordSubmitHandler: UseFormOnSubmitHandler<EditPasswordFormData> = async (formData, { setErrors, setSubmitting }) => {\n    const { oldPassword, password, passwordConfirmation, resetPasswordToken } = formData;\n    if (password !== passwordConfirmation) {\n      setErrors({ form: t('reset.passwords_do_not_match') });\n\n      return setSubmitting(false);\n    }\n    let resetToken = resetPasswordTokenParam;\n    if (resetPasswordToken) {\n      resetToken = resetPasswordToken;\n    }\n    try {\n      if (user && !resetToken) {\n        await accountController.changePasswordWithOldPassword(oldPassword || '', password, passwordConfirmation);\n      } else {\n        if (!resetToken) {\n          setErrors({ form: t('reset.invalid_link') });\n\n          return setSubmitting(false);\n        }\n        await accountController.changePasswordWithToken(emailParam || '', password, resetToken, passwordConfirmation);\n      }\n\n      announce(t('reset.password_reset_success'), 'success');\n      await accountController.logout();\n      navigate(modalURLFromLocation(location, 'login'));\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        if (error.message.includes('invalid param password')) {\n          setErrors({ password: t('reset.invalid_password') });\n        } else if (error.message.includes('resetPasswordToken is not valid')) {\n          setErrors({ form: t('reset.invalid_reset_link') });\n        } else if (error.message.includes('score does not match standards')) {\n          setErrors({ form: t('reset.password_strength') });\n        } else if (error.message.includes('old password does not match')) {\n          setErrors({ form: t('reset.old_password_does_not_match') });\n        } else if (error.message.includes('password could not be set')) {\n          setErrors({ form: t('reset.invalid_token') });\n        }\n      }\n    }\n    setSubmitting(false);\n  };\n\n  const passwordForm = useForm<EditPasswordFormData>({\n    initialValues: { password: '', passwordConfirmation: '' },\n    validationSchema: object().shape({\n      email: string(),\n      oldPassword: string(),\n      password: string()\n        .matches(/^(?=.*[a-z])(?=.*[0-9]).{8,}$/, t('registration.invalid_password'))\n        .required(t('login.field_required', { field: t('login.password') })),\n      passwordConfirmation: string().required(),\n      resetPasswordToken: string(),\n    }),\n    validateOnBlur: true,\n    onSubmit: passwordSubmitHandler,\n  });\n\n  const resendEmailClickHandler = async () => {\n    try {\n      if (email) {\n        await accountController.resetPassword(email, '');\n      }\n    } catch (error: unknown) {\n      passwordForm.setErrors({ form: t('user:account.resend_mail_error') });\n    }\n  };\n\n  return (\n    <EditPasswordForm\n      value={passwordForm.values}\n      submitting={passwordForm.submitting}\n      onChange={passwordForm.handleChange}\n      onBlur={passwordForm.handleBlur}\n      errors={passwordForm.errors}\n      onSubmit={passwordForm.handleSubmit}\n      validationError={passwordForm.validationSchemaError}\n      showOldPasswordField={!!(user && !resetPasswordTokenParam)}\n      showResetTokenField={type === 'add' || (!user && !resetPasswordTokenParam)}\n      email={emailParam || email}\n      onResendEmailClick={resendEmailClickHandler}\n    />\n  );\n};\n\nexport default ResetPassword;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport type { Customer } from '@jwp/ott-common/types/account';\nimport type { Subscription } from '@jwp/ott-common/types/subscription';\nimport { formatLocalizedDate, formatPrice } from '@jwp/ott-common/src/utils/formatting';\n\nimport Button from '../Button/Button';\nimport FormFeedback from '../FormFeedback/FormFeedback';\n\nimport styles from './RenewSubscriptionForm.module.scss';\n\ntype Props = {\n  subscription: Subscription;\n  customer: Customer;\n  error: string | null;\n  submitting: boolean;\n  onConfirm: () => void;\n  onClose: () => void;\n};\n\nconst RenewSubscriptionForm: React.FC<Props> = ({ subscription, customer, error, submitting, onConfirm, onClose }: Props) => {\n  const { t, i18n } = useTranslation('account');\n\n  return (\n    <div>\n      {error ? <FormFeedback variant=\"error\">{error}</FormFeedback> : null}\n      <h2 className={styles.title}>{t('renew_subscription.renew_your_subscription')}</h2>\n      <p className={styles.paragraph}>{t('renew_subscription.explanation')}</p>\n      <div className={styles.infoBox}>\n        <p>\n          <strong>{subscription.offerTitle}</strong> <br />\n          {t('renew_subscription.next_billing_date_on', { date: formatLocalizedDate(new Date(subscription.expiresAt * 1000), i18n.language) })}\n        </p>\n        <p className={styles.price}>\n          <strong>{formatPrice(subscription.nextPaymentPrice, subscription.nextPaymentCurrency, customer.country)}</strong>\n          <small>/{t(`periods.${subscription.period}`)}</small>\n        </p>\n      </div>\n      <Button\n        className={styles.confirmButton}\n        color=\"primary\"\n        variant=\"contained\"\n        label={t('renew_subscription.renew_subscription')}\n        onClick={onConfirm}\n        fullWidth\n        disabled={submitting}\n        type=\"submit\"\n      />\n      <Button label={t('renew_subscription.no_thanks')} onClick={onClose} fullWidth />\n    </div>\n  );\n};\n\nexport default RenewSubscriptionForm;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport type { Subscription } from '@jwp/ott-common/types/subscription';\nimport type { Customer } from '@jwp/ott-common/types/account';\nimport { formatLocalizedDate, formatPrice } from '@jwp/ott-common/src/utils/formatting';\n\nimport Button from '../Button/Button';\n\nimport styles from './SubscriptionRenewed.module.scss';\n\ntype Props = {\n  customer: Customer;\n  subscription: Subscription;\n  onClose: () => void;\n};\n\nconst SubscriptionRenewed: React.FC<Props> = ({ onClose, customer, subscription }: Props) => {\n  const { t, i18n } = useTranslation('account');\n  const date = formatLocalizedDate(new Date(subscription.expiresAt * 1000), i18n.language);\n  const price = formatPrice(subscription.nextPaymentPrice, subscription.nextPaymentCurrency, customer.country);\n\n  return (\n    <div>\n      <h2 className={styles.title}>{t('subscription_renewed.title')}</h2>\n      <p className={styles.paragraph}>{t('subscription_renewed.message', { date, price })}</p>\n      <Button label={t('subscription_renewed.back_to_profile')} onClick={onClose} fullWidth />\n    </div>\n  );\n};\n\nexport default SubscriptionRenewed;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useNavigate } from 'react-router';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport { modalURLFromLocation } from '@jwp/ott-ui-react/src/utils/location';\n\nimport LoadingOverlay from '../../../components/LoadingOverlay/LoadingOverlay';\nimport RenewSubscriptionForm from '../../../components/RenewSubscriptionForm/RenewSubscriptionForm';\nimport SubscriptionRenewed from '../../../components/SubscriptionRenewed/SubscriptionRenewed';\nimport { useAriaAnnouncer } from '../../AnnouncementProvider/AnnoucementProvider';\n\nconst RenewSubscription = () => {\n  const accountController = getModule(AccountController);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { t } = useTranslation('account');\n  const announce = useAriaAnnouncer();\n  const { subscription, user } = useAccountStore(({ subscription, user }) => ({ subscription, user }), shallow);\n  const [renewed, setRenewed] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const renewSubscriptionConfirmHandler = async () => {\n    setSubmitting(true);\n    setError(null);\n\n    try {\n      await accountController.updateSubscription('active');\n      announce(t('renew_subscription.success'), 'success');\n      setRenewed(true);\n    } catch (error: unknown) {\n      setError(t('renew_subscription.unknown_error_occurred'));\n    }\n\n    setSubmitting(false);\n  };\n\n  const closeHandler = () => {\n    navigate(modalURLFromLocation(location, null), { replace: true });\n  };\n\n  if (!subscription || !user) return null;\n\n  return (\n    <React.Fragment>\n      {renewed ? (\n        <SubscriptionRenewed onClose={closeHandler} subscription={subscription} customer={user} />\n      ) : (\n        <RenewSubscriptionForm\n          subscription={subscription}\n          customer={user}\n          error={error}\n          onConfirm={renewSubscriptionConfirmHandler}\n          onClose={closeHandler}\n          submitting={submitting}\n        />\n      )}\n      {submitting ? <LoadingOverlay inline /> : null}\n    </React.Fragment>\n  );\n};\nexport default RenewSubscription;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from '../Button/Button';\nimport FormFeedback from '../FormFeedback/FormFeedback';\n\nimport styles from './CancelSubscriptionForm.module.scss';\n\ntype Props = {\n  onConfirm: () => void;\n  onCancel: () => void;\n  error: string | null;\n  submitting: boolean;\n};\n\nconst CancelSubscriptionForm: React.FC<Props> = ({ onConfirm, onCancel, error, submitting }: Props) => {\n  const { t } = useTranslation('account');\n\n  return (\n    <div>\n      {error ? <FormFeedback variant=\"error\">{error}</FormFeedback> : null}\n      <h2 className={styles.title}>{t('cancel_subscription.title')}</h2>\n      <p className={styles.paragraph}>{t('cancel_subscription.explanation')}</p>\n      <Button\n        className={styles.confirmButton}\n        label={t('cancel_subscription.unsubscribe')}\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={onConfirm}\n        fullWidth\n        disabled={submitting}\n        type=\"submit\"\n      />\n      <Button label={t('cancel_subscription.no_thanks')} variant=\"outlined\" onClick={onCancel} fullWidth />\n    </div>\n  );\n};\n\nexport default CancelSubscriptionForm;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from '../Button/Button';\n\nimport styles from './SubscriptionCancelled.module.scss';\n\ntype Props = {\n  expiresDate: string;\n  onClose: () => void;\n};\n\nconst SubscriptionCancelled: React.FC<Props> = ({ expiresDate, onClose }: Props) => {\n  const { t } = useTranslation('account');\n\n  return (\n    <div className={styles.SubscriptionCancelled}>\n      <h2 className={styles.title}>{t('subscription_cancelled.title')}</h2>\n      <p className={styles.paragraph}>{t('subscription_cancelled.message', { date: expiresDate })}</p>\n      <Button label={t('subscription_cancelled.return_to_profile')} variant=\"outlined\" onClick={onClose} fullWidth />\n    </div>\n  );\n};\n\nexport default SubscriptionCancelled;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useNavigate } from 'react-router';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport { modalURLFromLocation } from '@jwp/ott-ui-react/src/utils/location';\nimport { formatLocalizedDate } from '@jwp/ott-common/src/utils/formatting';\n\nimport CancelSubscriptionForm from '../../../components/CancelSubscriptionForm/CancelSubscriptionForm';\nimport LoadingOverlay from '../../../components/LoadingOverlay/LoadingOverlay';\nimport SubscriptionCancelled from '../../../components/SubscriptionCancelled/SubscriptionCancelled';\nimport { useAriaAnnouncer } from '../../AnnouncementProvider/AnnoucementProvider';\n\nconst CancelSubscription = () => {\n  const accountController = getModule(AccountController);\n\n  const { t, i18n } = useTranslation('account');\n  const announce = useAriaAnnouncer();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const subscription = useAccountStore((s) => s.subscription);\n  const [cancelled, setCancelled] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const expirationDateFormatted = subscription?.expiresAt ? formatLocalizedDate(new Date(subscription.expiresAt * 1000), i18n.language) : '';\n\n  const cancelSubscriptionConfirmHandler = async () => {\n    setSubmitting(true);\n    setError(null);\n\n    try {\n      await accountController.updateSubscription('cancelled');\n\n      if (expirationDateFormatted) {\n        announce(t('subscription_cancelled.message', { date: expirationDateFormatted }), 'success');\n      }\n\n      setCancelled(true);\n    } catch (error: unknown) {\n      setError(t('cancel_subscription.unknown_error_occurred'));\n    }\n\n    setSubmitting(false);\n  };\n\n  const closeHandler = () => {\n    navigate(modalURLFromLocation(location, null), { replace: true });\n  };\n\n  if (!subscription) return null;\n\n  return (\n    <React.Fragment>\n      {cancelled ? (\n        <SubscriptionCancelled expiresDate={expirationDateFormatted} onClose={closeHandler} />\n      ) : (\n        <CancelSubscriptionForm onConfirm={cancelSubscriptionConfirmHandler} onCancel={closeHandler} submitting={submitting} error={error} />\n      )}\n      {submitting ? <LoadingOverlay transparentBackground inline /> : null}\n    </React.Fragment>\n  );\n};\nexport default CancelSubscription;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from '../Button/Button';\n\nimport styles from './ResetPasswordForm.module.scss';\n\ntype Props = {\n  onCancel: () => void;\n  onReset: () => void;\n  submitting: boolean;\n};\n\nconst ResetPasswordForm: React.FC<Props> = ({ onCancel, onReset, submitting }: Props) => {\n  const { t } = useTranslation('account');\n  return (\n    <div>\n      <h1 className={styles.title}>{t('reset.reset_password')}</h1>\n      <p className={styles.text}>{t('reset.text')}</p>\n      <Button onClick={onReset} className={styles.button} fullWidth color=\"primary\" label={t('reset.yes')} type=\"submit\" disabled={submitting} />\n      <Button onClick={onCancel} fullWidth label={t('reset.no')} />\n    </div>\n  );\n};\n\nexport default ResetPasswordForm;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport type { ForgotPasswordFormData } from '@jwp/ott-common/types/account';\nimport type { FormErrors } from '@jwp/ott-common/types/form';\nimport { testId } from '@jwp/ott-common/src/utils/common';\n\nimport Button from '../Button/Button';\nimport TextField from '../form-fields/TextField/TextField';\nimport FormFeedback from '../FormFeedback/FormFeedback';\n\nimport styles from './ForgotPasswordForm.module.scss';\n\ntype Props = {\n  onSubmit: React.FormEventHandler<HTMLFormElement>;\n  onChange: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onBlur: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  error?: string;\n  errors: FormErrors<ForgotPasswordFormData>;\n  value: ForgotPasswordFormData;\n  submitting: boolean;\n};\n\nconst ForgotPasswordForm: React.FC<Props> = ({ onSubmit, onChange, value, errors, submitting, onBlur }: Props) => {\n  const { t } = useTranslation('account');\n\n  return (\n    <form onSubmit={onSubmit} data-testid={testId('forgot-password-form')} noValidate>\n      <h2 className={styles.title}>{t('reset.forgot_password')}</h2>\n      {errors.form ? <FormFeedback variant=\"error\">{errors.form}</FormFeedback> : null}\n      <p className={styles.text}>{t('reset.forgot_text')}</p>\n      <TextField\n        value={value.email}\n        onChange={onChange}\n        onBlur={onBlur}\n        label={t('reset.email')}\n        placeholder={t('reset.email')}\n        error={!!errors.email || !!errors.form}\n        helperText={errors.email}\n        name=\"email\"\n        type=\"email\"\n        autoComplete=\"email\"\n        required\n      />\n      <Button type=\"submit\" className={styles.button} fullWidth color=\"primary\" disabled={submitting} label={t('reset.email_me')} />\n    </form>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport Button from '../Button/Button';\nimport { modalURLFromLocation } from '../../utils/location';\n\nimport styles from './ConfirmationForm.module.scss';\n\ntype Props = {\n  email?: string;\n  loggedIn?: boolean;\n  onBackToLogin: () => void;\n};\n\nconst ConfirmationForm: React.FC<Props> = ({ email, onBackToLogin, loggedIn }: Props) => {\n  const { t } = useTranslation('account');\n  const location = useLocation();\n\n  return (\n    <div className={styles.forgotPasswordForm}>\n      <h2 className={styles.title}>{t('reset.link_sent')}</h2>\n      <p className={styles.text}>{t('reset.link_sent_text', { email: email })}</p>\n      <Button onClick={onBackToLogin} className={styles.button} fullWidth color=\"primary\" label={t('reset.back_login')} />\n      {!loggedIn && (\n        <React.Fragment>\n          <span className={styles.notSure}>{t('reset.not_sure')}</span>\n          <Link className={styles.link} to={modalURLFromLocation(location, 'forgot-password')}>\n            {t('reset.try_again')}\n          </Link>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default ConfirmationForm;\n","import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { object, string } from 'yup';\nimport { useTranslation } from 'react-i18next';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport type { ForgotPasswordFormData } from '@jwp/ott-common/types/account';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport { modalURLFromLocation } from '@jwp/ott-ui-react/src/utils/location';\nimport useForm, { type UseFormOnSubmitHandler } from '@jwp/ott-hooks-react/src/useForm';\nimport { logDebug, logError } from '@jwp/ott-common/src/logger';\nimport env from '@jwp/ott-common/src/env';\n\nimport ResetPasswordForm from '../../../components/ResetPasswordForm/ResetPasswordForm';\nimport ForgotPasswordForm from '../../../components/ForgotPasswordForm/ForgotPasswordForm';\nimport ConfirmationForm from '../../../components/ConfirmationForm/ConfirmationForm';\nimport LoadingOverlay from '../../../components/LoadingOverlay/LoadingOverlay';\n\ntype Prop = {\n  type: 'confirmation' | 'forgot' | 'reset' | 'edit';\n};\n\nconst ResetPassword: React.FC<Prop> = ({ type }: Prop) => {\n  const accountController = getModule(AccountController);\n\n  const { t } = useTranslation('account');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [resetPasswordSubmitting, setResetPasswordSubmitting] = useState<boolean>(false);\n\n  const { canChangePasswordWithOldPassword } = accountController.getFeatures();\n  const { customer: user } = useAccountStore(\n    ({ user }) => ({\n      customer: user,\n    }),\n    shallow,\n  );\n  const cancelClickHandler = () => {\n    navigate(modalURLFromLocation(location, null));\n  };\n\n  const backToLoginClickHandler = async () => {\n    navigate(\n      {\n        pathname: '/',\n        search: 'u=login',\n      },\n      { replace: true },\n    );\n\n    if (user) {\n      await accountController.logout();\n    }\n  };\n\n  const resetPasswordClickHandler = async () => {\n    const resetUrl = `${env.APP_PUBLIC_URL}/?u=edit-password`;\n    try {\n      if (!user?.email) {\n        logDebug('ResetPassword', 'invalid param email');\n        return;\n      }\n\n      setResetPasswordSubmitting(true);\n\n      await accountController.resetPassword(user.email, resetUrl);\n\n      setResetPasswordSubmitting(false);\n      navigate(modalURLFromLocation(location, 'send-confirmation'));\n    } catch (error: unknown) {\n      logError('ResetPassword', 'Failed to reset password', { error });\n    }\n  };\n\n  const emailSubmitHandler: UseFormOnSubmitHandler<ForgotPasswordFormData> = async (formData, { setErrors, setSubmitting }) => {\n    const resetUrl = `${env.APP_PUBLIC_URL}/?u=edit-password`;\n\n    try {\n      await accountController.resetPassword(formData.email, resetUrl);\n      const modal = canChangePasswordWithOldPassword ? 'edit-password' : 'send-confirmation';\n      navigate(modalURLFromLocation(location, modal));\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        if (error.message.toLowerCase().includes('invalid param email')) {\n          setErrors({ email: t('reset.wrong_email') });\n        } else {\n          setErrors({ form: error.message });\n        }\n      }\n    }\n    setSubmitting(false);\n  };\n\n  const emailForm = useForm<ForgotPasswordFormData>({\n    initialValues: { email: '' },\n    validationSchema: object().shape({\n      email: string()\n        .email(t('login.field_is_not_valid_email'))\n        .required(t('login.field_required', { field: t('login.email') })),\n    }),\n    validateOnBlur: true,\n    onSubmit: emailSubmitHandler,\n  });\n\n  return (\n    <React.Fragment>\n      {type === 'reset' && <ResetPasswordForm submitting={resetPasswordSubmitting} onCancel={cancelClickHandler} onReset={resetPasswordClickHandler} />}\n      {type === 'forgot' && (\n        <ForgotPasswordForm\n          value={emailForm.values}\n          submitting={emailForm.submitting}\n          onChange={emailForm.handleChange}\n          errors={emailForm.errors}\n          onSubmit={emailForm.handleSubmit}\n          onBlur={emailForm.handleBlur}\n        />\n      )}\n      {type === 'confirmation' && <ConfirmationForm loggedIn={!!user} email={user?.email || emailForm.values.email} onBackToLogin={backToLoginClickHandler} />}\n      {(emailForm.submitting || resetPasswordSubmitting) && <LoadingOverlay transparentBackground inline />}\n    </React.Fragment>\n  );\n};\n\nexport default ResetPassword;\n","import AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport CheckoutController from '@jwp/ott-common/src/controllers/CheckoutController';\nimport type { FormValidationError } from '@jwp/ott-common/src/errors/FormValidationError';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useCheckoutStore } from '@jwp/ott-common/src/stores/CheckoutStore';\nimport { isSVODOffer } from '@jwp/ott-common/src/utils/offers';\nimport type { CardPaymentData, Offer, OfferType, Payment } from '@jwp/ott-common/types/checkout';\nimport { useEffect } from 'react';\nimport { useMutation } from 'react-query';\n\ntype Props = {\n  onUpdateOrderSuccess?: () => void;\n  onSubmitPaymentWithoutDetailsSuccess: () => void;\n  onSubmitPaypalPaymentSuccess: (response: { redirectUrl: string }) => void;\n  onSubmitStripePaymentSuccess: () => void;\n};\n\nconst useCheckout = ({ onUpdateOrderSuccess, onSubmitPaymentWithoutDetailsSuccess, onSubmitPaypalPaymentSuccess, onSubmitStripePaymentSuccess }: Props) => {\n  const accountController = getModule(AccountController);\n  const checkoutController = getModule(CheckoutController);\n\n  const { order, selectedOffer, paymentMethods, setOrder } = useCheckoutStore(({ order, selectedOffer, paymentMethods, setOrder }) => ({\n    order,\n    selectedOffer,\n    paymentMethods,\n    setOrder,\n  }));\n\n  const offerType: OfferType = selectedOffer && isSVODOffer(selectedOffer) ? 'svod' : 'tvod';\n\n  const initialiseOrder = useMutation<void, FormValidationError, { offer: Offer }>({\n    mutationKey: ['initialiseOrder'],\n    mutationFn: async ({ offer }) => !!offer && checkoutController.initialiseOrder(offer),\n  });\n\n  const updateOrder = useMutation<void, string, { paymentMethodId: number; couponCode: string }>({\n    mutationKey: ['updateOrder'],\n    mutationFn: async ({ paymentMethodId, couponCode }) => {\n      if (!order || !paymentMethodId) return;\n\n      return await checkoutController.updateOrder(order, paymentMethodId, couponCode);\n    },\n    onSuccess: onUpdateOrderSuccess,\n  });\n\n  const submitPaymentWithoutDetails = useMutation<Payment, Error, { captchaValue?: string }>({\n    mutationKey: ['submitPaymentWithoutDetails'],\n    mutationFn: checkoutController.paymentWithoutDetails,\n    onSuccess: async () => {\n      await accountController.reloadSubscriptions({ retry: 10 });\n      onSubmitPaymentWithoutDetailsSuccess();\n    },\n  });\n\n  const submitPaymentPaypal = useMutation<\n    { redirectUrl: string },\n    Error,\n    { successUrl: string; waitingUrl: string; cancelUrl: string; errorUrl: string; couponCode: string; captchaValue?: string }\n  >({\n    mutationKey: ['submitPaymentPaypal'],\n    mutationFn: checkoutController.paypalPayment,\n    onSuccess: onSubmitPaypalPaymentSuccess,\n  });\n\n  const submitPaymentStripe = useMutation<boolean, Error, { cardPaymentPayload: CardPaymentData; referrer: string; returnUrl: string }>({\n    mutationKey: ['submitPaymentStripe'],\n    mutationFn: checkoutController.directPostCardPayment,\n    onSuccess: onSubmitStripePaymentSuccess,\n  });\n\n  useEffect(() => {\n    if (selectedOffer && !order && !initialiseOrder.isLoading && !initialiseOrder.isError) {\n      initialiseOrder.mutate({ offer: selectedOffer });\n    }\n  }, [selectedOffer, order, initialiseOrder]);\n\n  // Clear the order when unmounted\n  useEffect(() => {\n    return () => setOrder(null);\n  }, [setOrder]);\n\n  const isSubmitting =\n    initialiseOrder.isLoading ||\n    updateOrder.isLoading ||\n    submitPaymentWithoutDetails.isLoading ||\n    submitPaymentPaypal.isLoading ||\n    submitPaymentStripe.isLoading;\n\n  return {\n    selectedOffer,\n    offerType,\n    paymentMethods,\n    order,\n    isSubmitting,\n    updateOrder,\n    submitPaymentWithoutDetails,\n    submitPaymentPaypal,\n    submitPaymentStripe,\n  };\n};\n\nexport default useCheckout;\n","import * as React from \"react\";\nconst SvgArrowLeft = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z\" }));\nexport default SvgArrowLeft;\n","import React from 'react';\nimport ArrowLeft from '@jwp/ott-theme/assets/icons/arrow_left.svg?react';\nimport { useTranslation } from 'react-i18next';\n\nimport Icon from '../Icon/Icon';\nimport IconButton from '../IconButton/IconButton';\n\nimport styles from './DialogBackButton.module.scss';\n\ntype Props = {\n  onClick?: () => void;\n};\n\nconst DialogBackButton: React.FC<Props> = ({ onClick }: Props) => {\n  const { t } = useTranslation();\n\n  return (\n    <IconButton onClick={onClick} className={styles.dialogBackButton} aria-label={t('common:back')}>\n      <Icon icon={ArrowLeft} />\n    </IconButton>\n  );\n};\n\nexport default DialogBackButton;\n","import ReCaptcha from 'react-google-recaptcha';\nimport { forwardRef } from 'react';\n\nimport styles from './RecaptchaField.module.scss';\n\ntype Props = {\n  siteKey: string;\n};\n\nconst RecaptchaField = forwardRef<ReCaptcha, Props>(({ siteKey }, ref) => {\n  return (\n    <div className={styles.captcha}>\n      <ReCaptcha ref={ref} sitekey={siteKey} size={'invisible'} badge=\"inline\" theme=\"dark\" />\n    </div>\n  );\n});\n\nexport default RecaptchaField;\n","import React, { type ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport type { Offer, OfferType, Order, PaymentMethod } from '@jwp/ott-common/types/checkout';\nimport { formatPrice } from '@jwp/ott-common/src/utils/formatting';\nimport Close from '@jwp/ott-theme/assets/icons/close.svg?react';\nimport PayPal from '@jwp/ott-theme/assets/icons/paypal.svg?react';\nimport CreditCard from '@jwp/ott-theme/assets/icons/creditcard.svg?react';\nimport type { ReCAPTCHA } from 'react-google-recaptcha';\n\nimport Button from '../Button/Button';\nimport IconButton from '../IconButton/IconButton';\nimport FormFeedback from '../FormFeedback/FormFeedback';\nimport DialogBackButton from '../DialogBackButton/DialogBackButton';\nimport LoadingOverlay from '../LoadingOverlay/LoadingOverlay';\nimport Icon from '../Icon/Icon';\nimport RecaptchaField from '../RecaptchaField/RecaptchaField';\n\nimport styles from './CheckoutForm.module.scss';\n\ntype Props = {\n  paymentMethodId?: string;\n  onBackButtonClick: () => void;\n  paymentMethods?: PaymentMethod[];\n  onPaymentMethodChange: React.ChangeEventHandler<HTMLInputElement>;\n  onCouponFormSubmit: React.FormEventHandler<HTMLFormElement>;\n  onCouponInputChange: React.ChangeEventHandler<HTMLInputElement>;\n  onRedeemCouponButtonClick: () => void;\n  onCloseCouponFormClick: () => void;\n  error?: string;\n  couponFormOpen: boolean;\n  couponFormError?: string;\n  couponFormApplied?: boolean;\n  couponFormSubmitting?: boolean;\n  couponInputValue: string;\n  order: Order;\n  offer: Offer;\n  offerType: OfferType;\n  children: ReactNode;\n  submitting: boolean;\n  captchaSiteKey?: string;\n  recaptchaRef?: React.RefObject<ReCAPTCHA>;\n};\n\nconst CheckoutForm: React.FC<Props> = ({\n  paymentMethodId,\n  paymentMethods,\n  order,\n  offer,\n  offerType,\n  onBackButtonClick,\n  onPaymentMethodChange,\n  error,\n  couponFormOpen,\n  couponInputValue,\n  couponFormError,\n  couponFormApplied,\n  couponFormSubmitting,\n  onCouponInputChange,\n  onCloseCouponFormClick,\n  onCouponFormSubmit,\n  onRedeemCouponButtonClick,\n  children,\n  submitting,\n  captchaSiteKey,\n  recaptchaRef,\n}) => {\n  const { t } = useTranslation('account');\n\n  const getOfferPeriod = () => {\n    // t('periods.day', { count })\n    // t('periods.week', { count })\n    // t('periods.month', { count })\n    // t('periods.year', { count })\n    return offer ? t(`periods.${offer.period}`) : '';\n  };\n\n  const getFreeTrialText = (offer: Offer) => {\n    if (offer.freeDays) {\n      return t('checkout.days_trial', { count: offer.freeDays });\n    } else if (offer.freePeriods) {\n      // t('periods.day', { count })\n      // t('periods.week', { count })\n      // t('periods.month', { count })\n      // t('periods.year', { count })\n      const period = t(`periods.${offer.period}`, { count: offer.freePeriods });\n\n      return t('checkout.periods_trial', { count: offer.freePeriods, period });\n    }\n\n    return null;\n  };\n\n  const cardPaymentMethod = paymentMethods?.find((method) => method.methodName === 'card');\n  const paypalPaymentMethod = paymentMethods?.find((method) => method.methodName === 'paypal');\n\n  const orderTitle = offerType === 'svod' ? (offer.period === 'month' ? t('checkout.monthly') : t('checkout.yearly')) : offer.offerTitle;\n  return (\n    <div>\n      {error ? <FormFeedback variant=\"error\">{error}</FormFeedback> : null}\n      <h1 className={styles.title}>{t('checkout.payment_method')}</h1>\n      <div className={styles.order}>\n        <div className={styles.orderInfo}>\n          <p className={classNames(styles.orderTitle, { [styles.orderTitleMargin]: offerType === 'svod' })}>{orderTitle}</p>\n          {order.discount?.type === 'trial' ? <p className={styles.orderBillingDate}>{getFreeTrialText(offer)}</p> : null}\n        </div>\n        <div className={styles.orderPrice}>\n          <span>{formatPrice(offer.customerPriceInclTax, order.currency, offer.customerCountry)}</span>\n          {offerType === 'svod' && <small>/{getOfferPeriod()}</small>}\n        </div>\n      </div>\n      <div className={styles.couponForm}>\n        {couponFormOpen ? (\n          <form onSubmit={onCouponFormSubmit} noValidate>\n            <div className={styles.redeemCoupon}>\n              <IconButton aria-label=\"Close coupon form\" onClick={onCloseCouponFormClick}>\n                <Icon icon={Close} />\n              </IconButton>\n              <input\n                className={styles.couponInput}\n                name=\"couponCode\"\n                type=\"text\"\n                placeholder=\"Coupon code\"\n                value={couponInputValue}\n                onChange={onCouponInputChange}\n              />\n              <Button variant=\"outlined\" label=\"Apply\" type=\"submit\" disabled={couponFormSubmitting} />\n            </div>\n            {couponFormError ? <FormFeedback variant=\"error\">{couponFormError}</FormFeedback> : null}\n            {couponFormApplied ? <FormFeedback variant=\"success\">{t('checkout.coupon_applied')}</FormFeedback> : null}\n          </form>\n        ) : (\n          <Button variant=\"outlined\" label={t('checkout.redeem_coupon')} onClick={onRedeemCouponButtonClick} />\n        )}\n      </div>\n\n      <div>\n        <table className={styles.orderTotals}>\n          <tbody>\n            {order.discount?.applied && order.discount?.type === 'coupon' ? (\n              <tr>\n                <td className={styles.couponCell}>\n                  {t('checkout.coupon_discount')}\n                  <br />\n                  {!!offer.period && offerType === 'svod' && (\n                    <small>\n                      {t('checkout.discount_period', {\n                        count: order.discount?.periods,\n                        period: t(`periods.${offer.period}`, { count: order.discount?.periods }),\n                      })}\n                    </small>\n                  )}\n                </td>\n                <td>{formatPrice(-order.priceBreakdown.discountAmount * (1 + order.taxRate), order.currency, offer.customerCountry)}</td>\n              </tr>\n            ) : null}\n            {order.discount?.applied && order.discount?.type === 'trial' ? (\n              <tr>\n                <td className={styles.couponCell}>{t('checkout.free_trial_discount')}</td>\n                <td>{formatPrice(-offer.customerPriceInclTax, order.currency, offer.customerCountry)}</td>\n              </tr>\n            ) : null}\n            {order.priceBreakdown.paymentMethodFee > 0 && (\n              <tr>\n                <td>{t('checkout.payment_method_fee')}</td>\n                <td>{formatPrice(order.priceBreakdown.paymentMethodFee, order.currency, offer.customerCountry)}</td>\n              </tr>\n            )}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td>{t('checkout.total_price')}</td>\n              <td>{formatPrice(order.totalPrice, order.currency, offer.customerCountry)}</td>\n            </tr>\n            {order.priceBreakdown.taxValue > 0 && (\n              <tr>\n                <td>{t('checkout.applicable_tax', { taxRate: Math.round(order.taxRate * 100) })}</td>\n                <td>{formatPrice(order.priceBreakdown.taxValue, order.currency, offer.customerCountry)}</td>\n              </tr>\n            )}\n          </tfoot>\n        </table>\n      </div>\n      {!!captchaSiteKey && <RecaptchaField siteKey={captchaSiteKey} ref={recaptchaRef} />}\n      <hr className={styles.divider} />\n      {order.requiredPaymentDetails ? (\n        <div className={styles.paymentMethods}>\n          {cardPaymentMethod ? (\n            <div className={styles.paymentMethod}>\n              <input\n                className={styles.radio}\n                type=\"radio\"\n                name=\"paymentMethodId\"\n                value={cardPaymentMethod.id}\n                id=\"card\"\n                checked={paymentMethodId === cardPaymentMethod.id.toString()}\n                onChange={onPaymentMethodChange}\n              />\n              <label className={styles.paymentMethodLabel} htmlFor=\"card\">\n                <Icon icon={CreditCard} /> {t('checkout.credit_card')}\n              </label>\n            </div>\n          ) : null}\n          {paypalPaymentMethod ? (\n            <div className={styles.paymentMethod}>\n              <input\n                className={styles.radio}\n                type=\"radio\"\n                name=\"paymentMethodId\"\n                value={paypalPaymentMethod.id}\n                id=\"paypal\"\n                checked={paymentMethodId === paypalPaymentMethod.id.toString()}\n                onChange={onPaymentMethodChange}\n              />\n              <label className={styles.paymentMethodLabel} htmlFor=\"paypal\">\n                <Icon icon={PayPal} /> {t('checkout.paypal')}\n              </label>\n            </div>\n          ) : null}\n        </div>\n      ) : null}\n      {children ? <div>{children}</div> : null}\n      {submitting && <LoadingOverlay transparentBackground inline />}\n      <DialogBackButton onClick={onBackButtonClick} />\n    </div>\n  );\n};\n\nexport default CheckoutForm;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from '../Button/Button';\nimport FormFeedback from '../FormFeedback/FormFeedback';\n\nimport styles from './NoPaymentRequired.module.scss';\n\ntype Props = {\n  onSubmit?: () => void;\n  error: string | null;\n};\n\nconst NoPaymentRequired: React.FC<Props> = ({ onSubmit, error }) => {\n  const { t } = useTranslation('account');\n\n  return (\n    <div className={styles.noPaymentRequired}>\n      {error ? <FormFeedback variant=\"error\">{error}</FormFeedback> : null}\n      <p>{t('checkout.no_payment_needed')}</p>\n      <Button label={t('checkout.continue')} variant=\"contained\" color=\"primary\" size=\"large\" onClick={onSubmit} fullWidth />\n    </div>\n  );\n};\n\nexport default NoPaymentRequired;\n","import { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Payment from 'payment';\nimport { object, string } from 'yup';\nimport useForm from '@jwp/ott-hooks-react/src/useForm';\nimport { testId } from '@jwp/ott-common/src/utils/common';\n\nimport Button from '../Button/Button';\nimport CreditCardCVCField from '../form-fields/CreditCardCVCField/CreditCardCVCField';\nimport CreditCardExpiryField from '../form-fields/CreditCardExpiryField/CreditCardExpiryField';\nimport CreditCardNumberField from '../form-fields/CreditCardNumberField/CreditCardNumberField';\nimport TextField from '../form-fields/TextField/TextField';\nimport FormFeedback from '../FormFeedback/FormFeedback';\n\nimport styles from './PaymentForm.module.scss';\n\nexport type PaymentFormData = {\n  cardholderName: string;\n  cardNumber: string;\n  cardExpiry: string;\n  cardCVC: string;\n  cardExpMonth: string;\n  cardExpYear: string;\n};\n\ntype Props = {\n  onPaymentFormSubmit: (values: PaymentFormData) => void;\n};\n\nconst PaymentForm: React.FC<Props> = ({ onPaymentFormSubmit }) => {\n  const { t } = useTranslation('account');\n\n  const { values, errors, setValue, handleChange, handleBlur, handleSubmit } = useForm<PaymentFormData>({\n    initialValues: { cardholderName: '', cardNumber: '', cardExpiry: '', cardCVC: '', cardExpMonth: '', cardExpYear: '' },\n    validationSchema: object()\n      .required()\n      .shape({\n        cardholderName: string().required(),\n        cardNumber: string()\n          .required()\n          .test('card number validation', t('checkout.invalid_card_number'), (value) => Payment.fns.validateCardNumber(value as string)),\n        cardExpiry: string()\n          .required()\n          .test('card expiry validation', t('checkout.invalid_card_expiry'), (value) => Payment.fns.validateCardExpiry(value as string)),\n        cardCVC: string()\n          .required()\n          .test('cvc validation', t('checkout.invalid_cvc_number'), (value, context) => {\n            const issuer = Payment.fns.cardType(context.parent.cardNumber);\n\n            return Payment.fns.validateCardCVC(value as string, issuer);\n          }),\n        cardExpMonth: string().required(),\n        cardExpYear: string().required(),\n      }),\n    validateOnBlur: true,\n    onSubmit: onPaymentFormSubmit,\n  });\n\n  useEffect(() => {\n    if (values.cardExpiry) {\n      const expiry = Payment.fns.cardExpiryVal(values.cardExpiry);\n      if (expiry.month) {\n        setValue('cardExpMonth', expiry.month.toString());\n      }\n      if (expiry.year) {\n        setValue('cardExpYear', expiry.year.toString());\n      }\n    }\n    //eslint-disable-next-line\n  }, [values.cardExpiry]);\n\n  return (\n    <div className={styles.paymentForm}>\n      <form onSubmit={handleSubmit} data-testid={testId('payment_form')} noValidate>\n        {errors.form ? (\n          <div className={styles.formError}>\n            <FormFeedback variant=\"error\">{errors.form}</FormFeedback>\n          </div>\n        ) : null}\n        <div>\n          <TextField\n            label={t('checkout.card_holder_name')}\n            name=\"cardholderName\"\n            value={values.cardholderName}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            placeholder={t('checkout.credit_card_name')}\n            autoComplete=\"cc-name\"\n            required\n          />\n        </div>\n        <div>\n          <CreditCardNumberField value={values.cardNumber.toString()} error={errors.cardNumber} onBlur={handleBlur} onChange={handleChange} />\n        </div>\n        <div className={styles.columns}>\n          <div>\n            <CreditCardExpiryField value={values.cardExpiry} onBlur={handleBlur} onChange={handleChange} error={errors.cardExpiry} />\n          </div>\n          <div>\n            <CreditCardCVCField value={values.cardCVC} onBlur={handleBlur} onChange={handleChange} error={errors.cardCVC} />\n          </div>\n        </div>\n        <div>\n          <Button label={t('checkout.continue')} variant=\"contained\" color=\"primary\" type=\"submit\" size=\"large\" fullWidth />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PaymentForm;\n","import type { CoreOptions } from '@adyen/adyen-web/dist/types/core/types';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport type DropinElement from '@adyen/adyen-web/dist/types/components/Dropin/Dropin';\nimport { useNavigate } from 'react-router';\nimport type { AdyenPaymentSession } from '@jwp/ott-common/types/checkout';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport CheckoutController from '@jwp/ott-common/src/controllers/CheckoutController';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport { createURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport { ADYEN_LIVE_CLIENT_KEY, ADYEN_TEST_CLIENT_KEY } from '@jwp/ott-common/src/constants';\nimport { useTranslation } from 'react-i18next';\n\nimport Adyen from '../../components/Adyen/Adyen';\nimport { useAriaAnnouncer } from '../AnnouncementProvider/AnnoucementProvider';\n\ntype Props = {\n  setUpdatingOrder: (loading: boolean) => void;\n  type: AdyenPaymentMethodType;\n  paymentSuccessUrl: string;\n  orderId?: number;\n  getCaptchaValue: () => Promise<string | undefined>;\n};\n\nexport default function AdyenInitialPayment({ setUpdatingOrder, type, paymentSuccessUrl, orderId, getCaptchaValue }: Props) {\n  const accountController = getModule(AccountController);\n  const checkoutController = getModule(CheckoutController);\n  const { t } = useTranslation(['account', 'error']);\n  const announce = useAriaAnnouncer();\n\n  const [error, setError] = useState<string>();\n  const [session, setSession] = useState<AdyenPaymentSession>();\n\n  const isSandbox = accountController.getSandbox();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const createSession = async () => {\n      setUpdatingOrder(true);\n\n      try {\n        const session = await checkoutController.createAdyenPaymentSession(window.origin);\n\n        setSession(session);\n      } catch (error: unknown) {\n        if (error instanceof Error) {\n          setError(error.message);\n        }\n      }\n\n      setUpdatingOrder(false);\n    };\n\n    createSession();\n  }, [setUpdatingOrder, checkoutController]);\n\n  const onSubmit = useCallback(\n    async (state: AdyenEventData, handleAction: DropinElement['handleAction']) => {\n      if (!state.isValid) return;\n\n      try {\n        setUpdatingOrder(true);\n        setError(undefined);\n\n        if (orderId === undefined) {\n          setError(t('error:adyen_order_unknown'));\n          return;\n        }\n\n        const captchaValue = await getCaptchaValue();\n\n        const returnUrl = createURL(window.location.href, {\n          u: 'finalize-payment',\n          orderId: orderId,\n        });\n        const result = await checkoutController.initialAdyenPayment(state.data.paymentMethod, returnUrl, captchaValue);\n\n        if ('action' in result) {\n          handleAction(result.action);\n        }\n\n        await accountController.reloadSubscriptions({ retry: 10 });\n        announce(t('account:checkout.payment_success'), 'success');\n        navigate(paymentSuccessUrl, { replace: true });\n      } catch (error: unknown) {\n        if (error instanceof Error) {\n          setError(error.message);\n        }\n      }\n\n      setUpdatingOrder(false);\n    },\n    [setUpdatingOrder, orderId, checkoutController, accountController, announce, t, navigate, paymentSuccessUrl, getCaptchaValue],\n  );\n\n  const adyenConfiguration: CoreOptions = useMemo(\n    () => ({\n      session: session,\n      showPayButton: false,\n      environment: isSandbox ? 'test' : 'live',\n      clientKey: isSandbox ? ADYEN_TEST_CLIENT_KEY : ADYEN_LIVE_CLIENT_KEY,\n      paymentMethodsConfiguration: {\n        card: {\n          hasHolderName: true,\n          holderNameRequired: true,\n        },\n      },\n      onAdditionalDetails: async (state: AdyenAdditionalEventData) => {\n        try {\n          setUpdatingOrder(true);\n\n          const data = state.data.details as number | undefined;\n          await checkoutController.finalizeAdyenPayment(orderId, data);\n\n          announce(t('account:checkout.payment_success'), 'success');\n          navigate(paymentSuccessUrl, { replace: true });\n        } catch (error: unknown) {\n          if (error instanceof Error) {\n            setError(error.message);\n            setUpdatingOrder(false);\n          }\n        }\n      },\n      onSubmit: (state: AdyenEventData, component: DropinElement) => onSubmit(state, component.handleAction),\n      onError: (error: Error) => setError(error.message),\n    }),\n    [session, isSandbox, setUpdatingOrder, checkoutController, orderId, announce, t, navigate, paymentSuccessUrl, onSubmit],\n  );\n\n  return <Adyen configuration={adyenConfiguration} type={type} error={error} />;\n}\n","import { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport useEventCallback from '@jwp/ott-hooks-react/src/useEventCallback';\nimport { useRef } from 'react';\nimport type { ReCAPTCHA } from 'react-google-recaptcha';\n\nconst useRecaptcha = () => {\n  const recaptchaRef = useRef<ReCAPTCHA>(null);\n  const captchaSiteKey = useConfigStore(({ config }) => (config.custom?.captchaSiteKey ? (config.custom?.captchaSiteKey as string) : undefined));\n  const getCaptchaValue = useEventCallback(async () => (captchaSiteKey ? (await recaptchaRef.current?.executeAsync()) || undefined : undefined));\n\n  return { recaptchaRef, captchaSiteKey, getCaptchaValue };\n};\n\nexport default useRecaptcha;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router';\nimport useCheckout from '@jwp/ott-hooks-react/src/useCheckout';\nimport { modalURLFromLocation, modalURLFromWindowLocation } from '@jwp/ott-ui-react/src/utils/location';\nimport useForm from '@jwp/ott-hooks-react/src/useForm';\nimport { FormValidationError } from '@jwp/ott-common/src/errors/FormValidationError';\nimport { useTranslation } from 'react-i18next';\nimport { createURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport { findDefaultCardMethodId } from '@jwp/ott-common/src/utils/payments';\n\nimport CheckoutForm from '../../../components/CheckoutForm/CheckoutForm';\nimport LoadingOverlay from '../../../components/LoadingOverlay/LoadingOverlay';\nimport PayPal from '../../../components/PayPal/PayPal';\nimport NoPaymentRequired from '../../../components/NoPaymentRequired/NoPaymentRequired';\nimport PaymentForm, { type PaymentFormData } from '../../../components/PaymentForm/PaymentForm';\nimport AdyenInitialPayment from '../../AdyenInitialPayment/AdyenInitialPayment';\nimport { useAriaAnnouncer } from '../../AnnouncementProvider/AnnoucementProvider';\nimport useRecaptcha from '../../../hooks/useRecaptcha';\n\nconst Checkout = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [adyenUpdating, setAdyenUpdating] = useState(false); // @todo: integrate AdyenInitialPayment into useCheckout\n\n  const [couponFormOpen, setCouponFormOpen] = useState(false);\n  const [showCouponCodeSuccess, setShowCouponCodeSuccess] = useState(false);\n  const { t } = useTranslation('account');\n  const announce = useAriaAnnouncer();\n\n  const chooseOfferUrl = modalURLFromLocation(location, 'choose-offer');\n  const welcomeUrl = modalURLFromLocation(location, 'welcome');\n  const closeModalUrl = modalURLFromLocation(location, null);\n\n  const { recaptchaRef, captchaSiteKey, getCaptchaValue } = useRecaptcha();\n\n  const backButtonClickHandler = () => navigate(chooseOfferUrl);\n\n  const { selectedOffer, offerType, paymentMethods, order, isSubmitting, updateOrder, submitPaymentWithoutDetails, submitPaymentPaypal, submitPaymentStripe } =\n    useCheckout({\n      onUpdateOrderSuccess: () => !!couponCode && setShowCouponCodeSuccess(true),\n      onSubmitPaymentWithoutDetailsSuccess: () => {\n        announce(t('checkout.payment_success'), 'success');\n\n        return navigate(offerType === 'svod' ? welcomeUrl : closeModalUrl, { replace: true });\n      },\n      onSubmitPaypalPaymentSuccess: ({ redirectUrl }) => {\n        window.location.href = redirectUrl;\n      },\n      onSubmitStripePaymentSuccess: () => navigate(modalURLFromLocation(location, 'waiting-for-payment'), { replace: true }),\n    });\n\n  const {\n    values: { couponCode, paymentMethodId },\n    setValue,\n    submitting: couponFormSubmitting,\n    errors,\n    handleChange,\n    handleSubmit,\n  } = useForm({\n    initialValues: { couponCode: '', paymentMethodId: findDefaultCardMethodId(paymentMethods) },\n    onSubmit: ({ couponCode, paymentMethodId }) => {\n      setShowCouponCodeSuccess(false);\n\n      return updateOrder.mutateAsync({ couponCode, paymentMethodId: parseInt(paymentMethodId) });\n    },\n    onSubmitSuccess: ({ couponCode }): void => setShowCouponCodeSuccess(!!couponCode),\n    onSubmitError: ({ error }) => {\n      if (error instanceof FormValidationError && error.errors.order?.includes(`Order with id ${order?.id} not found`)) {\n        navigate(modalURLFromLocation(location, 'choose-offer'), { replace: true });\n      }\n    },\n  });\n\n  const handlePaymentMethodChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    handleChange(event);\n\n    // Always send payment method to backend\n    updateOrder.mutateAsync({ couponCode, paymentMethodId: parseInt(event.target.value) });\n  };\n\n  useEffect(() => {\n    if (!selectedOffer) {\n      return navigate(chooseOfferUrl, { replace: true });\n    }\n  }, [navigate, chooseOfferUrl, selectedOffer]);\n\n  // Pre-select first payment method\n  useEffect(() => {\n    if (!paymentMethods?.length) return;\n\n    setValue('paymentMethodId', findDefaultCardMethodId(paymentMethods));\n  }, [paymentMethods, setValue]);\n\n  // clear after closing the checkout modal\n  useEffect(() => {\n    return () => setShowCouponCodeSuccess(false);\n  }, []);\n\n  // loading state\n  if (!selectedOffer || !order || !paymentMethods || !offerType) {\n    return (\n      <div style={{ height: 300 }}>\n        <LoadingOverlay inline />\n      </div>\n    );\n  }\n\n  const cancelUrl = modalURLFromWindowLocation('payment-cancelled');\n  const waitingUrl = modalURLFromWindowLocation('waiting-for-payment', { offerId: selectedOffer?.offerId });\n  const errorUrl = modalURLFromWindowLocation('payment-error');\n  const successUrlPaypal = offerType === 'svod' ? waitingUrl : createURL(window.location.href, { u: '' });\n  const referrer = window.location.href;\n\n  const paymentMethod = paymentMethods?.find((method) => method.id === parseInt(paymentMethodId));\n  const noPaymentRequired = !order?.requiredPaymentDetails;\n  const isStripePayment = paymentMethod?.methodName === 'card' && paymentMethod?.provider === 'stripe';\n  const isAdyenPayment = paymentMethod?.methodName === 'card' && paymentMethod?.paymentGateway === 'adyen';\n  const isPayPalPayment = paymentMethod?.methodName === 'paypal';\n\n  return (\n    <CheckoutForm\n      order={order}\n      offer={selectedOffer}\n      offerType={offerType}\n      error={errors.form}\n      onBackButtonClick={backButtonClickHandler}\n      paymentMethods={paymentMethods}\n      paymentMethodId={paymentMethodId}\n      onPaymentMethodChange={handlePaymentMethodChange}\n      onCouponFormSubmit={handleSubmit}\n      onCouponInputChange={handleChange}\n      onRedeemCouponButtonClick={() => setCouponFormOpen(true)}\n      onCloseCouponFormClick={() => setCouponFormOpen(false)}\n      couponInputValue={couponCode}\n      couponFormOpen={couponFormOpen}\n      couponFormApplied={showCouponCodeSuccess}\n      couponFormSubmitting={couponFormSubmitting}\n      couponFormError={errors.couponCode}\n      submitting={isSubmitting || adyenUpdating}\n      captchaSiteKey={captchaSiteKey}\n      recaptchaRef={recaptchaRef}\n    >\n      {noPaymentRequired && (\n        <NoPaymentRequired\n          onSubmit={async () => {\n            const captchaValue = await getCaptchaValue();\n\n            return submitPaymentWithoutDetails.mutateAsync({ captchaValue });\n          }}\n          error={submitPaymentWithoutDetails.error?.message || null}\n        />\n      )}\n      {isStripePayment && (\n        <PaymentForm\n          onPaymentFormSubmit={async (cardPaymentPayload: PaymentFormData) =>\n            await submitPaymentStripe.mutateAsync({ cardPaymentPayload, referrer, returnUrl: waitingUrl })\n          }\n        />\n      )}\n      {isAdyenPayment && (\n        <>\n          <AdyenInitialPayment\n            paymentSuccessUrl={offerType === 'svod' ? welcomeUrl : closeModalUrl}\n            setUpdatingOrder={setAdyenUpdating}\n            orderId={order.id}\n            type=\"card\"\n            getCaptchaValue={getCaptchaValue}\n          />\n        </>\n      )}\n      {isPayPalPayment && (\n        <PayPal\n          onSubmit={async () => {\n            const captchaValue = await getCaptchaValue();\n\n            submitPaymentPaypal.mutate({ successUrl: successUrlPaypal, waitingUrl, cancelUrl, errorUrl, couponCode, captchaValue });\n          }}\n          error={submitPaymentPaypal.error?.message || null}\n        />\n      )}\n    </CheckoutForm>\n  );\n};\n\nexport default Checkout;\n","import { useMutation, useQuery } from 'react-query';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useCheckoutStore } from '@jwp/ott-common/src/stores/CheckoutStore';\nimport CheckoutController from '@jwp/ott-common/src/controllers/CheckoutController';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport type { OfferType } from '@jwp/ott-common/types/checkout';\n\nconst useOffers = () => {\n  const checkoutController = getModule(CheckoutController);\n  const accountController = getModule(AccountController);\n\n  const { mediaOffers, subscriptionOffers, switchSubscriptionOffers, requestedMediaOffers } = useCheckoutStore(\n    ({ mediaOffers, subscriptionOffers, switchSubscriptionOffers, requestedMediaOffers }) => ({\n      mediaOffers,\n      subscriptionOffers,\n      switchSubscriptionOffers,\n      requestedMediaOffers,\n    }),\n    shallow,\n  );\n\n  const { isLoading: isInitialisationLoading } = useQuery<void>({\n    queryKey: ['initialiseOffers', requestedMediaOffers],\n    queryFn: checkoutController.initialiseOffers,\n  });\n\n  const chooseOffer = useMutation({\n    mutationKey: ['chooseOffer'],\n    mutationFn: checkoutController.chooseOffer,\n  });\n\n  const switchSubscription = useMutation({\n    mutationKey: ['switchSubscription'],\n    mutationFn: checkoutController.switchSubscription,\n    onSuccess: () => accountController.reloadSubscriptions({ delay: 3000, retry: 10 }), // A subscription switch usually takes at least 3 secs\n  });\n\n  const hasMediaOffers = mediaOffers.length > 0;\n  const hasSubscriptionOffers = subscriptionOffers.length > 0;\n  const hasPremierOffers = requestedMediaOffers.some((mediaOffer) => mediaOffer.premier);\n  const hasMultipleOfferTypes = (subscriptionOffers.length > 0 || switchSubscriptionOffers.length > 0) && hasMediaOffers && !hasPremierOffers;\n  const defaultOfferType: OfferType = hasPremierOffers || !hasSubscriptionOffers ? 'tvod' : 'svod';\n\n  return {\n    isLoading: isInitialisationLoading || chooseOffer.isLoading,\n    mediaOffers,\n    subscriptionOffers,\n    switchSubscriptionOffers,\n    chooseOffer,\n    switchSubscription,\n    hasMultipleOfferTypes,\n    defaultOfferType,\n  };\n};\n\nexport default useOffers;\n","import * as React from \"react\";\nconst SvgCheckCircle = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41 10.59L10 14.17L17.59 6.58L19 8L10 17Z\" }));\nexport default SvgCheckCircle;\n","import React, { type FC, type SVGProps } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport type { FormErrors } from '@jwp/ott-common/types/form';\nimport type { Offer, ChooseOfferFormData } from '@jwp/ott-common/types/checkout';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { getOfferPrice, isSVODOffer } from '@jwp/ott-common/src/utils/offers';\nimport { testId } from '@jwp/ott-common/src/utils/common';\nimport CheckCircle from '@jwp/ott-theme/assets/icons/check_circle.svg?react';\n\nimport Button from '../Button/Button';\nimport FormFeedback from '../FormFeedback/FormFeedback';\nimport DialogBackButton from '../DialogBackButton/DialogBackButton';\nimport LoadingOverlay from '../LoadingOverlay/LoadingOverlay';\nimport Icon from '../Icon/Icon';\n\nimport styles from './ChooseOfferForm.module.scss';\n\ntype OfferBoxProps = {\n  offer: Offer;\n  selected: boolean;\n} & Pick<Props, 'onChange'>;\n\nconst OfferBox: React.FC<OfferBoxProps> = ({ offer, selected, onChange }: OfferBoxProps) => {\n  const { t } = useTranslation('account');\n\n  const getFreeTrialText = (offer: Offer) => {\n    if (offer.freeDays) {\n      return t('choose_offer.benefits.first_days_free', { count: offer.freeDays });\n    } else if (offer.freePeriods) {\n      // t('periods.day', { count })\n      // t('periods.week', { count })\n      // t('periods.month', { count })\n      // t('periods.year', { count })\n      const period = t(`periods.${offer.period}`, { count: offer.freePeriods });\n\n      return t('choose_offer.benefits.first_periods_free', { count: offer.freePeriods, period });\n    }\n\n    return null;\n  };\n\n  const renderListItem = (text: string, icon: FC<SVGProps<SVGSVGElement>>) => (\n    <li>\n      <Icon icon={icon} />\n      {text}\n      <span className=\"hidden\">.</span>\n    </li>\n  );\n\n  const renderOption = ({ title, periodString, secondBenefit }: { title: string; periodString?: string; secondBenefit?: string }) => (\n    <div className={styles.offer} aria-labelledby={`title-${offer.offerId}`}>\n      <input\n        className={styles.radio}\n        onChange={onChange}\n        type=\"radio\"\n        name={'selectedOfferId'}\n        value={offer.offerId}\n        id={offer.offerId}\n        checked={selected}\n        data-testid={testId(offer.offerId)}\n      />\n      <div className={styles.label}>\n        <label htmlFor={offer.offerId}>\n          <h2 className={styles.offerTitle} id={`title-${offer.offerId}`}>\n            {title}\n          </h2>\n          <span className=\"hidden\">.</span>\n          <hr className={styles.offerDivider} aria-hidden={true} />\n          <ul className={styles.offerBenefits}>\n            {offer.freeDays || offer.freePeriods ? renderListItem(getFreeTrialText(offer) || '', CheckCircle) : null}\n            {!!secondBenefit && renderListItem(secondBenefit, CheckCircle)}\n            {renderListItem(t('choose_offer.benefits.watch_on_all_devices'), CheckCircle)}\n          </ul>\n          <div className={styles.fill} />\n          <div className={styles.offerPrice}>\n            {getOfferPrice(offer)} {!!periodString && <small>/{periodString}</small>}\n          </div>\n        </label>\n      </div>\n    </div>\n  );\n\n  if (isSVODOffer(offer)) {\n    const isMonthly = offer.period === 'month';\n\n    return renderOption({\n      title: isMonthly ? t('choose_offer.monthly') : t('choose_offer.yearly'),\n      secondBenefit: t('choose_offer.benefits.cancel_anytime'),\n      periodString: isMonthly ? t('periods.month') : t('periods.year'),\n    });\n  }\n\n  return renderOption({\n    title: offer.offerTitle,\n    secondBenefit:\n      !!offer.durationPeriod && !!offer.durationAmount\n        ? t('choose_offer.tvod_access', { period: offer.durationPeriod, count: offer.durationAmount })\n        : undefined,\n  });\n};\n\ntype Props = {\n  values: ChooseOfferFormData;\n  errors: FormErrors<ChooseOfferFormData>;\n  onChange: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onSubmit: React.FormEventHandler<HTMLFormElement>;\n  onBackButtonClickHandler?: () => void;\n  offers: Offer[];\n  showOfferTypeSwitch: boolean;\n  submitting: boolean;\n};\n\nconst ChooseOfferForm: React.FC<Props> = ({ values, errors, submitting, offers, showOfferTypeSwitch, onChange, onSubmit, onBackButtonClickHandler }: Props) => {\n  const siteName = useConfigStore((s) => s.config.siteName);\n  const { t } = useTranslation('account');\n  const { selectedOfferType, selectedOfferId } = values;\n\n  return (\n    <form onSubmit={onSubmit} data-testid={testId('choose-offer-form')} noValidate>\n      {onBackButtonClickHandler ? <DialogBackButton onClick={onBackButtonClickHandler} /> : null}\n      <h1 className={styles.title}>{t('choose_offer.title')}</h1>\n      <p className={styles.subtitle}>{t('choose_offer.watch_this_on_platform', { siteName })}</p>\n      {errors.form ? <FormFeedback variant=\"error\">{errors.form}</FormFeedback> : null}\n      {showOfferTypeSwitch && (\n        <div className={styles.offerGroupSwitch}>\n          <input\n            className={styles.radio}\n            onChange={onChange}\n            type=\"radio\"\n            name=\"selectedOfferType\"\n            id=\"svod\"\n            value=\"svod\"\n            checked={selectedOfferType === 'svod'}\n          />\n          <label className={classNames(styles.label, styles.offerGroupLabel)} htmlFor=\"svod\">\n            {t('choose_offer.subscription')}\n          </label>\n          <input\n            className={styles.radio}\n            onChange={onChange}\n            type=\"radio\"\n            name=\"selectedOfferType\"\n            id=\"tvod\"\n            value=\"tvod\"\n            checked={selectedOfferType === 'tvod'}\n          />\n          <label className={classNames(styles.label, styles.offerGroupLabel)} htmlFor=\"tvod\">\n            {t('choose_offer.one_time_only')}\n          </label>\n        </div>\n      )}\n      <div className={styles.offers}>\n        {!offers.length ? (\n          <p>{t('choose_offer.no_pricing_available')}</p>\n        ) : (\n          offers.map((offer) => <OfferBox key={offer.offerId} offer={offer} selected={selectedOfferId === offer.offerId} onChange={onChange} />)\n        )}\n      </div>\n      {submitting && <LoadingOverlay transparentBackground inline />}\n      <Button label={t('choose_offer.continue')} disabled={submitting || !offers.length} variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth />\n    </form>\n  );\n};\nexport default ChooseOfferForm;\n","import React, { useEffect } from 'react';\nimport { mixed, object } from 'yup';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useNavigate } from 'react-router';\nimport type { ChooseOfferFormData, OfferType } from '@jwp/ott-common/types/checkout';\nimport { modalURLFromLocation } from '@jwp/ott-ui-react/src/utils/location';\nimport useOffers from '@jwp/ott-hooks-react/src/useOffers';\nimport useForm from '@jwp/ott-hooks-react/src/useForm';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\n\nimport ChooseOfferForm from '../../../components/ChooseOfferForm/ChooseOfferForm';\nimport LoadingOverlay from '../../../components/LoadingOverlay/LoadingOverlay';\nimport useQueryParam from '../../../hooks/useQueryParam';\n\nconst ChooseOffer = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { t } = useTranslation('account');\n  const isSwitch = useQueryParam('u') === 'upgrade-subscription';\n  const isPendingOffer = useAccountStore(({ pendingOffer }) => ({ isPendingOffer: !!pendingOffer }));\n\n  const { isLoading, mediaOffers, subscriptionOffers, switchSubscriptionOffers, defaultOfferType, hasMultipleOfferTypes, chooseOffer, switchSubscription } =\n    useOffers();\n\n  const checkoutUrl = modalURLFromLocation(location, 'checkout');\n  const upgradePendingUrl = modalURLFromLocation(location, 'upgrade-subscription-pending');\n  const upgradeSuccessUrl = modalURLFromLocation(location, 'upgrade-subscription-success');\n  const upgradeErrorUrl = modalURLFromLocation(location, 'upgrade-subscription-error');\n\n  const { values, errors, submitting, setValue, handleSubmit, handleChange } = useForm<ChooseOfferFormData>({\n    initialValues: { selectedOfferType: defaultOfferType, selectedOfferId: undefined },\n    validationSchema: object().shape({\n      selectedOfferId: mixed<string>().required(t('choose_offer.field_required')),\n      selectedOfferType: mixed<OfferType>().required(t('choose_offer.field_required')),\n    }),\n    onSubmit: async ({ selectedOfferType, selectedOfferId }) => {\n      if (!selectedOfferType || !selectedOfferId) return;\n\n      const offer = visibleOffers.find((offer) => offer.offerId === selectedOfferId);\n\n      if (!offer) return;\n\n      await chooseOffer.mutateAsync(offer);\n\n      if (isSwitch) {\n        return await switchSubscription.mutateAsync();\n      }\n    },\n    onSubmitSuccess: async () => {\n      if (isSwitch && isPendingOffer) return navigate(upgradePendingUrl);\n      if (isSwitch) return navigate(upgradeSuccessUrl);\n\n      navigate(checkoutUrl);\n    },\n    onSubmitError: () => navigate(upgradeErrorUrl),\n  });\n\n  const visibleOffers = values.selectedOfferType === 'tvod' ? mediaOffers : isSwitch ? switchSubscriptionOffers : subscriptionOffers;\n\n  useEffect(() => {\n    if (isLoading || !visibleOffers.length) return;\n\n    const offerId = visibleOffers[visibleOffers.length - 1]?.offerId;\n\n    setValue('selectedOfferId', offerId);\n  }, [visibleOffers, values.selectedOfferType, setValue, isLoading]);\n\n  useEffect(() => {\n    if (isLoading || !defaultOfferType) return;\n\n    setValue('selectedOfferType', defaultOfferType);\n  }, [isLoading, defaultOfferType, setValue]);\n\n  // loading state\n  if (isLoading) {\n    return (\n      <div style={{ height: 300 }}>\n        <LoadingOverlay inline />\n      </div>\n    );\n  }\n\n  return (\n    <ChooseOfferForm\n      onSubmit={handleSubmit}\n      onChange={handleChange}\n      values={values}\n      errors={errors}\n      submitting={submitting}\n      offers={visibleOffers}\n      showOfferTypeSwitch={hasMultipleOfferTypes}\n    />\n  );\n};\n\nexport default ChooseOffer;\n","import React, { type InputHTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nimport type { FormControlProps } from '../../types/form';\n\nimport styles from './Select.module.scss';\n\ntype HTMLSelectProps = Omit<InputHTMLAttributes<HTMLSelectElement>, 'size'>;\n\ntype Props = HTMLSelectProps & {\n  id?: string;\n  helperTextId?: string;\n  options?: (string | { value: string; label: string })[];\n  optionsStyle?: string;\n  defaultLabel?: string;\n} & FormControlProps;\n\nconst Select = ({\n  required,\n  className,\n  disabled,\n  defaultLabel,\n  options,\n  optionsStyle,\n  editing = true,\n  value,\n  onChange,\n  id,\n  name,\n  error,\n  helperTextId,\n  type,\n  ...rest\n}: Props) => {\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (!editing) {\n      return event.preventDefault();\n    }\n    onChange?.(event);\n  };\n\n  // Default to 'text' if 'type' property is absent, which occurs in textareas.\n  const containerClassName = classNames(\n    styles.container,\n    {\n      [styles.error]: error,\n      [styles.disabled]: disabled,\n    },\n    className,\n  );\n\n  const ariaAttributes = {\n    'aria-required': !!required,\n    'aria-invalid': Boolean(required && error && value !== ''),\n    'aria-describedby': helperTextId,\n  } as const;\n\n  const inputProps: HTMLSelectProps = {\n    id,\n    name,\n    value,\n    disabled,\n    className: styles.select,\n    readOnly: !editing,\n    required: required,\n    ...ariaAttributes,\n    ...rest,\n  };\n\n  return (\n    <div className={classNames({ [containerClassName]: editing })}>\n      <select {...inputProps} onChange={handleChange}>\n        {defaultLabel && (\n          <option className={classNames(styles.option, optionsStyle)} value=\"\" disabled={required}>\n            {defaultLabel}\n          </option>\n        )}\n        {options &&\n          options.map((option) => (\n            <option\n              className={classNames(styles.option, optionsStyle)}\n              key={typeof option === 'string' ? option : option.value}\n              value={typeof option === 'string' ? option : option.value}\n            >\n              {typeof option === 'string' ? option : option.label}\n            </option>\n          ))}\n      </select>\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { type InputHTMLAttributes } from 'react';\n\nimport { FormField } from '../../FormField/FormField';\nimport Select from '../../Select/Select';\nimport type { FormControlProps } from '../../../types/form';\n\ntype SelectProps = Omit<InputHTMLAttributes<HTMLSelectElement>, 'size'>;\n\ntype Props = SelectProps & {\n  defaultLabel?: string;\n  options?: (string | { value: string; label: string })[];\n  optionsStyle?: string;\n  helperText?: React.ReactNode;\n} & FormControlProps;\n\nconst Dropdown: React.FC<Props> = ({\n  name,\n  className,\n  label,\n  error,\n  helperText,\n  editing = true,\n  required = false,\n  size = 'medium',\n  testId,\n  lang,\n  ...inputProps\n}) => {\n  return (\n    <FormField\n      className={className}\n      error={error}\n      helperText={helperText}\n      label={label}\n      required={required}\n      editing={editing}\n      testId={testId}\n      name={name}\n      size={size}\n      lang={lang}\n      renderInput={(fieldProps) => <Select name={name} required={required} editing={editing} error={error} size={size} {...fieldProps} {...inputProps} />}\n    />\n  );\n};\n\nexport default Dropdown;\n","import React, { type InputHTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nimport { FormField } from '../../FormField/FormField';\nimport type { FormControlProps } from '../../../types/form';\n\nimport styles from './Checkbox.module.scss';\n\ntype HTMLCheckboxProps = Omit<InputHTMLAttributes<HTMLInputElement>, 'size'>;\n\ntype Props = HTMLCheckboxProps & {\n  checkboxLabel?: React.ReactNode;\n  helperText?: React.ReactNode;\n} & FormControlProps;\n\nconst Checkbox: React.FC<Props> = ({\n  className,\n  label,\n  checkboxLabel,\n  name,\n  onChange,\n  editing = true,\n  value,\n  helperText,\n  error,\n  required,\n  lang,\n  size,\n  ...rest\n}) => {\n  const fieldClassName = classNames(styles.checkbox, { [styles.error]: error }, className);\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    if (!editing) {\n      return event.preventDefault();\n    }\n    onChange?.(event);\n  };\n\n  return (\n    <FormField\n      className={fieldClassName}\n      name={name}\n      label={label}\n      editing={editing}\n      required={required}\n      error={error}\n      helperText={helperText}\n      renderInput={({ id, helperTextId }) => (\n        <div className={styles.row}>\n          <input\n            name={name}\n            type=\"checkbox\"\n            id={id}\n            value={value}\n            aria-required={required}\n            aria-describedby={helperTextId}\n            {...rest}\n            onChange={handleChange}\n            readOnly={!editing}\n          />\n          <label htmlFor={id} lang={lang}>\n            {required ? (\n              <span role=\"presentation\" aria-hidden=\"true\">\n                *\n              </span>\n            ) : (\n              ''\n            )}\n            {checkboxLabel}\n          </label>\n        </div>\n      )}\n    />\n  );\n};\n\nexport default Checkbox;\n","import React, { type InputHTMLAttributes } from 'react';\nimport classNames from 'classnames';\n\nimport type { FormControlProps } from '../../../types/form';\nimport { FormField } from '../../FormField/FormField';\n\nimport styles from './Radio.module.scss';\n\ntype HTMLRadioProps = Omit<InputHTMLAttributes<HTMLInputElement>, 'size'>;\n\ntype Props = HTMLRadioProps & {\n  values: { value: string; label: string }[];\n  helperText?: React.ReactNode;\n} & FormControlProps;\n\nconst Radio: React.FC<Props> = ({ name, onChange, label, value, editing = true, size, values, helperText, error, required, disabled, lang, ...rest }) => {\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    if (!editing) {\n      return event.preventDefault();\n    }\n    onChange?.(event);\n  };\n\n  return (\n    <FormField\n      name={name}\n      label={label}\n      error={error}\n      helperText={helperText}\n      required={required}\n      renderInput={({ id, helperTextId }) => (\n        <div id={id}>\n          {values.map(({ value: optionValue, label: optionLabel }, index) => (\n            <div className={classNames(styles.radio, { [styles.error]: error })} key={index} lang={lang}>\n              <input\n                value={optionValue}\n                name={name}\n                type=\"radio\"\n                id={id + index}\n                onChange={handleChange}\n                checked={value === optionValue}\n                required={required}\n                disabled={disabled}\n                aria-describedby={helperTextId}\n                {...rest}\n              />\n              <label htmlFor={id + index}>{optionLabel}</label>\n            </div>\n          ))}\n        </div>\n      )}\n    />\n  );\n};\n\nexport default Radio;\n","import React, { type InputHTMLAttributes, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport useOpaqueId from '@jwp/ott-hooks-react/src/useOpaqueId';\n\nimport { FormField } from '../../FormField/FormField';\nimport type { FormControlProps } from '../../../types/form';\n\nimport styles from './DateField.module.scss';\n\ntype InputProps = Omit<InputHTMLAttributes<HTMLInputElement>, 'size'>;\n\ntype Props = InputProps & {\n  format?: string;\n  helperText?: React.ReactNode;\n} & FormControlProps;\n\nconst parseDateString = (dateString: string | undefined) => {\n  if (!dateString) return null;\n\n  const date = new Date(dateString);\n\n  return isNaN(date.getTime()) ? null : date;\n};\n\nconst padLeft = (value: number) => {\n  return value > 0 && value < 10 ? `0${value}` : value.toString();\n};\n\nconst clamp = (value: number, min: number, max: number) => Math.min(max, Math.max(min, value));\n\nconst parseBlurValue = (value: string, min: number, max: number) => {\n  const parsed = clamp(parseInt(value), min, max);\n  if (isNaN(parsed)) return '';\n\n  return value.length > 0 && parsed < 10 ? padLeft(parsed) : parsed.toString();\n};\n\nconst parseInputValue = (value: string, min: number, max: number) => {\n  const parsed = clamp(parseInt(value), min, max);\n  if (isNaN(parsed)) return '';\n\n  return value.length > 1 && parsed < 10 ? padLeft(parsed) : parsed.toString();\n};\n\nconst DateField: React.FC<Props> = ({\n  className,\n  label,\n  error,\n  helperText,\n  value,\n  onChange,\n  format = 'YYYY-MM-DD',\n  name,\n  editing,\n  lang,\n  required,\n  onFocus,\n  testId,\n}: Props) => {\n  const parsedDate = parseDateString(value);\n\n  const [values, setValues] = useState({\n    date: parsedDate?.getDate().toString() || '',\n    month: parsedDate ? (parsedDate.getMonth() + 1).toString() : '',\n    year: parsedDate?.getFullYear().toString() || '',\n  });\n\n  const id = useOpaqueId('text-field', name);\n  const helperTextId = useOpaqueId('helper_text', name);\n\n  const hiddenInputRef = useRef<HTMLInputElement>(null);\n\n  const dateFieldClassName = classNames(\n    styles.dateField,\n    {\n      [styles.error]: error,\n    },\n    className,\n  );\n\n  const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n    event.currentTarget.select();\n    onFocus?.(event);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Backspace' && values[event.currentTarget.name as 'date' | 'month' | 'year'] === '') {\n      (event.currentTarget.previousElementSibling as HTMLElement)?.focus();\n\n      return event.preventDefault();\n    }\n\n    if (!/^[0-9]$/.test(event.key) && event.key !== 'Tab' && event.key !== 'Backspace') {\n      return event.preventDefault();\n    }\n  };\n\n  const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setValues((current) => {\n      const date = name === 'date' ? parseBlurValue(value, 1, 31) : current.date;\n      const month = name === 'month' ? parseBlurValue(value, 1, 12) : current.month;\n      const year = name === 'year' ? parseBlurValue(value, 1900, 2100) : current.year;\n\n      return { date, month, year };\n    });\n  };\n\n  const triggerChangeEvent = (date: string, month: string, year: string) => {\n    const nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, 'value')?.set;\n\n    const newValue = date && month && year ? format.replace('YYYY', year).replace('MM', month).replace('DD', date) : '';\n\n    nativeInputValueSetter?.call(hiddenInputRef.current, newValue);\n\n    const inputEvent = new Event('input', { bubbles: true });\n\n    hiddenInputRef.current?.dispatchEvent(inputEvent);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    const nextSibling = event.currentTarget?.nextElementSibling as HTMLInputElement;\n\n    const date = name === 'date' ? parseInputValue(value, 0, 31) : values.date;\n    const month = name === 'month' ? parseInputValue(value, 0, 12) : values.month;\n    const year = name === 'year' ? parseInputValue(value, 0, 2100).slice(0, 4) : values.year;\n\n    setValues({ date, month, year });\n\n    triggerChangeEvent(date, month, year);\n\n    if ((nextSibling && name === 'month' && month.length === 2) || (name === 'date' && date.length === 2)) {\n      setTimeout(() => nextSibling.focus(), 1);\n    }\n  };\n\n  return (\n    <FormField\n      className={dateFieldClassName}\n      name={name}\n      helperText={helperText}\n      error={error}\n      label={label}\n      editing={editing}\n      lang={lang}\n      required={required}\n      testId={testId}\n      renderInput={() => (\n        <div className={styles.container}>\n          {/* don't be tempted to make it type=\"hidden\", onChange will practically be ignored that way */}\n          <input\n            ref={hiddenInputRef}\n            id={`${id}-hidden`}\n            className={styles.hiddenInput}\n            name={name}\n            onChange={onChange}\n            aria-invalid={error}\n            aria-describedby={helperTextId}\n          />\n          <input\n            className={styles.input}\n            name=\"date\"\n            placeholder=\"dd\"\n            value={values.date}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            maxLength={2}\n            type=\"number\"\n            id={`${id}-date`}\n            autoComplete=\"bday-day\"\n          />\n          {' / '}\n          <input\n            className={styles.input}\n            name=\"month\"\n            placeholder=\"mm\"\n            value={values.month}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            maxLength={2}\n            type=\"number\"\n            id={`${id}-month`}\n            autoComplete=\"bday-month\"\n          />\n          {' / '}\n          <input\n            className={styles.input}\n            name=\"year\"\n            placeholder=\"yyyy\"\n            value={values.year}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            maxLength={4}\n            type=\"number\"\n            id={`${id}-year`}\n            autoComplete=\"bday-year\"\n          />\n        </div>\n      )}\n    />\n  );\n};\n\nexport default DateField;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport type { CleengCaptureField, CleengCaptureQuestionField, PersonalDetailsFormData } from '@jwp/ott-common/types/account';\nimport { testId } from '@jwp/ott-common/src/utils/common';\nimport useForm, { type UseFormOnSubmitHandler } from '@jwp/ott-hooks-react/src/useForm';\n\nimport TextField from '../form-fields/TextField/TextField';\nimport Button from '../Button/Button';\nimport Dropdown from '../form-fields/Dropdown/Dropdown';\nimport Checkbox from '../form-fields/Checkbox/Checkbox';\nimport Radio from '../form-fields/Radio/Radio';\nimport DateField from '../form-fields/DateField/DateField';\nimport LoadingOverlay from '../LoadingOverlay/LoadingOverlay';\nimport FormFeedback from '../FormFeedback/FormFeedback';\n\nimport styles from './PersonalDetailsForm.module.scss';\n\ntype Props = {\n  initialValues: PersonalDetailsFormData;\n  onSubmit: UseFormOnSubmitHandler<PersonalDetailsFormData>;\n  error?: string;\n  fields: Record<string, CleengCaptureField>;\n  questions: CleengCaptureQuestionField[];\n  onQuestionChange: React.ChangeEventHandler;\n  questionValues: Record<string, string>;\n  questionErrors: Record<string, string>;\n};\n\nconst PersonalDetailsForm: React.FC<Props> = ({ initialValues, onSubmit, fields, questions, onQuestionChange, questionValues, questionErrors }: Props) => {\n  const { t } = useTranslation('account');\n\n  const { setValue, handleSubmit, handleChange, values, errors, validationSchemaError, submitting } = useForm<PersonalDetailsFormData>({\n    initialValues,\n    onSubmit,\n  });\n\n  const renderQuestion = ({ value, key, question, required, enabled }: CleengCaptureQuestionField) => {\n    if (!enabled) {\n      return null;\n    }\n\n    const values = value?.split(';').map((question) => {\n      const [value, label = value] = question.split(':');\n\n      return { value, label };\n    });\n\n    const props = {\n      name: key,\n      onChange: onQuestionChange,\n      error: !!questionErrors[key],\n      helperText: questionErrors[key],\n      required,\n      key,\n    };\n\n    // The rendered field is determined by the given available options for each question:\n    // TextField <- when there is exactly 1 option and the value is empty (e.g. \"\")\n    // Checkbox  <- when there is exactly 1 option and the value is not empty (e.g. \"accepted\")\n    // Radio     <- when there are exactly 2 options\n    // Dropdown  <- when there are more than 2 options\n\n    if (values.length === 1 && values[0].value === '') {\n      return <TextField value={questionValues[key]} label={question} {...props} />;\n    } else if (values.length === 1) {\n      return <Checkbox checked={!!questionValues[key]} value={values[0].value} label={question} checkboxLabel={values[0].label} {...props} />;\n    } else if (values.length === 2) {\n      return <Radio values={values} value={questionValues[key]} label={question} {...props} />;\n    } else if (values.length > 2) {\n      return <Dropdown options={values} value={questionValues[key]} label={question} defaultLabel={t('personal_details.select_answer')} {...props} />;\n    }\n\n    return null;\n  };\n\n  return (\n    <form onSubmit={handleSubmit} data-testid={testId('personal_details-form')} noValidate>\n      <h2 className={styles.title}>{t('personal_details.title')}</h2>\n      {errors.form ? (\n        <FormFeedback variant=\"error\" visible={!validationSchemaError}>\n          {errors.form}\n        </FormFeedback>\n      ) : null}\n      {fields.firstNameLastName?.enabled ? (\n        <React.Fragment>\n          <TextField\n            value={values.firstName}\n            onChange={handleChange}\n            label={t('personal_details.fist_name')}\n            placeholder={t('personal_details.fist_name')}\n            error={!!errors.firstName}\n            helperText={errors.firstName}\n            required={fields.firstNameLastName.required}\n            name=\"firstName\"\n            autoComplete=\"given-name\"\n          />\n          <TextField\n            value={values.lastName}\n            onChange={handleChange}\n            label={t('personal_details.last_name')}\n            placeholder={t('personal_details.last_name')}\n            error={!!errors.lastName}\n            helperText={errors.lastName}\n            required={fields.firstNameLastName.required}\n            name=\"lastName\"\n            autoComplete=\"family-name\"\n          />\n        </React.Fragment>\n      ) : null}\n      {fields.companyName?.enabled ? (\n        <TextField\n          value={values.companyName}\n          onChange={handleChange}\n          label={t('personal_details.company_name')}\n          placeholder={t('personal_details.company_name')}\n          error={!!errors.companyName}\n          helperText={errors.companyName}\n          required={fields.companyName.required}\n          name=\"companyName\"\n          autoComplete=\"organization\"\n        />\n      ) : null}\n      {fields.address?.enabled ? (\n        <React.Fragment>\n          <TextField\n            value={values.address}\n            onChange={handleChange}\n            label={t('personal_details.address')}\n            placeholder={t('personal_details.address')}\n            error={!!errors.address}\n            helperText={errors.address}\n            required={fields.address.required}\n            name=\"address\"\n            autoComplete=\"address-line1\"\n          />\n          <TextField\n            value={values.address2}\n            onChange={handleChange}\n            label={t('personal_details.address2')}\n            placeholder={t('personal_details.address2')}\n            error={!!errors.address2}\n            helperText={errors.address2}\n            name=\"address2\"\n            autoComplete=\"address-line2\"\n          />\n          <TextField\n            value={values.city}\n            onChange={handleChange}\n            label={t('personal_details.city')}\n            placeholder={t('personal_details.city')}\n            error={!!errors.city}\n            helperText={errors.city}\n            required={fields.address.required}\n            name=\"city\"\n            autoComplete=\"address-level2\"\n          />\n          <TextField\n            value={values.state}\n            onChange={handleChange}\n            label={t('personal_details.state')}\n            placeholder={t('personal_details.state')}\n            error={!!errors.state}\n            helperText={errors.state}\n            required={fields.address.required}\n            name=\"state\"\n            autoComplete=\"address-level1\"\n          />\n          <TextField\n            value={values.postCode}\n            onChange={handleChange}\n            label={t('personal_details.post_code')}\n            placeholder={t('personal_details.post_code')}\n            error={!!errors.postCode}\n            helperText={errors.postCode}\n            required={fields.address.required}\n            name=\"postCode\"\n            autoComplete=\"postal-code\"\n          />\n        </React.Fragment>\n      ) : null}\n      {fields.phoneNumber?.enabled ? (\n        <TextField\n          value={values.phoneNumber}\n          onChange={handleChange}\n          label={t('personal_details.phone_number')}\n          placeholder={t('personal_details.phone_number')}\n          error={!!errors.phoneNumber}\n          helperText={errors.phoneNumber}\n          required={fields.phoneNumber.required}\n          name=\"phoneNumber\"\n        />\n      ) : null}\n      {fields.birthDate?.enabled ? (\n        <DateField\n          value={values.birthDate}\n          onChange={(event) => setValue('birthDate', event.currentTarget.value)}\n          label={t('personal_details.birth_date')}\n          error={!!errors.birthDate}\n          helperText={errors.birthDate}\n          required={fields.birthDate.required}\n          name=\"birthDate\"\n        />\n      ) : null}\n      {questions.map((question) => renderQuestion(question))}\n      <Button\n        className={styles.continue}\n        type=\"submit\"\n        label={t('personal_details.continue')}\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        disabled={submitting}\n        fullWidth\n      />\n      {submitting && <LoadingOverlay transparentBackground inline />}\n    </form>\n  );\n};\n\nexport default PersonalDetailsForm;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useNavigate } from 'react-router';\nimport { mixed, object, string } from 'yup';\nimport { useQuery } from 'react-query';\nimport type { CaptureCustomAnswer, CleengCaptureQuestionField, PersonalDetailsFormData } from '@jwp/ott-common/types/account';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport { modalURLFromLocation } from '@jwp/ott-ui-react/src/utils/location';\nimport { ACCESS_MODEL } from '@jwp/ott-common/src/constants';\nimport { type UseFormOnSubmitHandler } from '@jwp/ott-hooks-react/src/useForm';\nimport useOffers from '@jwp/ott-hooks-react/src/useOffers';\n\nimport PersonalDetailsForm from '../../../components/PersonalDetailsForm/PersonalDetailsForm';\nimport LoadingOverlay from '../../../components/LoadingOverlay/LoadingOverlay';\n\nconst yupConditional = (required: boolean, message: string) => {\n  return required ? string().required(message) : mixed().notRequired();\n};\n\nconst PersonalDetails = () => {\n  const accountController = getModule(AccountController);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { t } = useTranslation('account');\n  const accessModel = useConfigStore((s) => s.accessModel);\n  const { data, isLoading } = useQuery('captureStatus', accountController.getCaptureStatus);\n  const { mediaOffers } = useOffers();\n  const hasMediaOffers = mediaOffers.length > 0;\n  const [questionValues, setQuestionValues] = useState<Record<string, string>>({});\n  const [questionErrors, setQuestionErrors] = useState<Record<string, string>>({});\n\n  const fields = useMemo(() => Object.fromEntries(data?.settings.map((item) => [item.key, item]) || []), [data]);\n\n  const questions = useMemo(\n    () => (data?.settings.filter((item) => !!(item as CleengCaptureQuestionField).question) as CleengCaptureQuestionField[]) || [],\n    [data],\n  );\n\n  const nextStep = useCallback(() => {\n    const hasOffers = accessModel === ACCESS_MODEL.SVOD || (accessModel === ACCESS_MODEL.AUTHVOD && hasMediaOffers);\n\n    navigate(modalURLFromLocation(location, hasOffers ? 'choose-offer' : 'welcome'), { replace: true });\n  }, [navigate, location, accessModel, hasMediaOffers]);\n\n  useEffect(() => {\n    if (!data) return;\n\n    if (!data.isCaptureEnabled || !data.shouldCaptureBeDisplayed) {\n      nextStep();\n    }\n\n    if (questions) {\n      setQuestionValues(Object.fromEntries(questions.map((question) => [question.key, ''])));\n    }\n  }, [data, nextStep, questions]);\n\n  const initialValues: PersonalDetailsFormData = useMemo(() => {\n    const [firstName, lastName] = (() => {\n      if (fields.firstNameLastName?.enabled) {\n        const firstNameLastName = fields.firstNameLastName?.answer as Record<string, string | null>;\n        return [firstNameLastName?.firstName || '', firstNameLastName?.lastName || ''];\n      }\n\n      return ['', ''];\n    })();\n\n    return {\n      firstName,\n      lastName,\n      birthDate: '',\n      companyName: '',\n      phoneNumber: '',\n      address: '',\n      address2: '',\n      city: '',\n      state: '',\n      postCode: '',\n      country: '',\n    };\n  }, [fields]);\n\n  const questionChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.type === 'checkbox' && !event.target.checked ? '' : event.target.value;\n\n    setQuestionValues((current) => ({ ...current, [event.target.name]: value }));\n  };\n\n  const submitHandler: UseFormOnSubmitHandler<PersonalDetailsFormData> = async (formData, { setErrors, setSubmitting, setValidationSchemaError, validate }) => {\n    const requiredMessage = t('personal_details.this_field_is_required');\n    const schema = object().shape({\n      firstName: yupConditional(!!fields.firstNameLastName?.required, requiredMessage),\n      lastName: yupConditional(!!fields.firstNameLastName?.required, requiredMessage),\n      address1: yupConditional(!!fields.address?.required, requiredMessage),\n      address2: yupConditional(!!fields.address?.required, requiredMessage),\n      postCode: yupConditional(!!fields.address?.required, requiredMessage),\n      state: yupConditional(!!fields.address?.required, requiredMessage),\n      city: yupConditional(!!fields.address?.required, requiredMessage),\n      companyName: yupConditional(!!fields.companyName?.required, requiredMessage),\n      birthDate: fields.birthDate?.required\n        ? string()\n            .required(requiredMessage)\n            .matches(/\\d{4}-\\d{2}-\\d{2}/, t('personal_details.birth_date_not_valid'))\n        : mixed().notRequired(),\n      phoneNumber: yupConditional(!!fields.phoneNumber?.required, requiredMessage),\n    });\n\n    const errors: Record<string, string> = {};\n\n    questions.forEach((question) => {\n      if (question.enabled && question.required && !questionValues[question.key]) {\n        errors[question.key] = t('personal_details.this_field_is_required');\n      }\n    });\n\n    setQuestionErrors(errors);\n\n    // we have validation errors\n    if (!validate(schema) || Object.keys(errors).length) {\n      setSubmitting(false);\n      setValidationSchemaError(true);\n      return;\n    }\n\n    try {\n      const removeEmpty = (obj: Record<string, unknown>) =>\n        Object.fromEntries(\n          Object.keys(obj)\n            .filter((key) => obj[key] !== '')\n            .map((key) => [key, obj[key]]),\n        );\n      const customAnswers = questions.map(\n        (question) =>\n          ({\n            question: question.question,\n            questionId: question.key,\n            value: questionValues[question.key],\n          } as CaptureCustomAnswer),\n      );\n\n      await accountController.updateCaptureAnswers(removeEmpty({ ...formData, customAnswers }));\n\n      nextStep();\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        setErrors({ form: error.message });\n      }\n    }\n\n    setSubmitting(false);\n  };\n\n  if (isLoading) {\n    return (\n      <div style={{ height: 400 }}>\n        <LoadingOverlay inline />\n      </div>\n    );\n  }\n\n  return (\n    <PersonalDetailsForm\n      initialValues={initialValues}\n      fields={fields}\n      questions={questions}\n      onQuestionChange={questionChangeHandler}\n      questionValues={questionValues}\n      questionErrors={questionErrors}\n      onSubmit={submitHandler}\n    />\n  );\n};\n\nexport default PersonalDetails;\n","import { useMemo } from 'react';\nimport { useQuery } from 'react-query';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\n\nexport type SocialLoginURLs = Record<string, string>;\n\nexport default function useSocialLoginUrls(url: string) {\n  const accountController = getModule(AccountController);\n\n  const { data, error } = useQuery(['socialUrls', url], () => accountController.getSocialLoginUrls(url), {\n    enabled: accountController.getFeatures().hasSocialURLs,\n    retry: false,\n  });\n\n  const urls = useMemo(() => {\n    if (!data) return null;\n\n    return data.reduce((acc, url) => ({ ...acc, ...url }), {} as SocialLoginURLs);\n  }, [data]);\n\n  if (error || !urls) {\n    return null;\n  }\n\n  return urls;\n}\n","import { type ChangeEventHandler, type FC, type ReactNode, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport type { CustomRegisterFieldVariant } from '@jwp/ott-common/types/account';\nimport { isTruthyCustomParamValue, testId } from '@jwp/ott-common/src/utils/common';\n\nimport Checkbox from '../form-fields/Checkbox/Checkbox';\nimport TextField from '../form-fields/TextField/TextField';\nimport Radio from '../form-fields/Radio/Radio';\nimport Dropdown from '../form-fields/Dropdown/Dropdown';\nimport DateField from '../form-fields/DateField/DateField';\n\nexport type CustomRegisterFieldCommonProps = {\n  type?: CustomRegisterFieldVariant;\n  name: string;\n  value: string | boolean;\n  onChange: ChangeEventHandler;\n} & Partial<{\n  label: ReactNode;\n  placeholder: string;\n  error: boolean;\n  helperText: string;\n  disabled: boolean;\n  required: boolean;\n  options: Record<string, string>;\n  editing: boolean;\n  lang: string;\n}>;\n\nconst CustomRegisterField: FC<CustomRegisterFieldCommonProps> = ({ type, value = '', label, options, editing, lang, ...props }) => {\n  const { t, i18n } = useTranslation();\n\n  const optionsList = useMemo(() => {\n    if (type && ['country', 'us_state'].includes(type)) {\n      const codes = Object.keys(i18n.getResourceBundle(i18n.language, type));\n\n      return codes.map((code) => ({\n        value: code,\n        label: t(`${type}:${code}`),\n      }));\n    }\n\n    if (options) {\n      return Object.entries(options).map(([value, label]) => ({ value, label }));\n    }\n\n    return [];\n  }, [type, options, i18n, t]);\n\n  switch (type) {\n    case 'input':\n      return <TextField {...props} value={String(value)} label={label} testId={testId(`crf-${type}`)} />;\n    case 'radio':\n      return <Radio {...props} label={label} values={optionsList} value={String(value)} data-testid={testId(`crf-${type}`)} lang={lang} />;\n    case 'select':\n    case 'country':\n    case 'us_state':\n      return (\n        <Dropdown\n          {...props}\n          options={optionsList}\n          value={String(value)}\n          label={label}\n          defaultLabel={props.placeholder}\n          testId={testId(`crf-${type}`)}\n          lang={lang}\n        />\n      );\n    case 'datepicker':\n      return <DateField {...props} value={String(value)} label={label} testId={testId(`crf-${type}`)} />;\n    default:\n      return <Checkbox {...props} checkboxLabel={label} checked={isTruthyCustomParamValue(value)} data-testid={testId(`crf-${type}`)} lang={lang} />;\n  }\n};\n\nexport default CustomRegisterField;\n","import React, { type MouseEventHandler } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport styles from './Link.module.scss';\n\ntype Props = {\n  className?: string;\n  href?: string;\n  to?: string;\n  target?: string;\n  children?: React.ReactNode;\n  onClick?: MouseEventHandler<HTMLElement>;\n  onBlur?: () => void;\n  onFocus?: () => void;\n};\n\nconst Link: React.FC<Props> = ({ to, href, children, className, onClick, target, ...rest }: Props) => {\n  const linkClassName = classNames(styles.link, className);\n\n  if (to) {\n    return (\n      <RouterLink to={to} className={linkClassName} onClick={onClick} {...rest}>\n        {children}\n      </RouterLink>\n    );\n  }\n\n  return (\n    <a\n      href={href}\n      className={linkClassName}\n      onClick={onClick}\n      target={target}\n      rel={\n        // Security thingy for old browsers.\n        // See https://mathiasbynens.github.io/rel-noopener/#recommendations\n        target === '_blank' ? 'noreferrer' : undefined\n      }\n      {...rest}\n    >\n      {children}\n    </a>\n  );\n};\n\nexport default Link;\n","import React, { type ChangeEventHandler, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport DOMPurify from 'dompurify';\nimport type { FormErrors } from '@jwp/ott-common/types/form';\nimport type { CustomFormField, RegistrationFormData } from '@jwp/ott-common/types/account';\nimport { testId } from '@jwp/ott-common/src/utils/common';\nimport type { SocialLoginURLs } from '@jwp/ott-hooks-react/src/useSocialLoginUrls';\nimport env from '@jwp/ott-common/src/env';\nimport type { ReCAPTCHA } from 'react-google-recaptcha';\n\nimport TextField from '../form-fields/TextField/TextField';\nimport Button from '../Button/Button';\nimport CustomRegisterField from '../CustomRegisterField/CustomRegisterField';\nimport FormFeedback from '../FormFeedback/FormFeedback';\nimport LoadingOverlay from '../LoadingOverlay/LoadingOverlay';\nimport Link from '../Link/Link';\nimport { modalURLFromLocation } from '../../utils/location';\nimport PasswordField from '../form-fields/PasswordField/PasswordField';\nimport RecaptchaField from '../RecaptchaField/RecaptchaField';\n\nimport styles from './RegistrationForm.module.scss';\n\ntype Props = {\n  onSubmit: React.FormEventHandler<HTMLFormElement>;\n  onChange: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onBlur: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  onConsentChange: ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  errors: FormErrors<RegistrationFormData>;\n  values: RegistrationFormData;\n  loading: boolean;\n  consentValues: Record<string, string | boolean>;\n  consentErrors: string[];\n  submitting: boolean;\n  validationError?: boolean;\n  publisherConsents: CustomFormField[] | null;\n  socialLoginURLs: SocialLoginURLs | null;\n  captchaSiteKey?: string;\n  recaptchaRef?: React.RefObject<ReCAPTCHA>;\n};\n\nconst RegistrationForm: React.FC<Props> = ({\n  onSubmit,\n  onChange,\n  onBlur,\n  values,\n  errors,\n  submitting,\n  validationError,\n  loading,\n  publisherConsents,\n  consentValues,\n  onConsentChange,\n  consentErrors,\n  captchaSiteKey,\n  recaptchaRef,\n}: Props) => {\n  const { t, i18n } = useTranslation('account');\n  const location = useLocation();\n\n  const ref = useRef<HTMLDivElement>(null);\n  const htmlLang = i18n.language !== env.APP_DEFAULT_LANGUAGE ? env.APP_DEFAULT_LANGUAGE : undefined;\n\n  const formatConsentLabel = (label: string): string | JSX.Element => {\n    const sanitizedLabel = DOMPurify.sanitize(label);\n    const hasHrefOpenTag = /<a(.|\\n)*?>/.test(sanitizedLabel);\n    const hasHrefCloseTag = /<\\/a(.|\\n)*?>/.test(sanitizedLabel);\n\n    if (hasHrefOpenTag && hasHrefCloseTag) {\n      return <span dangerouslySetInnerHTML={{ __html: label }} />;\n    }\n\n    return label;\n  };\n\n  useEffect(() => {\n    if (errors.form) {\n      ref.current?.scrollIntoView({ behavior: 'smooth', block: 'start', inline: 'nearest' });\n    }\n  }, [errors.form]);\n\n  return (\n    <form onSubmit={onSubmit} data-testid={testId('registration-form')} noValidate>\n      <div ref={ref}>\n        {errors.form ? (\n          <FormFeedback variant=\"error\" visible={!validationError}>\n            {errors.form}\n          </FormFeedback>\n        ) : null}\n      </div>\n      <h2 className={styles.title}>{t('registration.sign_up')}</h2>\n      <TextField\n        value={values.email}\n        onChange={onChange}\n        onBlur={onBlur}\n        label={t('registration.email')}\n        placeholder={t('registration.email')}\n        error={!!errors.email}\n        helperText={errors.email}\n        name=\"email\"\n        type=\"email\"\n        autoComplete=\"email\"\n        required\n      />\n      <PasswordField\n        value={values.password}\n        onChange={onChange}\n        onBlur={onBlur}\n        label={t('registration.password')}\n        placeholder={t('registration.password')}\n        error={!!errors.password}\n        name=\"password\"\n        autoComplete=\"new-password\"\n        required\n      />\n      {publisherConsents && (\n        <div className={styles.customFields} data-testid=\"custom-reg-fields\">\n          {publisherConsents.map((consent) => {\n            const consentError = consentErrors.find((error) => error === consent.name);\n\n            return (\n              <CustomRegisterField\n                key={consent.name}\n                type={consent.type}\n                name={consent.name}\n                options={consent.options}\n                label={formatConsentLabel(consent.label)}\n                placeholder={consent.placeholder}\n                value={consentValues[consent.name] || ''}\n                required={consent.required}\n                error={!!consentError}\n                helperText={consentError ? t('registration.field_required') : undefined}\n                onChange={onConsentChange}\n                lang={htmlLang}\n              />\n            );\n          })}\n        </div>\n      )}\n      {!!captchaSiteKey && <RecaptchaField siteKey={captchaSiteKey} ref={recaptchaRef} />}\n      <Button\n        className={styles.continue}\n        type=\"submit\"\n        label={t('registration.continue')}\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        disabled={submitting}\n        fullWidth\n      />\n      <p className={styles.bottom}>\n        {t('registration.already_account')} <Link to={modalURLFromLocation(location, 'login')}>{t('login.sign_in')}</Link>\n      </p>\n      {(loading || submitting) && <LoadingOverlay transparentBackground inline />}\n    </form>\n  );\n};\n\nexport default RegistrationForm;\n","import React, { useEffect, useState, type ChangeEventHandler } from 'react';\nimport { object, string } from 'yup';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useNavigate } from 'react-router';\nimport type { RegistrationFormData } from '@jwp/ott-common/types/account';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport { checkConsentsFromValues, extractConsentValues, formatConsentsFromValues } from '@jwp/ott-common/src/utils/collection';\nimport useSocialLoginUrls from '@jwp/ott-hooks-react/src/useSocialLoginUrls';\nimport useForm from '@jwp/ott-hooks-react/src/useForm';\nimport { modalURLFromLocation, modalURLFromWindowLocation } from '@jwp/ott-ui-react/src/utils/location';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\n\nimport RegistrationForm from '../../../components/RegistrationForm/RegistrationForm';\nimport { useAriaAnnouncer } from '../../AnnouncementProvider/AnnoucementProvider';\nimport useRecaptcha from '../../../hooks/useRecaptcha';\n\nconst Registration = () => {\n  const accountController = getModule(AccountController);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { t } = useTranslation('account');\n  const announce = useAriaAnnouncer();\n  const [consentValues, setConsentValues] = useState<Record<string, string | boolean>>({});\n  const [consentErrors, setConsentErrors] = useState<string[]>([]);\n\n  const { publisherConsents, publisherConsentsLoading, loading } = useAccountStore(({ publisherConsents, publisherConsentsLoading, loading }) => ({\n    publisherConsents,\n    publisherConsentsLoading,\n    loading,\n  }));\n\n  const { recaptchaRef, captchaSiteKey, getCaptchaValue } = useRecaptcha();\n\n  const handleChangeConsent: ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> = ({ currentTarget }) => {\n    if (!currentTarget) return;\n\n    const { name, type } = currentTarget;\n    const value = type === 'checkbox' ? (currentTarget as HTMLInputElement).checked : currentTarget.value;\n\n    setConsentValues((current) => ({\n      ...current,\n      [name]: value,\n    }));\n\n    // Clear the errors for any checkbox that's toggled\n    setConsentErrors((errors) => errors.filter((e) => e !== name));\n  };\n\n  useEffect(() => {\n    if (!publisherConsents) {\n      accountController.getPublisherConsents();\n\n      return;\n    }\n\n    setConsentValues(extractConsentValues(publisherConsents));\n  }, [accountController, publisherConsents]);\n\n  const socialLoginURLs = useSocialLoginUrls(modalURLFromWindowLocation('personal-details'));\n\n  const { handleSubmit, handleChange, handleBlur, values, errors, validationSchemaError, submitting } = useForm<RegistrationFormData>({\n    initialValues: { email: '', password: '' },\n    validationSchema: object().shape({\n      email: string()\n        .email(t('registration.field_is_not_valid_email'))\n        .required(t('registration.field_required', { field: t('registration.email') })),\n      password: string()\n        .matches(/^(?=.*[a-z])(?=.*[0-9]).{8,}$/, t('registration.invalid_password', { field: t('registration.password') }))\n        .required(t('registration.field_required', { field: t('registration.password') })),\n      captchaValue: string().notRequired(),\n    }),\n    validateOnBlur: true,\n    onSubmit: async ({ email, password }) => {\n      const { consentsErrors } = checkConsentsFromValues(publisherConsents || [], consentValues);\n\n      if (consentsErrors.length) {\n        setConsentErrors(consentsErrors);\n        throw new Error(t('registration.consents_error'));\n      }\n\n      const captchaValue = await getCaptchaValue();\n\n      await accountController.register(email, password, window.location.href, formatConsentsFromValues(publisherConsents, consentValues), captchaValue);\n    },\n    onSubmitSuccess: () => {\n      announce(t('registration.success'), 'success');\n      navigate(modalURLFromLocation(location, 'personal-details'));\n    },\n  });\n\n  return (\n    <RegistrationForm\n      onSubmit={handleSubmit}\n      onChange={handleChange}\n      onConsentChange={handleChangeConsent}\n      onBlur={handleBlur}\n      values={values}\n      errors={errors}\n      consentErrors={consentErrors}\n      validationError={validationSchemaError}\n      submitting={submitting}\n      consentValues={consentValues}\n      publisherConsents={publisherConsents}\n      loading={loading || publisherConsentsLoading}\n      socialLoginURLs={socialLoginURLs}\n      captchaSiteKey={captchaSiteKey}\n      recaptchaRef={recaptchaRef}\n    />\n  );\n};\n\nexport default Registration;\n","import React from 'react';\nimport { useLocation } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport type { FormErrors } from '@jwp/ott-common/types/form';\nimport type { LoginFormData } from '@jwp/ott-common/types/account';\nimport { testId } from '@jwp/ott-common/src/utils/common';\nimport useToggle from '@jwp/ott-hooks-react/src/useToggle';\nimport type { SocialLoginURLs } from '@jwp/ott-hooks-react/src/useSocialLoginUrls';\nimport Visibility from '@jwp/ott-theme/assets/icons/visibility.svg?react';\nimport VisibilityOff from '@jwp/ott-theme/assets/icons/visibility_off.svg?react';\n\nimport TextField from '../form-fields/TextField/TextField';\nimport Button from '../Button/Button';\nimport Link from '../Link/Link';\nimport IconButton from '../IconButton/IconButton';\nimport FormFeedback from '../FormFeedback/FormFeedback';\nimport LoadingOverlay from '../LoadingOverlay/LoadingOverlay';\nimport Icon from '../Icon/Icon';\nimport { modalURLFromLocation } from '../../utils/location';\n\nimport styles from './LoginForm.module.scss';\n\ntype Props = {\n  onSubmit: React.FormEventHandler<HTMLFormElement>;\n  onChange: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  error?: string;\n  errors: FormErrors<LoginFormData>;\n  values: LoginFormData;\n  validationError?: boolean;\n  submitting: boolean;\n  socialLoginURLs: SocialLoginURLs | null;\n  siteName?: string;\n};\n\nconst LoginForm: React.FC<Props> = ({ onSubmit, onChange, values, errors, validationError, submitting, siteName }: Props) => {\n  const [viewPassword, toggleViewPassword] = useToggle();\n  const { t } = useTranslation('account');\n  const location = useLocation();\n\n  return (\n    <form onSubmit={onSubmit} data-testid={testId('login-form')} noValidate>\n      {errors.form ? (\n        <FormFeedback variant=\"error\" visible={!validationError}>\n          {errors.form}\n        </FormFeedback>\n      ) : null}\n      <h2 className={styles.title}>{t('login.sign_in')}</h2>\n      <TextField\n        value={values.email}\n        onChange={onChange}\n        label={t('login.email')}\n        placeholder={t('login.email')}\n        error={!!errors.email}\n        helperText={errors.email}\n        name=\"email\"\n        type=\"email\"\n        required\n        testId=\"login-email-input\"\n        autoComplete=\"email\"\n      />\n      <TextField\n        value={values.password}\n        onChange={onChange}\n        label={t('login.password')}\n        placeholder={t('login.password')}\n        error={!!errors.password}\n        helperText={errors.password}\n        name=\"password\"\n        type={viewPassword ? 'text' : 'password'}\n        rightControl={\n          <IconButton aria-label={t('login.view_password')} onClick={() => toggleViewPassword()} aria-pressed={viewPassword}>\n            <Icon icon={viewPassword ? Visibility : VisibilityOff} />\n          </IconButton>\n        }\n        required\n        testId=\"login-password-input\"\n        autoComplete=\"current-password\"\n      />\n      {submitting && <LoadingOverlay transparentBackground inline />}\n      <Link className={styles.link} to={modalURLFromLocation(location, 'forgot-password')}>\n        {t('login.forgot_password')}\n      </Link>\n      <Button type=\"submit\" label={t('login.sign_in')} variant=\"contained\" color=\"primary\" size=\"large\" disabled={submitting} fullWidth />\n      <p className={styles.bottom}>\n        {t('login.not_registered', { siteName })} <Link to={modalURLFromLocation(location, 'create-account')}>{t('login.sign_up')}</Link>\n      </p>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { object, string } from 'yup';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useNavigate } from 'react-router';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport useForm from '@jwp/ott-hooks-react/src/useForm';\nimport { modalURLFromLocation } from '@jwp/ott-ui-react/src/utils/location';\nimport useSocialLoginUrls from '@jwp/ott-hooks-react/src/useSocialLoginUrls';\nimport type { LoginFormData } from '@jwp/ott-common/types/account';\n\nimport LoginForm from '../../../components/LoginForm/LoginForm';\nimport { useAriaAnnouncer } from '../../AnnouncementProvider/AnnoucementProvider';\n\nconst Login = () => {\n  const accountController = getModule(AccountController);\n\n  const { siteName } = useConfigStore((s) => s.config);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { t } = useTranslation('account');\n  const announce = useAriaAnnouncer();\n\n  const socialLoginURLs = useSocialLoginUrls(window.location.href.split('?')[0]);\n\n  const { values, errors, submitting, validationSchemaError, handleSubmit, handleChange } = useForm<LoginFormData>({\n    initialValues: { email: '', password: '' },\n    validationSchema: object().shape({\n      email: string()\n        .email(t('login.field_is_not_valid_email'))\n        .required(t('login.field_required', { field: t('login.email') })),\n      password: string().required(t('login.field_required', { field: t('login.password') })),\n    }),\n    onSubmit: ({ email, password }) => accountController.login(email, password, window.location.href),\n    onSubmitSuccess: () => {\n      announce(t('login.sign_in_success'), 'success');\n      navigate(modalURLFromLocation(location, null));\n    },\n    onSubmitError: ({ resetValue }) => resetValue('password'),\n  });\n\n  return (\n    <LoginForm\n      values={values}\n      validationError={validationSchemaError}\n      errors={errors}\n      submitting={submitting}\n      siteName={siteName}\n      socialLoginURLs={socialLoginURLs}\n      onSubmit={handleSubmit}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useMemo, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport { modalURLFromLocation, createURLFromLocation } from '@jwp/ott-ui-react/src/utils/location';\nimport useEventCallback from '@jwp/ott-hooks-react/src/useEventCallback';\nimport useQueryParam from '@jwp/ott-ui-react/src/hooks/useQueryParam';\n\nimport LoadingOverlay from '../../components/LoadingOverlay/LoadingOverlay';\nimport Welcome from '../../components/Welcome/Welcome';\nimport PaymentFailed from '../../components/PaymentFailed/PaymentFailed';\nimport Dialog from '../../components/Dialog/Dialog';\nimport DeleteAccountModal from '../../components/DeleteAccountModal/DeleteAccountModal';\nimport FinalizePayment from '../../components/FinalizePayment/FinalizePayment';\nimport WaitingForPayment from '../../components/WaitingForPayment/WaitingForPayment';\nimport UpgradeSubscription from '../../components/UpgradeSubscription/UpgradeSubscription';\nimport DeleteAccountPasswordWarning from '../../components/DeleteAccountPasswordWarning/DeleteAccountPasswordWarning';\nimport UpdatePaymentMethod from '../UpdatePaymentMethod/UpdatePaymentMethod';\n\nimport EditCardDetails from './forms/EditCardDetails';\nimport EditPassword from './forms/EditPassword';\nimport RenewSubscription from './forms/RenewSubscription';\nimport CancelSubscription from './forms/CancelSubscription';\nimport ResetPassword from './forms/ResetPassword';\nimport Checkout from './forms/Checkout';\nimport ChooseOffer from './forms/ChooseOffer';\nimport PersonalDetails from './forms/PersonalDetails';\nimport Registration from './forms/Registration';\nimport Login from './forms/Login';\nimport styles from './AccountModal.module.scss';\n\n// @todo: connect with route typings\nconst PUBLIC_VIEWS = ['login', 'create-account', 'forgot-password', 'reset-password', 'send-confirmation', 'edit-password'];\n\nexport type AccountModals = {\n  login: 'login';\n  'create-account': 'create-account';\n  'personal-details': 'personal-details';\n  'choose-offer': 'choose-offer';\n  'edit-card': 'edit-card';\n  'upgrade-subscription': 'upgrade-subscription';\n  'upgrade-subscription-error': 'upgrade-subscription-error';\n  'upgrade-subscription-success': 'upgrade-subscription-success';\n  'upgrade-subscription-pending': 'upgrade-subscription-pending';\n  checkout: 'checkout';\n  'payment-error': 'payment-error';\n  'payment-cancelled': 'payment-cancelled';\n  welcome: 'welcome';\n  'reset-password': 'reset-password';\n  'forgot-password': 'forgot-password';\n  'add-password': 'add-password';\n  'delete-account': 'delete-account';\n  'delete-account-confirmation': 'delete-account-confirmation';\n  'warning-account-deletion': 'warning-account-deletion';\n  'send-confirmation': 'send-confirmation';\n  'edit-password': 'edit-password';\n  unsubscribe: 'unsubscribe';\n  'renew-subscription': 'renew-subscription';\n  'payment-method': 'payment-method';\n  'payment-method-success': 'payment-method-success';\n  'waiting-for-payment': 'waiting-for-payment';\n  'finalize-payment': 'finalize-payment';\n};\n\nconst AccountModal = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const viewParam = useQueryParam('u');\n  const viewParamRef = useRef(viewParam);\n  const message = useQueryParam('message');\n  const { loading, user } = useAccountStore(({ loading, user }) => ({ loading, user }), shallow);\n  const config = useConfigStore((s) => s.config);\n  const {\n    assets: { banner },\n    siteName,\n  } = config;\n  const isPublicView = viewParam && PUBLIC_VIEWS.includes(viewParam);\n\n  const toLogin = useEventCallback(() => {\n    navigate(modalURLFromLocation(location, 'login'));\n  });\n\n  // make sure the last view is rendered even when the modal gets closed\n  const view = useMemo(() => {\n    if (viewParam) viewParamRef.current = viewParam;\n    return viewParamRef.current;\n  }, [viewParam]);\n\n  useEffect(() => {\n    if (!!viewParam && !loading && !user && !isPublicView) {\n      toLogin();\n    }\n  }, [viewParam, loading, isPublicView, user, toLogin]);\n\n  const closeHandler = useEventCallback(() => {\n    navigate(createURLFromLocation(location, { u: null, message: null }));\n  });\n\n  const renderForm = () => {\n    if (!user && loading && !isPublicView) {\n      return (\n        <div style={{ height: 300 }}>\n          <LoadingOverlay inline />\n        </div>\n      );\n    }\n\n    switch (view) {\n      case 'login':\n        return <Login />;\n      case 'create-account':\n        return <Registration />;\n      case 'personal-details':\n        return <PersonalDetails />;\n      case 'choose-offer':\n        return <ChooseOffer />;\n      case 'edit-card':\n        return <EditCardDetails />;\n      case 'upgrade-subscription':\n        return <ChooseOffer />;\n      case 'upgrade-subscription-error':\n        return <UpgradeSubscription type=\"error\" onCloseButtonClick={closeHandler} />;\n      case 'upgrade-subscription-success':\n        return <UpgradeSubscription type=\"success\" onCloseButtonClick={closeHandler} />;\n      case 'upgrade-subscription-pending':\n        return <UpgradeSubscription type=\"pending\" onCloseButtonClick={closeHandler} />;\n      case 'checkout':\n        return <Checkout />;\n      case 'payment-error':\n        return <PaymentFailed type=\"error\" message={message} onCloseButtonClick={closeHandler} />;\n      case 'payment-cancelled':\n        return <PaymentFailed type=\"cancelled\" message={message} onCloseButtonClick={closeHandler} />;\n      case 'welcome':\n        return <Welcome onCloseButtonClick={closeHandler} onCountdownCompleted={closeHandler} siteName={siteName} />;\n      case 'reset-password':\n        return <ResetPassword type=\"reset\" />;\n      case 'forgot-password':\n        return <ResetPassword type=\"forgot\" />;\n      case 'add-password':\n        return <EditPassword type=\"add\" />;\n      case 'delete-account':\n      case 'delete-account-confirmation':\n        return <DeleteAccountModal />;\n      case 'warning-account-deletion':\n        return <DeleteAccountPasswordWarning />;\n      case 'send-confirmation':\n        return <ResetPassword type=\"confirmation\" />;\n      case 'edit-password':\n        return <EditPassword />;\n      case 'unsubscribe':\n        return <CancelSubscription />;\n      case 'renew-subscription':\n        return <RenewSubscription />;\n      case 'payment-method':\n      case 'payment-method-success':\n        return <UpdatePaymentMethod onCloseButtonClick={closeHandler} />;\n      case 'waiting-for-payment':\n        return <WaitingForPayment />;\n      case 'finalize-payment':\n        return <FinalizePayment />;\n    }\n  };\n\n  const shouldShowBanner = !['delete-account', 'delete-account-confirmation', 'edit-card', 'warning-account-deletion'].includes(view ?? '');\n  const dialogSize = ['delete-account-confirmation'].includes(view ?? '') ? 'large' : 'small';\n\n  return (\n    <Dialog size={dialogSize} open={!!viewParam} onClose={closeHandler}>\n      {shouldShowBanner && banner && (\n        <div className={styles.banner}>\n          <img src={banner} alt=\"\" />\n        </div>\n      )}\n      {renderForm()}\n    </Dialog>\n  );\n};\n\nexport default AccountModal;\n","export interface TestConfig {\n  id: string;\n  label: string;\n}\n\nexport const testConfigs = {\n  jwpAuth: {\n    id: '9qqwmnbx',\n    label: 'JWP AUTHVOD',\n  },\n  jwpSvod: {\n    id: 'a2kbjdv0',\n    label: 'JWP SVOD',\n  },\n  jwpAuthNoWatchlist: {\n    id: 'oqrsyxin',\n    label: 'JWP Authvod (No WL)',\n  },\n  basicNoAuth: {\n    id: 'gnnuzabk',\n    label: 'Demo App (No Auth)',\n  },\n  noStyling: {\n    id: 'kujzeu1b',\n    label: 'No Styling (No Auth)',\n  },\n  inlinePlayer: {\n    id: 'ata6ucb8',\n    label: 'Inline Player',\n  },\n  cleengAuthvod: {\n    id: 'nvqkufhy',\n    label: 'Cleeng Authvod',\n  },\n  cleengAuthvodNoWatchlist: {\n    id: '7weyqrua',\n    label: 'Cleeng Authvod (No WL)',\n  },\n  svod: {\n    id: 'ozylzc5m',\n    label: 'Cleeng SVOD',\n  },\n};\n\nexport const jwDevEnvConfigs = {\n  basicNoAuth: {\n    id: 'uzcyv8xh',\n    label: 'JW-Dev Basic Demo',\n  } as TestConfig,\n};\n","import { type ChangeEvent, useCallback } from 'react';\nimport { createURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport { CONFIG_QUERY_KEY } from '@jwp/ott-common/src/constants';\nimport { jwDevEnvConfigs, testConfigs } from '@jwp/ott-testing/constants';\n\nimport Select from '../Select/Select';\n\nimport styles from './DevConfigSelector.module.scss';\n\ninterface Props {\n  selectedConfig: string | undefined;\n}\n\nconst configs = __mode__ === 'jwdev' ? jwDevEnvConfigs : testConfigs;\nconst configOptions: { value: string; label: string }[] = [\n  { label: 'Select an App Config', value: '' },\n  ...Object.values(configs).map(({ id, label }) => ({ value: id, label: `${id.length > 8 ? 'ext-json' : id} - ${label}` })),\n];\n\nconst DevConfigSelector = ({ selectedConfig }: Props) => {\n  const onChange = useCallback((event: ChangeEvent<HTMLSelectElement>) => {\n    window.location.href = createURL(window.location.href, { [CONFIG_QUERY_KEY]: event.target.value });\n  }, []);\n\n  return (\n    <Select\n      className={styles.dropdown}\n      size=\"small\"\n      options={configOptions}\n      name=\"config-select\"\n      value={selectedConfig || ''}\n      onChange={onChange}\n      required={true}\n      aria-hidden={true}\n    />\n  );\n};\n\nexport default DevConfigSelector;\n","import { useQuery, useQueryClient } from 'react-query';\nimport type { Config } from '@jwp/ott-common/types/config';\nimport type { Settings } from '@jwp/ott-common/types/settings';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport AppController from '@jwp/ott-common/src/controllers/AppController';\nimport type { AppError } from '@jwp/ott-common/src/utils/error';\nimport { CACHE_TIME, STALE_TIME } from '@jwp/ott-common/src/constants';\nimport { logDebug } from '@jwp/ott-common/src/logger';\nimport { useTranslation } from 'react-i18next';\n\nconst applicationController = getModule(AppController);\n\ntype Resources = {\n  config: Config;\n  configSource: string | undefined;\n  settings: Settings;\n};\n\nexport type OnReadyCallback = (config: Config | undefined) => void;\n\nexport const useBootstrapApp = (url: string, onReady: OnReadyCallback) => {\n  const queryClient = useQueryClient();\n  const { i18n } = useTranslation();\n\n  const refreshEntitlements = () => queryClient.invalidateQueries({ queryKey: ['entitlements'] });\n\n  const { data, isLoading, error, isSuccess, refetch } = useQuery<Resources, Error | AppError>(\n    'config-init',\n    () => applicationController.initializeApp(url, i18n.language, refreshEntitlements),\n    {\n      refetchInterval: false,\n      retry: 1,\n      onSettled: (query) => {\n        logDebug('Bootstrap', 'Initialized application', { ...query });\n        onReady(query?.config);\n      },\n      cacheTime: CACHE_TIME,\n      staleTime: STALE_TIME,\n    },\n  );\n\n  return {\n    data,\n    isLoading,\n    error,\n    isSuccess,\n    refetch,\n  };\n};\n\nexport type BootstrapData = ReturnType<typeof useBootstrapApp>;\n","import type { Config } from '@jwp/ott-common/types/config';\nimport { calculateContrastColor } from '@jwp/ott-common/src/utils/common';\nimport env from '@jwp/ott-common/src/env';\n\nexport const setThemingVariables = (config: Config) => {\n  const root = document.querySelector(':root') as HTMLElement;\n  const { highlightColor, backgroundColor, headerBackground } = config.styling || {};\n  const bodyFont = env.APP_BODY_FONT;\n  const bodyAltFont = env.APP_BODY_ALT_FONT;\n\n  if (!root) return;\n\n  root.style.setProperty('--highlight-color', highlightColor || '#fff');\n  root.style.setProperty('--highlight-contrast-color', highlightColor ? calculateContrastColor(highlightColor) : '#000');\n\n  if (headerBackground) {\n    root.style.setProperty('--header-background', headerBackground);\n    root.style.setProperty('--header-contrast-color', calculateContrastColor(headerBackground));\n  }\n\n  if (backgroundColor) {\n    const bodyColor = calculateContrastColor(backgroundColor);\n    root.style.setProperty('--body-background-color', backgroundColor);\n    root.style.setProperty('--body-color', bodyColor);\n\n    if (bodyColor === '#000000') {\n      // disable text shadows when using a light background\n      root.style.setProperty('--body-text-shadow', 'none');\n      // hero shelf should always be dark, so on a light background we fall back to gray\n      root.style.setProperty('--hero-shelf-background-color', '#1f1f1f');\n      // currently, the EPG only supports a dark background\n      root.style.setProperty('--epg-background-color', '#262626');\n    }\n  }\n\n  if (bodyFont) {\n    root.style.setProperty('--body-font-family', bodyFont);\n  }\n\n  if (bodyAltFont) {\n    root.style.setProperty('--body-alt-font-family', bodyAltFont);\n  }\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Dialog from '../Dialog/Dialog';\nimport Button from '../Button/Button';\n\nimport styles from './ConfirmationDialog.module.scss';\n\ntype Props = {\n  open: boolean;\n  title: string;\n  body: string;\n  onConfirm: () => void;\n  onClose: () => void;\n  busy?: boolean;\n};\n\nconst ConfirmationDialog: React.FC<Props> = ({ open, title, body, onConfirm, onClose, busy }: Props) => {\n  const { t } = useTranslation('common');\n\n  return (\n    <Dialog open={open} onClose={onClose} role=\"alertdialog\">\n      <h2 className={styles.title}>{title}</h2>\n      <p className={styles.body}>{body}</p>\n      <Button\n        className={styles.confirmButton}\n        label={t('confirmation_dialog.confirm')}\n        variant={'contained'}\n        color={busy ? 'default' : 'primary'}\n        onClick={onConfirm}\n        fullWidth\n        disabled={busy}\n        busy={busy}\n      />\n      <Button label={t('confirmation_dialog.close')} variant=\"outlined\" onClick={onClose} fullWidth disabled={busy} />\n    </Dialog>\n  );\n};\n\nexport default ConfirmationDialog;\n","import React from 'react';\nimport { useRouteError } from 'react-router';\n\nimport ErrorPage from '../../components/ErrorPage/ErrorPage';\n\nconst RootErrorPage: React.FC = () => {\n  const error = useRouteError() as Error;\n\n  return <ErrorPage error={error} />;\n};\n\nexport default RootErrorPage;\n","import React, { useMemo } from 'react';\nimport DOMPurify from 'dompurify';\nimport { marked } from 'marked';\nimport classNames from 'classnames';\n\nimport styles from './MarkdownComponent.module.scss';\n\nconst renderer = new marked.Renderer();\nrenderer.link = (href: string, title: string, text: string) => {\n  const externalLink = /^(https?|www\\.|\\/\\/)/.test(href || '');\n  const targetAttr = externalLink ? 'target=\"_blank\"' : undefined;\n  const relAttr = externalLink ? 'rel=\"noopener\"' : undefined;\n  const titleAttr = title ? `title=\"${title}\"` : undefined;\n  const attributes = [targetAttr, relAttr, titleAttr].filter(Boolean);\n\n  return `<a href=\"${href}\" ${attributes.join(' ')}>${text}</a>`;\n};\n\n// remove images and GitHub flavoured markdown when rendering inline\nconst inlineRenderer = new marked.Renderer({ gfm: false });\ninlineRenderer.image = () => '';\ninlineRenderer.link = renderer.link;\n\ntype Props = {\n  markdownString: string;\n  className?: string;\n  inline?: boolean;\n  tag?: string;\n};\n\nconst MarkdownComponent: React.FC<Props> = ({ markdownString, className, tag = 'div', inline = false }) => {\n  const sanitizedHTMLString = useMemo(() => {\n    const dirtyHTMLString = inline ? marked.parseInline(markdownString, { renderer: inlineRenderer }) : marked.parse(markdownString, { renderer });\n\n    return DOMPurify.sanitize(dirtyHTMLString, { ADD_ATTR: ['target'] });\n  }, [inline, markdownString]);\n\n  return React.createElement(tag, {\n    dangerouslySetInnerHTML: { __html: sanitizedHTMLString },\n    className: classNames(styles.markdown, inline && styles.inline, className),\n  });\n};\n\nexport default MarkdownComponent;\n","import React from 'react';\n\nimport MarkdownComponent from '../../components/MarkdownComponent/MarkdownComponent';\n\nimport styles from './About.module.scss';\n\nconst About = () => {\n  const markdownPage = `# About JW OTT Webapp\n  \nJW OTT Webapp is an open-source, dynamically generated video website built around JW Player and JW Platform services. It enables you to easily publish your JW Player-hosted video content with no coding and minimal configuration.\n\nTo see an example of JW OTT Webapp in action, see [https://app-preview.jwplayer.com/](https://app-preview.jwplayer.com/).\n\n## Supported Features\n\n- Works with any JW Player edition, from Free to Enterprise (note that usage will count against your monthly JW streaming limits). Only cloud-hosted JW Players are supported.\n- It looks great on any device. The responsive UI automatically optimizes itself for desktop, tablet, and mobile screens.\n- Populates your site's media content using JSON feeds. If you are using JW Platform, this happens auto-magically based on playlists that you specify. Using feeds from other sources will require you to hack the source code.\n- Video titles, descriptions and hero images are populated from JW Platform JSON feed metadata.\n- Playback of HLS video content from the JW Platform CDN. You can add external URLs (for example, URLS from your own server or CDN) to your playlists in the Content section of your JW Player account dashboard, but they must be HLS streams (\\`.m3u8\\` files).\n- Support for live video streams (must be registered as external .m3u8 URLs in your JW Dashboard).\n- Customize the user interface with your own branding. The default app is configured for JW Player branding and content, but you can easily change this to use your own assets by modifying the \\`config.json\\` file. Advanced customization is possible (for example, editing the CSS files), but you will need to modify the source code and build from source.\n- Site-wide video search and related video recommendations powered by [JW Recommendations](https://docs.jwplayer.com/platform/docs/vdh-learn-about-recommendations).\n- Basic playback analytics is reported to your JW Dashboard.\n- Ad integrations (VAST, VPAID, GoogleIMA, etc.). These features require a JW Player Ads Edition license. For more information, see the [JW Player pricing page](https://www.jwplayer.com/pricing/).\n- A \"Favorites\" feature for users to save videos for watching later. A separate list for \"Continue Watching\" is also kept so users can resume watching videos from where they left off. The lists are per-browser at this time (i.e., lists do not sync across user's browsers or devices). The \"Continue Watching\" list can be disabled in your JW OTT Webapp's \\`config.json\\` file.\n- A grid view for a particular playlist of videos, with the ability to deep-link to the playlist through a static URL.\n- Social sharing options using the device native sharing dialog.\n\n## Unsupported Features\n\n- Security-related features (encrypted HLS, DRM, signed URLs)\n- Self-hosted JW Players`;\n\n  return <MarkdownComponent className={styles.about} markdownString={markdownPage} />;\n};\n\nexport default About;\n","import { QueryClient, useQuery, useQueryClient } from 'react-query';\nimport type { GetPlaylistParams, Playlist } from '@jwp/ott-common/types/playlist';\nimport ApiService from '@jwp/ott-common/src/services/ApiService';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { generatePlaylistPlaceholder } from '@jwp/ott-common/src/utils/collection';\nimport { isScheduledOrLiveMedia } from '@jwp/ott-common/src/utils/liveEvent';\nimport { isTruthyCustomParamValue } from '@jwp/ott-common/src/utils/common';\nimport type { ApiError } from '@jwp/ott-common/src/utils/api';\nimport type { AppMenuType } from '@jwp/ott-common/types/config';\nimport { APP_CONFIG_ITEM_TYPE } from '@jwp/ott-common/src/constants';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { useTranslation } from 'react-i18next';\n\nconst placeholderData = generatePlaylistPlaceholder(30);\n\nexport const getPlaylistQueryOptions = ({\n  type,\n  contentId,\n  siteId,\n  enabled,\n  usePlaceholderData,\n  params = {},\n  queryClient,\n  language,\n}: {\n  type: AppMenuType;\n  contentId: string | undefined;\n  siteId: string;\n  enabled: boolean;\n  queryClient: QueryClient;\n  usePlaceholderData?: boolean;\n  params?: GetPlaylistParams;\n  language: string;\n}) => {\n  const apiService = getModule(ApiService);\n\n  return {\n    enabled: !!contentId && enabled,\n    queryKey: ['playlist', type, contentId, params, language],\n    queryFn: async () => {\n      if (type === APP_CONFIG_ITEM_TYPE.playlist) {\n        const playlist = await apiService.getPlaylistById(contentId, params, language);\n\n        // This pre-caches all playlist items and makes navigating a lot faster.\n        playlist?.playlist?.forEach((playlistItem) => {\n          queryClient.setQueryData(['media', playlistItem.mediaid], playlistItem);\n        });\n\n        return playlist;\n      } else if (type === APP_CONFIG_ITEM_TYPE.content_list) {\n        const contentList = await apiService.getContentList({ siteId, id: contentId, language });\n\n        return contentList;\n      }\n    },\n    placeholderData: contentId && usePlaceholderData ? placeholderData : undefined,\n    refetchInterval: (data: Playlist | undefined) => {\n      if (!data) return false;\n\n      const autoRefetch = isTruthyCustomParamValue(data.refetch) || data.playlist.some(isScheduledOrLiveMedia);\n\n      return autoRefetch ? 1000 * 30 : false;\n    },\n    retry: false,\n  };\n};\n\nexport default function usePlaylist(\n  contentId?: string,\n  params: GetPlaylistParams = {},\n  enabled: boolean = true,\n  usePlaceholderData: boolean = true,\n  type: AppMenuType = APP_CONFIG_ITEM_TYPE.playlist,\n) {\n  // Determine currently selected language\n  const { i18n } = useTranslation();\n  const language = i18n.language;\n\n  const queryClient = useQueryClient();\n  const siteId = useConfigStore((state) => state.config.siteId);\n\n  const queryOptions = getPlaylistQueryOptions({ type, contentId, siteId, params, queryClient, enabled, usePlaceholderData, language });\n\n  return useQuery<Playlist | undefined, ApiError>(queryOptions);\n}\n","import { PersonalShelf, PersonalShelves, PLAYLIST_LIMIT } from '@jwp/ott-common/src/constants';\nimport { useFavoritesStore } from '@jwp/ott-common/src/stores/FavoritesStore';\nimport { useWatchHistoryStore } from '@jwp/ott-common/src/stores/WatchHistoryStore';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport type { Content, AppContentType, AppMenuType } from '@jwp/ott-common/types/config';\nimport type { Playlist } from '@jwp/ott-common/types/playlist';\nimport { useQueries, useQueryClient } from 'react-query';\nimport { useTranslation } from 'react-i18next';\n\nimport { getPlaylistQueryOptions } from './usePlaylist';\n\ntype UsePlaylistResult = {\n  data: Playlist | undefined;\n  isSuccess?: boolean;\n  error?: unknown;\n  isPlaceholderData?: boolean;\n}[];\n\nconst isPlaylistType = (type: AppContentType): type is AppMenuType => !PersonalShelves.some((pType) => pType === type);\n\nconst usePlaylists = (content: Content[], rowsToLoad: number | undefined = undefined) => {\n  const page_limit = PLAYLIST_LIMIT.toString();\n  const queryClient = useQueryClient();\n\n  const siteId = useConfigStore((state) => state.config.siteId);\n  const favorites = useFavoritesStore((state) => state.getPlaylist());\n  const watchHistory = useWatchHistoryStore((state) => state.getPlaylist());\n\n  // Determine currently selected language\n  const { i18n } = useTranslation();\n\n  const playlistQueries = useQueries(\n    content.map(({ contentId, type }, index) => {\n      if (isPlaylistType(type)) {\n        return getPlaylistQueryOptions({\n          enabled: !rowsToLoad || rowsToLoad > index,\n          type,\n          siteId,\n          contentId,\n          queryClient,\n          usePlaceholderData: true,\n          params: { page_limit },\n          language: i18n.language,\n        });\n      }\n\n      return { enabled: false };\n    }),\n  );\n\n  const result: UsePlaylistResult = content.map(({ type }, index) => {\n    if (type === PersonalShelf.Favorites) return { data: favorites, isLoading: false, isSuccess: true };\n    if (type === PersonalShelf.ContinueWatching) return { data: watchHistory, isLoading: false, isSuccess: true };\n\n    const { data, isSuccess, error, isPlaceholderData } = playlistQueries[index];\n\n    return {\n      data,\n      isSuccess,\n      error,\n      isPlaceholderData,\n    };\n  });\n\n  return result;\n};\n\nexport default usePlaylists;\n","import { useTranslation } from 'react-i18next';\n\nexport const useTranslationKey = (key: string) => {\n  const { i18n } = useTranslation();\n\n  return `${key}-${i18n.language}`;\n};\n","import * as React from \"react\";\nconst SvgChevronLeft = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\" }));\nexport default SvgChevronLeft;\n","import * as React from \"react\";\nconst SvgChevronRight = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\" }));\nexport default SvgChevronRight;\n","/**\n * Add change event listener to given MediaQueryList instance\n * @param mediaQuery\n * @param callback\n */\nexport const addMediaQueryListChangeListener = (mediaQuery: MediaQueryList, callback: (event: MediaQueryListEvent) => void): void => {\n  if (typeof mediaQuery.addEventListener === 'undefined') {\n    mediaQuery.addListener(callback);\n  } else {\n    mediaQuery.addEventListener('change', callback);\n  }\n};\n\n/**\n * Remove change event listener from given MediaQueryList instance\n * @param mediaQuery\n * @param callback\n */\nexport const removeMediaQueryListChangeListener = (mediaQuery: MediaQueryList, callback: (event: MediaQueryListEvent) => void): void => {\n  if (typeof mediaQuery.removeEventListener === 'undefined') {\n    mediaQuery.removeListener(callback);\n  } else {\n    mediaQuery.removeEventListener('change', callback);\n  }\n};\n","import { useEffect, useState } from 'react';\n\nimport { addMediaQueryListChangeListener, removeMediaQueryListChangeListener } from '../utils/matchMedia';\n\nconst XS_MATCH_MEDIA: MediaQueryList = matchMedia('screen and (max-width: 479px)'); // mobile\nconst SM_MATCH_MEDIA: MediaQueryList = matchMedia('screen and (min-width: 480px) and (max-width: 767px)'); // tablet\nconst MD_MATCH_MEDIA: MediaQueryList = matchMedia('screen and (min-width: 768px) and (max-width: 1023px)'); // tablet large\nconst LG_MATCH_MEDIA: MediaQueryList = matchMedia('screen and (min-width: 1024px) and (max-width: 1199px)'); // desktop\n\nexport enum Breakpoint {\n  xs,\n  sm,\n  md,\n  lg,\n  xl,\n}\n\nexport type Breakpoints = {\n  [Breakpoint.xs]: number;\n  [Breakpoint.sm]: number;\n  [Breakpoint.md]: number;\n  [Breakpoint.lg]: number;\n  [Breakpoint.xl]: number;\n};\n\nconst getScreenSize = (): Breakpoint => {\n  if (XS_MATCH_MEDIA.matches) return Breakpoint.xs;\n  if (SM_MATCH_MEDIA.matches) return Breakpoint.sm;\n  if (MD_MATCH_MEDIA.matches) return Breakpoint.md;\n  if (LG_MATCH_MEDIA.matches) return Breakpoint.lg;\n  else return Breakpoint.xl;\n};\n\nconst useBreakpoint = (): Breakpoint => {\n  const [breakpoint, setBreakpoint] = useState<Breakpoint>(() => getScreenSize());\n\n  useEffect(() => {\n    const changeEventHandler = (): void => setBreakpoint(getScreenSize());\n\n    addMediaQueryListChangeListener(XS_MATCH_MEDIA, changeEventHandler);\n    addMediaQueryListChangeListener(SM_MATCH_MEDIA, changeEventHandler);\n    addMediaQueryListChangeListener(MD_MATCH_MEDIA, changeEventHandler);\n    addMediaQueryListChangeListener(LG_MATCH_MEDIA, changeEventHandler);\n\n    return () => {\n      removeMediaQueryListChangeListener(XS_MATCH_MEDIA, changeEventHandler);\n      removeMediaQueryListChangeListener(SM_MATCH_MEDIA, changeEventHandler);\n      removeMediaQueryListChangeListener(MD_MATCH_MEDIA, changeEventHandler);\n      removeMediaQueryListChangeListener(LG_MATCH_MEDIA, changeEventHandler);\n    };\n  }, []);\n\n  return breakpoint;\n};\n\nexport default useBreakpoint;\n","import * as React from \"react\";\nconst SvgLock = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { fill: \"currentColor\", d: \"M12,17A2,2 0 0,0 14,15C14,13.89 13.1,13 12,13A2,2 0 0,0 10,15A2,2 0 0,0 12,17M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6A2,2 0 0,1 4,20V10C4,8.89 4.9,8 6,8H7V6A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,3A3,3 0 0,0 9,6V8H15V6A3,3 0 0,0 12,3Z\" }));\nexport default SvgLock;\n","import * as React from \"react\";\nconst SvgToday = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M0 0h24v24H0z\", fill: \"none\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\" }));\nexport default SvgToday;\n","import React, { forwardRef, useEffect, useState } from 'react';\nimport { createURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport { logInfo } from '@jwp/ott-common/src/logger';\n\nimport styles from './Image.module.scss';\n\ntype Props = {\n  className?: string;\n  image?: string;\n  onLoad?: () => void;\n  alt?: string;\n  width?: number;\n};\n\nconst setWidth = (url: string, w: number) => {\n  return createURL(url, { w });\n};\n\nconst cache = new Map();\n\nconst resolveImageURL = async (imgUrl: string, width: number) => {\n  const requestUrl = setWidth(imgUrl, width);\n  let url = requestUrl;\n\n  if (cache.has(requestUrl)) {\n    return cache.get(requestUrl);\n  }\n\n  try {\n    const response = await fetch(requestUrl);\n\n    // if redirected, cache and return resolved URL\n    if (response.redirected) {\n      url = response.url.replace('-1920', `-${width}`);\n    }\n\n    cache.set(requestUrl, url);\n  } catch (error) {\n    logInfo('Image', 'Failed to fetch image', { error, url });\n  }\n\n  return url;\n};\n\nconst Image = forwardRef<HTMLImageElement, Props>(({ className, image, onLoad, alt = '', width = 640 }, ref) => {\n  const [src, setSrc] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!image) return;\n\n    const loadImage = async () => {\n      const resolvedImage = await resolveImageURL(image, width);\n\n      setSrc(resolvedImage);\n      onLoad?.();\n    };\n\n    if (__mode__ === 'test') {\n      setSrc(setWidth(image, width));\n      onLoad?.();\n    } else {\n      loadImage();\n    }\n  }, [image, width, onLoad]);\n\n  if (!src) return null;\n\n  return <img ref={ref} className={`${className} ${styles.image}`} src={src} alt={alt} />;\n});\n\nexport default React.memo(Image);\n","import React, { memo } from 'react';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { formatDurationTag, formatLocalizedDateTime, formatSeriesMetaString } from '@jwp/ott-common/src/utils/formatting';\nimport { isLiveChannel, isSeries } from '@jwp/ott-common/src/utils/media';\nimport { isLiveEvent, MediaStatus } from '@jwp/ott-common/src/utils/liveEvent';\nimport Lock from '@jwp/ott-theme/assets/icons/lock.svg?react';\nimport Today from '@jwp/ott-theme/assets/icons/today.svg?react';\nimport { testId } from '@jwp/ott-common/src/utils/common';\nimport type { PosterAspectRatio } from '@jwp/ott-common/src/utils/collection';\n\nimport Image from '../Image/Image';\nimport Icon from '../Icon/Icon';\nimport createInjectableComponent from '../../modules/createInjectableComponent';\n\nimport styles from './Card.module.scss';\n\nexport const CardIdentifier = Symbol(`CARD`);\n\ntype ReplaceColon<T> = T extends `${infer Left}:${infer Right}` ? `${Left}${Right}` : T;\ntype PosterAspectRatioClass = ReplaceColon<PosterAspectRatio>;\n\nexport type CardProps = {\n  item: PlaylistItem;\n  onHover?: () => void;\n  progress?: number;\n  posterAspect?: PosterAspectRatio;\n  featured?: boolean;\n  disabled?: boolean;\n  loading?: boolean;\n  isCurrent?: boolean;\n  isLocked?: boolean;\n  currentLabel?: string;\n  url: string;\n  headingLevel?: number;\n  tabIndex?: number;\n};\n\nfunction Card({\n  onHover,\n  progress,\n  item,\n  posterAspect = '16:9',\n  featured = false,\n  disabled = false,\n  loading = false,\n  isCurrent = false,\n  isLocked = true,\n  currentLabel,\n  headingLevel = 3,\n  url,\n  tabIndex = 0,\n}: CardProps): JSX.Element {\n  const { title, duration, episodeNumber, seasonNumber, cardImage: image, mediaStatus, scheduledStart } = item;\n  const {\n    t,\n    i18n: { language },\n  } = useTranslation(['common', 'video']);\n  // t('play_item')\n\n  const cardClassName = classNames(styles.card, {\n    [styles.featured]: featured,\n    [styles.disabled]: disabled,\n  });\n  const aspectRatioClass = posterAspect ? styles[`aspect${posterAspect.replace(':', '') as PosterAspectRatioClass}`] : undefined;\n  const posterClassNames = classNames(styles.poster, aspectRatioClass, {\n    [styles.current]: isCurrent,\n  });\n\n  const isSeriesItem = isSeries(item);\n  const isLive = mediaStatus === MediaStatus.LIVE || isLiveChannel(item);\n  const isScheduled = mediaStatus === MediaStatus.SCHEDULED;\n\n  const renderTag = () => {\n    if (loading || !title) return null;\n\n    if (isSeriesItem) {\n      return <div className={styles.tag}>{t('video:series')}</div>;\n    } else if (episodeNumber) {\n      return <div className={styles.tag}>{formatSeriesMetaString(seasonNumber, episodeNumber)}</div>;\n    } else if (duration) {\n      return <div className={styles.tag}>{formatDurationTag(duration, { minutesAbbreviation: t('common:abbreviation.minutes') })}</div>;\n    } else if (isLive) {\n      return <div className={classNames(styles.tag, styles.live)}>{t('live')}</div>;\n    } else if (isScheduled) {\n      return (\n        <div className={styles.tag}>\n          <Icon icon={Today} className={styles.scheduled} />\n          {t('scheduled')}\n        </div>\n      );\n    }\n  };\n\n  const heading = React.createElement(`h${headingLevel}`, { className: classNames(styles.title, { [styles.loading]: loading }) }, loading ? '' : title);\n\n  return (\n    <Link\n      role=\"button\"\n      to={url}\n      className={cardClassName}\n      onClick={disabled ? (e) => e.preventDefault() : undefined}\n      onMouseEnter={onHover}\n      tabIndex={disabled ? -1 : tabIndex}\n      data-testid={testId(title)}\n    >\n      {!featured && (\n        <div className={styles.titleContainer}>\n          {heading}\n          {!!scheduledStart && isLiveEvent(item) && (\n            <div className={classNames(styles.scheduledStart, { [styles.loading]: loading })}>{formatLocalizedDateTime(scheduledStart, language)}</div>\n          )}\n        </div>\n      )}\n      <div className={posterClassNames}>\n        <Image className={styles.posterImage} image={image} width={featured ? 640 : 320} alt=\"\" />\n        {!loading && (\n          <div className={styles.meta}>\n            {featured && heading}\n            <div className={styles.tags}>\n              {isLocked && (\n                <div className={classNames(styles.tag, styles.lock)} aria-label={t('card_lock')} role=\"img\">\n                  <Icon icon={Lock} />\n                </div>\n              )}\n              {renderTag()}\n            </div>\n          </div>\n        )}\n        {isCurrent && <div className={styles.currentLabel}>{currentLabel}</div>}\n        {progress ? (\n          <div className={styles.progressContainer}>\n            <div className={styles.progressBar} style={{ width: `${Math.round(progress * 100)}%` }} />\n          </div>\n        ) : null}\n      </div>\n    </Link>\n  );\n}\n\nexport default memo(createInjectableComponent(CardIdentifier, Card));\n","import React, { useCallback } from 'react';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { CYCLE_MODE_RESTART, type RenderControl, type RenderPagination, TileSlider } from '@videodock/tile-slider';\nimport type { Playlist, PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport type { AccessModel, AppContentType } from '@jwp/ott-common/types/config';\nimport { isLocked } from '@jwp/ott-common/src/utils/entitlements';\nimport { mediaURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport { PersonalShelf } from '@jwp/ott-common/src/constants';\nimport ChevronLeft from '@jwp/ott-theme/assets/icons/chevron_left.svg?react';\nimport ChevronRight from '@jwp/ott-theme/assets/icons/chevron_right.svg?react';\nimport useBreakpoint, { Breakpoint, type Breakpoints } from '@jwp/ott-ui-react/src/hooks/useBreakpoint';\nimport type { PosterAspectRatio } from '@jwp/ott-common/src/utils/collection';\nimport '@videodock/tile-slider/lib/style.css';\n\nimport Card from '../Card/Card';\nimport Icon from '../Icon/Icon';\nimport createInjectableComponent from '../../modules/createInjectableComponent';\n\nimport styles from './Shelf.module.scss';\n\nexport const tileBreakpoints: Breakpoints = {\n  [Breakpoint.xs]: 1,\n  [Breakpoint.sm]: 2,\n  [Breakpoint.md]: 3,\n  [Breakpoint.lg]: 4,\n  [Breakpoint.xl]: 5,\n};\n\nexport const featuredTileBreakpoints: Breakpoints = {\n  [Breakpoint.xs]: 1,\n  [Breakpoint.sm]: 1,\n  [Breakpoint.md]: 1,\n  [Breakpoint.lg]: 1,\n  [Breakpoint.xl]: 1,\n};\n\nexport const ShelfIdentifier = Symbol(`SHELF`);\n\nexport type ShelfProps = {\n  playlist: Playlist;\n  type: AppContentType;\n  onCardHover?: (playlistItem: PlaylistItem) => void;\n  watchHistory?: { [key: string]: number };\n  enableTitle?: boolean;\n  enableCardTitles?: boolean;\n  featured?: boolean;\n  loading?: boolean;\n  error?: unknown;\n  title?: string;\n  accessModel: AccessModel;\n  isLoggedIn: boolean;\n  hasSubscription: boolean;\n  posterAspect?: PosterAspectRatio;\n  visibleTilesDelta?: number;\n};\n\nconst Shelf = ({\n  playlist,\n  type,\n  onCardHover,\n  title,\n  watchHistory,\n  featured = false,\n  loading = false,\n  error = null,\n  accessModel,\n  isLoggedIn,\n  hasSubscription,\n  posterAspect,\n  visibleTilesDelta = 0,\n}: ShelfProps) => {\n  const breakpoint: Breakpoint = useBreakpoint();\n  const { t } = useTranslation('common');\n  const tilesToShow: number = (featured ? featuredTileBreakpoints[breakpoint] : tileBreakpoints[breakpoint]) + visibleTilesDelta;\n\n  const renderTile = useCallback(\n    ({ item, isVisible }: { item: PlaylistItem; isVisible: boolean }) => {\n      const { mediaid: id, title } = item;\n      const url = mediaURL({ id, title, playlistId: playlist.feedid, play: type === PersonalShelf.ContinueWatching });\n\n      return (\n        <Card\n          key={item.mediaid}\n          progress={watchHistory ? watchHistory[item.mediaid] : undefined}\n          onHover={typeof onCardHover === 'function' ? () => onCardHover(item) : undefined}\n          featured={featured}\n          disabled={!isVisible}\n          loading={loading}\n          isLocked={isLocked(accessModel, isLoggedIn, hasSubscription, item)}\n          posterAspect={posterAspect}\n          item={item}\n          url={url}\n        />\n      );\n    },\n    [watchHistory, onCardHover, featured, loading, accessModel, isLoggedIn, hasSubscription, posterAspect, playlist.feedid, type],\n  );\n\n  const renderRightControl: RenderControl = useCallback(\n    ({ onClick }) => (\n      <button className={styles.chevron} aria-label={t('slide_next')} onClick={onClick}>\n        <Icon icon={ChevronRight} />\n      </button>\n    ),\n    [t],\n  );\n\n  const renderLeftControl: RenderControl = useCallback(\n    ({ onClick }) => (\n      <button className={styles.chevron} aria-label={t('slide_previous')} onClick={onClick}>\n        <Icon icon={ChevronLeft} />\n      </button>\n    ),\n    [t],\n  );\n\n  const renderPagination: RenderPagination = ({ page, pages }) => {\n    const items = Array.from({ length: pages }, (_, pageIndex) => pageIndex);\n\n    return (\n      <>\n        <div aria-live=\"polite\" className=\"hidden\">\n          {t('slide_indicator', { page: page + 1, pages })}\n        </div>\n        {featured && (\n          <div aria-hidden=\"true\" className={styles.dots}>\n            {items.map((current) => (\n              <span key={current} className={classNames(styles.dot, { [styles.active]: page === current })} />\n            ))}\n          </div>\n        )}\n      </>\n    );\n  };\n\n  if (error || !playlist?.playlist) return <h2 className={styles.error}>Could not load items</h2>;\n\n  return (\n    <div className={classNames(styles.shelf)}>\n      {featured ? null : loading ? <div className={styles.loadingTitle} /> : <h2 className={classNames(styles.title)}>{title || playlist.title}</h2>}\n      <TileSlider<PlaylistItem>\n        className={styles.slider}\n        items={playlist.playlist}\n        tilesToShow={tilesToShow}\n        cycleMode={CYCLE_MODE_RESTART}\n        showControls={!loading}\n        spacing={16}\n        renderLeftControl={renderLeftControl}\n        renderRightControl={renderRightControl}\n        renderPagination={renderPagination}\n        renderTile={renderTile}\n      />\n    </div>\n  );\n};\n\nexport default createInjectableComponent(ShelfIdentifier, Shelf);\n","import React from 'react';\n\nimport Spinner from '../Spinner/Spinner';\n\nimport styles from './InfiniteScrollLoader.module.scss';\n\nconst InfiniteScrollLoader = () => {\n  return (\n    <div className={styles.infiniteScrollLoader}>\n      <Spinner />\n    </div>\n  );\n};\n\nexport default InfiniteScrollLoader;\n","import React, { type CSSProperties, type ReactNode } from 'react';\n\nimport Animation, { type Status } from '../Animation';\n\ntype Props = {\n  className?: string;\n  open?: boolean;\n  duration?: number;\n  delay?: number;\n  children?: ReactNode;\n  keepMounted?: boolean;\n  onOpenAnimationEnd?: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst Fade: React.FC<Props> = ({ className, open = true, duration = 250, delay = 0, onOpenAnimationEnd, onCloseAnimationEnd, keepMounted, children }) => {\n  const seconds = duration / 1000;\n  const transition = `opacity ${seconds}s ease-in-out`;\n\n  const createStyle = (status: Status): CSSProperties => ({\n    transition,\n    opacity: status === 'opening' || status === 'open' ? 1 : 0,\n    willChange: 'opacity',\n  });\n\n  return (\n    <Animation\n      className={className}\n      createStyle={(status: Status) => createStyle(status)}\n      open={open}\n      duration={duration}\n      delay={delay}\n      onOpenAnimationEnd={onOpenAnimationEnd}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      keepMounted={keepMounted}\n    >\n      {children}\n    </Animation>\n  );\n};\n\nexport default Fade;\n","import { useEffect } from 'react';\nimport useEventCallback from '@jwp/ott-hooks-react/src/useEventCallback';\n\nexport const useScrolledDown = (start = 300, end = 30, onChange: (progress: number) => void) => {\n  const handleScroll = useEventCallback(() => {\n    const scrollTarget = document.scrollingElement || document.body;\n    const scrollPosition = scrollTarget.scrollTop;\n    const progress = Math.max(0, Math.min(1, (scrollPosition - start) / (end - start)));\n\n    onChange(progress);\n  });\n\n  useEffect(() => {\n    const { scrollingElement, documentElement, body } = document;\n    const listenerElement = scrollingElement && scrollingElement !== documentElement && scrollingElement !== body ? scrollingElement : window;\n\n    listenerElement.addEventListener('scroll', handleScroll, { passive: true });\n    return () => {\n      listenerElement.removeEventListener('scroll', handleScroll);\n    };\n  }, [handleScroll]);\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport MarkdownComponent from '../MarkdownComponent/MarkdownComponent';\n\nimport styles from './TruncatedText.module.scss';\n\ntype TruncatedTextProps = {\n  text: string;\n  maximumLines: number;\n  className?: string;\n};\n\nconst TruncatedText: React.FC<TruncatedTextProps> = ({ text, maximumLines, className }) => {\n  return (\n    <div\n      className={classNames(styles.truncatedText, className)}\n      style={{\n        maxHeight: `calc(1.5em * ${maximumLines})`,\n        WebkitLineClamp: maximumLines,\n        lineClamp: maximumLines,\n        display: '-webkit-box',\n      }}\n    >\n      <MarkdownComponent markdownString={text} inline />\n    </div>\n  );\n};\n\nexport default TruncatedText;\n","import { useQueries } from 'react-query';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport type { GetEntitlementsResponse } from '@jwp/ott-common/types/checkout';\nimport type { MediaOffer } from '@jwp/ott-common/types/media';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport CheckoutController from '@jwp/ott-common/src/controllers/CheckoutController';\nimport { isLocked } from '@jwp/ott-common/src/utils/entitlements';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\n\nexport type UseEntitlementResult = {\n  isEntitled: boolean;\n  isMediaEntitlementLoading: boolean;\n  mediaOffers: MediaOffer[];\n};\n\nexport type UseEntitlement = (playlistItem?: PlaylistItem) => UseEntitlementResult;\n\ntype QueryResult = {\n  responseData?: GetEntitlementsResponse;\n};\n\nconst notifyOnChangeProps = ['data' as const, 'isLoading' as const];\n\n/**\n * useEntitlement()\n *\n * Free items: Access\n * AVOD - Regular items free, TVOD items need entitlement\n * AuthVOD - For regular items user should be logged in, TVOD items need entitlement\n * SVOD - For regular items user should have subscription OR entitlement, premier items need entitlement\n *\n *  */\nconst useEntitlement: UseEntitlement = (playlistItem) => {\n  const { accessModel } = useConfigStore();\n  const { user, subscription } = useAccountStore(\n    ({ user, subscription }) => ({\n      user,\n      subscription,\n    }),\n    shallow,\n  );\n\n  const checkoutController = getModule(CheckoutController, false);\n\n  const isPreEntitled = playlistItem && !isLocked(accessModel, !!user, !!subscription, playlistItem);\n  const mediaOffers = playlistItem?.mediaOffers || [];\n\n  // this query is invalidated when the subscription gets reloaded\n  const mediaEntitlementQueries = useQueries(\n    mediaOffers.map(({ offerId }) => ({\n      queryKey: ['entitlements', offerId],\n      queryFn: () => checkoutController?.getEntitlements({ offerId }),\n      enabled: !!playlistItem && !!user && !!user.id && !!offerId && !isPreEntitled,\n      refetchOnMount: 'always' as const,\n      notifyOnChangeProps,\n    })),\n  );\n\n  // when the user is logged out the useQueries will be disabled but could potentially return its cached data\n  const isMediaEntitled = !!user && mediaEntitlementQueries.some((item) => item.isSuccess && (item.data as QueryResult)?.responseData?.accessGranted);\n  const isMediaEntitlementLoading = !isMediaEntitled && mediaEntitlementQueries.some((item) => item.isLoading);\n\n  const isEntitled = !!playlistItem && (isPreEntitled || isMediaEntitled);\n\n  return { isEntitled, isMediaEntitlementLoading, mediaOffers };\n};\n\nexport default useEntitlement;\n","import * as React from \"react\";\nconst SvgPlay = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M8,5.14V19.14L19,12.14L8,5.14Z\" }));\nexport default SvgPlay;\n","import React, { useCallback, useEffect, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useNavigate } from 'react-router';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { useCheckoutStore } from '@jwp/ott-common/src/stores/CheckoutStore';\nimport { useWatchHistoryStore } from '@jwp/ott-common/src/stores/WatchHistoryStore';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport { modalURLFromLocation } from '@jwp/ott-ui-react/src/utils/location';\nimport useBreakpoint, { Breakpoint } from '@jwp/ott-ui-react/src/hooks/useBreakpoint';\nimport useEntitlement from '@jwp/ott-hooks-react/src/useEntitlement';\nimport Play from '@jwp/ott-theme/assets/icons/play.svg?react';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { ACCESS_MODEL } from '@jwp/ott-common/src/constants';\n\nimport Button from '../../components/Button/Button';\nimport Icon from '../../components/Icon/Icon';\n\nimport styles from './StartWatchingButton.module.scss';\n\ntype Props = {\n  item: PlaylistItem;\n  playUrl?: string;\n  disabled?: boolean;\n  onClick?: () => void;\n};\n\nconst StartWatchingButton: React.VFC<Props> = ({ item, playUrl, disabled = false, onClick }) => {\n  const { t } = useTranslation('video');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const breakpoint = useBreakpoint();\n\n  // account\n  const accessModel = useConfigStore((state) => state.accessModel);\n  const user = useAccountStore((state) => state.user);\n  const isLoggedIn = !!user;\n\n  // watch history\n  const watchHistoryItem = useWatchHistoryStore((state) => item && state.getItem(item));\n  const videoProgress = watchHistoryItem?.progress;\n\n  // entitlement\n  const setRequestedMediaOffers = useCheckoutStore((s) => s.setRequestedMediaOffers);\n  const { isEntitled, mediaOffers } = useEntitlement(item);\n  const hasMediaOffers = !!mediaOffers.length;\n\n  const startWatchingLabel = useMemo((): string => {\n    if (isEntitled) return typeof videoProgress === 'number' ? t('continue_watching') : t('start_watching');\n    if (hasMediaOffers) return t('buy');\n    if (!isLoggedIn) return t('sign_up_to_start_watching');\n\n    return t('complete_your_subscription');\n  }, [isEntitled, isLoggedIn, hasMediaOffers, videoProgress, t]);\n\n  const handleStartWatchingClick = useCallback(() => {\n    if (isEntitled) {\n      if (onClick) {\n        onClick();\n        return;\n      }\n      return playUrl && navigate(playUrl);\n    }\n    if (!isLoggedIn) return navigate(modalURLFromLocation(location, 'create-account'));\n    if (hasMediaOffers) return navigate(modalURLFromLocation(location, 'choose-offer'));\n\n    return navigate('/u/payments');\n  }, [isEntitled, playUrl, navigate, isLoggedIn, location, hasMediaOffers, onClick]);\n\n  useEffect(() => {\n    // set the TVOD mediaOffers in the checkout store\n    setRequestedMediaOffers(mediaOffers);\n\n    return () => setRequestedMediaOffers([]);\n  }, [mediaOffers, setRequestedMediaOffers]);\n\n  // the user can't purchase access in an AVOD platform due to missing configuration, so we hide the button\n  if (accessModel === ACCESS_MODEL.AVOD && !isEntitled) {\n    return null;\n  }\n\n  return (\n    <Button\n      color=\"primary\"\n      variant=\"contained\"\n      size=\"large\"\n      label={startWatchingLabel}\n      startIcon={isEntitled ? <Icon icon={Play} /> : undefined}\n      onClick={handleStartWatchingClick}\n      fullWidth={breakpoint < Breakpoint.md}\n      disabled={disabled}\n    >\n      {videoProgress ? (\n        <div className={styles.progressRail}>\n          <div className={styles.progress} style={{ width: `${videoProgress * 100}%` }} />\n        </div>\n      ) : null}\n    </Button>\n  );\n};\n\nexport default StartWatchingButton;\n","import type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport classNames from 'classnames';\nimport type { CSSProperties } from 'react';\nimport ChevronRight from '@jwp/ott-theme/assets/icons/chevron_right.svg?react';\nimport { mediaURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport { useNavigate } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport { isContentType, testId } from '@jwp/ott-common/src/utils/common';\nimport { MEDIA_CONTENT_TYPE } from '@jwp/ott-common/src/constants';\n\nimport TruncatedText from '../TruncatedText/TruncatedText';\nimport StartWatchingButton from '../../containers/StartWatchingButton/StartWatchingButton';\nimport Button from '../Button/Button';\nimport Icon from '../Icon/Icon';\nimport useBreakpoint, { Breakpoint } from '../../hooks/useBreakpoint';\n\nimport styles from './HeroShelf.module.scss';\n\nconst HeroShelfMetadata = ({\n  item,\n  loading,\n  playlistId,\n  style,\n  hidden,\n}: {\n  item: PlaylistItem | null;\n  loading: boolean;\n  playlistId: string | undefined;\n  style: CSSProperties;\n  hidden?: boolean;\n}) => {\n  const navigate = useNavigate();\n  const { t } = useTranslation('common');\n  const breakpoint = useBreakpoint();\n  const isMobile = breakpoint < Breakpoint.sm;\n\n  if (!item) return null;\n\n  const isWatchable =\n    !isContentType(item, MEDIA_CONTENT_TYPE.hub) && !isContentType(item, MEDIA_CONTENT_TYPE.liveChannel) && !isContentType(item, MEDIA_CONTENT_TYPE.page);\n  const hasVideo = item.sources.find((source) => source.file.indexOf('.m3u8') > -1 || source.file.indexOf('.mp4') > -1);\n\n  const showStartWatchingButton = hasVideo && isWatchable && !isMobile;\n\n  return (\n    <div\n      className={styles.metadata}\n      data-testid={testId(`shelf-hero-metadata--${hidden ? 'hidden' : 'visible'}`)}\n      style={{ ...style, visibility: hidden ? 'hidden' : undefined }}\n      aria-hidden={hidden ? 'true' : undefined}\n    >\n      <h2 className={classNames(loading ? styles.loadingTitle : styles.title)}>{!loading && item?.title}</h2>\n      <TruncatedText text={item?.description} maximumLines={3} />\n      <div>\n        {showStartWatchingButton && <StartWatchingButton item={item} playUrl={mediaURL({ id: item.mediaid, title: item.title, playlistId, play: true })} />}\n        <Button\n          label={t('common:more_info')}\n          onClick={() => navigate(mediaURL({ id: item.mediaid, title: item.title, playlistId }))}\n          startIcon={<Icon icon={ChevronRight} />}\n          size=\"large\"\n          variant={showStartWatchingButton ? undefined : 'contained'}\n          color={showStartWatchingButton ? undefined : 'primary'}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default HeroShelfMetadata;\n","import type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport type { CSSProperties, TransitionEventHandler } from 'react';\nimport React from 'react';\n\nimport Image from '../Image/Image';\n\nimport styles from './HeroShelf.module.scss';\n\nconst HeroShelfBackground = ({\n  item,\n  style,\n  hidden,\n  onTransitionEnd,\n}: {\n  item: PlaylistItem | null;\n  style: CSSProperties;\n  hidden?: boolean;\n  onTransitionEnd?: TransitionEventHandler;\n}) => {\n  if (!item) return null;\n\n  const image = item?.backgroundImage;\n\n  return (\n    <div\n      style={{ ...style, visibility: hidden ? 'hidden' : undefined }}\n      aria-hidden={hidden ? 'true' : undefined}\n      key={item.mediaid}\n      onTransitionEnd={onTransitionEnd}\n    >\n      <Image className={styles.image} image={image} width={1920} alt={item?.title} />\n    </div>\n  );\n};\n\nexport default React.memo(HeroShelfBackground);\n","import classNames from 'classnames';\nimport type { Playlist } from '@jwp/ott-common/types/playlist';\nimport { useTranslation } from 'react-i18next';\nimport { useMemo } from 'react';\n\nimport styles from './HeroShelf.module.scss';\n\nconst calculateDotSize = (direction: 'left' | 'right' | false, itemIndex: number, index: number, range: number, sizeSmall: number) => {\n  const isAnimatingLeft = direction === 'left';\n  const isAnimatingRight = direction === 'right';\n\n  const dotPosition = {\n    semiEdgeLeft: itemIndex === index - range + 1 && isAnimatingRight,\n    edgeLeft: itemIndex === index - range,\n    newDotLeft: itemIndex === index - range - 1,\n    semiEdgeRight: itemIndex === index + range - 1 && isAnimatingLeft,\n    edgeRight: itemIndex === index + range,\n    newDotRight: itemIndex === index + range + 1,\n  };\n\n  if (dotPosition.semiEdgeLeft || dotPosition.semiEdgeRight) return sizeSmall;\n  if (dotPosition.edgeLeft) return isAnimatingRight ? 0 : isAnimatingLeft ? 1 : sizeSmall;\n  if (dotPosition.edgeRight) return isAnimatingLeft ? 0 : isAnimatingRight ? 1 : sizeSmall;\n  if (dotPosition.newDotLeft) return isAnimatingLeft ? sizeSmall : 0;\n  if (dotPosition.newDotRight) return isAnimatingRight ? sizeSmall : 0;\n\n  return 1;\n};\n\ntype Props = {\n  playlist: Playlist;\n  index: number;\n  direction: 'left' | 'right' | false;\n  nextIndex: number;\n  setIndex: (index: number) => void;\n  range?: number;\n  animationDuration?: number;\n};\n\nconst HeroShelfPagination = ({ playlist, index: indexIn, direction, nextIndex: nextIndexIn, setIndex, range = 3, animationDuration = 200 }: Props) => {\n  const { t } = useTranslation('common');\n  const placeholderCount = range + 1; // Placeholders are used to keep a stable amount of DOM elements\n  const index = indexIn + placeholderCount;\n  const nextIndex = nextIndexIn + placeholderCount;\n\n  const playlistWithPlaceholders = useMemo(() => {\n    const placeholders: false[] = Array.from({ length: placeholderCount }).map(() => false);\n\n    return [...placeholders, ...playlist.playlist, ...placeholders];\n  }, [playlist.playlist, placeholderCount]);\n\n  return (\n    <>\n      <div aria-live=\"polite\" className=\"hidden\">\n        {t('slide_indicator', { page: indexIn + 1, pages: playlist.playlist.length })}\n      </div>\n      <nav className={styles.dots}>\n        <ul className={styles.dotsList}>\n          {playlistWithPlaceholders.map((current, itemIndex) => {\n            if (itemIndex < index - range - 1 || itemIndex > index + range + 1) {\n              return null;\n            }\n            if (!current) {\n              return <li className={classNames(styles.dotPlaceholder)} key={itemIndex} aria-hidden=\"true\" />;\n            }\n\n            const movementBase = 22; // dot width (10) + gap(12)\n            const movementTotal = Math.abs(index - nextIndex) * movementBase;\n            const movement = direction === 'left' ? movementTotal : direction === 'right' ? 0 - movementTotal : 0;\n            const transform = `translateX(${movement}px)`;\n            const transition = direction\n              ? `transform ${animationDuration}ms ease-out ${animationDuration / 3}ms, width ${animationDuration / 2}ms ease-out ${animationDuration / 3}ms`\n              : '';\n\n            const size = calculateDotSize(direction, itemIndex, index, range, 0.6);\n            const transformDiv = `scale(${size})`;\n            const transitionDiv = direction\n              ? `width ${animationDuration}ms ease-out, height ${animationDuration}ms ease-out, transform ${animationDuration}ms ease-out`\n              : '';\n\n            const isCurrent = itemIndex === index;\n            const hidden = size !== 1;\n            const ariaLabel = hidden ? undefined : t('slide_to', { item: itemIndex - placeholderCount + 1, items: playlist.playlist.length });\n\n            return (\n              <li key={current?.mediaid} aria-hidden={hidden || undefined} aria-current={isCurrent || undefined}>\n                <button\n                  className={classNames(styles.dot, itemIndex === nextIndex && styles.dotActive, !direction && itemIndex === index && styles.dotActive)}\n                  style={{ transform, transition }}\n                  aria-label={ariaLabel}\n                  disabled={hidden || undefined}\n                  onClick={hidden || isCurrent ? undefined : () => setIndex(itemIndex - placeholderCount)}\n                >\n                  <div style={{ transform: transformDiv, transition: transitionDiv }} />\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n    </>\n  );\n};\n\nexport default HeroShelfPagination;\n","import useEventCallback from '@jwp/ott-hooks-react/src/useEventCallback';\nimport { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\n\nimport useBreakpoint, { Breakpoint } from '../../hooks/useBreakpoint';\n\nimport styles from './HeroShelf.module.scss';\n\ntype Props = {\n  hasLeftItem: boolean;\n  hasRightItem: boolean;\n  renderLeftItem: (isSwiping: boolean) => React.ReactNode;\n  renderItem: () => React.ReactNode;\n  renderRightItem: (isSwiping: boolean) => React.ReactNode;\n  loading: boolean;\n  direction: 'left' | 'right' | null;\n  isSwipeAnimation: boolean;\n  onSwipeLeft: () => void;\n  onSwipeRight: () => void;\n};\n\nconst HeroSwipeSlider = ({\n  hasLeftItem,\n  hasRightItem,\n  renderItem,\n  renderLeftItem,\n  renderRightItem,\n  direction,\n  isSwipeAnimation,\n  onSwipeLeft,\n  onSwipeRight,\n}: Props) => {\n  const movementRef = useRef({ x: 0, y: 0, start: Date.now() });\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const [swipeAction, setSwipeAction] = useState<'slide' | 'scroll' | null>(null);\n  const breakpoint = useBreakpoint();\n  const isMobile = breakpoint <= Breakpoint.sm;\n\n  const handleTouchStart = useEventCallback((event: TouchEvent) => {\n    if (direction) return;\n    movementRef.current = { x: event.touches[0].clientX, y: event.touches[0].clientY, start: Date.now() };\n    setSwipeAction(null);\n  });\n\n  const handleTouchMove = useEventCallback((event: TouchEvent) => {\n    if (direction) return;\n    if (!containerRef.current) return;\n\n    const movementX: number = event.changedTouches[0].clientX - movementRef.current.x;\n    const movementY: number = event.changedTouches[0].clientY - movementRef.current.y;\n    const currentSwipeAction = Math.abs(movementX) > Math.abs(movementY) ? 'slide' : 'scroll';\n\n    if (!swipeAction) setSwipeAction(currentSwipeAction);\n    if (currentSwipeAction === 'scroll' || swipeAction === 'scroll') return;\n\n    // Prevent scrolling while sliding\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Follow touch horizontally\n    const maxLeft = hasRightItem ? -window.innerWidth : 0;\n    const maxRight = hasLeftItem ? window.innerWidth : 0;\n    const limitedMovementX = Math.max(Math.min(movementX, maxRight), maxLeft);\n\n    containerRef.current.style.transform = `translateX(${limitedMovementX}px)`;\n    containerRef.current.style.transition = 'none';\n  });\n\n  const handleTouchEnd = useEventCallback((event: TouchEvent) => {\n    if (direction) return;\n    if (!containerRef.current) return;\n    if (swipeAction === 'scroll') return;\n\n    const movementX = movementRef.current.x - event.changedTouches[0].clientX;\n    const velocity = Math.round((movementX / (Date.now() - movementRef.current.start)) * 100);\n    const velocityTreshold = 80;\n\n    if (hasRightItem && (movementX > window.innerWidth / 2 || velocity > velocityTreshold)) {\n      onSwipeRight();\n    } else if (hasLeftItem && (movementX < -window.innerWidth / 2 || velocity < -velocityTreshold)) {\n      onSwipeLeft();\n    } else {\n      containerRef.current.style.transition = 'transform 0.2s ease-out';\n      containerRef.current.style.transform = 'translateX(0)';\n    }\n    setSwipeAction(null);\n  });\n\n  useLayoutEffect(() => {\n    if (!containerRef.current) return;\n    if (isSwipeAnimation && direction === 'left') {\n      containerRef.current.style.transition = 'transform 0.2s ease-out';\n      containerRef.current.style.transform = `translateX(100%)`;\n    } else if (isSwipeAnimation && direction === 'right') {\n      containerRef.current.style.transition = 'transform 0.2s ease-out';\n      containerRef.current.style.transform = `translateX(-100%)`;\n    } else {\n      containerRef.current.style.transform = 'translateX(0)';\n      containerRef.current.style.transition = 'none';\n    }\n  }, [direction, isSwipeAnimation]);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    container.addEventListener('touchstart', handleTouchStart);\n    container.addEventListener('touchmove', handleTouchMove, { passive: false });\n    container.addEventListener('touchend', handleTouchEnd);\n\n    return () => {\n      container.removeEventListener('touchstart', handleTouchStart);\n      container.removeEventListener('touchmove', handleTouchMove);\n      container.removeEventListener('touchend', handleTouchEnd);\n    };\n  }, [handleTouchStart, handleTouchMove, handleTouchEnd]);\n\n  return (\n    <div ref={containerRef} className={classNames(styles.swipeSlider, isMobile && styles.swipeSliderMobile)}>\n      {renderLeftItem(swipeAction === 'slide')}\n      {renderItem()}\n      {renderRightItem(swipeAction === 'slide')}\n    </div>\n  );\n};\n\nexport default HeroSwipeSlider;\n","import React, { useCallback, useEffect, useRef, useState, type CSSProperties, type TransitionEventHandler } from 'react';\nimport type { Playlist } from '@jwp/ott-common/types/playlist';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport ChevronLeft from '@jwp/ott-theme/assets/icons/chevron_left.svg?react';\nimport ChevronRight from '@jwp/ott-theme/assets/icons/chevron_right.svg?react';\n\nimport { useScrolledDown } from '../../hooks/useScrolledDown';\nimport Icon from '../Icon/Icon';\nimport useBreakpoint, { Breakpoint } from '../../hooks/useBreakpoint';\n\nimport styles from './HeroShelf.module.scss';\nimport HeroShelfMetadata from './HeroShelfMetadata';\nimport HeroShelfBackground from './HeroShelfBackground';\nimport HeroShelfPagination from './HeroShelfPagination';\nimport HeroSwipeSlider from './HeroSwipeSlider';\n\ntype Props = {\n  playlist: Playlist;\n  loading?: boolean;\n  error?: unknown;\n};\n\nconst HeroShelf = ({ playlist, loading = false, error = null }: Props) => {\n  const [index, setIndex] = useState(0);\n  const [nextIndex, setNextIndex] = useState(0);\n  const { t } = useTranslation('common');\n  const breakpoint = useBreakpoint();\n  const isMobile = breakpoint <= Breakpoint.sm;\n  const posterRef = useRef<HTMLDivElement>(null);\n  const [direction, setDirection] = useState<'left' | 'right' | null>(null);\n  const [animationPhase, setAnimationPhase] = useState<'init' | 'start' | 'end' | null>(null);\n  const [isSwipeAnimation, setIsSwipeAnimation] = useState(false);\n\n  useScrolledDown(50, isMobile ? 200 : 600, (progress: number) => {\n    if (posterRef.current) posterRef.current.style.opacity = `${Math.max(1 - progress, isMobile ? 0 : 0.1)}`;\n  });\n\n  const slideTo = (toIndex: number, isSwiping = false) => {\n    if (animationPhase) return;\n\n    setNextIndex(toIndex);\n    setDirection(toIndex > index ? 'right' : 'left');\n    setAnimationPhase('init');\n    setIsSwipeAnimation(isSwiping);\n  };\n\n  const handleSlideLeft = () => slideTo(index - 1);\n  const handleSlideRight = () => slideTo(index + 1);\n  const handleSwipeLeft = () => slideTo(index - 1, true);\n  const handleSwipeRight = () => slideTo(index + 1, true);\n\n  const handleBackgroundAnimationEnd: TransitionEventHandler = useCallback(\n    (event) => {\n      // Transform has the longest transition (after opacity)\n      if (event.propertyName === 'transform' && animationPhase === 'start') {\n        setAnimationPhase('end');\n      }\n    },\n    [animationPhase],\n  );\n\n  useEffect(() => {\n    if (!direction) return;\n    if (animationPhase === 'init') {\n      setAnimationPhase('start');\n      return;\n    }\n    if (animationPhase === 'end') {\n      setIndex(nextIndex);\n      setDirection(null);\n      setAnimationPhase(null);\n      setIsSwipeAnimation(false);\n    }\n  }, [animationPhase, direction, nextIndex]);\n\n  const isAnimating = animationPhase === 'start' || animationPhase === 'end';\n  const directionFactor = direction === 'left' ? 1 : direction === 'right' ? -1 : 0;\n\n  const getBackgroundStyle = (side?: 'left' | 'right') => {\n    const backgroundX = isMobile ? 10 : 40;\n\n    if (side == 'left') {\n      return {\n        transform: `scale(1.2) translateX(${animationPhase === 'init' ? backgroundX * -1 : 0}px)`,\n        opacity: isAnimating ? 1 : 0,\n        transition: isAnimating ? 'opacity 0.3s ease-out, transform 0.3s ease-out' : 'none',\n      };\n    }\n    if (side == 'right') {\n      return {\n        transform: `scale(1.2) translateX(${animationPhase === 'init' ? backgroundX : 0}px)`,\n        opacity: isAnimating ? 1 : 0,\n        transition: isAnimating ? 'opacity 0.3s ease-out, transform 0.3s ease-out' : 'none',\n      };\n    }\n    return {\n      transform: `scale(1.2) translateX(${isAnimating ? backgroundX * directionFactor : 0}px)`,\n      opacity: isAnimating ? 0 : 1,\n      transition: isAnimating ? `opacity ${isMobile ? 0.3 : 0.1}s ease-out, transform 0.3s ease-in` : 'none',\n    };\n  };\n\n  const getMetadataStyle = (side?: 'left' | 'right', isSwiping = false): CSSProperties => {\n    if (side === 'left') {\n      return {\n        left: isSwiping || isSwipeAnimation ? '-100%' : animationPhase === 'init' ? -60 : 0,\n        opacity: isSwiping || isSwipeAnimation || isAnimating ? 1 : 0,\n        transition: isAnimating ? 'opacity 0.2s ease-out, left 0.2s ease-out' : 'none',\n        pointerEvents: 'none',\n      };\n    }\n    if (side === 'right') {\n      return {\n        left: isSwiping || isSwipeAnimation ? '100%' : animationPhase === 'init' ? 60 : 0,\n        opacity: isSwiping || isSwipeAnimation || isAnimating ? 1 : 0,\n        transition: isAnimating ? 'opacity 0.2s ease-out, left 0.2s ease-out' : 'none',\n        pointerEvents: 'none',\n      };\n    }\n    return {\n      left: isAnimating && direction ? 60 * directionFactor : 0,\n      opacity: isAnimating ? 0 : 1,\n      transition: isAnimating ? 'opacity 0.15s ease-out, left 0.15s ease-out' : 'none',\n      pointerEvents: isAnimating ? 'none' : 'initial',\n    };\n  };\n\n  const item = playlist.playlist[index];\n  const leftItem = playlist.playlist[nextIndex < index ? nextIndex : index - 1] || null;\n  const rightItem = playlist.playlist[nextIndex > index ? nextIndex : index + 1] || null;\n\n  const renderedItem = animationPhase !== 'end' ? item : direction === 'right' ? leftItem : rightItem;\n\n  if (error || !playlist?.playlist) return <h2 className={styles.error}>Could not load items</h2>;\n\n  return (\n    <div className={classNames(styles.shelf)}>\n      <div className={styles.poster} ref={posterRef}>\n        <div className={styles.background} id=\"background\">\n          <HeroShelfBackground\n            item={leftItem}\n            style={getBackgroundStyle('left')}\n            key={renderedItem?.mediaid === leftItem?.mediaid ? 'left-item' : leftItem?.mediaid}\n            hidden={direction !== 'left'}\n          />\n          <HeroShelfBackground item={renderedItem} style={getBackgroundStyle()} key={renderedItem?.mediaid} onTransitionEnd={handleBackgroundAnimationEnd} />\n          <HeroShelfBackground\n            item={rightItem}\n            style={getBackgroundStyle('right')}\n            key={renderedItem?.mediaid === rightItem?.mediaid ? 'right-item' : rightItem?.mediaid}\n            hidden={direction !== 'right'}\n          />\n          <div className={styles.fade} />\n        </div>\n        <div className={styles.fade2} />\n      </div>\n      <button\n        className={classNames(styles.chevron, styles.chevronLeft)}\n        aria-label={t('slide_previous')}\n        disabled={!leftItem}\n        onClick={leftItem ? handleSlideLeft : undefined}\n      >\n        <Icon icon={ChevronLeft} />\n      </button>\n      <HeroSwipeSlider\n        direction={direction}\n        isSwipeAnimation={isSwipeAnimation}\n        loading={loading}\n        onSwipeLeft={handleSwipeLeft}\n        onSwipeRight={handleSwipeRight}\n        hasLeftItem={!!leftItem}\n        hasRightItem={!!rightItem}\n        renderLeftItem={(isSwiping: boolean) => (\n          <HeroShelfMetadata\n            loading={loading}\n            item={leftItem}\n            playlistId={playlist.feedid}\n            style={getMetadataStyle('left', isSwiping)}\n            key={renderedItem?.mediaid === leftItem?.mediaid ? 'left-item' : leftItem?.mediaid}\n            hidden={direction !== 'left' && !isSwiping}\n          />\n        )}\n        renderItem={() => (\n          <HeroShelfMetadata loading={loading} item={renderedItem} playlistId={playlist.feedid} key={renderedItem?.mediaid} style={getMetadataStyle()} />\n        )}\n        renderRightItem={(isSwiping: boolean) => (\n          <HeroShelfMetadata\n            loading={loading}\n            item={rightItem}\n            playlistId={playlist.feedid}\n            style={getMetadataStyle('right', isSwiping)}\n            key={renderedItem?.mediaid === rightItem?.mediaid ? 'right-item' : rightItem?.mediaid}\n            hidden={direction !== 'right' && !isSwiping}\n          />\n        )}\n      />\n      <button\n        className={classNames(styles.chevron, styles.chevronRight)}\n        aria-label={t('slide_next')}\n        disabled={!rightItem}\n        onClick={rightItem ? handleSlideRight : undefined}\n      >\n        <Icon icon={ChevronRight} />\n      </button>\n      <HeroShelfPagination playlist={playlist} index={index} setIndex={slideTo} nextIndex={nextIndex} direction={direction || false} />\n    </div>\n  );\n};\n\nexport default HeroShelf;\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport type { Content } from '@jwp/ott-common/types/config';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { useWatchHistoryStore } from '@jwp/ott-common/src/stores/WatchHistoryStore';\nimport { slugify } from '@jwp/ott-common/src/utils/urlFormatting';\nimport { parseAspectRatio, parseTilesDelta } from '@jwp/ott-common/src/utils/collection';\nimport { testId } from '@jwp/ott-common/src/utils/common';\nimport { PersonalShelf, SHELF_LAYOUT_TYPE } from '@jwp/ott-common/src/constants';\nimport usePlaylists from '@jwp/ott-hooks-react/src/usePlaylists';\nimport { useTranslationKey } from '@jwp/ott-hooks-react/src/useTranslationKey';\n\nimport Shelf from '../../components/Shelf/Shelf';\nimport InfiniteScrollLoader from '../../components/InfiniteScrollLoader/InfiniteScrollLoader';\nimport ErrorPage from '../../components/ErrorPage/ErrorPage';\nimport Fade from '../../components/Animation/Fade/Fade';\nimport HeroShelf from '../../components/HeroShelf/HeroShelf';\n\nimport styles from './ShelfList.module.scss';\n\nconst INITIAL_ROWS_TO_LOAD = 6;\nconst ROWS_TO_LOAD_STEP = 4;\n\ntype Props = {\n  rows: Content[];\n};\n\nconst ShelfList = ({ rows }: Props) => {\n  const { accessModel } = useConfigStore(({ accessModel }) => ({ accessModel }), shallow);\n  const [rowsToLoad, setRowsToLoad] = useState(INITIAL_ROWS_TO_LOAD);\n  const { t } = useTranslation('error');\n  const translationKey = useTranslationKey('title');\n\n  const watchHistoryDictionary = useWatchHistoryStore((state) => state.getDictionaryWithSeries());\n\n  // User\n  const { user, subscription } = useAccountStore(({ user, subscription }) => ({ user, subscription }), shallow);\n\n  // Todo: move to more common package?\n\n  const playlists = usePlaylists(rows, rowsToLoad);\n\n  useEffect(() => {\n    // reset row count when the page changes\n    return () => setRowsToLoad(INITIAL_ROWS_TO_LOAD);\n  }, [rows]);\n\n  // If all playlists are empty (most probably due to geo restrictions), we show an empty shelves error\n  const allPlaylistsEmpty = playlists.every(({ data, isSuccess }) => isSuccess && !data?.playlist?.length);\n\n  if (allPlaylistsEmpty) {\n    return <ErrorPage title={t('empty_shelves_heading')} message={t('empty_shelves_description')} />;\n  }\n\n  return (\n    <div className={styles.shelfList}>\n      <InfiniteScroll\n        style={{ overflow: 'hidden' }}\n        loadMore={() => setRowsToLoad((current) => current + ROWS_TO_LOAD_STEP)}\n        hasMore={rowsToLoad < rows.length}\n        loader={<InfiniteScrollLoader key=\"loader\" />}\n        useWindow={false}\n      >\n        {rows.slice(0, rowsToLoad).map(({ type, featured, title, custom }, index) => {\n          const { data: playlist, isPlaceholderData, error } = playlists[index];\n\n          if (!playlist?.playlist?.length) return null;\n\n          const posterAspect = parseAspectRatio(playlist.cardImageAspectRatio || playlist.shelfImageAspectRatio);\n          const visibleTilesDelta = parseTilesDelta(posterAspect);\n\n          const translatedValue = custom?.[translationKey] || (playlist?.[translationKey] as string);\n          const translatedTitle = translatedValue || title || playlist?.title;\n\n          const isHero = custom?.layoutType === SHELF_LAYOUT_TYPE.hero && index === 0;\n          const isFeatured = !isHero && (custom?.layoutType === SHELF_LAYOUT_TYPE.featured || featured);\n\n          return (\n            <section\n              key={`${index}_${playlist.id}`}\n              className={classNames(styles.shelfContainer, { [styles.hero]: isHero, [styles.featured]: isFeatured })}\n              data-testid={testId(`shelf-${isHero ? 'hero' : isFeatured ? 'featured' : type === 'playlist' ? slugify(translatedTitle) : type}`)}\n              aria-label={translatedTitle}\n            >\n              <Fade duration={250} delay={index * 33} open>\n                {isHero ? (\n                  <HeroShelf loading={isPlaceholderData} error={error} playlist={playlist} />\n                ) : (\n                  <Shelf\n                    loading={isPlaceholderData}\n                    error={error}\n                    type={type}\n                    playlist={playlist}\n                    watchHistory={type === PersonalShelf.ContinueWatching ? watchHistoryDictionary : undefined}\n                    title={translatedTitle}\n                    featured={isFeatured}\n                    accessModel={accessModel}\n                    isLoggedIn={!!user}\n                    hasSubscription={!!subscription}\n                    posterAspect={posterAspect}\n                    visibleTilesDelta={visibleTilesDelta}\n                  />\n                )}\n              </Fade>\n            </section>\n          );\n        })}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default ShelfList;\n","import React from 'react';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport type { Content } from '@jwp/ott-common/types/config';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { useTranslation } from 'react-i18next';\n\nimport ShelfList from '../../containers/ShelfList/ShelfList';\n\nconst Home = () => {\n  const { config } = useConfigStore(({ config, accessModel }) => ({ config, accessModel }), shallow);\n  const content: Content[] = config?.content;\n  const { t } = useTranslation('common');\n\n  return (\n    <>\n      <h1 className=\"hideUntilFocus\">{t('home')}</h1>\n      <ShelfList rows={content} />\n    </>\n  );\n};\n\nexport default Home;\n","import { createStore } from './utils';\n\ntype UIState = {\n  searchQuery: string;\n  searchActive: boolean;\n  userMenuOpen: boolean;\n  sideBarOpen: boolean;\n  languageMenuOpen: boolean;\n  preSearchPage?: string;\n};\n\nexport const useUIStore = createStore<UIState>('UIStore', () => ({\n  searchQuery: '',\n  searchActive: false,\n  userMenuOpen: false,\n  sideBarOpen: false,\n  languageMenuOpen: false,\n}));\n","import { useEffect, useRef } from 'react';\n\nconst useFirstRender = () => {\n  const firstRenderRef = useRef(true);\n\n  useEffect(() => {\n    firstRenderRef.current = false;\n  }, []);\n\n  return firstRenderRef.current;\n};\n\nexport default useFirstRender;\n","import { type MutableRefObject, useEffect, useRef } from 'react';\nimport { debounce } from '@jwp/ott-common/src/utils/common';\n\nconst useDebounce = <T extends (...args: any[]) => unknown>(callback: T, time: number) => {\n  const fnRef = useRef() as MutableRefObject<T | undefined>;\n  const debounceRef = useRef(\n    debounce((...rest) => {\n      if (fnRef.current) fnRef.current(...rest);\n    }, time),\n  );\n\n  useEffect(() => {\n    fnRef.current = callback;\n  }, [callback]);\n\n  return debounceRef.current;\n};\n\nexport default useDebounce;\n","import { useCallback } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useUIStore } from '@jwp/ott-common/src/stores/UIStore';\nimport useDebounce from '@jwp/ott-hooks-react/src/useDebounce';\n\n// Manages the query of the Search bar\nconst useSearchQueryUpdater = () => {\n  const navigate = useNavigate();\n\n  const updateSearchPath = useDebounce((query: string) => {\n    navigate(`/q/${encodeURIComponent(query)}`);\n  }, 350);\n  const updateSearchQuery = useCallback(\n    (query: string) => {\n      useUIStore.setState({\n        searchQuery: query,\n      });\n      updateSearchPath(query);\n    },\n    [updateSearchPath],\n  );\n  const resetSearchQuery = useCallback(() => {\n    const returnPage = useUIStore.getState().preSearchPage;\n\n    useUIStore.setState({\n      searchQuery: '',\n      preSearchPage: undefined,\n    });\n\n    navigate(returnPage || '/');\n  }, [navigate]);\n\n  return { updateSearchQuery, resetSearchQuery };\n};\n\nexport default useSearchQueryUpdater;\n","import { useQuery, type UseQueryResult } from 'react-query';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport ApiService from '@jwp/ott-common/src/services/ApiService';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport type { ApiError } from '@jwp/ott-common/src/utils/api';\nimport usePlaylist from '@jwp/ott-hooks-react/src/usePlaylist';\nimport { CACHE_TIME, STALE_TIME } from '@jwp/ott-common/src/constants';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { isTruthyCustomParamValue } from '@jwp/ott-common/src/utils/common';\nimport type { Playlist } from '@jwp/ott-common/types/playlist';\nimport { generatePlaylistPlaceholder } from '@jwp/ott-common/src/utils/collection';\n\nconst placeholderData = generatePlaylistPlaceholder(30);\n\nconst useAppContentSearch = ({ siteId, enabled, query }: { query: string; siteId: string; enabled: boolean }) => {\n  const apiService = getModule(ApiService);\n\n  const appContentSearchQuery: UseQueryResult<Playlist | undefined, ApiError> = useQuery(\n    ['app-search', query],\n    async () => {\n      const searchResult = await apiService.getContentSearch({ siteId, params: { searchTerm: query } });\n\n      return searchResult;\n    },\n    {\n      placeholderData: enabled ? placeholderData : undefined,\n      enabled: enabled,\n      staleTime: STALE_TIME,\n      cacheTime: CACHE_TIME,\n    },\n  );\n\n  return appContentSearchQuery;\n};\n\nexport const useSearch = (query: string) => {\n  const { config } = useConfigStore(({ config }) => ({ config }), shallow);\n\n  const siteId = config?.siteId;\n  const searchPlaylist = config?.features?.searchPlaylist;\n  const hasAppContentSearch = isTruthyCustomParamValue(config?.custom?.appContentSearch);\n\n  const playlistQuery = usePlaylist(searchPlaylist || '', { search: query || '' }, !hasAppContentSearch, !!query);\n  // New app content search flow\n  const appContentSearchQuery = useAppContentSearch({ siteId, enabled: hasAppContentSearch, query });\n\n  return hasAppContentSearch\n    ? { data: appContentSearchQuery.data, isFetching: appContentSearchQuery.isFetching, error: appContentSearchQuery.error }\n    : {\n        isFetching: playlistQuery.isFetching,\n        error: playlistQuery.error,\n        data: playlistQuery.data,\n      };\n};\n","import { throttle } from '@jwp/ott-common/src/utils/common';\nimport useEventCallback from '@jwp/ott-hooks-react/src/useEventCallback';\nimport { useEffect, useMemo, useRef, useState } from 'react';\n\nimport styles from './LayoutGrid.module.scss';\n\ntype Props<Item> = {\n  className?: string;\n  columnCount: number;\n  data: Item[];\n  renderCell: (item: Item, tabIndex: number) => JSX.Element;\n  getCellKey: (item: Item) => string;\n};\n\nconst scrollIntoViewThrottled = throttle(function (focusedElement: HTMLElement) {\n  focusedElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\n}, 300);\n\n// Keyboard-accessible grid layout, with focus management\nconst LayoutGrid = <Item extends object>({ className, columnCount, data, renderCell, getCellKey }: Props<Item>) => {\n  const [currentRowIndex, setCurrentRowIndex] = useState(0);\n  const [currentColumnIndex, setCurrentColumnIndex] = useState(0);\n  const gridRef = useRef<HTMLDivElement>(null);\n  const rowCount = Math.ceil(data.length / columnCount);\n\n  const focusGridCell = (rowIndex: number, columnIndex: number) => {\n    const gridCell = document.getElementById(`layout_grid_${rowIndex}-${columnIndex}`) as HTMLDivElement | null;\n    const focusableElement = gridCell?.querySelector('button, a, input, [tabindex]:not([tabindex=\"-1\"])') as HTMLElement | null;\n    const elementToFocus = focusableElement || gridCell;\n\n    setCurrentRowIndex(rowIndex);\n    setCurrentColumnIndex(columnIndex);\n\n    if (!elementToFocus) return;\n\n    elementToFocus.focus({ preventScroll: true });\n    scrollIntoViewThrottled(elementToFocus);\n  };\n\n  const handleKeyDown = useEventCallback((event: React.KeyboardEvent<HTMLDivElement>) => {\n    const { key, ctrlKey } = event;\n\n    if (!['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown', 'Home', 'End', 'PageUp', 'PageDown'].includes(key)) return;\n\n    event.preventDefault();\n\n    const maxRow = rowCount - 1;\n    const isOnFirstColumn = currentColumnIndex === 0;\n    const isOnLastColumn = currentColumnIndex === columnCount - 1;\n    const isOnFirstRow = currentRowIndex === 0;\n    const isOnLastRow = currentRowIndex === maxRow;\n    const maxRightLastRow = (data.length % columnCount || columnCount) - 1; // Never go beyond last item\n    const maxRight = isOnLastRow ? maxRightLastRow : columnCount - 1;\n\n    const nextRowIndex = Math.min(currentRowIndex + 1, maxRow);\n    const previousRowIndex = Math.max(currentRowIndex - 1, 0);\n\n    switch (key) {\n      case 'ArrowLeft':\n        if (isOnFirstColumn && !isOnFirstRow) {\n          // Move to last of previous row\n          return focusGridCell(previousRowIndex, columnCount - 1);\n        }\n        return focusGridCell(currentRowIndex, Math.max(currentColumnIndex - 1, 0));\n      case 'ArrowRight':\n        if (isOnLastColumn && !isOnLastRow) {\n          // Move to first of next row\n          return focusGridCell(nextRowIndex, 0);\n        }\n        return focusGridCell(currentRowIndex, Math.min(currentColumnIndex + 1, maxRight));\n      case 'ArrowUp':\n        return focusGridCell(previousRowIndex, currentColumnIndex);\n      case 'ArrowDown':\n        return focusGridCell(nextRowIndex, nextRowIndex === maxRow ? Math.min(currentColumnIndex, maxRightLastRow) : currentColumnIndex);\n      case 'Home':\n        if (ctrlKey) {\n          return focusGridCell(0, 0);\n        }\n        return focusGridCell(currentRowIndex, 0);\n      case 'End':\n        if (ctrlKey) {\n          return focusGridCell(maxRow, maxRightLastRow);\n        }\n        return focusGridCell(currentRowIndex, maxRight);\n      case 'PageUp':\n        return focusGridCell(previousRowIndex, currentColumnIndex);\n      case 'PageDown':\n        return focusGridCell(nextRowIndex, nextRowIndex === maxRow ? Math.min(maxRightLastRow, currentColumnIndex) : currentColumnIndex);\n      default:\n        return;\n    }\n  });\n\n  // When the window size changes, correct indexes if necessary\n  useEffect(() => {\n    // the focused element is not within the grid element\n    if (!gridRef.current?.contains(document.activeElement)) {\n      return;\n    }\n\n    const maxRightLastRow = (data.length % columnCount || columnCount) - 1; // Never go beyond last item\n\n    if (currentColumnIndex > columnCount - 1) {\n      return focusGridCell(currentRowIndex, columnCount - 1);\n    }\n\n    if (currentRowIndex === rowCount - 1 && currentColumnIndex > maxRightLastRow) {\n      return focusGridCell(currentRowIndex, maxRightLastRow);\n    }\n    // this logic should only react when the column count changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [columnCount]);\n\n  const gridCellStyle = useMemo(() => ({ width: `${Math.floor((100 / columnCount) * 100) / 100}%` }), [columnCount]);\n\n  return (\n    <div role=\"grid\" ref={gridRef} aria-rowcount={rowCount} className={className} onKeyDown={handleKeyDown}>\n      {Array.from({ length: rowCount }).map((_, rowIndex) => (\n        <div role=\"row\" key={rowIndex} aria-rowindex={rowIndex + 1} className={styles.row}>\n          {data.slice(rowIndex * columnCount, rowIndex * columnCount + columnCount).map((item, columnIndex) => (\n            <div\n              role=\"gridcell\"\n              id={`layout_grid_${rowIndex}-${columnIndex}`}\n              key={getCellKey(item)}\n              aria-colindex={columnIndex + 1}\n              className={styles.cell}\n              style={gridCellStyle}\n            >\n              {renderCell(item, currentRowIndex === rowIndex && currentColumnIndex === columnIndex ? 0 : -1)}\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default LayoutGrid;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport type { Playlist, PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport type { AccessModel } from '@jwp/ott-common/types/config';\nimport { isLocked } from '@jwp/ott-common/src/utils/entitlements';\nimport { parseAspectRatio, parseTilesDelta } from '@jwp/ott-common/src/utils/collection';\nimport useBreakpoint, { Breakpoint, type Breakpoints } from '@jwp/ott-ui-react/src/hooks/useBreakpoint';\n\nimport Card from '../Card/Card';\nimport InfiniteScrollLoader from '../InfiniteScrollLoader/InfiniteScrollLoader';\nimport LayoutGrid from '../LayoutGrid/LayoutGrid';\nimport createInjectableComponent from '../../modules/createInjectableComponent';\n\nimport styles from './CardGrid.module.scss';\n\nconst INITIAL_ROW_COUNT = 6;\nconst LOAD_ROWS_COUNT = 4;\n\ntype VisibleTiles = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;\n\nconst defaultCols: Breakpoints = {\n  [Breakpoint.xs]: 2,\n  [Breakpoint.sm]: 2,\n  [Breakpoint.md]: 3,\n  [Breakpoint.lg]: 4,\n  [Breakpoint.xl]: 5,\n};\n\nexport const CardGridIdentifier = Symbol(`CARD_GRID`);\n\nexport type CardGridProps = {\n  playlist: Playlist;\n  watchHistory?: { [key: string]: number };\n  isLoading: boolean;\n  cols?: Breakpoints;\n  currentCardItem?: PlaylistItem;\n  currentCardLabel?: string;\n  accessModel: AccessModel;\n  isLoggedIn: boolean;\n  hasSubscription: boolean;\n  hasMore?: boolean;\n  headingLevel?: number;\n  loadMore?: () => void;\n  onCardHover?: (item: PlaylistItem) => void;\n  getUrl: (item: PlaylistItem) => string;\n};\n\nconst getCellKey = (item: PlaylistItem) => item.mediaid;\n\nfunction CardGrid({\n  playlist,\n  watchHistory,\n  isLoading = false,\n  cols = defaultCols,\n  currentCardItem,\n  currentCardLabel,\n  accessModel,\n  isLoggedIn,\n  hasSubscription,\n  hasMore,\n  getUrl,\n  loadMore,\n  onCardHover,\n  headingLevel,\n}: CardGridProps) {\n  const breakpoint: Breakpoint = useBreakpoint();\n  const posterAspect = parseAspectRatio(playlist.cardImageAspectRatio || playlist.shelfImageAspectRatio);\n  const visibleTiles = (cols[breakpoint] + parseTilesDelta(posterAspect)) as VisibleTiles;\n  const [rowCount, setRowCount] = useState(INITIAL_ROW_COUNT);\n\n  const defaultLoadMore = () => setRowCount((current) => current + LOAD_ROWS_COUNT);\n  const defaultHasMore = rowCount * visibleTiles < playlist.playlist.length;\n\n  useEffect(() => {\n    // reset row count when the page changes\n    setRowCount(INITIAL_ROW_COUNT);\n  }, [playlist.feedid]);\n\n  const renderCell = useCallback(\n    (playlistItem: PlaylistItem, tabIndex: number) => (\n      <Card\n        tabIndex={tabIndex}\n        progress={watchHistory ? watchHistory[playlistItem.mediaid] : undefined}\n        url={getUrl(playlistItem)}\n        onHover={typeof onCardHover === 'function' ? () => onCardHover(playlistItem) : undefined}\n        loading={isLoading}\n        isCurrent={currentCardItem && currentCardItem.mediaid === playlistItem.mediaid}\n        currentLabel={currentCardLabel}\n        isLocked={isLocked(accessModel, isLoggedIn, hasSubscription, playlistItem)}\n        posterAspect={posterAspect}\n        item={playlistItem}\n        headingLevel={headingLevel}\n      />\n    ),\n    [accessModel, currentCardItem, currentCardLabel, getUrl, hasSubscription, headingLevel, isLoading, isLoggedIn, onCardHover, posterAspect, watchHistory],\n  );\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore ?? defaultLoadMore}\n      hasMore={hasMore ?? defaultHasMore}\n      loader={<InfiniteScrollLoader key=\"loader\" />}\n      useWindow={false}\n    >\n      <LayoutGrid\n        className={classNames(styles.container, styles[`cols-${visibleTiles}`])}\n        data={loadMore ? playlist.playlist : playlist.playlist.slice(0, rowCount * visibleTiles)}\n        columnCount={visibleTiles}\n        renderCell={renderCell}\n        getCellKey={getCellKey}\n      />\n    </InfiniteScroll>\n  );\n}\n\nexport default createInjectableComponent(CardGridIdentifier, CardGrid);\n","import React, { useEffect, useMemo } from 'react';\nimport { useParams } from 'react-router';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { useUIStore } from '@jwp/ott-common/src/stores/UIStore';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { mediaURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport useFirstRender from '@jwp/ott-hooks-react/src/useFirstRender';\nimport useSearchQueryUpdater from '@jwp/ott-ui-react/src/hooks/useSearchQueryUpdater';\nimport { useSearch } from '@jwp/ott-hooks-react/src/useSearch';\nimport useOpaqueId from '@jwp/ott-hooks-react/src/useOpaqueId';\n\nimport CardGrid from '../../components/CardGrid/CardGrid';\nimport ErrorPage from '../../components/ErrorPage/ErrorPage';\n\nimport styles from './Search.module.scss';\n\nconst Search = () => {\n  const { t } = useTranslation('search');\n  const { config, accessModel } = useConfigStore(({ config, accessModel }) => ({ config, accessModel }), shallow);\n  const { siteName, features } = config;\n  const headingId = useOpaqueId('search_heading');\n\n  const firstRender = useFirstRender();\n  const searchQuery = useUIStore((state) => state.searchQuery);\n  const { updateSearchQuery } = useSearchQueryUpdater();\n  const params = useParams();\n  const query = params['*'];\n  const { isFetching, error, data: playlist } = useSearch(query || '');\n\n  // User\n  const { user, subscription } = useAccountStore(({ user, subscription }) => ({ user, subscription }), shallow);\n\n  const getURL = (playlistItem: PlaylistItem) =>\n    mediaURL({\n      id: playlistItem.mediaid,\n      title: playlistItem.title,\n      playlistId: features?.searchPlaylist,\n    });\n\n  const title = useMemo(() => {\n    if (isFetching) return t('heading');\n    if (!query) return t('start_typing');\n    if (!playlist?.playlist.length) return t('no_results_heading', { query });\n\n    return t('title', { count: playlist.playlist.length, query });\n  }, [isFetching, playlist?.playlist.length, query, t]);\n\n  // Update the search bar query to match the route param on mount\n  useEffect(() => {\n    if (!firstRender) {\n      return;\n    }\n\n    if (query && query !== searchQuery) {\n      updateSearchQuery(query);\n    }\n  }, [firstRender, query, searchQuery, updateSearchQuery]);\n\n  useEffect(() => {\n    return () => {\n      useUIStore.setState({\n        searchQuery: '',\n        searchActive: false,\n      });\n    };\n  }, []);\n\n  if ((error || !playlist) && !isFetching) {\n    return (\n      <ErrorPage title={t('error_heading')}>\n        <h2 className={styles.subHeading}>{t('error_subheading')}</h2>\n        <p>{t('error_description')}</p>\n      </ErrorPage>\n    );\n  }\n\n  if (!query) {\n    return <ErrorPage title={title} />;\n  }\n\n  if (!playlist?.playlist.length) {\n    return (\n      <>\n        <Helmet>\n          <title>\n            {title} - {siteName}\n          </title>\n        </Helmet>\n        <ErrorPage title={title}>\n          <h2 className={styles.subHeading}>{t('suggestions')}</h2>\n          <ul>\n            <li>{t('tip_one')}</li>\n            <li>{t('tip_two')}</li>\n            <li>{t('tip_three')}</li>\n          </ul>\n        </ErrorPage>\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.search}>\n      <Helmet>\n        <title>\n          {title} - {siteName}\n        </title>\n      </Helmet>\n      <header className={styles.header}>\n        <h2 id={headingId} aria-live={isFetching ? undefined : 'polite'}>\n          {title}\n        </h2>\n      </header>\n      <CardGrid\n        aria-labelledby={headingId}\n        getUrl={getURL}\n        playlist={playlist}\n        isLoading={firstRender}\n        accessModel={accessModel}\n        isLoggedIn={!!user}\n        hasSubscription={!!subscription}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import * as React from \"react\";\nconst SvgAccountCircle = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M12,19.2C9.5,19.2 7.29,17.92 6,16C6.03,14 10,12.9 12,12.9C14,12.9 17.97,14 18,16C16.71,17.92 14.5,19.2 12,19.2M12,5A3,3 0 0,1 15,8A3,3 0 0,1 12,11A3,3 0 0,1 9,8A3,3 0 0,1 12,5M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2Z\" }));\nexport default SvgAccountCircle;\n","import * as React from \"react\";\nconst SvgBalanceWallet = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M5,3C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V16.72C21.59,16.37 22,15.74 22,15V9C22,8.26 21.59,7.63 21,7.28V5A2,2 0 0,0 19,3H5M5,5H19V7H13A2,2 0 0,0 11,9V15A2,2 0 0,0 13,17H19V19H5V5M13,9H20V15H13V9M16,10.5A1.5,1.5 0 0,0 14.5,12A1.5,1.5 0 0,0 16,13.5A1.5,1.5 0 0,0 17.5,12A1.5,1.5 0 0,0 16,10.5Z\" }));\nexport default SvgBalanceWallet;\n","import * as React from \"react\";\nconst SvgExit = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M19,3H5C3.89,3 3,3.89 3,5V9H5V5H19V19H5V15H3V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M10.08,15.58L11.5,17L16.5,12L11.5,7L10.08,8.41L12.67,11H3V13H12.67L10.08,15.58Z\" }));\nexport default SvgExit;\n","import * as React from \"react\";\nconst SvgFavorite = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\" }));\nexport default SvgFavorite;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useOpaqueId from '@jwp/ott-hooks-react/src/useOpaqueId';\n\nimport Dialog from '../Dialog/Dialog';\nimport Button from '../Button/Button';\n\nimport styles from './Alert.module.scss';\n\ntype Props = {\n  open: boolean;\n  message: string | null;\n  onClose: () => void;\n  isSuccess?: boolean;\n  actionsOverride?: React.ReactNode;\n  titleOverride?: string;\n};\n\nconst Alert: React.FC<Props> = ({ open, message, onClose, isSuccess, actionsOverride, titleOverride }: Props) => {\n  const { t } = useTranslation('common');\n  const headingId = useOpaqueId('alert-heading');\n\n  return (\n    <Dialog open={open} onClose={onClose} role=\"alertdialog\" aria-modal=\"true\" aria-labelledby={headingId}>\n      <h2 id={headingId} className={styles.title}>\n        {titleOverride ?? (isSuccess ? t('alert.success') : t('alert.title'))}\n      </h2>\n      <p className={styles.body}>{message}</p>\n      {actionsOverride ?? <Button label={t('alert.close')} variant=\"outlined\" onClick={onClose} fullWidth />}\n    </Dialog>\n  );\n};\n\nexport default Alert;\n","import React, { useCallback, useContext, type ReactElement, type ReactNode } from 'react';\nimport type { GenericFormValues } from '@jwp/ott-common/types/form';\nimport useOpaqueId from '@jwp/ott-hooks-react/src/useOpaqueId';\n\nimport Button from '../Button/Button';\nimport LoadingOverlay from '../LoadingOverlay/LoadingOverlay';\n\nimport styles from './Form.module.scss';\nimport { FormContext } from './Form';\n\nexport interface FormSectionContentArgs<T extends GenericFormValues, TErrors> {\n  values: T;\n  isEditing: boolean;\n  isBusy: boolean;\n  onChange: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>;\n  errors?: TErrors | undefined;\n}\n\nexport interface FormSectionProps<TData extends GenericFormValues, TErrors> {\n  className?: string;\n  panelHeaderClassName?: string;\n  label: string;\n  editButton?: string | ReactElement;\n  saveButton?: string;\n  cancelButton?: string;\n  onSubmit?: (values: TData) => Promise<{ errors?: string[] }>;\n  content?: (args: FormSectionContentArgs<TData, TErrors>) => ReactNode;\n  children?: never;\n  readOnly?: boolean;\n}\n\nexport function FormSection<TData extends GenericFormValues>({\n  className,\n  panelHeaderClassName,\n  label,\n  editButton,\n  saveButton,\n  cancelButton,\n  onSubmit,\n  content,\n  readOnly = false,\n}: FormSectionProps<TData, string[]>): ReactElement<FormSectionProps<TData, string[]>> | null {\n  const sectionId = useOpaqueId(label);\n  const {\n    formState: { values, activeSectionId, errors: formErrors, isBusy },\n    setFormState,\n    isLoading,\n    onCancel,\n  } = useContext(FormContext) as FormContext<TData>;\n\n  const isEditing = sectionId === activeSectionId;\n\n  const onChange = useCallback(\n    ({ currentTarget }: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n      if (!currentTarget) return;\n\n      const { name, type } = currentTarget;\n      const value = type === 'checkbox' ? (currentTarget as HTMLInputElement).checked : currentTarget.value;\n\n      if (!isEditing) {\n        onCancel();\n      }\n\n      setFormState((oldState) => {\n        const newValues = { ...oldState.values };\n\n        // This logic handles nested names like 'consents.terms'\n        name.split('.').reduce((parent, field, index, arr) => {\n          if (index === arr.length - 1) {\n            parent[field] = value;\n          } else {\n            parent[field] = { ...parent[field] } || {};\n          }\n\n          return parent[field];\n        }, newValues);\n\n        return {\n          ...oldState,\n          values: newValues,\n          activeSectionId: sectionId,\n        };\n      });\n    },\n    [isEditing, onCancel, sectionId, setFormState],\n  );\n\n  const handleSubmit = useCallback(\n    async function handleSubmit(event?: React.FormEvent) {\n      event && event.preventDefault();\n\n      if (onSubmit) {\n        let response: { errors?: string[] };\n\n        try {\n          setFormState((s) => {\n            return { ...s, isBusy: true, errors: [] };\n          });\n          response = await onSubmit(values);\n        } catch (error: unknown) {\n          response = { errors: Array.of(error instanceof Error ? error.message : (error as string)) };\n        }\n\n        // Don't leave edit mode if there are errors\n        if (response?.errors?.length) {\n          setFormState((s) => {\n            return {\n              ...s,\n              errors: response?.errors,\n              isBusy: false,\n            };\n          });\n\n          return;\n        }\n      }\n\n      setFormState((s) => {\n        return {\n          ...s,\n          activeSectionId: undefined,\n          isBusy: false,\n        };\n      });\n    },\n    [onSubmit, setFormState, values],\n  );\n\n  const onEdit = useCallback(\n    function onEdit() {\n      if (!isEditing) {\n        onCancel();\n        setFormState((s) => {\n          return {\n            ...s,\n            activeSectionId: sectionId,\n          };\n        });\n      }\n    },\n    [isEditing, onCancel, sectionId, setFormState],\n  );\n\n  return (\n    <section aria-labelledby={sectionId} className={className}>\n      <div className={panelHeaderClassName}>\n        <h2 id={sectionId}>{label}</h2>\n      </div>\n      {isBusy && isEditing && <LoadingOverlay transparentBackground />}\n      {content && (\n        <form className={styles.flexBox} noValidate onSubmit={(event) => event.preventDefault()}>\n          {content({\n            values,\n            isEditing,\n            isBusy,\n            onChange,\n            ...(isEditing ? { errors: formErrors } : {}),\n          })}\n        </form>\n      )}\n      {(saveButton || editButton || cancelButton) && (\n        <div className={styles.controls}>\n          {isEditing ? (\n            <>\n              {saveButton && <Button label={saveButton} type=\"submit\" onClick={handleSubmit} disabled={isLoading} />}\n              {cancelButton && <Button label={cancelButton} type=\"reset\" variant=\"text\" onClick={onCancel} />}\n            </>\n          ) : (\n            !readOnly &&\n            editButton &&\n            (typeof editButton === 'object' ? (\n              (editButton as ReactElement)\n            ) : (\n              <Button label={editButton as string} type=\"button\" onClick={onEdit} disabled={isLoading} />\n            ))\n          )}\n        </div>\n      )}\n    </section>\n  );\n}\n","import React, { createContext, useCallback, useEffect, useState, type SetStateAction } from 'react';\nimport type { GenericFormValues } from '@jwp/ott-common/types/form';\n\nimport type { FormSectionProps } from './FormSection';\nimport { FormSection } from './FormSection';\n\ninterface Props<TData> {\n  initialValues: TData;\n  isLoading?: boolean;\n  onReset?: () => void;\n  children?: FormSectionProps<TData, string[]>[];\n}\n\nexport interface FormContext<TData> {\n  isLoading?: boolean;\n  onCancel: () => void;\n  formState: FormState<TData>;\n  setFormState: React.Dispatch<SetStateAction<FormState<TData>>>;\n}\n\ninterface FormState<TData> {\n  values: TData;\n  activeSectionId: string | undefined;\n  isDirty: boolean;\n  isBusy: boolean;\n  errors?: string[];\n}\n\nexport const FormContext = createContext<FormContext<GenericFormValues> | undefined>(undefined);\n\nfunction Form<TData extends GenericFormValues>({ isLoading, initialValues, onReset, children }: Props<TData>): JSX.Element {\n  const [state, setState] = useState<FormState<TData>>({\n    values: initialValues,\n    activeSectionId: undefined,\n    isDirty: false,\n    isBusy: false,\n  });\n\n  const onCancel = useCallback(\n    function onCancel() {\n      setState((s) => {\n        return {\n          ...s,\n          values: initialValues,\n          isDirty: false,\n          activeSectionId: undefined,\n          success: false,\n          errors: undefined,\n        };\n      });\n      onReset && onReset();\n    },\n    [initialValues, onReset],\n  );\n\n  useEffect(() => {\n    // Don't overwrite values if a section is being edited, since that would wipe out anything the user has entered\n    if (!state.activeSectionId) {\n      setState((s) => {\n        return {\n          ...s,\n          values: initialValues,\n        };\n      });\n    }\n  }, [initialValues, state.activeSectionId]);\n\n  return (\n    <FormContext.Provider\n      value={{\n        isLoading,\n        onCancel,\n        formState: state,\n        setFormState: setState,\n      }}\n    >\n      {children?.map((props, i) => (\n        <FormSection<TData> key={i} {...props} />\n      ))}\n    </FormContext.Provider>\n  );\n}\n\nexport default Form;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport DOMPurify from 'dompurify';\nimport { useMutation } from 'react-query';\nimport type { CustomFormField } from '@jwp/ott-common/types/account';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport { isTruthy, isTruthyCustomParamValue, testId } from '@jwp/ott-common/src/utils/common';\nimport { logError } from '@jwp/ott-common/src/logger';\nimport { formatConsents, formatConsentsFromValues, formatConsentsToRegisterFields, formatConsentValues } from '@jwp/ott-common/src/utils/collection';\nimport useToggle from '@jwp/ott-hooks-react/src/useToggle';\nimport Visibility from '@jwp/ott-theme/assets/icons/visibility.svg?react';\nimport VisibilityOff from '@jwp/ott-theme/assets/icons/visibility_off.svg?react';\nimport env from '@jwp/ott-common/src/env';\n\nimport type { FormSectionContentArgs, FormSectionProps } from '../Form/FormSection';\nimport Alert from '../Alert/Alert';\nimport Button from '../Button/Button';\nimport Form from '../Form/Form';\nimport IconButton from '../IconButton/IconButton';\nimport FormFeedback from '../FormFeedback/FormFeedback';\nimport TextField from '../form-fields/TextField/TextField';\nimport Checkbox from '../form-fields/Checkbox/Checkbox';\nimport CustomRegisterField from '../CustomRegisterField/CustomRegisterField';\nimport Icon from '../Icon/Icon';\nimport { modalURLFromLocation } from '../../utils/location';\nimport { useAriaAnnouncer } from '../../containers/AnnouncementProvider/AnnoucementProvider';\n\nimport styles from './Account.module.scss';\n\ntype Props = {\n  panelClassName?: string;\n  panelHeaderClassName?: string;\n  canUpdateEmail?: boolean;\n};\n\ninterface FormErrors {\n  email?: string;\n  confirmationPassword?: string;\n  firstName?: string;\n  lastName?: string;\n  form?: string;\n}\n\nconst Account = ({ panelClassName, panelHeaderClassName, canUpdateEmail = true }: Props): JSX.Element => {\n  const accountController = getModule(AccountController);\n\n  const { t, i18n } = useTranslation('user');\n  const announce = useAriaAnnouncer();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [viewPassword, toggleViewPassword] = useToggle();\n  const exportData = useMutation(accountController.exportAccountData);\n  const [isAlertVisible, setIsAlertVisible] = useState(false);\n  const exportDataMessage = exportData.isSuccess ? t('account.export_data_success') : t('account.export_data_error');\n  const htmlLang = i18n.language !== env.APP_DEFAULT_LANGUAGE ? env.APP_DEFAULT_LANGUAGE : undefined;\n\n  useEffect(() => {\n    if (exportData.isSuccess || exportData.isError) {\n      setIsAlertVisible(true);\n    }\n  }, [exportData.isSuccess, exportData.isError]);\n\n  const { customer, customerConsents, publisherConsents } = useAccountStore(\n    ({ user, customerConsents, publisherConsents }) => ({\n      customer: user,\n      customerConsents,\n      publisherConsents,\n    }),\n    shallow,\n  );\n\n  const { canChangePasswordWithOldPassword, canExportAccountData, canDeleteAccount } = accountController.getFeatures();\n  // users authenticated with social (register_source: facebook, google, twitter) do not have password by default\n  const registerSource = customer?.metadata?.register_source;\n  const isSocialLogin = (registerSource && registerSource !== 'inplayer') || false;\n  const shouldAddPassword = (isSocialLogin && !customer?.metadata?.has_password) || false;\n\n  // load consents (move to `useConsents` hook?)\n  useEffect(() => {\n    if (!publisherConsents) {\n      accountController.getPublisherConsents();\n\n      return;\n    }\n  }, [accountController, publisherConsents]);\n\n  const [termsConsents, nonTermsConsents] = useMemo(() => {\n    const terms: CustomFormField[] = [];\n    const nonTerms: CustomFormField[] = [];\n\n    publisherConsents?.forEach((consent) => {\n      if (!consent?.type || consent?.type === 'checkbox') {\n        terms.push(consent);\n      } else {\n        nonTerms.push(consent);\n      }\n    });\n\n    return [terms, nonTerms];\n  }, [publisherConsents]);\n\n  const consents = useMemo(() => formatConsents(publisherConsents, customerConsents), [publisherConsents, customerConsents]);\n\n  const consentsValues = useMemo(() => formatConsentValues(publisherConsents, customerConsents), [publisherConsents, customerConsents]);\n\n  const initialValues = useMemo(\n    () => ({\n      ...customer,\n      consents,\n      consentsValues,\n      confirmationPassword: '',\n    }),\n    [customer, consents, consentsValues],\n  );\n\n  const formatConsentLabel = (label: string): string | JSX.Element => {\n    const sanitizedLabel = DOMPurify.sanitize(label);\n    const hasHrefOpenTag = /<a(.|\\n)*?>/.test(sanitizedLabel);\n    const hasHrefCloseTag = /<\\/a(.|\\n)*?>/.test(sanitizedLabel);\n\n    if (hasHrefOpenTag && hasHrefCloseTag) {\n      return <span dangerouslySetInnerHTML={{ __html: label }} />;\n    }\n\n    return label;\n  };\n\n  function translateErrors(errors?: string[]): FormErrors {\n    const formErrors: FormErrors = {};\n    // Some errors are combined in a single CSV string instead of one string per error\n    errors\n      ?.flatMap((e) => e.split(','))\n      .forEach((error) => {\n        switch (error.trim()) {\n          case 'Invalid param email':\n            formErrors.form = t('account.errors.validation_error');\n            formErrors.email = t('account.errors.invalid_param_email');\n            break;\n          case 'Customer email already exists':\n            formErrors.form = t('account.errors.validation_error');\n            formErrors.email = t('account.errors.email_exists');\n            break;\n          case 'Please enter a valid e-mail address.':\n            formErrors.form = t('account.errors.validation_error');\n            formErrors.email = t('account.errors.please_enter_valid_email');\n            break;\n          case 'Invalid confirmationPassword': {\n            formErrors.form = t('account.errors.validation_error');\n            formErrors.confirmationPassword = t('account.errors.invalid_password');\n            break;\n          }\n          case 'firstName can have max 50 characters.': {\n            formErrors.form = t('account.errors.validation_error');\n            formErrors.firstName = t('account.errors.first_name_too_long');\n            break;\n          }\n          case 'lastName can have max 50 characters.': {\n            formErrors.form = t('account.errors.validation_error');\n            formErrors.lastName = t('account.errors.last_name_too_long');\n            break;\n          }\n          case 'Email update not supported': {\n            formErrors.form = t('account.errors.email_update_not_supported');\n            break;\n          }\n          case 'Wrong email/password combination': {\n            formErrors.form = t('account.errors.wrong_combination');\n            break;\n          }\n          default: {\n            formErrors.form = t('account.errors.unknown_error');\n            logError('Account', 'Unknown error', { error });\n            break;\n          }\n        }\n      });\n\n    return formErrors;\n  }\n\n  function formSection(props: FormSectionProps<typeof initialValues, FormErrors>) {\n    return {\n      ...props,\n      className: panelClassName,\n      panelHeaderClassName: panelHeaderClassName,\n      saveButton: t('account.save'),\n      cancelButton: t('account.cancel'),\n      content: (args: FormSectionContentArgs<typeof initialValues, string[]>) => {\n        // This function just allows the sections below to use the FormError type instead of an array of errors\n        const formErrors = translateErrors(args.errors);\n\n        // Render the section content, but also add a warning text if there's a form level error\n        return (\n          <>\n            {formErrors?.form ? <FormFeedback variant=\"error\">{formErrors.form}</FormFeedback> : null}\n            {props.content?.({ ...args, errors: formErrors })}\n          </>\n        );\n      },\n    };\n  }\n\n  const editPasswordClickHandler = async () => {\n    if (!customer) {\n      return;\n    }\n    if (isSocialLogin && shouldAddPassword) {\n      await accountController.resetPassword(customer.email, '');\n      return navigate(modalURLFromLocation(location, 'add-password'));\n    }\n\n    navigate(modalURLFromLocation(location, canChangePasswordWithOldPassword ? 'edit-password' : 'reset-password'));\n  };\n\n  return (\n    <>\n      <h1 className=\"hideUntilFocus\">{t('nav.account')}</h1>\n\n      <Form initialValues={initialValues}>\n        {[\n          formSection({\n            label: t('account.about_you'),\n            editButton: t('account.edit_information'),\n            onSubmit: async (values) => {\n              const consents = formatConsentsFromValues(publisherConsents, { ...values.metadata, ...values.consentsValues });\n\n              const response = await accountController.updateUser({\n                firstName: values.firstName || '',\n                lastName: values.lastName || '',\n                metadata: {\n                  ...values.metadata,\n                  ...formatConsentsToRegisterFields(consents),\n                  consents: JSON.stringify(consents),\n                },\n              });\n\n              announce(t('account.update_success', { section: t('account.about_you') }), 'success');\n\n              return response;\n            },\n            content: (section) => (\n              <>\n                <TextField\n                  name=\"firstName\"\n                  label={t('account.firstname')}\n                  value={section.values.firstName || ''}\n                  onChange={section.onChange}\n                  error={!!section.errors?.firstName}\n                  helperText={section.errors?.firstName}\n                  disabled={section.isBusy}\n                  editing={section.isEditing}\n                  autoComplete=\"given-name\"\n                  lang={htmlLang}\n                />\n                <TextField\n                  name=\"lastName\"\n                  label={t('account.lastname')}\n                  value={section.values.lastName || ''}\n                  onChange={section.onChange}\n                  error={!!section.errors?.lastName}\n                  helperText={section.errors?.lastName}\n                  disabled={section.isBusy}\n                  editing={section.isEditing}\n                  autoComplete=\"family-name\"\n                  lang={htmlLang}\n                />\n              </>\n            ),\n          }),\n          formSection({\n            label: t('account.email'),\n            onSubmit: async (values) => {\n              if (!values.email || !values.confirmationPassword) {\n                throw new Error('Wrong email/password combination');\n              }\n              const response = await accountController.updateUser({\n                email: values.email || '',\n                confirmationPassword: values.confirmationPassword,\n              });\n\n              announce(t('account.update_success', { section: t('account.email') }), 'success');\n\n              return response;\n            },\n            editButton: t('account.edit_account'),\n            readOnly: !canUpdateEmail,\n            content: (section) => (\n              <>\n                <TextField\n                  name=\"email\"\n                  label={t('account.email')}\n                  value={section.values.email || ''}\n                  onChange={section.onChange}\n                  error={!!section.errors?.email}\n                  helperText={section.errors?.email}\n                  disabled={section.isBusy}\n                  editing={section.isEditing}\n                  autoComplete=\"email\"\n                  required\n                />\n                {section.isEditing && (\n                  <TextField\n                    name=\"confirmationPassword\"\n                    label={t('account.confirm_password')}\n                    value={section.values.confirmationPassword}\n                    onChange={section.onChange}\n                    error={!!section.errors?.confirmationPassword}\n                    helperText={section.errors?.confirmationPassword}\n                    type={viewPassword ? 'text' : 'password'}\n                    disabled={section.isBusy}\n                    autoComplete=\"current-password\"\n                    rightControl={\n                      <IconButton aria-label={t('account.view_password')} onClick={() => toggleViewPassword()} aria-pressed={viewPassword}>\n                        <Icon icon={viewPassword ? Visibility : VisibilityOff} />\n                      </IconButton>\n                    }\n                    required\n                  />\n                )}\n              </>\n            ),\n          }),\n          formSection({\n            label: t('account.security'),\n            editButton: (\n              <Button\n                label={shouldAddPassword ? t('account.add_password') : t('account.edit_password')}\n                type=\"button\"\n                onClick={() => (customer ? editPasswordClickHandler() : null)}\n              />\n            ),\n          }),\n          formSection({\n            label: t('account.terms_and_tracking'),\n            saveButton: t('account.update_consents'),\n            onSubmit: async (values) => {\n              const response = await accountController.updateConsents(formatConsentsFromValues(publisherConsents, values.consentsValues));\n\n              announce(t('account.update_success', { section: t('account.terms_and_tracking') }), 'success');\n\n              return response;\n            },\n            content: (section) => (\n              <>\n                {termsConsents?.map((consent, index) => (\n                  <Checkbox\n                    key={index}\n                    name={`consentsValues.${consent.name}`}\n                    checked={isTruthyCustomParamValue(section.values.consentsValues?.[consent.name])}\n                    onChange={section.onChange}\n                    checkboxLabel={formatConsentLabel(consent.label)}\n                    disabled={consent.required || section.isBusy}\n                    required={consent.required}\n                    lang={htmlLang}\n                  />\n                ))}\n              </>\n            ),\n          }),\n          nonTermsConsents?.length &&\n            formSection({\n              label: t('account.other_registration_details'),\n              saveButton: t('account.update_consents'),\n              onSubmit: (values) => accountController.updateConsents(formatConsentsFromValues(publisherConsents, values.consentsValues)),\n              content: (section) => (\n                <div className={styles.customFields} data-testid={testId('custom-reg-fields')}>\n                  {nonTermsConsents.map((consent) => (\n                    <CustomRegisterField\n                      key={consent.name}\n                      type={consent.type}\n                      name={`consentsValues.${consent.name}`}\n                      options={consent.options}\n                      label={formatConsentLabel(consent.label)}\n                      placeholder={consent.placeholder}\n                      value={section.values.consentsValues[consent.name]}\n                      disabled={(consent.type === 'checkbox' && consent.required) || section.isBusy}\n                      onChange={section.onChange}\n                      required={consent.required}\n                    />\n                  ))}\n                </div>\n              ),\n            }),\n          canExportAccountData &&\n            formSection({\n              label: t('account.export_data_title'),\n              content: (section) => (\n                <div className={styles.textWithButtonContainer}>\n                  <div>\n                    <Trans t={t} i18nKey=\"account.export_data_body\" values={{ email: section.values.email }} />\n                  </div>\n                  <div>\n                    <Button\n                      label={t('account.export_data_title')}\n                      type=\"button\"\n                      disabled={exportData.isLoading}\n                      onClick={async () => {\n                        exportData.mutate();\n                      }}\n                    />\n                  </div>\n                </div>\n              ),\n            }),\n          canDeleteAccount &&\n            formSection({\n              label: t('account.delete_account.title'),\n              content: () => (\n                <div className={styles.textWithButtonContainer}>\n                  <div>{t('account.delete_account.body')}</div>\n                  <div>\n                    <Button\n                      label={t('account.delete_account.title')}\n                      type=\"button\"\n                      variant=\"danger\"\n                      onClick={() => {\n                        navigate(modalURLFromLocation(location, shouldAddPassword ? 'warning-account-deletion' : 'delete-account'));\n                      }}\n                    />\n                  </div>\n                </div>\n              ),\n            }),\n        ].filter(isTruthy)}\n      </Form>\n      {canExportAccountData && (\n        <Alert open={isAlertVisible} message={exportDataMessage} onClose={() => setIsAlertVisible(false)} isSuccess={exportData.isSuccess} />\n      )}\n    </>\n  );\n};\n\nexport default Account;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport type { AccessModel } from '@jwp/ott-common/types/config';\nimport type { Playlist, PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { mediaURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport { Breakpoint, type Breakpoints } from '@jwp/ott-ui-react/src/hooks/useBreakpoint';\n\nimport Button from '../Button/Button';\nimport CardGrid from '../CardGrid/CardGrid';\n\nimport styles from './Favorites.module.scss';\n\ntype Props = {\n  playlist: Playlist;\n  accessModel: AccessModel;\n  hasSubscription: boolean;\n  onCardHover?: (item: PlaylistItem) => void;\n  onClearFavoritesClick: () => void;\n};\n\nconst cols: Breakpoints = {\n  [Breakpoint.xs]: 2,\n  [Breakpoint.sm]: 3,\n  [Breakpoint.md]: 3,\n  [Breakpoint.lg]: 3,\n  [Breakpoint.xl]: 3,\n};\n\nconst Favorites = ({ playlist, accessModel, hasSubscription, onCardHover, onClearFavoritesClick }: Props): JSX.Element => {\n  const { t } = useTranslation('user');\n  const getURL = (playlistItem: PlaylistItem) => mediaURL({ id: playlistItem.mediaid, title: playlistItem.title, playlistId: playlistItem.feedid });\n\n  return (\n    <div>\n      <div className={styles.header}>\n        <h1>{t('favorites.title')}</h1>\n        {playlist.playlist.length > 0 ? <Button label={t('favorites.clear')} onClick={onClearFavoritesClick} /> : null}\n      </div>\n      {playlist.playlist.length > 0 ? (\n        <CardGrid\n          getUrl={getURL}\n          playlist={playlist}\n          onCardHover={onCardHover}\n          cols={cols}\n          isLoading={false}\n          accessModel={accessModel}\n          isLoggedIn={true}\n          hasSubscription={hasSubscription}\n        />\n      ) : (\n        <p>{t('favorites.no_favorites')}</p>\n      )}\n    </div>\n  );\n};\n\nexport default Favorites;\n","import { useMutation } from 'react-query';\nimport type { Customer } from '@jwp/ott-common/types/account';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport CheckoutController from '@jwp/ott-common/src/controllers/CheckoutController';\n\nexport const useSubscriptionChange = (\n  isUpgradeOffer: boolean,\n  selectedOfferId: string | null,\n  customer: Customer | null,\n  activeSubscriptionId: string | number | undefined,\n) => {\n  const accountController = getModule(AccountController);\n  const checkoutController = getModule(CheckoutController);\n\n  const updateSubscriptionMetadata = useMutation(accountController.updateUser, {\n    onSuccess: () => {\n      useAccountStore.setState({\n        loading: false,\n      });\n    },\n  });\n\n  return useMutation(checkoutController.changeSubscription, {\n    onSuccess: () => {\n      if (!isUpgradeOffer && selectedOfferId) {\n        updateSubscriptionMetadata.mutate({\n          firstName: customer?.firstName || '',\n          lastName: customer?.lastName || '',\n          metadata: {\n            [`${activeSubscriptionId}_pending_downgrade`]: selectedOfferId,\n          },\n        });\n      }\n    },\n  });\n};\n","import * as React from \"react\";\nconst SvgExternalLink = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M14,3V5H17.59L7.76,14.83L9.17,16.24L19,6.41V10H21V3M19,19H5V5H12V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19Z\" }));\nexport default SvgExternalLink;\n","import classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport type { Offer } from '@jwp/ott-common/types/checkout';\nimport { formatLocalizedDate, formatPrice } from '@jwp/ott-common/src/utils/formatting';\n\nimport Checkbox from '../form-fields/Checkbox/Checkbox';\n\nimport styles from './OfferSwitch.module.scss';\n\ntype OfferSwitchProps = {\n  isCurrentOffer: boolean;\n  pendingDowngradeOfferId: string;\n  offer: Offer;\n  selected: boolean;\n  onChange: (offerId: string) => void;\n  expiresAt: number | undefined;\n};\n\nconst OfferSwitch = ({ isCurrentOffer, pendingDowngradeOfferId, offer, selected, onChange, expiresAt }: OfferSwitchProps) => {\n  const { t, i18n } = useTranslation(['user', 'account']);\n  const { customerPriceInclTax, customerCurrency, period } = offer;\n\n  const isPendingDowngrade = pendingDowngradeOfferId === offer.offerId;\n\n  return (\n    <div className={classNames(styles.offerSwitchContainer, { [styles.activeOfferSwitchContainer]: selected })}>\n      <Checkbox disabled={isPendingDowngrade} name={offer.offerId} checked={selected} onChange={() => onChange(offer.offerId)} />\n      <div className={styles.offerSwitchInfoContainer}>\n        {(isCurrentOffer || isPendingDowngrade) && (\n          <div className={classNames(styles.currentPlanHeading, { [styles.activeCurrentPlanHeading]: selected })}>\n            {isCurrentOffer && t('user:payment.current_plan').toUpperCase()}\n            {isPendingDowngrade && t('user:payment.pending_downgrade').toUpperCase()}\n          </div>\n        )}\n        <div className={styles.offerSwitchPlanContainer}>\n          <div>{t(`user:payment.${period === 'month' ? 'monthly' : 'annual'}_subscription`)}</div>\n          {(isCurrentOffer || isPendingDowngrade) && expiresAt && (\n            <div className={styles.nextBillingDate}>\n              {isCurrentOffer &&\n                !pendingDowngradeOfferId &&\n                t('user:payment.next_billing_date_on', { date: formatLocalizedDate(new Date(expiresAt * 1000), i18n.language) })}\n              {isPendingDowngrade && t('user:payment.downgrade_on', { date: formatLocalizedDate(new Date(expiresAt * 1000), i18n.language) })}\n            </div>\n          )}\n        </div>\n      </div>\n      <div className={styles.price}>\n        {formatPrice(customerPriceInclTax, customerCurrency, undefined)}\n        <span className={styles.paymentFrequency}>/{t(`account:periods.${period}_one`)}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default OfferSwitch;\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport type { AccessModel } from '@jwp/ott-common/types/config';\nimport type { Customer } from '@jwp/ott-common/types/account';\nimport type { Offer } from '@jwp/ott-common/types/checkout';\nimport type { PaymentDetail, Subscription, Transaction } from '@jwp/ott-common/types/subscription';\nimport { formatLocalizedDate, formatPrice } from '@jwp/ott-common/src/utils/formatting';\nimport { ACCESS_MODEL } from '@jwp/ott-common/src/constants';\nimport ExternalLink from '@jwp/ott-theme/assets/icons/external_link.svg?react';\nimport PayPal from '@jwp/ott-theme/assets/icons/paypal.svg?react';\nimport useBreakpoint, { Breakpoint } from '@jwp/ott-ui-react/src/hooks/useBreakpoint';\nimport useOpaqueId from '@jwp/ott-hooks-react/src/useOpaqueId';\nimport classNames from 'classnames';\n\nimport IconButton from '../IconButton/IconButton';\nimport Alert from '../Alert/Alert';\nimport Button from '../Button/Button';\nimport LoadingOverlay from '../LoadingOverlay/LoadingOverlay';\nimport OfferSwitch from '../OfferSwitch/OfferSwitch';\nimport TextField from '../form-fields/TextField/TextField';\nimport Icon from '../Icon/Icon';\nimport Link from '../Link/Link';\nimport { modalURLFromLocation } from '../../utils/location';\n\nimport styles from './Payment.module.scss';\n\nconst VISIBLE_TRANSACTIONS = 4;\n\ntype Props = {\n  accessModel: AccessModel;\n  activeSubscription: Subscription | null;\n  activePaymentDetail: PaymentDetail | null;\n  transactions: Transaction[] | null;\n  customer: Customer;\n  pendingOffer: Offer | null;\n  isLoading: boolean;\n  offerSwitchesAvailable: boolean;\n  onShowReceiptClick: (transactionId: string) => void;\n  panelClassName?: string;\n  panelHeaderClassName?: string;\n  onShowAllTransactionsClick?: () => void;\n  onUpgradeSubscriptionClick?: () => void;\n  showAllTransactions: boolean;\n  canUpdatePaymentMethod: boolean;\n  canRenewSubscription?: boolean;\n  canShowReceipts?: boolean;\n  offers?: Offer[];\n  pendingDowngradeOfferId?: string;\n  changeSubscriptionPlan: {\n    isLoading: boolean;\n    isError: boolean;\n    isSuccess: boolean;\n    reset: () => void;\n  };\n  onChangePlanClick: () => void;\n  selectedOfferId: string | null;\n  setSelectedOfferId: (offerId: string | null) => void;\n  isUpgradeOffer: boolean | undefined;\n  setIsUpgradeOffer: (isUpgradeOffer: boolean | undefined) => void;\n  isExternalPaymentProvider: boolean;\n  paymentProvider?: string;\n  paymentProviderLink?: string;\n};\n\nconst Payment = ({\n  accessModel,\n  activePaymentDetail,\n  activeSubscription,\n  pendingOffer,\n  transactions,\n  customer,\n  isLoading,\n  panelClassName,\n  panelHeaderClassName,\n  onShowAllTransactionsClick,\n  showAllTransactions,\n  onShowReceiptClick,\n  canRenewSubscription = false,\n  canShowReceipts = false,\n  canUpdatePaymentMethod,\n  onUpgradeSubscriptionClick,\n  offerSwitchesAvailable,\n  offers = [],\n  pendingDowngradeOfferId = '',\n  changeSubscriptionPlan,\n  onChangePlanClick,\n  selectedOfferId,\n  setSelectedOfferId,\n  isUpgradeOffer,\n  setIsUpgradeOffer,\n  isExternalPaymentProvider,\n  paymentProvider,\n  paymentProviderLink,\n}: Props): JSX.Element => {\n  const subscriptionDetailsId = useOpaqueId('subscription-details');\n  const paymentMethodId = useOpaqueId('payment-method');\n  const billingHistoryId = useOpaqueId('billing-history');\n  const { t, i18n } = useTranslation(['user', 'account']);\n  const hiddenTransactionsCount = transactions ? transactions?.length - VISIBLE_TRANSACTIONS : 0;\n  const hasMoreTransactions = hiddenTransactionsCount > 0;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const isGrantedSubscription = activeSubscription?.period === 'granted';\n  const breakpoint = useBreakpoint();\n  const isMobile = breakpoint === Breakpoint.xs;\n\n  const [isChangingOffer, setIsChangingOffer] = useState(false);\n\n  useEffect(() => {\n    if (!isChangingOffer) {\n      setSelectedOfferId(activeSubscription?.accessFeeId ?? null);\n    }\n  }, [activeSubscription, isChangingOffer, setSelectedOfferId]);\n\n  useEffect(() => {\n    setIsChangingOffer(false);\n  }, [activeSubscription?.status, activeSubscription?.pendingSwitchId]);\n\n  useEffect(() => {\n    if (selectedOfferId && offers) {\n      setIsUpgradeOffer(\n        (offers.find((offer) => offer.offerId === selectedOfferId)?.customerPriceInclTax ?? 0) >\n          (offers.find((offer) => offer.offerId === activeSubscription?.accessFeeId)?.customerPriceInclTax ?? 0),\n      );\n    }\n  }, [selectedOfferId, offers, activeSubscription, setIsUpgradeOffer]);\n\n  function onCompleteSubscriptionClick() {\n    navigate(modalURLFromLocation(location, 'choose-offer'));\n  }\n\n  function onEditCardDetailsClick() {\n    navigate(modalURLFromLocation(location, 'edit-card'));\n  }\n\n  function onCancelSubscriptionClick() {\n    navigate(modalURLFromLocation(location, 'unsubscribe'));\n  }\n\n  function onRenewSubscriptionClick() {\n    navigate(modalURLFromLocation(location, 'renew-subscription'));\n  }\n\n  function getTitle(period: Subscription['period']) {\n    switch (period) {\n      case 'month':\n        return t('user:payment.monthly_subscription');\n      case 'year':\n        return t('user:payment.annual_subscription');\n      case 'day':\n        return t('user:payment.daily_subscription');\n      case 'week':\n        return t('user:payment.weekly_subscription');\n      case 'granted':\n        return t('user:payment.granted_subscription');\n      default:\n        return t('user:payment.other');\n    }\n  }\n\n  const showChangeSubscriptionButton = (!isExternalPaymentProvider && offerSwitchesAvailable) || (!isChangingOffer && !canRenewSubscription);\n\n  return (\n    <>\n      <Alert\n        isSuccess={!changeSubscriptionPlan.isError}\n        message={\n          !changeSubscriptionPlan.isError\n            ? isUpgradeOffer\n              ? t('user:payment.upgrade_plan_success')\n              : t('user:payment.downgrade_plan_success', {\n                  date: activeSubscription?.expiresAt && formatLocalizedDate(new Date(activeSubscription.expiresAt * 1000), i18n.language),\n                })\n            : t('user:payment.change_plan_error')\n        }\n        open={isChangingOffer && (changeSubscriptionPlan.isSuccess || changeSubscriptionPlan.isError)}\n        onClose={() => {\n          changeSubscriptionPlan.reset();\n          setIsChangingOffer(false);\n        }}\n      />\n      <h1 className=\"hideUntilFocus\">{t('nav.payments')}</h1>\n      {accessModel === ACCESS_MODEL.SVOD && (\n        <section aria-labelledby={subscriptionDetailsId} className={panelClassName}>\n          <div className={panelHeaderClassName}>\n            <h2 id={subscriptionDetailsId}>{isChangingOffer ? t('user:payment.change_plan') : t('user:payment.subscription_details')}</h2>\n          </div>\n          {activeSubscription ? (\n            <React.Fragment>\n              {!isChangingOffer && (\n                <div className={styles.infoBox} key={activeSubscription.subscriptionId}>\n                  <p>\n                    <strong>{getTitle(activeSubscription.period)}</strong> <br />\n                    {activeSubscription.status === 'active' && !isGrantedSubscription && !pendingDowngradeOfferId\n                      ? t('user:payment.next_billing_date_on', { date: formatLocalizedDate(new Date(activeSubscription.expiresAt * 1000), i18n.language) })\n                      : t('user:payment.subscription_expires_on', { date: formatLocalizedDate(new Date(activeSubscription.expiresAt * 1000), i18n.language) })}\n                    {(pendingOffer || pendingDowngradeOfferId) && activeSubscription.status !== 'cancelled' && (\n                      <span className={styles.pendingSwitch}>\n                        {t('user:payment.pending_offer_switch', {\n                          title: getTitle(pendingOffer?.period || offers.find((offer) => offer.offerId === pendingDowngradeOfferId)?.period || 'month'),\n                        })}\n                      </span>\n                    )}\n                  </p>\n                  {!isGrantedSubscription && (\n                    <p className={styles.price}>\n                      <strong>{formatPrice(activeSubscription.nextPaymentPrice, activeSubscription.nextPaymentCurrency, customer.country)}</strong>\n                      <small>/{t(`account:periods.${activeSubscription.period}`)}</small>\n                    </p>\n                  )}\n                </div>\n              )}\n              {isExternalPaymentProvider ? (\n                <p className={styles.explanation}>\n                  {t('account:external_payment.explanation', { paymentProvider })}{' '}\n                  <Link href={paymentProviderLink} target=\"_blank\">\n                    {t('account:external_payment.manage_subscription')}\n                  </Link>\n                </p>\n              ) : (\n                showChangeSubscriptionButton && (\n                  <Button\n                    className={styles.upgradeSubscription}\n                    label={t('user:payment.change_subscription')}\n                    disabled={!canRenewSubscription && activeSubscription.status === 'cancelled'}\n                    onClick={() => {\n                      if (offers.length > 1 && !canRenewSubscription) {\n                        setIsChangingOffer(true);\n                      } else {\n                        onUpgradeSubscriptionClick?.();\n                      }\n                    }}\n                    fullWidth={isMobile}\n                    color=\"primary\"\n                    data-testid=\"change-subscription-button\"\n                  />\n                )\n              )}\n              {(activeSubscription.status === 'active' || activeSubscription.status === 'active_trial') &&\n              !isGrantedSubscription &&\n              !isChangingOffer &&\n              canRenewSubscription ? (\n                <Button\n                  label={t('user:payment.cancel_subscription')}\n                  onClick={onCancelSubscriptionClick}\n                  fullWidth={isMobile}\n                  data-testid=\"cancel-subscription-button\"\n                />\n              ) : canRenewSubscription ? (\n                <Button label={t('user:payment.renew_subscription')} onClick={onRenewSubscriptionClick} />\n              ) : null}\n            </React.Fragment>\n          ) : isLoading ? null : (\n            <React.Fragment>\n              <p>{t('user:payment.no_subscription')}</p>\n              <Button variant=\"contained\" color=\"primary\" label={t('user:payment.complete_subscription')} onClick={onCompleteSubscriptionClick} />\n            </React.Fragment>\n          )}\n          {isChangingOffer && (\n            <div className={styles.changePlanContainer}>\n              {offers\n                .filter((o) => o.planSwitchEnabled)\n                .map((offer) => (\n                  <OfferSwitch\n                    key={offer.offerId}\n                    isCurrentOffer={offer.offerId === activeSubscription?.accessFeeId}\n                    pendingDowngradeOfferId={pendingDowngradeOfferId}\n                    offer={offer}\n                    selected={selectedOfferId === offer.offerId}\n                    onChange={(offerId) => setSelectedOfferId(offerId)}\n                    expiresAt={activeSubscription?.expiresAt}\n                  />\n                ))}\n              <div className={styles.changePlanButtons}>\n                <Button\n                  label={t('user:account.save')}\n                  onClick={onChangePlanClick}\n                  disabled={selectedOfferId === activeSubscription?.accessFeeId || changeSubscriptionPlan.isLoading}\n                />\n                <Button label={t('user:account.cancel')} onClick={() => setIsChangingOffer(false)} variant=\"text\" />\n                {activeSubscription?.status !== 'cancelled' && (\n                  <Button\n                    className={styles.changePlanCancelButton}\n                    label={t('user:payment.cancel_subscription')}\n                    onClick={onCancelSubscriptionClick}\n                    variant=\"danger\"\n                    data-testid=\"cancel-subscription-button\"\n                  />\n                )}\n              </div>\n            </div>\n          )}\n        </section>\n      )}\n      <section aria-labelledby={paymentMethodId} className={panelClassName}>\n        <div className={panelHeaderClassName}>\n          <h2 id={paymentMethodId}>{t('user:payment.payment_method')}</h2>\n        </div>\n        {activePaymentDetail ? (\n          activePaymentDetail.paymentMethod === 'paypal' ? (\n            <div>\n              <div className={styles.paypal}>\n                <Icon icon={PayPal} /> {t('account:payment.paypal')}\n              </div>\n\n              {activePaymentDetail.currency}\n            </div>\n          ) : (\n            <div key={activePaymentDetail.id}>\n              <TextField\n                label={t('user:payment.card_number')}\n                name=\"cardNumber\"\n                value={`•••• •••• •••• ${activePaymentDetail.paymentMethodSpecificParams.lastCardFourDigits || ''}`}\n                aria-label={t('user:payment.card_number_hidden', { number: activePaymentDetail.paymentMethodSpecificParams.lastCardFourDigits })}\n                editing={false}\n                autoComplete=\"cc-number\"\n              />\n              <div className={styles.cardDetails}>\n                <TextField\n                  label={t('user:payment.expiry_date')}\n                  name=\"cardExpiry\"\n                  value={activePaymentDetail.paymentMethodSpecificParams.cardExpirationDate}\n                  editing={false}\n                  autoComplete=\"cc-exp\"\n                />\n                <TextField\n                  label={t('user:payment.security_code')}\n                  name=\"cardSecurityCode\"\n                  value={'******'}\n                  editing={false}\n                  aria-label={t('user:payment.security_code_hidden')}\n                  autoComplete=\"cc-csc\"\n                />\n              </div>\n              <Button\n                className={classNames({ [styles.editCard]: canUpdatePaymentMethod })}\n                label={t('account:payment.edit_card')}\n                variant=\"outlined\"\n                onClick={onEditCardDetailsClick}\n              />\n            </div>\n          )\n        ) : (\n          <div>\n            <p>{!isLoading && t('user:payment.no_payment_methods')}</p>\n          </div>\n        )}\n        {canUpdatePaymentMethod && (\n          <Button label={t('user:payment.update_payment_details')} type=\"button\" onClick={() => navigate(modalURLFromLocation(location, 'payment-method'))} />\n        )}\n      </section>\n      <section aria-labelledby={billingHistoryId} className={panelClassName}>\n        <div className={panelHeaderClassName}>\n          <h2 id={billingHistoryId}>{t('user:payment.billing_history')}</h2>\n        </div>\n        {transactions?.length ? (\n          <React.Fragment>\n            {transactions?.slice(0, showAllTransactions ? 9999 : VISIBLE_TRANSACTIONS).map((transaction) => (\n              <div className={styles.infoBox} key={transaction.transactionId}>\n                <p className={styles.transactionItem}>\n                  <strong>{formatLocalizedDate(new Date(transaction.transactionDate * 1000), i18n.language)}</strong>\n                  <span>{transaction.offerTitle}</span>\n                  <span>{transaction.transactionId}</span>\n                </p>\n                <div className={styles.transactionDetails}>\n                  <div className={styles.transactionPrice}>\n                    {!isGrantedSubscription &&\n                      t('user:payment.price_paid_with', {\n                        price: formatPrice(parseFloat(transaction.transactionPriceInclTax), transaction.transactionCurrency, transaction.customerCountry),\n                        method: transaction.paymentMethod,\n                      })}\n                  </div>\n                  {canShowReceipts && (\n                    <IconButton\n                      aria-label={t('user:payment.show_receipt')}\n                      // JW integration specific: uses `trxToken` as the unique identifier for each transaction\n                      // Note: `transactionId` is shared with rebills and is not guaranteed to be unique\n                      onClick={() => !isLoading && onShowReceiptClick(transaction?.trxToken ?? transaction.transactionId)}\n                    >\n                      <Icon icon={ExternalLink} />\n                    </IconButton>\n                  )}\n                </div>\n              </div>\n            ))}\n            {!showAllTransactions && hasMoreTransactions ? (\n              <React.Fragment>\n                <p>{t('user:payment.hidden_transactions', { count: hiddenTransactionsCount })}</p>\n                <Button label={t('user:payment.show_all')} onClick={onShowAllTransactionsClick} />\n              </React.Fragment>\n            ) : null}\n          </React.Fragment>\n        ) : (\n          <div>\n            <p>{!isLoading && t('user:payment.no_transactions')}</p>\n          </div>\n        )}\n      </section>\n      {isLoading && <LoadingOverlay inline />}\n    </>\n  );\n};\n\nexport default Payment;\n","import { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport useOffers from '@jwp/ott-hooks-react/src/useOffers';\nimport { useSubscriptionChange } from '@jwp/ott-hooks-react/src/useSubscriptionChange';\n\nimport styles from '../../pages/User/User.module.scss';\nimport LoadingOverlay from '../../components/LoadingOverlay/LoadingOverlay';\nimport Payment from '../../components/Payment/Payment';\nimport { modalURLFromLocation } from '../../utils/location';\n\n/**\n * Handles billing receipts by either downloading the receipt directly if it is an instance of Blob,\n * or opening it in a new window if it is a string representation.\n *\n * @param {Blob | string} receipt - The billing receipt data. If a Blob, it will be downloaded; if a string,\n * it will be treated as an HTML representation and opened in a new window.\n * @param {string} transactionId - The unique identifier for the transaction associated with the receipt.\n *\n * @returns {void}\n *\n */\nconst processBillingReceipt = (receipt: Blob | string, transactionId: string) => {\n  if (receipt instanceof Blob) {\n    const url = window.URL.createObjectURL(new Blob([receipt]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', `receipt_${transactionId}.pdf`);\n    document.body.appendChild(link);\n    link.click();\n  } else {\n    const newWindow = window.open('', `Receipt ${transactionId}`, '');\n    const htmlString = window.atob(receipt as unknown as string);\n\n    if (newWindow) {\n      newWindow.opener = null;\n      newWindow.document.write(htmlString);\n      newWindow.document.close();\n    }\n  }\n};\n\nconst EXTERNAL_PAYMENT_METHODS = ['Apple In-App', 'Google In-App', 'Roku In-App'];\nconst STORE_LINKS: Record<string, string> = {\n  apple: 'https://support.apple.com/118428',\n  google: 'https://support.google.com/googleplay/answer/7018481',\n  roku: 'https://support.roku.com/article/208756478',\n};\n\nconst PaymentContainer = () => {\n  const accountController = getModule(AccountController);\n\n  const navigate = useNavigate();\n\n  const { accessModel } = useConfigStore(({ accessModel }) => ({ accessModel }), shallow);\n  const { user: customer, subscription: activeSubscription, transactions, activePayment, pendingOffer, loading } = useAccountStore();\n  const { canUpdatePaymentMethod, canShowReceipts, canRenewSubscription } = accountController.getFeatures();\n  const { subscriptionOffers, switchSubscriptionOffers } = useOffers();\n\n  const [showAllTransactions, setShowAllTransactions] = useState(false);\n  const [isLoadingReceipt, setIsLoadingReceipt] = useState(false);\n  const [selectedOfferId, setSelectedOfferId] = useState<string | null>(activeSubscription?.accessFeeId ?? null);\n  const [isUpgradeOffer, setIsUpgradeOffer] = useState<boolean | undefined>(undefined);\n\n  const location = useLocation();\n\n  const handleUpgradeSubscriptionClick = async () => navigate(modalURLFromLocation(location, 'upgrade-subscription'));\n\n  const handleShowReceiptClick = async (transactionId: string) => {\n    setIsLoadingReceipt(true);\n\n    try {\n      const receipt = await accountController.getReceipt(transactionId);\n      if (receipt) {\n        processBillingReceipt(receipt, transactionId);\n      }\n    } catch (error: unknown) {\n      throw new Error(\"Couldn't parse receipt. \" + (error instanceof Error ? error.message : ''));\n    }\n\n    setIsLoadingReceipt(false);\n  };\n\n  const changeSubscriptionPlan = useSubscriptionChange(isUpgradeOffer ?? false, selectedOfferId, customer, activeSubscription?.subscriptionId);\n\n  const onChangePlanClick = async () => {\n    if (selectedOfferId && activeSubscription?.subscriptionId) {\n      changeSubscriptionPlan.mutate({\n        accessFeeId: selectedOfferId.slice(1),\n        subscriptionId: `${activeSubscription.subscriptionId}`,\n      });\n    }\n  };\n\n  if (!customer) {\n    return <LoadingOverlay />;\n  }\n\n  const pendingDowngradeOfferId = (customer.metadata?.[`${activeSubscription?.subscriptionId}_pending_downgrade`] as string) || '';\n  const isExternalPaymentProvider = !!activeSubscription && EXTERNAL_PAYMENT_METHODS.includes(activeSubscription.paymentMethod);\n  const paymentProvider = activeSubscription?.paymentMethod.split(' ')[0] || 'unknown';\n  const paymentProviderLink = STORE_LINKS[paymentProvider.toLowerCase()];\n\n  return (\n    <Payment\n      accessModel={accessModel}\n      activeSubscription={activeSubscription}\n      activePaymentDetail={activePayment}\n      transactions={transactions}\n      customer={customer}\n      pendingOffer={pendingOffer}\n      isLoading={loading || isLoadingReceipt}\n      panelClassName={styles.panel}\n      panelHeaderClassName={styles.panelHeader}\n      onShowAllTransactionsClick={() => setShowAllTransactions(true)}\n      showAllTransactions={showAllTransactions}\n      canUpdatePaymentMethod={canUpdatePaymentMethod}\n      canRenewSubscription={canRenewSubscription}\n      onUpgradeSubscriptionClick={handleUpgradeSubscriptionClick}\n      offerSwitchesAvailable={switchSubscriptionOffers.length > 0}\n      canShowReceipts={canShowReceipts}\n      onShowReceiptClick={handleShowReceiptClick}\n      offers={subscriptionOffers}\n      pendingDowngradeOfferId={pendingDowngradeOfferId}\n      changeSubscriptionPlan={changeSubscriptionPlan}\n      onChangePlanClick={onChangePlanClick}\n      selectedOfferId={selectedOfferId}\n      setSelectedOfferId={(offerId: string | null) => setSelectedOfferId(offerId)}\n      isUpgradeOffer={isUpgradeOffer}\n      setIsUpgradeOffer={(isUpgradeOffer: boolean | undefined) => setIsUpgradeOffer(isUpgradeOffer)}\n      isExternalPaymentProvider={isExternalPaymentProvider}\n      paymentProvider={paymentProvider}\n      paymentProviderLink={paymentProviderLink}\n    />\n  );\n};\n\nexport default PaymentContainer;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport FavoritesController from '@jwp/ott-common/src/controllers/FavoritesController';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport { ACCESS_MODEL } from '@jwp/ott-common/src/constants';\nimport useBreakpoint, { Breakpoint } from '@jwp/ott-ui-react/src/hooks/useBreakpoint';\nimport AccountCircle from '@jwp/ott-theme/assets/icons/account_circle.svg?react';\nimport BalanceWallet from '@jwp/ott-theme/assets/icons/balance_wallet.svg?react';\nimport Exit from '@jwp/ott-theme/assets/icons/exit.svg?react';\nimport Favorite from '@jwp/ott-theme/assets/icons/favorite.svg?react';\nimport { RELATIVE_PATH_USER_ACCOUNT, RELATIVE_PATH_USER_FAVORITES, RELATIVE_PATH_USER_PAYMENTS } from '@jwp/ott-common/src/paths';\nimport { useFavoritesStore } from '@jwp/ott-common/src/stores/FavoritesStore';\n\nimport AccountComponent from '../../components/Account/Account';\nimport Button from '../../components/Button/Button';\nimport ConfirmationDialog from '../../components/ConfirmationDialog/ConfirmationDialog';\nimport Favorites from '../../components/Favorites/Favorites';\nimport LoadingOverlay from '../../components/LoadingOverlay/LoadingOverlay';\nimport PaymentContainer from '../../containers/PaymentContainer/PaymentContainer';\nimport Icon from '../../components/Icon/Icon';\n\nimport styles from './User.module.scss';\n\nconst User = (): JSX.Element => {\n  const favoritesController = getModule(FavoritesController);\n  const accountController = getModule(AccountController);\n\n  const { accessModel, favoritesList } = useConfigStore(\n    (s) => ({\n      accessModel: s.accessModel,\n      favoritesList: s.config.features?.favoritesList,\n    }),\n    shallow,\n  );\n  const navigate = useNavigate();\n  const { t } = useTranslation('user');\n  const breakpoint = useBreakpoint();\n  const [clearFavoritesOpen, setClearFavoritesOpen] = useState(false);\n\n  const isLargeScreen = breakpoint > Breakpoint.md;\n  const { user: customer, subscription, loading } = useAccountStore();\n  const { canUpdateEmail } = accountController.getFeatures();\n  const favorites = useFavoritesStore((state) => state.getPlaylist());\n\n  const onLogout = useCallback(async () => {\n    // Empty customer on a user page leads to navigate (code bellow), so we don't repeat it here\n    await accountController.logout();\n  }, [accountController]);\n\n  useEffect(() => {\n    if (!loading && !customer) {\n      navigate('/', { replace: true });\n    }\n  }, [navigate, customer, loading]);\n\n  if (!customer) {\n    return (\n      <div className={styles.user}>\n        <LoadingOverlay inline />\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.user}>\n      {isLargeScreen && (\n        <nav className={styles.leftColumn}>\n          <div className={styles.panel}>\n            <ul>\n              <li>\n                <Button\n                  to={RELATIVE_PATH_USER_ACCOUNT}\n                  label={t('nav.account')}\n                  variant=\"text\"\n                  startIcon={<Icon icon={AccountCircle} />}\n                  className={styles.button}\n                />\n              </li>\n\n              {favoritesList && (\n                <li>\n                  <Button\n                    to={RELATIVE_PATH_USER_FAVORITES}\n                    label={t('nav.favorites')}\n                    variant=\"text\"\n                    startIcon={<Icon icon={Favorite} />}\n                    className={styles.button}\n                  />\n                </li>\n              )}\n\n              {accessModel !== ACCESS_MODEL.AVOD && (\n                <li>\n                  <Button\n                    to={RELATIVE_PATH_USER_PAYMENTS}\n                    label={t('nav.payments')}\n                    variant=\"text\"\n                    startIcon={<Icon icon={BalanceWallet} />}\n                    className={styles.button}\n                  />\n                </li>\n              )}\n\n              <li className={styles.logoutLi}>\n                <Button onClick={onLogout} label={t('nav.logout')} variant=\"text\" startIcon={<Icon icon={Exit} />} className={styles.button} />\n              </li>\n            </ul>\n          </div>\n        </nav>\n      )}\n      <div className={styles.mainColumn}>\n        <Routes>\n          <Route\n            path={RELATIVE_PATH_USER_ACCOUNT}\n            element={<AccountComponent panelClassName={styles.panel} panelHeaderClassName={styles.panelHeader} canUpdateEmail={canUpdateEmail} />}\n          />\n          {favoritesList && (\n            <Route\n              path={RELATIVE_PATH_USER_FAVORITES}\n              element={\n                <>\n                  <Favorites\n                    playlist={favorites}\n                    onClearFavoritesClick={() => setClearFavoritesOpen(true)}\n                    accessModel={accessModel}\n                    hasSubscription={!!subscription}\n                  />\n                  <ConfirmationDialog\n                    open={clearFavoritesOpen}\n                    title={t('favorites.clear_favorites_title')}\n                    body={t('favorites.clear_favorites_body')}\n                    onConfirm={async () => {\n                      await favoritesController.clear();\n                      setClearFavoritesOpen(false);\n                    }}\n                    onClose={() => setClearFavoritesOpen(false)}\n                  />\n                </>\n              }\n            />\n          )}\n          <Route\n            path={RELATIVE_PATH_USER_PAYMENTS}\n            element={accessModel !== ACCESS_MODEL.AVOD ? <PaymentContainer /> : <Navigate to={RELATIVE_PATH_USER_ACCOUNT} />}\n          />\n          <Route path=\"*\" element={<Navigate to={RELATIVE_PATH_USER_ACCOUNT} />} />\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default User;\n","import type { Playlist, PlaylistItem } from '../../types/playlist';\nimport type { DurationAbbreviation } from '../../types/i18n';\n\nimport { formatDuration, formatVideoSchedule } from './formatting';\n\nexport const createVideoMetadata = (media: PlaylistItem, i18n: DurationAbbreviation & { episodesLabel?: string }) => {\n  const metaData = [];\n  const duration = formatDuration(media.duration, i18n);\n\n  if (media.pubdate) metaData.push(String(new Date(media.pubdate * 1000).getFullYear()));\n  if (!i18n.episodesLabel && duration) metaData.push(duration);\n  if (i18n.episodesLabel) metaData.push(i18n.episodesLabel);\n  if (media.genre) metaData.push(media.genre);\n  if (media.rating) metaData.push(media.rating);\n\n  return metaData;\n};\nexport const createPlaylistMetadata = (playlist: Playlist, episodesLabel?: string) => {\n  const metaData = [];\n\n  if (episodesLabel) metaData.push(episodesLabel);\n  if (playlist.genre) metaData.push(playlist.genre as string);\n  if (playlist.rating) metaData.push(playlist.rating as string);\n\n  return metaData;\n};\nexport const createLiveEventMetadata = (media: PlaylistItem, locale: string, i18n: DurationAbbreviation) => {\n  const metaData = [];\n  const scheduled = formatVideoSchedule(locale, media.scheduledStart, media.scheduledEnd);\n  const duration = formatDuration(media.duration, i18n);\n\n  if (scheduled) metaData.push(scheduled);\n  if (duration) metaData.push(duration);\n  if (media.genre) metaData.push(media.genre);\n  if (media.rating) metaData.push(media.rating);\n\n  return metaData;\n};\n","import { useQuery, type UseBaseQueryResult } from 'react-query';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport ApiService from '@jwp/ott-common/src/services/ApiService';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { isScheduledOrLiveMedia } from '@jwp/ott-common/src/utils/liveEvent';\nimport { useTranslation } from 'react-i18next';\n\nexport type UseMediaResult<TData = PlaylistItem, TError = unknown> = UseBaseQueryResult<TData, TError>;\n\nexport default function useMedia(mediaId: string, enabled: boolean = true): UseMediaResult {\n  const apiService = getModule(ApiService);\n\n  // Determine currently selected language\n  const { i18n } = useTranslation();\n  const language = i18n.language;\n\n  return useQuery(['media', mediaId, language], () => apiService.getMediaById({ id: mediaId, language }), {\n    enabled: !!mediaId && enabled,\n    refetchInterval: (data, _) => {\n      if (!data) return false;\n\n      const autoRefetch = isScheduledOrLiveMedia(data);\n\n      return autoRefetch ? 1000 * 30 : false;\n    },\n    staleTime: 60 * 1000 * 10, // 10 min\n  });\n}\n","import * as React from \"react\";\nconst SvgPlayTrailer = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M19,19H5V5H19M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M10,8V16L15,12L10,8Z\" }));\nexport default SvgPlayTrailer;\n","import React, { type FC, Fragment } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useBreakpoint, { Breakpoint } from '@jwp/ott-ui-react/src/hooks/useBreakpoint';\n\nimport Select from '../Select/Select';\nimport Button from '../Button/Button';\n\nimport styles from './Filter.module.scss';\n\ntype FilterOption =\n  | {\n      label: string;\n      value: string;\n    }\n  | string;\n\ntype Props = {\n  name: string;\n  value: string;\n  defaultLabel: string;\n  options: FilterOption[];\n  forceDropdown?: boolean;\n  setValue: (value: string) => void;\n};\n\nconst Filter: FC<Props> = ({ name, value, defaultLabel, options, setValue, forceDropdown = false }) => {\n  const { t } = useTranslation('common');\n  const breakpoint: Breakpoint = useBreakpoint();\n\n  if (!options.length) {\n    return null;\n  }\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => setValue(event.target.value);\n\n  const showFilterRow = !forceDropdown && breakpoint >= Breakpoint.md && options.length < 6;\n\n  return (\n    <Fragment>\n      {showFilterRow ? (\n        <div className={styles.filterRow} role=\"listbox\" aria-label={t('filter_videos_by', { name })}>\n          {options.map((option) => {\n            const optionLabel = typeof option === 'string' ? option : option.label;\n            const optionValue = typeof option === 'string' ? option : option.value;\n            const active = value === optionValue;\n\n            return <Button label={optionLabel} onClick={() => setValue(optionValue)} key={optionValue} active={active} role=\"option\" aria-selected={active} />;\n          })}\n          <Button label={defaultLabel} onClick={() => setValue('')} active={value === ''} key={defaultLabel} role=\"option\" aria-selected={value === ''} />\n        </div>\n      ) : (\n        <div className={styles.filterDropDown}>\n          <Select\n            className={styles.dropDown}\n            size=\"small\"\n            options={options}\n            defaultLabel={defaultLabel}\n            name={name}\n            value={value}\n            onChange={handleChange}\n            aria-label={t('filter_videos_by', { name })}\n          />\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Filter;\n","import React, { useRef, type PropsWithChildren } from 'react';\n\nimport Image from '../Image/Image';\nimport { useScrolledDown } from '../../hooks/useScrolledDown';\nimport useBreakpoint, { Breakpoint } from '../../hooks/useBreakpoint';\n\nimport styles from './Hero.module.scss';\n\ntype Props = PropsWithChildren<{\n  image?: string;\n}>;\n\nconst Hero = ({ image, children }: Props) => {\n  const alt = ''; // intentionally empty for a11y, because adjacent text alternative\n  const posterRef = useRef<HTMLImageElement>(null);\n  const breakpoint = useBreakpoint();\n  const isMobile = breakpoint <= Breakpoint.sm;\n\n  useScrolledDown(50, isMobile ? 150 : 500, (progress: number) => {\n    if (posterRef.current) posterRef.current.style.opacity = `${Math.max(1 - progress, 0.1)}`;\n  });\n\n  return (\n    <div className={styles.hero}>\n      <Image ref={posterRef} className={styles.poster} image={image} width={1280} alt={alt} />\n      <div className={styles.posterFade} />\n      <div className={styles.info}>{children}</div>\n    </div>\n  );\n};\n\nexport default Hero;\n","import React from 'react';\n\nimport styles from './Hero.module.scss';\n\nconst HeroTitle = ({ title }: { title: string }) => {\n  return <h1 className={styles.title}>{title}</h1>;\n};\n\nexport default HeroTitle;\n","import classNames from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\nimport ChevronRight from '@jwp/ott-theme/assets/icons/chevron_right.svg?react';\n\nimport IconButton from '../IconButton/IconButton';\nimport Icon from '../Icon/Icon';\nimport useBreakpoint from '../../hooks/useBreakpoint';\nimport MarkdownComponent from '../MarkdownComponent/MarkdownComponent';\n\nimport styles from './CollapsibleText.module.scss';\n\ntype Props = {\n  text: string;\n  className?: string;\n};\n\nconst CollapsibleText: React.FC<Props> = ({ text, className }: Props) => {\n  const divRef = useRef<HTMLDivElement>() as React.MutableRefObject<HTMLDivElement>;\n  const breakpoint = useBreakpoint();\n  const [doesFlowOver, setDoesFlowOver] = useState(false);\n  const [expanded, setExpanded] = useState(false);\n\n  const ariaLabel = expanded ? 'Collapse' : 'Expand';\n\n  const clippablePixels = 4;\n  const maxHeight = 60;\n\n  useEffect(() => {\n    divRef.current && setDoesFlowOver(divRef.current.scrollHeight > divRef.current.offsetHeight + clippablePixels || maxHeight < divRef.current.offsetHeight);\n  }, [maxHeight, text, breakpoint]);\n\n  return (\n    <div className={classNames(styles.collapsibleText)}>\n      <p\n        ref={divRef}\n        id=\"collapsible-content\"\n        className={classNames(styles.textContainer, className, { [styles.collapsed]: !expanded && doesFlowOver })}\n        style={{ maxHeight: expanded ? divRef.current.scrollHeight : maxHeight }}\n      >\n        <MarkdownComponent tag=\"span\" markdownString={text} inline />\n      </p>\n      {doesFlowOver && (\n        <IconButton\n          aria-label={ariaLabel}\n          aria-expanded={expanded}\n          aria-controls=\"collapsible-content\"\n          className={classNames(styles.chevron, { [styles.expanded]: expanded })}\n          onClick={() => setExpanded(!expanded)}\n        >\n          <Icon icon={ChevronRight} />\n        </IconButton>\n      )}\n    </div>\n  );\n};\n\nexport default CollapsibleText;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport CollapsibleText from '../CollapsibleText/CollapsibleText';\nimport TruncatedText from '../TruncatedText/TruncatedText';\nimport useBreakpoint, { Breakpoint } from '../../hooks/useBreakpoint';\n\nimport styles from './Hero.module.scss';\n\nconst HeroDescription = ({ className, description, maximumLines = 8 }: { className?: string; description: string; maximumLines?: number }) => {\n  const breakpoint: Breakpoint = useBreakpoint();\n  const isMobile = breakpoint === Breakpoint.xs;\n\n  return isMobile ? (\n    <CollapsibleText text={description} className={classNames(styles.description, className)} />\n  ) : (\n    <TruncatedText text={description} maximumLines={maximumLines} className={classNames(styles.description, className)} />\n  );\n};\n\nexport default HeroDescription;\n","import React, { type PropsWithChildren } from 'react';\nimport { testId } from '@jwp/ott-common/src/utils/common';\n\nimport Hero from '../Hero/Hero';\nimport HeroTitle from '../Hero/HeroTitle';\nimport HeroDescription from '../Hero/HeroDescription';\n\nimport styles from './VideoDetails.module.scss';\n\ntype Props = PropsWithChildren<{\n  title: string;\n  description: string;\n  primaryMetadata: React.ReactNode;\n  secondaryMetadata?: React.ReactNode;\n  image?: string;\n  startWatchingButton: React.ReactNode;\n  shareButton: React.ReactNode;\n  favoriteButton?: React.ReactNode;\n  trailerButton?: React.ReactNode;\n}>;\n\nconst VideoDetails = ({\n  title,\n  description,\n  primaryMetadata,\n  secondaryMetadata,\n  image,\n  startWatchingButton,\n  shareButton,\n  favoriteButton,\n  trailerButton,\n  children,\n}: Props) => {\n  return (\n    <div data-testid={testId('cinema-layout')}>\n      <header className={styles.videoDetails} data-testid={testId('video-details')} id=\"video-details\">\n        <Hero image={image}>\n          <HeroTitle title={title} />\n          <div className={styles.metaContainer}>\n            <div className={styles.primaryMetadata}>{primaryMetadata}</div>\n            {secondaryMetadata && <div className={styles.secondaryMetadata}>{secondaryMetadata}</div>}\n          </div>\n          <HeroDescription className={styles.description} description={description} />\n          <div className={styles.buttonBar}>\n            {startWatchingButton}\n            {trailerButton}\n            {favoriteButton}\n            {shareButton}\n          </div>\n        </Hero>\n      </header>\n      {children}\n    </div>\n  );\n};\n\nexport default VideoDetails;\n","import React from 'react';\nimport { testId } from '@jwp/ott-common/src/utils/common';\nimport useBreakpoint, { Breakpoint } from '@jwp/ott-ui-react/src/hooks/useBreakpoint';\n\nimport CollapsibleText from '../CollapsibleText/CollapsibleText';\nimport MarkdownComponent from '../MarkdownComponent/MarkdownComponent';\n\nimport styles from './VideoDetailsInline.module.scss';\n\ntype Props = {\n  title: string | React.ReactNode;\n  description: string;\n  primaryMetadata: React.ReactNode;\n  shareButton: React.ReactNode;\n  favoriteButton: React.ReactNode;\n  trailerButton: React.ReactNode;\n  live?: boolean;\n};\n\nconst VideoDetailsInline: React.FC<Props> = ({ title, description, primaryMetadata, shareButton, favoriteButton, trailerButton }) => {\n  const breakpoint: Breakpoint = useBreakpoint();\n  const isMobile = breakpoint === Breakpoint.xs;\n\n  const TitleComponent = typeof title === 'string' ? 'h1' : 'div';\n\n  return (\n    <div className={styles.details} data-testid={testId('video-details-inline')}>\n      <TitleComponent className={styles.title}>{title}</TitleComponent>\n      <div className={styles.inlinePlayerMetadata}>\n        <div className={styles.primaryMetadata}>{primaryMetadata}</div>\n        <div className={styles.buttonBar}>\n          {trailerButton}\n          {favoriteButton}\n          {shareButton}\n        </div>\n      </div>\n      {isMobile ? (\n        <CollapsibleText text={description} className={styles.description} />\n      ) : (\n        <MarkdownComponent markdownString={description} className={styles.description} />\n      )}\n    </div>\n  );\n};\n\nexport default VideoDetailsInline;\n","import React, { memo, useState } from 'react';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { formatDurationTag, formatLocalizedDateTime, formatSeriesMetaString } from '@jwp/ott-common/src/utils/formatting';\nimport { isLiveChannel, isSeries } from '@jwp/ott-common/src/utils/media';\nimport { MediaStatus } from '@jwp/ott-common/src/utils/liveEvent';\nimport { testId } from '@jwp/ott-common/src/utils/common';\nimport Lock from '@jwp/ott-theme/assets/icons/lock.svg?react';\nimport Today from '@jwp/ott-theme/assets/icons/today.svg?react';\n\nimport Image from '../Image/Image';\nimport Icon from '../Icon/Icon';\n\nimport styles from './VideoListItem.module.scss';\n\ntype VideoListItemProps = {\n  onHover?: () => void;\n  item: PlaylistItem;\n  progress?: number;\n  loading?: boolean;\n  isActive?: boolean;\n  activeLabel?: string;\n  isLocked?: boolean;\n  url: string;\n};\n\nfunction VideoListItem({ onHover, progress, activeLabel, item, url, loading = false, isActive = false, isLocked = true }: VideoListItemProps): JSX.Element {\n  const { title, duration, seasonNumber, episodeNumber, cardImage: image, mediaStatus, scheduledStart } = item;\n\n  const {\n    t,\n    i18n: { language },\n  } = useTranslation('common');\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const posterImageClassNames = classNames(styles.posterImage, {\n    [styles.visible]: imageLoaded,\n  });\n\n  const isSeriesItem = isSeries(item);\n  const isLive = mediaStatus === MediaStatus.LIVE || isLiveChannel(item);\n  const isScheduled = mediaStatus === MediaStatus.SCHEDULED;\n\n  const renderTag = () => {\n    if (loading || !title) return null;\n\n    if (isSeriesItem) {\n      return <div className={styles.tag}>{t('video:series')}</div>;\n    } else if (episodeNumber) {\n      return <div className={styles.tag}>{formatSeriesMetaString(seasonNumber, episodeNumber)}</div>;\n    } else if (duration) {\n      return <div className={styles.tag}>{formatDurationTag(duration, { minutesAbbreviation: t('common:abbreviation.minutes') })}</div>;\n    } else if (isLive) {\n      return <div className={classNames(styles.tag, styles.live)}>{t('live')}</div>;\n    } else if (isScheduled) {\n      return (\n        <div className={styles.tag}>\n          <Icon icon={Today} className={styles.scheduled} />\n          {t('scheduled')}\n        </div>\n      );\n    }\n  };\n\n  return (\n    <Link role=\"button\" to={url} className={styles.listItem} onMouseEnter={onHover} tabIndex={0} data-testid={testId(title)}>\n      <div className={styles.titleContainer}>\n        <h3 className={styles.title}>{title}</h3>\n        {!!scheduledStart && <div className={styles.scheduledStart}>{formatLocalizedDateTime(scheduledStart, language)}</div>}\n      </div>\n      <div className={styles.poster}>\n        <Image className={posterImageClassNames} image={image} onLoad={() => setImageLoaded(true)} width={320} alt=\"\" />\n        <div className={styles.tags}>\n          {isLocked && (\n            <div className={classNames(styles.tag, styles.lock)} aria-label={t('card_lock')}>\n              <Icon icon={Lock} />\n            </div>\n          )}\n          {renderTag()}\n        </div>\n        {isActive && <div className={styles.activeLabel}>{activeLabel}</div>}\n        {progress ? (\n          <div className={styles.progressContainer}>\n            <div className={styles.progressBar} style={{ width: `${Math.round(progress * 100)}%` }} />\n          </div>\n        ) : null}\n      </div>\n    </Link>\n  );\n}\n\nexport default memo(VideoListItem);\n","import React from 'react';\nimport classNames from 'classnames';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport type { AccessModel } from '@jwp/ott-common/types/config';\nimport type { Playlist, PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { isLocked } from '@jwp/ott-common/src/utils/entitlements';\nimport { testId } from '@jwp/ott-common/src/utils/common';\n\nimport VideoListItem from '../VideoListItem/VideoListItem';\nimport InfiniteScrollLoader from '../InfiniteScrollLoader/InfiniteScrollLoader';\n\nimport styles from './VideoList.module.scss';\n\ntype Props = {\n  playlist?: Playlist;\n  header?: React.ReactNode;\n  watchHistory?: { [key: string]: number };\n  isLoading: boolean;\n  activeMediaId?: string;\n  activeLabel?: string;\n  className?: string;\n  accessModel: AccessModel;\n  isLoggedIn: boolean;\n  hasSubscription: boolean;\n  hasMore?: boolean;\n  loadMore?: () => void;\n  onListItemHover?: (item: PlaylistItem) => void;\n  getUrl: (item: PlaylistItem) => string;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst defaultLoadMore = () => {};\n\nfunction VideoList({\n  playlist,\n  header,\n  onListItemHover,\n  isLoading = false,\n  watchHistory,\n  activeMediaId,\n  activeLabel,\n  className,\n  accessModel,\n  isLoggedIn,\n  hasSubscription,\n  hasMore,\n  loadMore = defaultLoadMore,\n  getUrl,\n}: Props) {\n  return (\n    <div className={classNames(styles.container, !!className && className)} data-testid={testId('video-list')}>\n      {!!header && header}\n      <div className={styles.content}>\n        <InfiniteScroll\n          element=\"ul\"\n          pageStart={0}\n          loadMore={loadMore ?? defaultLoadMore}\n          hasMore={hasMore ?? false}\n          className={styles.list}\n          loader={<InfiniteScrollLoader key=\"loader\" />}\n          useWindow={false}\n        >\n          {playlist?.playlist?.map((playlistItem: PlaylistItem) => (\n            <li key={playlistItem.mediaid}>\n              <VideoListItem\n                url={getUrl(playlistItem)}\n                progress={watchHistory ? watchHistory[playlistItem.mediaid] : undefined}\n                onHover={() => onListItemHover && onListItemHover(playlistItem)}\n                loading={isLoading}\n                isActive={activeMediaId === playlistItem.mediaid}\n                activeLabel={activeLabel}\n                isLocked={isLocked(accessModel, isLoggedIn, hasSubscription, playlistItem)}\n                item={playlistItem}\n              />\n            </li>\n          ))}\n        </InfiniteScroll>\n      </div>\n    </div>\n  );\n}\n\nexport default VideoList;\n","import React from 'react';\nimport classNames from 'classnames';\nimport type { Playlist, PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport type { AccessModel } from '@jwp/ott-common/types/config';\nimport { testId } from '@jwp/ott-common/src/utils/common';\nimport useBreakpoint, { Breakpoint } from '@jwp/ott-ui-react/src/hooks/useBreakpoint';\n\nimport CardGrid from '../CardGrid/CardGrid';\nimport Filter from '../Filter/Filter';\nimport VideoDetails from '../VideoDetails/VideoDetails';\nimport VideoDetailsInline from '../VideoDetailsInline/VideoDetailsInline';\nimport VideoList from '../VideoList/VideoList';\n\nimport styles from './VideoLayout.module.scss';\n\ntype FilterProps = {\n  filterMetadata?: React.ReactNode;\n  filters?: (string | { label: string; value: string })[];\n  currentFilter?: string;\n  defaultFilterLabel?: string;\n  setFilter?: (value: string) => void;\n};\n\ntype LoadMoreProps = {\n  hasMore?: boolean;\n  loadMore?: () => void;\n};\n\ntype VideoDetailsProps = {\n  title: string;\n  description: string;\n  image?: string;\n  primaryMetadata: React.ReactNode;\n  secondaryMetadata?: React.ReactNode;\n  shareButton: React.ReactNode;\n  favoriteButton: React.ReactNode;\n  trailerButton: React.ReactNode;\n  startWatchingButton: React.ReactNode;\n  live?: boolean;\n};\n\ntype VideoListProps = {\n  relatedTitle?: string;\n  onItemHover?: (item: PlaylistItem) => void;\n  watchHistory?: { [key: string]: number };\n  activeMediaId?: string;\n  activeLabel?: string;\n  getURL: (item: PlaylistItem) => string;\n};\n\ntype Props = {\n  inlineLayout: boolean;\n  player: React.ReactNode;\n  isLoading: boolean;\n  accessModel: AccessModel;\n  isLoggedIn: boolean;\n  hasSubscription: boolean;\n  children?: React.ReactNode;\n  item?: PlaylistItem;\n  playlist?: Playlist;\n} & FilterProps &\n  VideoDetailsProps &\n  VideoListProps &\n  LoadMoreProps;\n\nconst VideoLayout: React.FC<Props> = ({\n  inlineLayout,\n  player,\n  playlist,\n  accessModel,\n  isLoading,\n  isLoggedIn,\n  item,\n  hasSubscription,\n  // video details\n  title,\n  description,\n  image,\n  primaryMetadata,\n  secondaryMetadata,\n  shareButton,\n  favoriteButton,\n  startWatchingButton,\n  trailerButton,\n  // list\n  relatedTitle,\n  watchHistory,\n  activeLabel,\n  // filters\n  filters,\n  setFilter,\n  filterMetadata,\n  currentFilter = '',\n  defaultFilterLabel = '',\n  children,\n  // load more\n  hasMore,\n  loadMore,\n  getURL,\n}) => {\n  const breakpoint = useBreakpoint();\n  const isTablet = breakpoint === Breakpoint.sm || breakpoint === Breakpoint.md;\n  // only show the filters when there are two or more filters\n  const hasFilters = filters && filters.length > 1;\n  const showFilters = hasFilters && setFilter;\n\n  const renderFilters = (forceDropdown: boolean) => (\n    <div className={classNames(styles.filters, { [styles.filtersInline]: inlineLayout })}>\n      {!!filterMetadata && inlineLayout && <span className={styles.filterMetadata}>{filterMetadata}</span>}\n      {showFilters && (\n        <Filter name=\"season\" value={currentFilter} defaultLabel={defaultFilterLabel} options={filters} setValue={setFilter} forceDropdown={forceDropdown} />\n      )}\n    </div>\n  );\n\n  const renderRelatedVideos = (grid = true) => {\n    if (!playlist) return null;\n\n    return grid ? (\n      <>\n        <div className={classNames(styles.relatedVideosGrid, { [styles.inlineLayout]: inlineLayout })}>\n          <h2 className={styles.relatedVideosGridTitle}>{relatedTitle || '\\u00A0'}</h2>\n          {hasFilters && renderFilters(inlineLayout)}\n        </div>\n        <CardGrid\n          playlist={playlist}\n          isLoading={isLoading}\n          watchHistory={watchHistory}\n          accessModel={accessModel}\n          isLoggedIn={isLoggedIn}\n          currentCardItem={item}\n          currentCardLabel={activeLabel}\n          hasSubscription={hasSubscription}\n          hasMore={hasMore}\n          loadMore={loadMore}\n          getUrl={getURL}\n        />\n      </>\n    ) : (\n      <div className={styles.relatedVideosList}>\n        <VideoList\n          header={\n            <div className={styles.relatedVideosListHeader}>\n              {title && <h2 className={styles.relatedVideosListTitle}>{relatedTitle}</h2>}\n              {hasFilters && renderFilters(true)}\n            </div>\n          }\n          activeMediaId={item?.mediaid}\n          activeLabel={activeLabel}\n          playlist={playlist}\n          watchHistory={watchHistory}\n          isLoading={isLoading}\n          accessModel={accessModel}\n          isLoggedIn={isLoggedIn}\n          hasSubscription={hasSubscription}\n          hasMore={hasMore}\n          loadMore={loadMore}\n          getUrl={getURL}\n        />\n      </div>\n    );\n  };\n\n  if (inlineLayout) {\n    return (\n      <div className={styles.videoInlineLayout} data-testid={testId('inline-layout')}>\n        <div className={styles.player}>{player}</div>\n        <div className={styles.videoDetailsInline}>\n          <VideoDetailsInline\n            title={secondaryMetadata || title}\n            live={item?.duration === 0}\n            description={description}\n            primaryMetadata={primaryMetadata}\n            shareButton={shareButton}\n            favoriteButton={favoriteButton}\n            trailerButton={trailerButton}\n          />\n        </div>\n        {renderRelatedVideos(isTablet)}\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <VideoDetails\n      title={title}\n      description={description}\n      image={image}\n      startWatchingButton={startWatchingButton}\n      favoriteButton={favoriteButton}\n      trailerButton={trailerButton}\n      shareButton={shareButton}\n      primaryMetadata={primaryMetadata}\n      secondaryMetadata={secondaryMetadata}\n    >\n      {playlist && <section className={styles.relatedVideos}>{renderRelatedVideos(true)}</section>}\n      {children}\n      {player}\n    </VideoDetails>\n  );\n};\n\nexport default VideoLayout;\n","import { useCallback, useEffect, useLayoutEffect, useRef } from 'react';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport WatchHistoryController from '@jwp/ott-common/src/controllers/WatchHistoryController';\n\nimport useEventCallback from './useEventCallback';\n\ntype QueuedProgress = {\n  item: PlaylistItem;\n  seriesItem?: PlaylistItem;\n  progress: number;\n  timestamp: number;\n};\n\nconst PROGRESSIVE_SAVE_INTERVAL = 300_000; // 5 minutes\n\n/**\n * The `useWatchHistoryListener` hook has the responsibility to save the players watch progress on key moments.\n *\n * __The problem:__\n *\n * There are multiple events that trigger a save. This results in duplicate (unnecessary) saves and API calls. Another\n * problem is that some events are triggered when the `item` to update has changed. For example, when clicking a media\n * item in the \"Related shelf\". This causes the wrong item to be saved in the watch history.\n *\n * __The solution:__\n *\n * This hook listens to the player time update event and queues a watch history entry with the current progress and\n * item. When this needs to be saved, the queue is used to look up the last progress and item and save it when\n * necessary. The queue is then cleared to prevent duplicate saves and API calls.\n */\nexport const useWatchHistoryListener = (player: jwplayer.JWPlayer | undefined, item: PlaylistItem, seriesItem?: PlaylistItem) => {\n  const queuedWatchProgress = useRef<QueuedProgress | null>(null);\n  const watchHistoryController = getModule(WatchHistoryController);\n\n  // config\n  const { features } = useConfigStore((s) => s.config);\n  const continueWatchingList = features?.continueWatchingList;\n  const watchHistoryEnabled = !!continueWatchingList;\n\n  // maybe store the watch progress when we have a queued watch progress\n  const maybeSaveWatchProgress = useCallback(() => {\n    if (!watchHistoryEnabled || !queuedWatchProgress.current) return;\n\n    const { item, seriesItem, progress } = queuedWatchProgress.current;\n\n    // save the queued watch progress\n    watchHistoryController.saveItem(item, seriesItem, progress);\n\n    // clear the queue\n    queuedWatchProgress.current = null;\n  }, [watchHistoryEnabled, watchHistoryController]);\n\n  // update the queued watch progress on each time update event\n  const handleTimeUpdate = useEventCallback((event: jwplayer.TimeParam) => {\n    // live streams have a negative duration, we ignore these for now\n    if (event.duration < 0) return;\n\n    const progress = Number((event.position / event.duration).toFixed(5));\n\n    if (!isNaN(progress) && isFinite(progress)) {\n      queuedWatchProgress.current = {\n        item,\n        seriesItem,\n        progress,\n        timestamp: queuedWatchProgress.current?.timestamp || Date.now(),\n      };\n\n      // save the progress when we haven't done so in the last X minutes\n      if (Date.now() - queuedWatchProgress.current.timestamp > PROGRESSIVE_SAVE_INTERVAL) {\n        maybeSaveWatchProgress();\n      }\n    }\n  });\n\n  // listen for certain player events\n  useEffect(() => {\n    if (!player || !watchHistoryEnabled) return;\n\n    player.on('time', handleTimeUpdate);\n    player.on('pause', maybeSaveWatchProgress);\n    player.on('complete', maybeSaveWatchProgress);\n    player.on('remove', maybeSaveWatchProgress);\n\n    return () => {\n      player.off('time', handleTimeUpdate);\n      player.off('pause', maybeSaveWatchProgress);\n      player.off('complete', maybeSaveWatchProgress);\n      player.off('remove', maybeSaveWatchProgress);\n    };\n  }, [player, watchHistoryEnabled, maybeSaveWatchProgress, handleTimeUpdate]);\n\n  useEffect(() => {\n    return () => {\n      // store watch progress on unmount and when the media item changes\n      maybeSaveWatchProgress();\n    };\n  }, [item?.mediaid, maybeSaveWatchProgress]);\n\n  // add event listeners for unload and visibility change to ensure the latest watch progress is saved\n  useLayoutEffect(() => {\n    const visibilityListener = () => document.visibilityState === 'hidden' && maybeSaveWatchProgress();\n\n    window.addEventListener('pagehide', maybeSaveWatchProgress);\n    window.addEventListener('visibilitychange', visibilityListener);\n\n    return () => {\n      window.removeEventListener('pagehide', maybeSaveWatchProgress);\n      window.removeEventListener('visibilitychange', visibilityListener);\n    };\n  }, [maybeSaveWatchProgress]);\n};\n","import { useMemo } from 'react';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { useWatchHistoryStore } from '@jwp/ott-common/src/stores/WatchHistoryStore';\nimport { VideoProgressMinMax } from '@jwp/ott-common/src/constants';\n\nimport { useWatchHistoryListener } from './useWatchHistoryListener';\n\nexport const useWatchHistory = (player: jwplayer.JWPlayer | undefined, item: PlaylistItem, seriesItem?: PlaylistItem) => {\n  // config\n  const { features } = useConfigStore((s) => s.config);\n  const continueWatchingList = features?.continueWatchingList;\n  const watchHistoryEnabled = !!continueWatchingList;\n\n  // watch history listener\n  useWatchHistoryListener(player, item, seriesItem);\n\n  // watch History\n  const watchHistoryItem = useWatchHistoryStore((state) => (!!item && watchHistoryEnabled ? state.getItem(item) : undefined));\n\n  // calculate the `startTime` of the current item based on the watch progress\n  return useMemo(() => {\n    const videoProgress = watchHistoryItem?.progress;\n\n    if (videoProgress && videoProgress > VideoProgressMinMax.Min && videoProgress < VideoProgressMinMax.Max) {\n      return videoProgress * item.duration;\n    }\n\n    // start at the beginning of the video (only for VOD content)\n    return 0;\n  }, [item.duration, watchHistoryItem?.progress]);\n};\n","import type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { createURL } from '@jwp/ott-common/src/utils/urlFormatting';\n\nimport useEventCallback from './useEventCallback';\n\nexport const usePlaylistItemCallback = (startDateTime?: string | null, endDateTime?: string | null) => {\n  const applyLiveStreamOffset = (item: PlaylistItem) => {\n    if (!startDateTime) return item;\n\n    // The timeParam can either be just a start date like `2022-08-08T20:00:00` (to extend DVR) or a range like\n    // `2022-08-08T20:00:00-2022-08-08T22:00:00` to select a VOD from the live stream.\n    const timeParam = [startDateTime, endDateTime].filter(Boolean).join('-');\n\n    return {\n      ...item,\n      allSources: undefined, // `allSources` need to be cleared otherwise JW Player will use those instead\n      sources: item.sources.map((source) => ({\n        ...source,\n        file: createURL(source.file, {\n          t: timeParam,\n        }),\n      })),\n    };\n  };\n\n  return useEventCallback(async (item: PlaylistItem) => {\n    return applyLiveStreamOffset(item);\n  });\n};\n","import { useQuery } from 'react-query';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport ApiService from '@jwp/ott-common/src/services/ApiService';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { createURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport type { AdConfig } from '@jwp/ott-common/types/ad-schedule';\n\nconst CACHE_TIME = 60 * 1000 * 20;\n\n/**\n * @deprecated Use ad-config instead.\n */\nconst useLegacyStandaloneAds = ({ adScheduleId, enabled }: { adScheduleId: string | null | undefined; enabled: boolean }) => {\n  const apiService = getModule(ApiService);\n\n  const { isLoading, data } = useQuery(['ad-schedule', adScheduleId], async () => apiService.getAdSchedule(adScheduleId), {\n    enabled: enabled && !!adScheduleId,\n    cacheTime: CACHE_TIME,\n    staleTime: CACHE_TIME,\n  });\n\n  return {\n    isLoading,\n    data,\n  };\n};\n\nexport const useAds = ({ mediaId }: { mediaId: string }) => {\n  const { adSchedule: adScheduleId, adConfig: adConfigId, adScheduleUrls, adDeliveryMethod } = useConfigStore((s) => s.config);\n\n  // We use client side ads only when delivery method is not pointing at server ads\n  // adConfig and adScheduled can't be enabled at the same time\n  const useAdConfigFlow = !!adConfigId && adDeliveryMethod !== 'ssai';\n\n  const { data: adSchedule, isLoading: isAdScheduleLoading } = useLegacyStandaloneAds({ adScheduleId, enabled: !!adScheduleId });\n  const adConfig = useAdConfigFlow\n    ? ({\n        client: 'vast',\n        schedule: createURL(adScheduleUrls?.xml || '', {\n          media_id: mediaId,\n        }),\n      } as AdConfig)\n    : undefined;\n\n  return {\n    isLoading: useAdConfigFlow ? false : isAdScheduleLoading,\n    data: useAdConfigFlow ? adConfig : adSchedule,\n  };\n};\n","import { useQuery } from 'react-query';\nimport type { GetPlaylistParams } from '@jwp/ott-common/types/playlist';\nimport type { GetMediaParams } from '@jwp/ott-common/types/media';\nimport type { EntitlementType } from '@jwp/ott-common/types/entitlement';\nimport GenericEntitlementService from '@jwp/ott-common/src/services/GenericEntitlementService';\nimport JWPEntitlementService from '@jwp/ott-common/src/services/JWPEntitlementService';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { isTruthyCustomParamValue } from '@jwp/ott-common/src/utils/common';\n\nconst useContentProtection = <T>(\n  type: EntitlementType,\n  id: string | undefined,\n  callback: (token?: string, drmPolicyId?: string) => Promise<T | undefined>,\n  params: GetPlaylistParams | GetMediaParams = {},\n  enabled: boolean = true,\n  placeholderData?: T,\n) => {\n  const genericEntitlementService = getModule(GenericEntitlementService);\n  const jwpEntitlementService = getModule(JWPEntitlementService);\n\n  const { configId, signingConfig, contentProtection, jwp, urlSigning, isAccessBridgeEnabled } = useConfigStore(({ config, settings }) => ({\n    configId: config.id,\n    signingConfig: config.contentSigningService,\n    contentProtection: config.contentProtection,\n    jwp: config.integrations.jwp,\n    urlSigning: isTruthyCustomParamValue(config?.custom?.urlSigning),\n    isAccessBridgeEnabled: !!settings?.apiAccessBridgeUrl,\n  }));\n\n  const host = signingConfig?.host;\n  const drmPolicyId = contentProtection?.drm?.defaultPolicyId ?? signingConfig?.drmPolicyId;\n  const signingEnabled = !!urlSigning || !!host || (!!drmPolicyId && !host);\n\n  const { data: token, isLoading } = useQuery(\n    ['token', type, id, params],\n    async () => {\n      // if provider is not JWP\n      if (!!id && !!host) {\n        const accountController = getModule(AccountController);\n        const authData = await accountController.getAuthData();\n        const { host, drmPolicyId } = signingConfig;\n\n        return genericEntitlementService.getMediaToken(host, id, authData?.jwt, params, drmPolicyId);\n      }\n\n      // if provider is JWP\n      if (jwp && configId && !!id && signingEnabled) {\n        return jwpEntitlementService.getJWPMediaToken(configId, id);\n      }\n    },\n    { enabled: signingEnabled && enabled && !!id && !isAccessBridgeEnabled, keepPreviousData: false, staleTime: 15 * 60 * 1000 },\n  );\n\n  const queryResult = useQuery<T | undefined>([type, id, params, token], async () => callback(token, drmPolicyId), {\n    enabled: !!id && enabled && (!signingEnabled || !!token),\n    placeholderData: id ? placeholderData : undefined,\n    retry: 2,\n    retryDelay: 1000,\n    keepPreviousData: false,\n  });\n\n  return {\n    ...queryResult,\n    isLoading: isLoading || queryResult.isLoading,\n  };\n};\n\nexport default useContentProtection;\n","import { useQuery } from 'react-query';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport ApiService from '@jwp/ott-common/src/services/ApiService';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport AccessController from '@jwp/ott-common/src/controllers/AccessController';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\n\nimport useContentProtection from './useContentProtection';\n\nexport default function useProtectedMedia(item: PlaylistItem) {\n  const apiService = getModule(ApiService);\n  const accessController = getModule(AccessController);\n\n  const { isAccessBridgeEnabled } = useConfigStore(({ settings }) => ({\n    isAccessBridgeEnabled: !!settings?.apiAccessBridgeUrl,\n  }));\n\n  const contentProtectionQuery = useContentProtection('media', item.mediaid, async (token, drmPolicyId) => {\n    // If the Access Bridge is enabled, use it to retrieve media via access passport.\n    // This bypasses the need for a DRM token or policy and directly uses the access-controlled method.\n    if (isAccessBridgeEnabled) {\n      return accessController.getMediaById(item.mediaid);\n    }\n\n    // If Access Bridge is not enabled, retrieve the media using the provided DRM token and policy ID.\n    return apiService.getMediaById({ id: item.mediaid, token, drmPolicyId });\n  });\n\n  const { isLoading, data: isGeoBlocked } = useQuery(\n    ['media', 'geo', item.mediaid],\n    () => {\n      const m3u8 = contentProtectionQuery.data?.sources.find((source) => source.file.indexOf('.m3u8') !== -1);\n      if (m3u8) {\n        return fetch(m3u8.file, { method: 'HEAD' }).then((response) => response.status === 403);\n      }\n      return false;\n    },\n    {\n      enabled: contentProtectionQuery.isFetched,\n    },\n  );\n\n  return {\n    ...contentProtectionQuery,\n    isGeoBlocked,\n    isLoading: contentProtectionQuery.isLoading || isLoading,\n  };\n}\n","import type { PlaylistItem, Source } from '@jwp/ott-common/types/playlist';\nimport type { Config } from '@jwp/ott-common/types/config';\nimport type { Customer } from '@jwp/ott-common/types/account';\n\nconst isVODManifestType = (sourceUrl: string, baseUrl: string, mediaId: string, extensions: ('m3u8' | 'mpd')[]) => {\n  return extensions.some((ext) => sourceUrl === `${baseUrl}/manifests/${mediaId}.${ext}`);\n};\n\nconst isBCLManifestType = (sourceUrl: string, baseUrl: string, mediaId: string, extensions: ('m3u8' | 'mpd')[]) => {\n  return extensions.some((ext) => sourceUrl === `${baseUrl}/live/broadcast/${mediaId}.${ext}`);\n};\n\nexport const getSources = ({\n  item,\n  baseUrl,\n  config,\n  user,\n  passport,\n}: {\n  item: PlaylistItem;\n  baseUrl: string;\n  config: Config;\n  user: Customer | null;\n  passport: string | null;\n}) => {\n  const { sources, mediaid } = item;\n  const { adConfig, siteId, adDeliveryMethod } = config;\n\n  const userId = user?.id;\n  const hasServerAds = !!adConfig && adDeliveryMethod === 'ssai';\n\n  return sources.map((source: Source) => {\n    const url = new URL(source.file);\n\n    const sourceUrl = url.href;\n\n    const isBCLManifest = isBCLManifestType(sourceUrl, baseUrl, mediaid, ['m3u8', 'mpd']);\n    const isVODManifest = isVODManifestType(sourceUrl, baseUrl, mediaid, ['m3u8', 'mpd']);\n    const isDRM = url.searchParams.has('exp') && url.searchParams.has('sig');\n\n    // Use SSAI URL for configs with server side ads, DRM is not supported\n    if (isVODManifest && hasServerAds && !isDRM) {\n      // Only HLS is supported now\n      url.href = `${baseUrl}/v2/sites/${siteId}/media/${mediaid}/ssai.m3u8`;\n      url.searchParams.set('ad_config_id', adConfig);\n      // Attach user_id only for VOD and BCL SaaS Live Streams (doesn't work with SSAI items)\n    } else if ((isVODManifest || isBCLManifest) && userId) {\n      url.searchParams.set('user_id', userId);\n    }\n\n    // Attach the passport in all the drm sources as it's needed for the licence request.\n    // Passport is only available if Access Bridge is in use.\n    if (passport) {\n      attachPassportToSourceWithDRM(source, passport);\n    }\n\n    source.file = url.toString();\n    return source;\n  });\n};\n\nfunction attachPassportToSourceWithDRM(source: Source, passport: string): Source {\n  function updateUrl(urlString: string, passport: string): string {\n    const url = new URL(urlString);\n    if (!url.searchParams.has('token')) {\n      url.searchParams.set('passport', passport);\n    }\n    return url.toString();\n  }\n\n  if (source?.drm) {\n    if (source.drm?.playready?.url) {\n      source.drm.playready.url = updateUrl(source.drm.playready.url, passport);\n    }\n    if (source.drm?.widevine?.url) {\n      source.drm.widevine.url = updateUrl(source.drm.widevine.url, passport);\n    }\n    if (source.drm?.fairplay?.processSpcUrl) {\n      source.drm.fairplay.processSpcUrl = updateUrl(source.drm.fairplay.processSpcUrl, passport);\n    }\n  }\n\n  return source;\n}\n","import { useMemo } from 'react';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport type { PlaylistItem, Source } from '@jwp/ott-common/types/playlist';\nimport { getSources } from '@jwp/ott-common/src/utils/sources';\nimport { useAccessStore } from '@jwp/ott-common/src/stores/AccessStore';\n\n/** Modify manifest URLs to handle server ads and analytics params */\nexport const useMediaSources = ({ item, baseUrl }: { item: PlaylistItem; baseUrl: string }): Source[] => {\n  const config = useConfigStore((s) => s.config);\n  const user = useAccountStore((s) => s.user);\n  const passport = useAccessStore((s) => s.passport);\n\n  return useMemo(() => getSources({ item, baseUrl, config, user, passport }), [item, baseUrl, config, user, passport]);\n};\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport type { AdConfig, AdSchedule } from '@jwp/ott-common/types/ad-schedule';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { deepCopy } from '@jwp/ott-common/src/utils/collection';\nimport { testId } from '@jwp/ott-common/src/utils/common';\nimport { logInfo } from '@jwp/ott-common/src/logger';\nimport useEventCallback from '@jwp/ott-hooks-react/src/useEventCallback';\nimport { useMediaSources } from '@jwp/ott-hooks-react/src/useMediaSources';\nimport env from '@jwp/ott-common/src/env';\n\nimport type { JWPlayer } from '../../../types/jwplayer';\nimport { addScript } from '../../utils/dom';\n\nimport styles from './Player.module.scss';\n\ntype Props = {\n  feedId?: string;\n  item: PlaylistItem;\n  startTime?: number;\n  autostart?: boolean;\n  adsData?: AdConfig | AdSchedule;\n  onReady?: (player?: JWPlayer) => void;\n  onPlay?: () => void;\n  onPause?: () => void;\n  onComplete?: () => void;\n  onUserActive?: () => void;\n  onUserInActive?: () => void;\n  onBeforePlay?: () => void;\n  onFirstFrame?: () => void;\n  onRemove?: () => void;\n  onNext?: () => void;\n  onBackClick?: () => void;\n  onPlaylistItem?: () => void;\n  onPlaylistItemCallback?: (item: PlaylistItem) => Promise<undefined | PlaylistItem>;\n};\n\nconst Player: React.FC<Props> = ({\n  item,\n  adsData,\n  onReady,\n  onPlay,\n  onPause,\n  onComplete,\n  onUserActive,\n  onUserInActive,\n  onBeforePlay,\n  onFirstFrame,\n  onRemove,\n  onPlaylistItem,\n  onPlaylistItemCallback,\n  onNext,\n  onBackClick,\n  feedId,\n  startTime = 0,\n  autostart,\n}: Props) => {\n  const playerElementRef = useRef<HTMLDivElement>(null);\n  const playerRef = useRef<JWPlayer>();\n  const loadingRef = useRef(false);\n  const backClickRef = useRef(false);\n  const [libLoaded, setLibLoaded] = useState(!!window.jwplayer);\n  const startTimeRef = useRef(startTime);\n  const sources = useMediaSources({ item, baseUrl: env.APP_API_BASE_URL });\n\n  const { settings } = useConfigStore((s) => s);\n\n  const playerId = settings.playerId;\n  const playerLicenseKey = settings.playerLicenseKey;\n\n  const handleBeforePlay = useEventCallback(onBeforePlay);\n  const handlePlay = useEventCallback(onPlay);\n  const handlePause = useEventCallback(onPause);\n  const handleComplete = useEventCallback(onComplete);\n  const handleUserActive = useEventCallback(onUserActive);\n  const handleUserInactive = useEventCallback(onUserInActive);\n  const handleFirstFrame = useEventCallback(() => {\n    // a11y: auto focus to play/pause button\n    const playerContainer = playerRef.current?.getContainer();\n    const playPauseButton = playerContainer?.querySelector(\n      '.jw-controlbar [aria-label=\"Play\"], .jw-button-container [aria-label=\"Pause\"]',\n    ) as HTMLDivElement | null;\n    playPauseButton?.focus();\n\n    onFirstFrame?.();\n  });\n  const handleRemove = useEventCallback(onRemove);\n  const handlePlaylistItem = useEventCallback(onPlaylistItem);\n  const handlePlaylistItemCallback = useEventCallback(onPlaylistItemCallback);\n  const handleNextClick = useEventCallback(onNext);\n  const handleBackClick = useEventCallback(() => {\n    backClickRef.current = true;\n    onBackClick?.();\n  });\n  const handleReady = useEventCallback(() => onReady && onReady(playerRef.current));\n\n  const attachEvents = useCallback(() => {\n    playerRef.current?.on('ready', handleReady);\n    playerRef.current?.on('beforePlay', handleBeforePlay);\n    playerRef.current?.on('complete', handleComplete);\n    playerRef.current?.on('play', handlePlay);\n    playerRef.current?.on('pause', handlePause);\n    playerRef.current?.on('userActive', handleUserActive);\n    playerRef.current?.on('userInactive', handleUserInactive);\n    playerRef.current?.on('firstFrame', handleFirstFrame);\n    playerRef.current?.on('remove', handleRemove);\n    playerRef.current?.on('playlistItem', handlePlaylistItem);\n    playerRef.current?.on('nextClick', handleNextClick);\n    playerRef.current?.on('backClick', handleBackClick);\n    playerRef.current?.setPlaylistItemCallback(handlePlaylistItemCallback);\n  }, [\n    handleReady,\n    handleBeforePlay,\n    handleComplete,\n    handlePlay,\n    handlePause,\n    handleUserActive,\n    handleUserInactive,\n    handleFirstFrame,\n    handleRemove,\n    handlePlaylistItem,\n    handleNextClick,\n    handlePlaylistItemCallback,\n    handleBackClick,\n  ]);\n\n  const detachEvents = useCallback(() => {\n    playerRef.current?.off('ready');\n    playerRef.current?.off('beforePlay');\n    playerRef.current?.off('complete');\n    playerRef.current?.off('play');\n    playerRef.current?.off('pause');\n    playerRef.current?.off('userActive');\n    playerRef.current?.off('userInactive');\n    playerRef.current?.off('firstFrame');\n  }, []);\n\n  useEffect(() => {\n    if (!window.jwplayer && !loadingRef.current) {\n      loadingRef.current = true;\n\n      const scriptUrl = `${env.APP_API_BASE_URL}/libraries/${playerId}.js`;\n\n      addScript(scriptUrl).then(() => {\n        setLibLoaded(true);\n        loadingRef.current = false;\n      });\n    }\n  }, [playerId]);\n\n  useEffect(() => {\n    // Update the startTimeRef each time the startTime changes\n    startTimeRef.current = startTime;\n  }, [startTime]);\n\n  useEffect(() => {\n    const loadPlaylist = () => {\n      if (!item || !playerRef.current) {\n        return;\n      }\n\n      const currentItem = playerRef.current?.getPlaylistItem() as unknown as PlaylistItem | null;\n\n      // We already loaded this item\n      if (currentItem && currentItem.mediaid === item.mediaid) {\n        logInfo('Player', 'Calling loadPlaylist with the same item, check the dependencies');\n        return;\n      }\n\n      // Update autostart parameter\n      if (typeof autostart !== 'undefined') {\n        playerRef.current?.setConfig({ autostart });\n      }\n\n      // Load new item\n      playerRef.current.load([deepCopy({ ...item, starttime: startTimeRef.current, feedid: feedId })]);\n    };\n\n    const initializePlayer = () => {\n      if (!window.jwplayer || !playerElementRef.current) return;\n\n      playerRef.current = window.jwplayer(playerElementRef.current) as JWPlayer;\n\n      // Player options are untyped\n      const playerOptions: { [key: string]: unknown } = {\n        advertising: {\n          ...adsData,\n          // Beta feature\n          showCountdown: true,\n        },\n        timeSlider: {\n          showAdMarkers: false,\n        },\n        aspectratio: false,\n        controls: true,\n        displaytitle: false,\n        displayHeading: false,\n        displaydescription: false,\n        floating: {\n          mode: 'never',\n        },\n        height: '100%',\n        mute: false,\n        playbackRateControls: true,\n        pipIcon: 'disabled',\n        playlist: [deepCopy({ ...item, starttime: startTimeRef.current, feedid: feedId, sources })],\n        repeat: false,\n        cast: {},\n        stretching: 'uniform',\n        width: '100%',\n      };\n\n      // Only set the autostart parameter when it is defined or it will override the player.defaults autostart setting\n      if (typeof autostart !== 'undefined') {\n        playerOptions.autostart = autostart;\n      }\n\n      // Set the license key if provided\n      if (playerLicenseKey) {\n        playerOptions.key = playerLicenseKey;\n      }\n      playerRef.current.setup(playerOptions);\n\n      attachEvents();\n    };\n\n    if (playerRef.current) {\n      return loadPlaylist();\n    }\n\n    if (libLoaded) {\n      initializePlayer();\n    }\n  }, [libLoaded, item, detachEvents, attachEvents, playerId, autostart, adsData, playerLicenseKey, sources, feedId]);\n\n  useEffect(() => {\n    return () => {\n      if (playerRef.current) {\n        // Detaching events before component unmount\n        detachEvents();\n        if (backClickRef.current) {\n          backClickRef.current = false;\n          return;\n        }\n        playerRef.current.remove();\n      }\n    };\n  }, [detachEvents, backClickRef]);\n\n  return (\n    <div className={styles.container} data-testid={testId('player-container')}>\n      <div ref={playerElementRef} />\n    </div>\n  );\n};\n\nexport default Player;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport styles from './PlayerError.module.scss';\n\nexport enum PlayerErrorState {\n  GEO_BLOCKED = 'GEO_BLOCKED',\n}\n\ntype Props = {\n  error: keyof typeof PlayerErrorState;\n};\n\nconst PlayerError: React.FC<Props> = () => {\n  const { t } = useTranslation('video');\n  return (\n    <div className={styles.error}>\n      <h2 className={styles.title}>{t('player_error.geo_blocked_title')}</h2>\n      <p>{t('player_error.geo_blocked_description')}</p>\n    </div>\n  );\n};\n\nexport default PlayerError;\n","import React, { useCallback, useState } from 'react';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { useWatchHistory } from '@jwp/ott-hooks-react/src/useWatchHistory';\nimport { usePlaylistItemCallback } from '@jwp/ott-hooks-react/src/usePlaylistItemCallback';\nimport { useAds } from '@jwp/ott-hooks-react/src/useAds';\nimport useProtectedMedia from '@jwp/ott-hooks-react/src/useProtectedMedia';\n\nimport type { JWPlayer } from '../../../types/jwplayer';\nimport Player from '../../components/Player/Player';\nimport LoadingOverlay from '../../components/LoadingOverlay/LoadingOverlay';\nimport PlayerError, { PlayerErrorState } from '../../components/PlayerError/PlayerError';\n\ntype Props = {\n  item: PlaylistItem;\n  seriesItem?: PlaylistItem;\n  onPlay?: () => void;\n  onPause?: () => void;\n  onComplete?: () => void;\n  onClose?: () => void;\n  onUserActive?: () => void;\n  onUserInActive?: () => void;\n  onNext?: () => void;\n  onBackClick?: () => void;\n  feedId?: string;\n  liveStartDateTime?: string | null;\n  liveEndDateTime?: string | null;\n  liveFromBeginning?: boolean;\n  autostart?: boolean;\n};\n\nconst PlayerContainer: React.FC<Props> = ({\n  item,\n  seriesItem,\n  feedId,\n  onPlay,\n  onPause,\n  onComplete,\n  onUserActive,\n  onUserInActive,\n  onNext,\n  onBackClick,\n  liveEndDateTime,\n  liveFromBeginning,\n  liveStartDateTime,\n  autostart,\n}: Props) => {\n  // data\n  const { data: adsData, isLoading: isAdsLoading } = useAds({ mediaId: item?.mediaid });\n  const { data: playableItem, isLoading, isGeoBlocked } = useProtectedMedia(item);\n  // state\n  const [playerInstance, setPlayerInstance] = useState<JWPlayer>();\n\n  // watch history\n  const startTime = useWatchHistory(playerInstance, item, seriesItem);\n\n  // player events\n  const handleReady = useCallback((player?: JWPlayer) => {\n    setPlayerInstance(player);\n  }, []);\n\n  const handleFirstFrame = useCallback(() => {\n    // when playing a livestream, the first moment we can seek to the beginning of the DVR range is after the\n    // firstFrame event.\n    // @todo this doesn't seem to work 100% out of the times. Confirm with player team if this is the best approach.\n    if (liveFromBeginning) {\n      playerInstance?.seek(0);\n    }\n  }, [liveFromBeginning, playerInstance]);\n\n  const handlePlaylistItemCallback = usePlaylistItemCallback(liveStartDateTime, liveEndDateTime);\n\n  if (!playableItem || isLoading || isAdsLoading) {\n    return <LoadingOverlay inline />;\n  }\n\n  if (isGeoBlocked) {\n    return <PlayerError error={PlayerErrorState.GEO_BLOCKED} />;\n  }\n\n  return (\n    <Player\n      feedId={feedId}\n      item={playableItem}\n      adsData={adsData}\n      onReady={handleReady}\n      onFirstFrame={handleFirstFrame}\n      onPlay={onPlay}\n      onPause={onPause}\n      onComplete={onComplete}\n      onUserActive={onUserActive}\n      onUserInActive={onUserInActive}\n      onNext={onNext}\n      onBackClick={onBackClick}\n      onPlaylistItemCallback={handlePlaylistItemCallback}\n      startTime={startTime}\n      autostart={autostart}\n    />\n  );\n};\n\nexport default PlayerContainer;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport Lock from '@jwp/ott-theme/assets/icons/lock.svg?react';\nimport { modalURLFromLocation } from '@jwp/ott-ui-react/src/utils/location';\n\nimport Image from '../../components/Image/Image';\nimport Fade from '../../components/Animation/Fade/Fade';\nimport Button from '../../components/Button/Button';\nimport PlayerContainer from '../PlayerContainer/PlayerContainer';\nimport Icon from '../../components/Icon/Icon';\n\nimport styles from './InlinePlayer.module.scss';\n\ntype Props = {\n  item: PlaylistItem;\n  seriesItem?: PlaylistItem;\n  onPlay?: () => void;\n  onPause?: () => void;\n  onComplete?: () => void;\n  feedId?: string;\n  liveStartDateTime?: string | null;\n  liveEndDateTime?: string | null;\n  liveFromBeginning?: boolean;\n  startWatchingButton: React.ReactNode;\n  isLoggedIn: boolean;\n  isEntitled: boolean;\n  playable?: boolean;\n  autostart?: boolean;\n  hasMediaOffers?: boolean;\n};\n\nconst InlinePlayer: React.FC<Props> = ({\n  item,\n  seriesItem,\n  onPlay,\n  onPause,\n  onComplete,\n  feedId,\n  liveStartDateTime,\n  liveEndDateTime,\n  liveFromBeginning,\n  startWatchingButton,\n  isLoggedIn,\n  isEntitled,\n  autostart,\n  playable = true,\n  hasMediaOffers,\n}: Props) => {\n  const siteName = useConfigStore((s) => s.config.siteName);\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const loginButtonClickHandler = () => {\n    navigate(modalURLFromLocation(location, 'login'));\n  };\n\n  const buyLabel = hasMediaOffers ? t('video:buy_to_start_watching') : t('video:sign_up_to_start_watching');\n\n  return (\n    <div className={styles.inlinePlayer}>\n      <Fade open={!playable || !isEntitled}>\n        <div className={styles.paywall}>\n          <Image className={styles.poster} image={item.backgroundImage} alt={item.title} width={1280} />\n          {!isEntitled && (\n            <>\n              <Icon icon={Lock} className={styles.lock} />\n              <h2 className={styles.title}>{buyLabel}</h2>\n              <span className={styles.text}>{t('account:choose_offer.watch_this_on_platform', { siteName })}</span>\n              {startWatchingButton}\n              {!isLoggedIn && <Button onClick={loginButtonClickHandler} label={t('common:sign_in')} />}\n            </>\n          )}\n        </div>\n      </Fade>\n      {isEntitled && playable && (\n        <PlayerContainer\n          item={item}\n          seriesItem={seriesItem}\n          feedId={feedId}\n          autostart={autostart}\n          onPlay={onPlay}\n          onPause={onPause}\n          onComplete={onComplete}\n          liveEndDateTime={liveEndDateTime}\n          liveFromBeginning={liveFromBeginning}\n          liveStartDateTime={liveStartDateTime}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default InlinePlayer;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport ArrowLeft from '@jwp/ott-theme/assets/icons/arrow_left.svg?react';\n\nimport IconButton from '../../components/IconButton/IconButton';\nimport PlayerContainer from '../PlayerContainer/PlayerContainer';\nimport Fade from '../../components/Animation/Fade/Fade';\nimport Icon from '../../components/Icon/Icon';\nimport Modal from '../../components/Modal/Modal';\n\nimport styles from './Cinema.module.scss';\n\ntype Props = {\n  open: boolean;\n  item: PlaylistItem;\n  seriesItem?: PlaylistItem;\n  onPlay?: () => void;\n  onPause?: () => void;\n  onComplete?: () => void;\n  onClose?: () => void;\n  onNext?: () => void;\n  feedId?: string;\n  title: string;\n  primaryMetadata: React.ReactNode;\n  secondaryMetadata?: React.ReactNode;\n  liveStartDateTime?: string | null;\n  liveEndDateTime?: string | null;\n  liveFromBeginning?: boolean;\n};\n\nconst Cinema: React.FC<Props> = ({\n  open,\n  item,\n  seriesItem,\n  title,\n  primaryMetadata,\n  secondaryMetadata,\n  onPlay,\n  onPause,\n  onComplete,\n  onClose,\n  onNext,\n  feedId,\n  liveStartDateTime,\n  liveEndDateTime,\n  liveFromBeginning,\n}: Props) => {\n  const { t } = useTranslation();\n\n  // state\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [overlayHasFocus, setOverlayHasFocus] = useState(false);\n  const [userActive, setUserActive] = useState(true);\n\n  const handlePlay = useCallback(() => {\n    setIsPlaying(true);\n    onPlay && onPlay();\n  }, [onPlay]);\n\n  const handlePause = useCallback(() => {\n    setIsPlaying(false);\n    onPause && onPause();\n  }, [onPause]);\n\n  const handleComplete = useCallback(() => {\n    onComplete && onComplete();\n  }, [onComplete]);\n\n  const handleNext = useCallback(() => {\n    onNext && onNext();\n  }, [onNext]);\n\n  const handleUserActive = useCallback(() => setUserActive(true), []);\n  const handleUserInactive = useCallback(() => setUserActive(false), []);\n\n  // effects\n  useEffect(() => {\n    if (open) setUserActive(true);\n  }, [open]);\n\n  return (\n    <Modal open={open} animationContainerClassName={styles.cinemaContainer} onClose={onClose} aria-label={t('videoplayer')}>\n      <div className={styles.cinema}>\n        <Fade className={styles.overlayFade} open={!isPlaying || userActive || overlayHasFocus} keepMounted>\n          <div className={styles.playerOverlay} onFocus={() => setOverlayHasFocus(true)} onBlur={() => setOverlayHasFocus(false)}>\n            <div className={styles.playerContent}>\n              <IconButton aria-label={t('common:back')} onClick={onClose} className={styles.backButton}>\n                <Icon icon={ArrowLeft} />\n              </IconButton>\n              <div>\n                <h1 className={styles.title}>{title}</h1>\n                <div className={styles.metaContainer}>\n                  {secondaryMetadata && <div className={styles.secondaryMetadata}>{secondaryMetadata}</div>}\n                  <div className={styles.primaryMetadata}>{primaryMetadata}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Fade>\n        <PlayerContainer\n          item={item}\n          seriesItem={seriesItem}\n          feedId={feedId}\n          autostart={true}\n          onPlay={handlePlay}\n          onPause={handlePause}\n          onComplete={handleComplete}\n          onUserActive={handleUserActive}\n          onUserInActive={handleUserInactive}\n          onNext={handleNext}\n          onBackClick={onClose}\n          liveEndDateTime={liveEndDateTime}\n          liveFromBeginning={liveFromBeginning}\n          liveStartDateTime={liveStartDateTime}\n        />\n      </div>\n    </Modal>\n  );\n};\n\nexport default Cinema;\n","import React, { useCallback, useState } from 'react';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\n\nimport Modal from '../../components/Modal/Modal';\nimport Player from '../../components/Player/Player';\nimport ModalCloseButton from '../../components/ModalCloseButton/ModalCloseButton';\nimport Fade from '../../components/Animation/Fade/Fade';\n\nimport styles from './TrailerModal.module.scss';\n\ntype Props = {\n  item?: PlaylistItem | null;\n  title: string;\n  open: boolean;\n  onClose: () => void;\n};\n\nconst TrailerModal: React.FC<Props> = ({ item, open, title, onClose }) => {\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\n  const [userActive, setUserActive] = useState(true);\n\n  const handlePlay = useCallback(() => setIsPlaying(true), []);\n  const handlePause = useCallback(() => setIsPlaying(false), []);\n  const handleUserActive = useCallback(() => setUserActive(true), []);\n  const handleUserInactive = useCallback(() => setUserActive(false), []);\n\n  if (!item) return null;\n\n  return (\n    <Modal open={open} onClose={onClose} aria-labelledby=\"trailer-modal-title\" centered>\n      <div className={styles.container}>\n        <Player\n          item={item}\n          onPlay={handlePlay}\n          onPause={handlePause}\n          onComplete={onClose}\n          onUserActive={handleUserActive}\n          onUserInActive={handleUserInactive}\n          autostart\n        />\n        <Fade open={!isPlaying || userActive} keepMounted>\n          <div className={styles.playerOverlay}>\n            <h1 id=\"trailer-modal-title\" className={styles.title}>\n              {title}\n            </h1>\n          </div>\n          <ModalCloseButton onClick={onClose} />\n        </Fade>\n      </div>\n    </Modal>\n  );\n};\n\nexport default TrailerModal;\n","import * as React from \"react\";\nconst SvgCheck = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\" }));\nexport default SvgCheck;\n","import * as React from \"react\";\nconst SvgShare = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M18,16.08C17.24,16.08 16.56,16.38 16.04,16.85L8.91,12.7C8.96,12.47 9,12.24 9,12C9,11.76 8.96,11.53 8.91,11.3L15.96,7.19C16.5,7.69 17.21,8 18,8A3,3 0 0,0 21,5A3,3 0 0,0 18,2A3,3 0 0,0 15,5C15,5.24 15.04,5.47 15.09,5.7L8.04,9.81C7.5,9.31 6.79,9 6,9A3,3 0 0,0 3,12A3,3 0 0,0 6,15C6.79,15 7.5,14.69 8.04,14.19L15.16,18.34C15.11,18.55 15.08,18.77 15.08,19C15.08,20.61 16.39,21.91 18,21.91C19.61,21.91 20.92,20.61 20.92,19A2.92,2.92 0 0,0 18,16.08Z\" }));\nexport default SvgShare;\n","export const copyToClipboard = (value: string): void => {\n  const focusedElement = document.activeElement as HTMLElement;\n  const inputElement = document.createElement('input');\n  inputElement.style.zIndex = '-10';\n  inputElement.style.position = 'absolute';\n  inputElement.style.left = '-1000';\n  inputElement.value = value;\n  document.body.appendChild(inputElement);\n  inputElement.select();\n  document.execCommand('copy');\n  inputElement.blur();\n  document.body.removeChild(inputElement);\n  focusedElement?.focus();\n};\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Check from '@jwp/ott-theme/assets/icons/check.svg?react';\nimport Share from '@jwp/ott-theme/assets/icons/share.svg?react';\nimport useBreakpoint, { Breakpoint } from '@jwp/ott-ui-react/src/hooks/useBreakpoint';\n\nimport { copyToClipboard } from '../../utils/clipboard';\nimport Button from '../Button/Button';\nimport Icon from '../Icon/Icon';\n\ntype Props = {\n  title: string;\n  description: string;\n  url: string;\n};\n\nconst ShareButton = ({ title, description, url }: Props) => {\n  const { t } = useTranslation();\n  const breakpoint = useBreakpoint();\n  const [hasShared, setHasShared] = useState<boolean>(false);\n\n  const onShareClick = async () => {\n    if (typeof navigator.share === 'function') {\n      await navigator.share({ title, text: description, url });\n      return;\n    }\n\n    copyToClipboard(window.location.href);\n    setHasShared(true);\n    setTimeout(() => setHasShared(false), 2000);\n  };\n\n  return (\n    <Button\n      label={hasShared ? t('video:copied_url') : t('video:share')}\n      startIcon={hasShared ? <Icon icon={Check} /> : <Icon icon={Share} />}\n      onClick={onShareClick}\n      active={hasShared}\n      fullWidth={breakpoint < Breakpoint.md}\n    />\n  );\n};\n\nexport default ShareButton;\n","import * as React from \"react\";\nconst SvgFavoriteBorder = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M12.1,18.55L12,18.65L11.89,18.55C7.14,14.24 4,11.39 4,8.5C4,6.5 5.5,5 7.5,5C9.04,5 10.54,6 11.07,7.36H12.93C13.46,6 14.96,5 16.5,5C18.5,5 20,6.5 20,8.5C20,11.39 16.86,14.24 12.1,18.55M16.5,3C14.76,3 13.09,3.81 12,5.08C10.91,3.81 9.24,3 7.5,3C4.42,3 2,5.41 2,8.5C2,12.27 5.4,15.36 10.55,20.03L12,21.35L13.45,20.03C18.6,15.36 22,12.27 22,8.5C22,5.41 19.58,3 16.5,3Z\" }));\nexport default SvgFavoriteBorder;\n","import React, { useCallback, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { useFavoritesStore } from '@jwp/ott-common/src/stores/FavoritesStore';\nimport FavoritesController from '@jwp/ott-common/src/controllers/FavoritesController';\nimport Favorite from '@jwp/ott-theme/assets/icons/favorite.svg?react';\nimport FavoriteBorder from '@jwp/ott-theme/assets/icons/favorite_border.svg?react';\nimport useBreakpoint, { Breakpoint } from '@jwp/ott-ui-react/src/hooks/useBreakpoint';\n\nimport Button from '../../components/Button/Button';\nimport Alert from '../../components/Alert/Alert';\nimport Icon from '../../components/Icon/Icon';\n\ntype Props = {\n  item: PlaylistItem;\n};\n\nconst FavoriteButton: React.VFC<Props> = ({ item }) => {\n  const { t } = useTranslation();\n  const breakpoint = useBreakpoint();\n  const favoritesController = getModule(FavoritesController);\n\n  const { isFavorite, clearWarning, warning } = useFavoritesStore((state) => ({\n    isFavorite: !!item && state.hasItem(item),\n    clearWarning: state.clearWarning,\n    warning: state.warning,\n  }));\n\n  const onFavoriteButtonClick = useCallback(async () => {\n    await favoritesController.toggleFavorite(item);\n  }, [item, favoritesController]);\n\n  useEffect(() => {\n    // clear warning on unmount (probably by navigating away from the page using the back button)\n    return () => clearWarning();\n  }, [clearWarning]);\n\n  return (\n    <>\n      <Button\n        label={t('video:favorite')}\n        aria-label={t('video:favorite')}\n        startIcon={isFavorite ? <Icon icon={Favorite} /> : <Icon icon={FavoriteBorder} />}\n        onClick={onFavoriteButtonClick}\n        aria-pressed={isFavorite}\n        color={isFavorite ? 'primary' : 'default'}\n        fullWidth={breakpoint < Breakpoint.md}\n      />\n      <Alert open={warning !== null} message={warning} onClose={clearWarning} />\n    </>\n  );\n};\n\nexport default FavoriteButton;\n","import Spinner from '../../components/Spinner/Spinner';\n\nimport styles from './Loading.module.scss';\n\nconst Loading = () => {\n  return (\n    <div className={styles.loading}>\n      <Spinner />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\n\nimport styles from './VideoMetaData.module.scss';\n\ntype Props = {\n  attributes: string[];\n  separator?: string;\n};\n\nconst VideoMetaData: React.FC<Props> = ({ attributes, separator = '•' }: Props) => {\n  return (\n    <div>\n      {attributes.map((value, index) => (\n        <React.Fragment key={value}>\n          <span>{value}</span>\n          {index < attributes.length - 1 && (\n            <span className={styles.separator} aria-hidden=\"true\">\n              {separator}\n            </span>\n          )}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default VideoMetaData;\n","/**\n * Seconds to ISO8601 duration or date string\n * TODO: use date-fns to replace this util\n */\nexport function secondsToISO8601(input: number, timeOnly: boolean = false): string {\n  if (!input) {\n    return '';\n  }\n\n  const date = new Date(input ? input * 1000 : 0);\n  const hours = date.getUTCHours();\n  const minutes = date.getUTCMinutes();\n  const seconds = date.getUTCSeconds();\n\n  if (!timeOnly) {\n    return date.toISOString();\n  }\n\n  let isoString = 'PT';\n  if (hours > 0) isoString += hours + 'H';\n  if (minutes > 0) isoString += minutes + 'M';\n  if (seconds > 0) isoString += seconds + 'S';\n\n  return isoString;\n}\n\nexport const is12HourClock = () => {\n  const date = new Date(Date.UTC(2022, 6, 20, 18, 0, 0));\n  return /am|pm/.test(date.toLocaleTimeString());\n};\n","import i18next from 'i18next';\nimport type { Playlist, PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport type { EpisodeMetadata } from '@jwp/ott-common/types/series';\nimport { legacySeriesURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport { secondsToISO8601 } from '@jwp/ott-common/src/utils/datetime';\nimport env from '@jwp/ott-common/src/env';\n\n/**\n * Get an array of options for a season filter\n */\nexport const getFiltersFromSeries = (playlist: Playlist | undefined): { value: string; label: string }[] => {\n  // Old series doesn't have sorting supported and just aggregates all episodes in one playlist\n  // So we need to sort the playlist manually based on the selected filter (season).\n  return (playlist?.playlist || [])\n    .reduce((filters, item) => {\n      if (filters.some((el) => el?.value === item?.seasonNumber)) {\n        return filters;\n      }\n\n      return filters.concat(\n        item.seasonNumber ? [{ label: i18next.t('video:season_number_filter_template', { seasonNumber: item.seasonNumber }), value: item.seasonNumber }] : [],\n      );\n    }, [] as { value: string; label: string }[])\n    .slice()\n    .sort();\n};\n\n/**\n * Get a playlist with episodes based on the selected filter\n */\nexport const filterSeries = (playlist: Playlist | undefined, filter: string | undefined): Playlist | undefined => {\n  if (!playlist) return;\n\n  if (filter === '') return playlist;\n\n  return {\n    ...playlist,\n    // Filter episodes manually for the old flow where our playlists includes all episodes with all seasons\n    playlist: playlist.playlist.filter(({ seasonNumber }) => seasonNumber === filter),\n  };\n};\n\nexport const getNextItem = (episode: PlaylistItem | undefined, seriesPlaylist: Playlist | undefined): PlaylistItem | undefined => {\n  if (!episode || !seriesPlaylist) return;\n\n  // For the old flow we already have all the episodes and seasons so we just need to find them in the array\n  const index = seriesPlaylist?.playlist?.findIndex(({ mediaid }) => mediaid === episode.mediaid);\n\n  return seriesPlaylist?.playlist?.[index + 1];\n};\n\n/** Get a total amount of episodes in a season */\nexport const getEpisodesInSeason = (episode: PlaylistItem | undefined, seriesPlaylist: Playlist | undefined) => {\n  if (!seriesPlaylist) return;\n\n  return seriesPlaylist.playlist.filter((i) => i.seasonNumber === episode?.seasonNumber)?.length;\n};\n\nexport const generateLegacySeriesMetadata = (seriesPlaylist: Playlist, seriesId: string | undefined) => {\n  // Use playlist for old flow and media id for a new flow\n  const seriesCanonical = `${env.APP_PUBLIC_URL}/s/${seriesId}`;\n\n  return {\n    '@type': 'TVSeries',\n    '@id': seriesCanonical,\n    name: seriesPlaylist.title,\n    numberOfEpisodes: String(seriesPlaylist.playlist.length),\n    numberOfSeasons: String(\n      seriesPlaylist.playlist.reduce(function (list, playlistItem) {\n        return !playlistItem.seasonNumber || list.includes(playlistItem.seasonNumber) ? list : list.concat(playlistItem.seasonNumber);\n      }, [] as string[]).length,\n    ),\n  };\n};\n\nexport const generateLegacyEpisodeJSONLD = (\n  seriesPlaylist: Playlist,\n  episode: PlaylistItem | undefined,\n  episodeMetadata: EpisodeMetadata | undefined,\n  seriesId: string,\n) => {\n  const episodeCanonical = `${env.APP_PUBLIC_URL}${legacySeriesURL({ episodeId: episode?.mediaid, seriesId })}`;\n  const seriesMetadata = generateLegacySeriesMetadata(seriesPlaylist, seriesId);\n\n  if (!episode) {\n    return JSON.stringify(seriesMetadata);\n  }\n\n  return JSON.stringify({\n    '@context': 'http://schema.org/',\n    '@type': 'TVEpisode',\n    '@id': episodeCanonical,\n    episodeNumber: episodeMetadata?.episodeNumber,\n    seasonNumber: episodeMetadata?.seasonNumber,\n    name: episode.title,\n    uploadDate: secondsToISO8601(episode.pubdate),\n    partOfSeries: seriesMetadata,\n  });\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { useWatchHistoryStore } from '@jwp/ott-common/src/stores/WatchHistoryStore';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport { createPlaylistMetadata, createVideoMetadata } from '@jwp/ott-common/src/utils/metadata';\nimport { formatSeriesMetaString } from '@jwp/ott-common/src/utils/formatting';\nimport { legacySeriesURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport useEntitlement from '@jwp/ott-hooks-react/src/useEntitlement';\nimport useMedia from '@jwp/ott-hooks-react/src/useMedia';\nimport useBreakpoint, { Breakpoint } from '@jwp/ott-ui-react/src/hooks/useBreakpoint';\nimport useQueryParam from '@jwp/ott-ui-react/src/hooks/useQueryParam';\nimport usePlaylist from '@jwp/ott-hooks-react/src/usePlaylist';\nimport PlayTrailer from '@jwp/ott-theme/assets/icons/play_trailer.svg?react';\nimport env from '@jwp/ott-common/src/env';\n\nimport VideoLayout from '../../components/VideoLayout/VideoLayout';\nimport InlinePlayer from '../../containers/InlinePlayer/InlinePlayer';\nimport ErrorPage from '../../components/ErrorPage/ErrorPage';\nimport StartWatchingButton from '../../containers/StartWatchingButton/StartWatchingButton';\nimport Cinema from '../../containers/Cinema/Cinema';\nimport TrailerModal from '../../containers/TrailerModal/TrailerModal';\nimport ShareButton from '../../components/ShareButton/ShareButton';\nimport FavoriteButton from '../../containers/FavoriteButton/FavoriteButton';\nimport Button from '../../components/Button/Button';\nimport Loading from '../Loading/Loading';\nimport Icon from '../../components/Icon/Icon';\nimport VideoMetaData from '../../components/VideoMetaData/VideoMetaData';\n\nimport { filterSeries, generateLegacyEpisodeJSONLD, getEpisodesInSeason, getFiltersFromSeries, getNextItem } from './utils';\n\nconst LegacySeries = () => {\n  const breakpoint = useBreakpoint();\n  const { t } = useTranslation('video');\n  const [playTrailer, setPlayTrailer] = useState<boolean>(false);\n\n  // Navigation\n  const navigate = useNavigate();\n  const params = useParams();\n  const seriesId = params.id || '';\n  const play = useQueryParam('play') === '1';\n  const feedId = useQueryParam('r');\n  const episodeId = useQueryParam('e');\n\n  // Main data\n  const { isLoading: isSeriesPlaylistLoading, data: seriesPlaylist, isError: isPlaylistError } = usePlaylist(seriesId, {}, true, false);\n  const { isLoading: isEpisodeLoading, data: episode } = useMedia(episodeId || '');\n  const { isLoading: isTrailerLoading, data: trailerItem } = useMedia(episode?.trailerId || '');\n\n  const episodeMetadata = useMemo(() => ({ episodeNumber: episode?.episodeNumber || '0', seasonNumber: episode?.seasonNumber || '0' }), [episode]);\n\n  // Whether we show series or episode information. For old series flow we only have access to the playlist\n  const selectedItem = episode || seriesPlaylist;\n  const selectedItemImage = (selectedItem?.image as string) || '';\n\n  // Config\n  const { config, accessModel } = useConfigStore(({ config, accessModel }) => ({ config, accessModel }), shallow);\n  const { features, siteName, custom } = config;\n  const isFavoritesEnabled: boolean = Boolean(features?.favoritesList);\n  const inlineLayout = Boolean(custom?.inlinePlayer);\n\n  // Filters\n  const filters = useMemo(() => getFiltersFromSeries(seriesPlaylist), [seriesPlaylist]);\n  const [seasonFilter, setSeasonFilter] = useState<string | undefined>(undefined);\n\n  const firstEpisode = useMemo(() => seriesPlaylist?.playlist?.[0], [seriesPlaylist]);\n  const filteredPlaylist = useMemo(() => filterSeries(seriesPlaylist, seasonFilter), [seriesPlaylist, seasonFilter]);\n  const episodesInSeason = getEpisodesInSeason(episode, seriesPlaylist);\n  const nextItem = useMemo(() => getNextItem(episode, seriesPlaylist), [episode, seriesPlaylist]);\n\n  // Watch history\n  const watchHistoryDictionary = useWatchHistoryStore((state) => state.getDictionaryWithEpisodes());\n\n  // User, entitlement\n  const { user, subscription } = useAccountStore(({ user, subscription }) => ({ user, subscription }), shallow);\n  const { isEntitled, mediaOffers } = useEntitlement(episode || firstEpisode);\n  const hasMediaOffers = !!mediaOffers.length;\n  const isLoggedIn = !!user;\n  const hasSubscription = !!subscription;\n\n  // Handlers\n  const goBack = () => episode && navigate(legacySeriesURL({ episodeId: episode.mediaid, seriesId, play: false, playlistId: feedId }));\n  const getUrl = (toEpisode: PlaylistItem) => {\n    return seriesPlaylist ? legacySeriesURL({ episodeId: toEpisode.mediaid, seriesId, play: false, playlistId: feedId }) : '';\n  };\n\n  const handleComplete = useCallback(async () => {\n    navigate(legacySeriesURL({ episodeId: nextItem?.mediaid, seriesId, play: !!nextItem, playlistId: feedId }));\n  }, [navigate, nextItem, seriesId, feedId]);\n\n  // Effects\n  useEffect(() => {\n    (document.scrollingElement || document.body).scroll({ top: 0 });\n    (document.querySelector('#video-details button') as HTMLElement)?.focus();\n  }, [episode]);\n\n  useEffect(() => {\n    if (isSeriesPlaylistLoading || isEpisodeLoading) {\n      return;\n    }\n\n    if (seasonFilter === undefined) {\n      setSeasonFilter(parseInt(episodeMetadata?.seasonNumber, 10) ? episodeMetadata?.seasonNumber : filters?.[0]?.value || '');\n    }\n  }, [episodeMetadata, seasonFilter, isSeriesPlaylistLoading, isEpisodeLoading, filters]);\n\n  // UI\n  const isLoading = isSeriesPlaylistLoading || isEpisodeLoading;\n  if (isLoading) return <Loading />;\n  if (isPlaylistError || !seriesPlaylist || !selectedItem || !firstEpisode) return <ErrorPage title={t('series_error')} />;\n\n  const pageTitle = `${selectedItem.title} - ${siteName}`;\n  const pageDescription = selectedItem?.description || '';\n  const canonicalUrl = `${env.APP_PUBLIC_URL}${legacySeriesURL({ episodeId: episode?.mediaid, seriesId })}`;\n  const backgroundImage = (selectedItem.backgroundImage as string) || undefined;\n\n  const primaryMetadata = episode ? (\n    <VideoMetaData\n      attributes={createVideoMetadata(episode, {\n        episodesLabel: t('video:total_episodes', { count: seriesPlaylist?.playlist?.length }),\n        hoursAbbreviation: t('common:abbreviation.hours'),\n        minutesAbbreviation: t('common:abbreviation.minutes'),\n      })}\n    />\n  ) : (\n    <VideoMetaData attributes={createPlaylistMetadata(seriesPlaylist, t('video:total_episodes', { count: seriesPlaylist?.playlist?.length }))} />\n  );\n  const secondaryMetadata = episodeMetadata && episode && (\n    <>\n      <strong>{formatSeriesMetaString(episodeMetadata.seasonNumber, episodeMetadata.episodeNumber)}</strong> - {episode.title}\n    </>\n  );\n  const filterMetadata =\n    episodeMetadata &&\n    ` ${t('video:season')} ${episodeMetadata.seasonNumber}/${filters?.length} - ${t('video:episode')} ${episodeMetadata.episodeNumber}/${episodesInSeason}`;\n  const shareButton = <ShareButton title={selectedItem?.title} description={pageDescription} url={canonicalUrl} />;\n  const startWatchingButton = (\n    <StartWatchingButton\n      key={episodeId} // necessary to fix autofocus on TalkBack\n      item={episode || firstEpisode}\n      playUrl={legacySeriesURL({ episodeId: episode?.mediaid || firstEpisode?.mediaid, seriesId, play: true, playlistId: feedId })}\n    />\n  );\n\n  // For the old series approach we mark episodes as favorite items. New approach is applied to the series\n  const favoriteButton = isFavoritesEnabled && <FavoriteButton item={episode || firstEpisode} />;\n  const trailerButton = (!!trailerItem || isTrailerLoading) && (\n    <Button\n      label={t('video:trailer')}\n      aria-label={t('video:watch_trailer')}\n      startIcon={<Icon icon={PlayTrailer} />}\n      onClick={() => setPlayTrailer(true)}\n      active={playTrailer}\n      fullWidth={breakpoint < Breakpoint.md}\n      disabled={!trailerItem}\n    />\n  );\n\n  return (\n    <React.Fragment>\n      <Helmet>\n        <title>{pageTitle}</title>\n        <link rel=\"canonical\" href={canonicalUrl} />\n        <meta name=\"description\" content={pageDescription} />\n        <meta property=\"og:description\" content={pageDescription} />\n        <meta property=\"og:title\" content={pageTitle} />\n        <meta property=\"og:type\" content={episode ? 'video.episode' : 'video.series'} />\n        {selectedItemImage && <meta property=\"og:image\" content={selectedItemImage?.replace(/^https:/, 'http:')} />}\n        {selectedItemImage && <meta property=\"og:image:secure_url\" content={selectedItemImage?.replace(/^http:/, 'https:')} />}\n        {selectedItemImage && <meta property=\"og:image:width\" content={selectedItemImage ? '720' : ''} />}\n        {selectedItemImage && <meta property=\"og:image:height\" content={selectedItemImage ? '406' : ''} />}\n        <meta name=\"twitter:title\" content={pageTitle} />\n        <meta name=\"twitter:description\" content={pageDescription} />\n        {selectedItemImage && <meta name=\"twitter:image\" content={selectedItemImage} />}\n        <meta property=\"og:video\" content={canonicalUrl.replace(/^https:/, 'http:')} />\n        <meta property=\"og:video:secure_url\" content={canonicalUrl.replace(/^http:/, 'https:')} />\n        <meta property=\"og:video:type\" content=\"text/html\" />\n        <meta property=\"og:video:width\" content=\"1280\" />\n        <meta property=\"og:video:height\" content=\"720\" />\n        {selectedItem.tags\n          ? String(selectedItem.tags)\n              .split(',')\n              .map((tag: string) => <meta property=\"og:video:tag\" content={tag} key={tag} />)\n          : null}\n        {seriesPlaylist && selectedItem ? (\n          <script type=\"application/ld+json\">{generateLegacyEpisodeJSONLD(seriesPlaylist, episode, episodeMetadata, seriesId)}</script>\n        ) : null}\n      </Helmet>\n      <VideoLayout\n        item={episode}\n        title={selectedItem.title}\n        description={pageDescription}\n        inlineLayout={inlineLayout}\n        primaryMetadata={primaryMetadata}\n        secondaryMetadata={secondaryMetadata}\n        image={backgroundImage}\n        shareButton={shareButton}\n        favoriteButton={favoriteButton}\n        trailerButton={trailerButton}\n        startWatchingButton={startWatchingButton}\n        isLoading={isLoading}\n        accessModel={accessModel}\n        isLoggedIn={isLoggedIn}\n        hasSubscription={hasSubscription}\n        playlist={filteredPlaylist}\n        relatedTitle={inlineLayout ? selectedItem.title : t('episodes')}\n        setFilter={setSeasonFilter}\n        currentFilter={seasonFilter}\n        defaultFilterLabel={t('all_seasons')}\n        activeLabel={t('current_episode')}\n        watchHistory={watchHistoryDictionary}\n        filterMetadata={filterMetadata}\n        filters={filters}\n        getURL={getUrl}\n        player={\n          inlineLayout && (episode || firstEpisode) ? (\n            <InlinePlayer\n              isLoggedIn={isLoggedIn}\n              item={episode || firstEpisode}\n              onComplete={handleComplete}\n              feedId={feedId ?? undefined}\n              startWatchingButton={startWatchingButton}\n              isEntitled={isEntitled}\n              hasMediaOffers={hasMediaOffers}\n              autostart={play || undefined}\n            />\n          ) : (\n            <Cinema\n              open={play && isEntitled}\n              onClose={goBack}\n              item={episode || firstEpisode}\n              title={episode?.title || firstEpisode.title}\n              primaryMetadata={primaryMetadata}\n              secondaryMetadata={secondaryMetadata}\n              onComplete={handleComplete}\n              feedId={feedId ?? undefined}\n            />\n          )\n        }\n      />\n      {episode && <TrailerModal item={trailerItem} title={`${episode.title} - Trailer`} open={playTrailer} onClose={() => setPlayTrailer(false)} />}\n    </React.Fragment>\n  );\n};\n\nexport default LegacySeries;\n","import type { Playlist, PlaylistItem } from '../../types/playlist';\n\nimport { isContentType } from './common';\n\ntype ScreenPredicate<T> = (data?: T) => boolean;\n\ntype ScreenDefinition<T, C> = {\n  predicate: ScreenPredicate<T>;\n  component: C;\n};\n\nexport class ScreenMap<T extends Playlist | PlaylistItem, C> {\n  private defaultScreen?: C = undefined;\n  private definitions: ScreenDefinition<T, C>[] = [];\n\n  register(component: C, predicate: ScreenPredicate<T>) {\n    this.definitions.push({ component, predicate });\n  }\n\n  registerByContentType(component: C, contentType: string) {\n    this.register(component, (data) => !!data && isContentType(data, contentType));\n  }\n\n  registerDefault(component: C) {\n    this.defaultScreen = component;\n  }\n\n  getScreen(data?: T): C {\n    const screen = this.definitions.find(({ predicate }) => predicate(data))?.component;\n\n    if (screen) {\n      return screen;\n    }\n\n    if (!this.defaultScreen) {\n      throw new Error('Default screen not defined');\n    }\n\n    return this.defaultScreen;\n  }\n}\n","import React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { mediaURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport env from '@jwp/ott-common/src/env';\n\nimport type { ScreenComponent } from '../../../../../types/screens';\nimport MarkdownComponent from '../../../../components/MarkdownComponent/MarkdownComponent';\n\nimport styles from './MediaStaticPage.module.scss';\n\nconst MediaStaticPage: ScreenComponent<PlaylistItem> = ({ data }) => {\n  const { config } = useConfigStore(({ config }) => ({ config }), shallow);\n  const { siteName } = config;\n  const pageTitle = `${data.title} - ${siteName}`;\n  const canonicalUrl = data ? `${env.APP_PUBLIC_URL}${mediaURL({ id: data.mediaid, title: data.title })}` : window.location.href;\n\n  useEffect(() => {\n    (document.scrollingElement || document.body).scroll({ top: 0 });\n  }, [data.mediaid]);\n\n  return (\n    <>\n      <Helmet>\n        <title>{pageTitle}</title>\n        <link rel=\"canonical\" href={canonicalUrl} />\n        <meta property=\"og:title\" content={pageTitle} />\n        <meta name=\"twitter:title\" content={pageTitle} />\n      </Helmet>\n      <div className={styles.mediaStaticPage}>\n        <MarkdownComponent markdownString={data.markdown || data.description} />\n      </div>\n    </>\n  );\n};\n\nexport default MediaStaticPage;\n","import type { PlaylistItem } from '../../types/playlist';\nimport type { EpisodeMetadata, Series } from '../../types/series';\n\nimport { mediaURL } from './urlFormatting';\nimport { secondsToISO8601 } from './datetime';\n\nexport const generateMovieJSONLD = (item: PlaylistItem, origin: string) => {\n  const { mediaid: id, title } = item;\n  const movieCanonical = `${origin}${mediaURL({ id, title })}`;\n\n  return JSON.stringify({\n    '@context': 'http://schema.org/',\n    '@type': 'VideoObject',\n    '@id': movieCanonical,\n    name: item.title,\n    description: item.description,\n    duration: secondsToISO8601(item.duration, true),\n    thumbnailUrl: item.image,\n    uploadDate: secondsToISO8601(item.pubdate),\n  });\n};\n\nexport const generateSeriesMetadata = (series: Series, media: PlaylistItem, seriesId: string, origin: string) => {\n  // Use playlist for old flow and media id for a new flow\n  const seriesCanonical = `${origin}/m/${seriesId}`;\n\n  return {\n    '@type': 'TVSeries',\n    '@id': seriesCanonical,\n    name: media.title,\n    numberOfEpisodes: String(series?.episode_count || 0),\n    numberOfSeasons: String(series?.season_count || 0),\n  };\n};\n\nexport const generateEpisodeJSONLD = (\n  series: Series,\n  media: PlaylistItem,\n  origin: string,\n  episode: PlaylistItem | undefined,\n  episodeMetadata: EpisodeMetadata | undefined,\n) => {\n  const episodeCanonical = `${origin}/m/${series.series_id}?e=${episode?.mediaid}`;\n  const seriesMetadata = generateSeriesMetadata(series, media, series.series_id, origin);\n\n  if (!episode) {\n    return JSON.stringify(seriesMetadata);\n  }\n\n  return JSON.stringify({\n    '@context': 'http://schema.org/',\n    '@type': 'TVEpisode',\n    '@id': episodeCanonical,\n    episodeNumber: episodeMetadata?.episodeNumber || '0',\n    seasonNumber: episodeMetadata?.seasonNumber || '0',\n    name: episode.title,\n    uploadDate: secondsToISO8601(episode.pubdate),\n    partOfSeries: seriesMetadata,\n  });\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport { createVideoMetadata } from '@jwp/ott-common/src/utils/metadata';\nimport { mediaURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport { generateMovieJSONLD } from '@jwp/ott-common/src/utils/structuredData';\nimport useMedia from '@jwp/ott-hooks-react/src/useMedia';\nimport usePlaylist from '@jwp/ott-hooks-react/src/usePlaylist';\nimport useEntitlement from '@jwp/ott-hooks-react/src/useEntitlement';\nimport useBreakpoint, { Breakpoint } from '@jwp/ott-ui-react/src/hooks/useBreakpoint';\nimport PlayTrailer from '@jwp/ott-theme/assets/icons/play_trailer.svg?react';\nimport useQueryParam from '@jwp/ott-ui-react/src/hooks/useQueryParam';\nimport env from '@jwp/ott-common/src/env';\n\nimport type { ScreenComponent } from '../../../../../types/screens';\nimport VideoLayout from '../../../../components/VideoLayout/VideoLayout';\nimport StartWatchingButton from '../../../../containers/StartWatchingButton/StartWatchingButton';\nimport Cinema from '../../../../containers/Cinema/Cinema';\nimport TrailerModal from '../../../../containers/TrailerModal/TrailerModal';\nimport ShareButton from '../../../../components/ShareButton/ShareButton';\nimport FavoriteButton from '../../../../containers/FavoriteButton/FavoriteButton';\nimport Button from '../../../../components/Button/Button';\nimport InlinePlayer from '../../../../containers/InlinePlayer/InlinePlayer';\nimport Icon from '../../../../components/Icon/Icon';\nimport VideoMetaData from '../../../../components/VideoMetaData/VideoMetaData';\n\nconst MediaMovie: ScreenComponent<PlaylistItem> = ({ data, isLoading }) => {\n  const { t } = useTranslation('video');\n\n  const [playTrailer, setPlayTrailer] = useState<boolean>(false);\n  const breakpoint = useBreakpoint();\n\n  // Routing\n  const navigate = useNavigate();\n\n  const params = useParams();\n  const id = params.id || '';\n  const play = useQueryParam('play') === '1';\n  const feedId = useQueryParam('r');\n\n  // Config\n  const { config, accessModel } = useConfigStore(({ config, accessModel }) => ({ config, accessModel }), shallow);\n  const { siteName, features, custom } = config;\n\n  const isFavoritesEnabled: boolean = Boolean(features?.favoritesList);\n  const inlineLayout = Boolean(custom?.inlinePlayer);\n\n  // Media\n  const { isLoading: isTrailerLoading, data: trailerItem } = useMedia(data?.trailerId || '');\n  const { isLoading: isPlaylistLoading, data: playlist } = usePlaylist(features?.recommendationsPlaylist || '', { related_media_id: id });\n\n  // User, entitlement\n  const { user, subscription } = useAccountStore(({ user, subscription }) => ({ user, subscription }), shallow);\n  const { isEntitled, mediaOffers } = useEntitlement(data);\n  const hasMediaOffers = !!mediaOffers.length;\n\n  // Handlers\n  const goBack = () => data && navigate(mediaURL({ id: data.mediaid, title: data.title, playlistId: feedId, play: false }));\n  const getUrl = (item: PlaylistItem) => mediaURL({ id: item.mediaid, title: item.title, playlistId: features?.recommendationsPlaylist });\n\n  const handleComplete = useCallback(() => {\n    if (!id || !playlist) return;\n\n    const index = playlist.playlist.findIndex(({ mediaid }) => mediaid === id);\n    const nextItem = playlist.playlist[index + 1];\n\n    return nextItem && navigate(mediaURL({ id: nextItem.mediaid, title: nextItem.title, playlistId: features?.recommendationsPlaylist, play: true }));\n  }, [id, playlist, navigate, features?.recommendationsPlaylist]);\n\n  useEffect(() => {\n    (document.scrollingElement || document.body).scroll({ top: 0 });\n    (document.querySelector('#video-details button') as HTMLElement)?.focus();\n  }, [id]);\n\n  // UI\n  const pageTitle = `${data.title} - ${siteName}`;\n  const canonicalUrl = data ? `${env.APP_PUBLIC_URL}${mediaURL({ id: data.mediaid, title: data.title })}` : window.location.href;\n\n  const primaryMetadata = (\n    <VideoMetaData\n      attributes={createVideoMetadata(data, { hoursAbbreviation: t('common:abbreviation.hours'), minutesAbbreviation: t('common:abbreviation.minutes') })}\n    />\n  );\n  const shareButton = <ShareButton title={data.title} description={data.description} url={canonicalUrl} />;\n  const startWatchingButton = (\n    <StartWatchingButton\n      key={id} // necessary to fix autofocus on TalkBack\n      item={data}\n      playUrl={mediaURL({ id: data.mediaid, title: data.title, playlistId: feedId, play: true })}\n    />\n  );\n\n  const favoriteButton = isFavoritesEnabled && <FavoriteButton item={data} />;\n  const trailerButton = (!!trailerItem || isTrailerLoading) && (\n    <Button\n      label={t('video:trailer')}\n      aria-label={t('video:watch_trailer')}\n      startIcon={<Icon icon={PlayTrailer} />}\n      onClick={() => setPlayTrailer(true)}\n      active={playTrailer}\n      fullWidth={breakpoint < Breakpoint.md}\n      disabled={!trailerItem}\n    />\n  );\n\n  const isLoggedIn = !!user;\n  const hasSubscription = !!subscription;\n\n  return (\n    <React.Fragment>\n      <Helmet>\n        <title>{pageTitle}</title>\n        <link rel=\"canonical\" href={canonicalUrl} />\n        <meta name=\"description\" content={data.description} />\n        <meta property=\"og:description\" content={data.description} />\n        <meta property=\"og:title\" content={pageTitle} />\n        <meta property=\"og:type\" content=\"video.other\" />\n        {data.image && <meta property=\"og:image\" content={data.image?.replace(/^https:/, 'http:')} />}\n        {data.image && <meta property=\"og:image:secure_url\" content={data.image?.replace(/^http:/, 'https:')} />}\n        <meta property=\"og:image:width\" content={data.image ? '720' : ''} />\n        <meta property=\"og:image:height\" content={data.image ? '406' : ''} />\n        <meta name=\"twitter:title\" content={pageTitle} />\n        <meta name=\"twitter:description\" content={data.description} />\n        <meta name=\"twitter:image\" content={data.image} />\n        <meta property=\"og:video\" content={canonicalUrl.replace(/^https:/, 'http:')} />\n        <meta property=\"og:video:secure_url\" content={canonicalUrl.replace(/^http:/, 'https:')} />\n        <meta property=\"og:video:type\" content=\"text/html\" />\n        <meta property=\"og:video:width\" content=\"1280\" />\n        <meta property=\"og:video:height\" content=\"720\" />\n        {data.tags?.split(',').map((tag) => (\n          <meta property=\"og:video:tag\" content={tag} key={tag} />\n        ))}\n        {data ? <script type=\"application/ld+json\">{generateMovieJSONLD(data, env.APP_PUBLIC_URL)}</script> : null}\n      </Helmet>\n      <VideoLayout\n        item={data}\n        inlineLayout={inlineLayout}\n        isLoading={isLoading || isPlaylistLoading}\n        accessModel={accessModel}\n        isLoggedIn={isLoggedIn}\n        hasSubscription={hasSubscription}\n        title={data.title}\n        description={data.description}\n        image={data.backgroundImage}\n        primaryMetadata={primaryMetadata}\n        shareButton={shareButton}\n        favoriteButton={favoriteButton}\n        trailerButton={trailerButton}\n        startWatchingButton={startWatchingButton}\n        playlist={playlist}\n        relatedTitle={playlist?.title}\n        getURL={getUrl}\n        activeLabel={t('current_video')}\n        player={\n          inlineLayout ? (\n            <InlinePlayer\n              isLoggedIn={isLoggedIn}\n              item={data}\n              onComplete={handleComplete}\n              feedId={feedId ?? undefined}\n              startWatchingButton={startWatchingButton}\n              isEntitled={isEntitled}\n              hasMediaOffers={hasMediaOffers}\n              autostart={play || undefined}\n            />\n          ) : (\n            <Cinema\n              open={play && isEntitled}\n              onClose={goBack}\n              item={data}\n              title={data.title}\n              primaryMetadata={primaryMetadata}\n              onComplete={handleComplete}\n              feedId={feedId ?? undefined}\n              onNext={handleComplete}\n            />\n          )\n        }\n      />\n      <TrailerModal item={trailerItem} title={`${data.title} - Trailer`} open={playTrailer} onClose={() => setPlayTrailer(false)} />\n    </React.Fragment>\n  );\n};\n\nexport default MediaMovie;\n","import type { EpisodeMetadata, Series } from '../../types/series';\n\n/**\n * Get an array of options for a season filter\n */\nexport const getFiltersFromSeries = (series: Series | undefined): { label: string; value: string }[] => {\n  return series && 'seasons' in series\n    ? series.seasons.map((season) => ({ label: season.season_title || String(season.season_number), value: String(season.season_number) }))\n    : [];\n};\n\n/** Get a total amount of episodes in a season */\nexport const getEpisodesInSeason = (episodeMetadata: EpisodeMetadata | undefined, series: Series | undefined) => {\n  return (series?.seasons || []).find((el) => el.season_number === Number(episodeMetadata?.seasonNumber))?.episode_count;\n};\n","import { useQuery, type UseQueryResult } from 'react-query';\nimport type { Series } from '@jwp/ott-common/types/series';\nimport ApiService from '@jwp/ott-common/src/services/ApiService';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport type { ApiError } from '@jwp/ott-common/src/utils/api';\nimport { CACHE_TIME, STALE_TIME } from '@jwp/ott-common/src/constants';\n\nexport const useSeries = (\n  seriesId: string | undefined,\n): {\n  data: Series | undefined;\n  error: ApiError | null;\n  isLoading: boolean;\n} => {\n  const apiService = getModule(ApiService);\n\n  // Try to get new series flow data\n  const { data, isLoading, error }: UseQueryResult<Series, ApiError> = useQuery(\n    ['series', seriesId],\n    async () => {\n      const series = await apiService.getSeries(seriesId || '');\n\n      return series;\n    },\n    {\n      enabled: !!seriesId,\n      staleTime: STALE_TIME,\n      cacheTime: CACHE_TIME,\n      // Don't retry when we got a not found error from either series or media item request (prevent unneeded requests)\n      // Both errors mean that old series flow should be used\n      retry: (failureCount, error: ApiError) => error.code !== 404 && failureCount < 2,\n    },\n  );\n\n  return { data, isLoading, error };\n};\n","import { useInfiniteQuery } from 'react-query';\nimport type { EpisodesWithPagination } from '@jwp/ott-common/types/series';\nimport type { Pagination } from '@jwp/ott-common/types/pagination';\nimport ApiService from '@jwp/ott-common/src/services/ApiService';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { CACHE_TIME, STALE_TIME } from '@jwp/ott-common/src/constants';\nimport { useTranslation } from 'react-i18next';\n\nconst getNextPageParam = (pagination: Pagination) => {\n  const { page, page_limit, total } = pagination;\n\n  // In case there are no more episodes in a season to fetch\n  if (page_limit * page >= total) {\n    return undefined;\n  }\n\n  return page;\n};\n\nexport const useEpisodes = (\n  seriesId: string | undefined,\n  seasonNumber: string | undefined,\n  options: { enabled: boolean },\n): {\n  data: EpisodesWithPagination[];\n  hasNextPage: boolean;\n  fetchNextPage: (params?: { pageParam?: number }) => void;\n  isLoading: boolean;\n} => {\n  const apiService = getModule(ApiService);\n\n  // Determine currently selected language\n  const { i18n } = useTranslation();\n  const language = i18n.language;\n\n  console.log(\"useEpisodes | seriesId: \" + seriesId + \" | seasonNo: \" + seasonNumber);\n\n  const {\n    data,\n    fetchNextPage,\n    isLoading,\n    hasNextPage = false,\n  } = useInfiniteQuery(\n    [seriesId, seasonNumber, language],\n    async ({ pageParam = 0 }) => {      \n      if (Number(seasonNumber)) {\n        // Get episodes from a selected season using pagination\n        const season = await apiService.getSeasonWithEpisodes({ seriesId, seasonNumber: Number(seasonNumber), pageOffset: pageParam, language });\n\n        return { pagination: season.pagination, episodes: season.episodes };\n      } else {\n        // Get episodes from a selected series using pagination\n        const data = await apiService.getEpisodes({ seriesId, pageOffset: pageParam, language });\n        return data;\n      }\n    },\n    {\n      getNextPageParam: (lastPage) => getNextPageParam(lastPage?.pagination),\n      enabled: options.enabled,\n      staleTime: STALE_TIME,\n      cacheTime: CACHE_TIME,\n    },\n  );\n\n  return {\n    data: data?.pages || [],\n    isLoading,\n    fetchNextPage,\n    hasNextPage,\n  };\n};\n","import { useQuery } from 'react-query';\nimport ApiService from '@jwp/ott-common/src/services/ApiService';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { CACHE_TIME, STALE_TIME } from '@jwp/ott-common/src/constants';\n\nexport const useSeriesLookup = (mediaId: string | undefined) => {\n  const apiService = getModule(ApiService);\n\n  const { isLoading, data } = useQuery(\n    ['seriesLookup', mediaId],\n    async () => {\n      if (!mediaId) {\n        return;\n      }\n\n      // get all series for the given media id\n      const data = await apiService.getSeriesByMediaIds([mediaId]);\n      // get first series for the requested episode\n      const firstSeries = data?.[mediaId]?.[0];\n\n      return firstSeries;\n    },\n    { staleTime: STALE_TIME, cacheTime: CACHE_TIME, enabled: !!mediaId },\n  );\n\n  return {\n    isLoading,\n    data,\n  };\n};\n","import { useQuery } from 'react-query';\nimport type { Series } from '@jwp/ott-common/types/series';\nimport ApiService from '@jwp/ott-common/src/services/ApiService';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { CACHE_TIME, STALE_TIME } from '@jwp/ott-common/src/constants';\nimport { useTranslation } from 'react-i18next';\n\nexport const useNextEpisode = ({ series, episodeId }: { series: Series | undefined; episodeId: string | undefined }) => {\n  const apiService = getModule(ApiService);\n\n  // Determine currently selected language\n  const { i18n } = useTranslation();\n  const language = i18n.language;\n\n  const { isLoading, data } = useQuery(\n    ['next-episode', series?.series_id, episodeId, language],\n    async () => {\n      const item = await apiService.getEpisodes({ seriesId: series?.series_id, pageLimit: 1, afterId: episodeId, language });\n\n      return item?.episodes?.[0];\n    },\n    { staleTime: STALE_TIME, cacheTime: CACHE_TIME, enabled: !!(series?.series_id && episodeId) },\n  );\n\n  return {\n    isLoading,\n    data,\n  };\n};\n","import { useQuery } from 'react-query';\nimport type { Series } from '@jwp/ott-common/types/series';\nimport ApiService from '@jwp/ott-common/src/services/ApiService';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { CACHE_TIME, STALE_TIME } from '@jwp/ott-common/src/constants';\nimport { useTranslation } from 'react-i18next';\n\nexport const useFirstEpisode = ({ series }: { series: Series | undefined }) => {\n  const apiService = getModule(ApiService);\n  const { i18n } = useTranslation();\n\n  const { isLoading, data } = useQuery(\n    ['first-episode', series?.series_id],\n    async () => {\n      const item = await apiService.getEpisodes({ seriesId: series?.series_id, pageLimit: 1, language: i18n.language });\n\n      return item?.episodes?.[0];\n    },\n    { staleTime: STALE_TIME, cacheTime: CACHE_TIME, enabled: !!series?.series_id },\n  );\n\n  return {\n    isLoading,\n    data,\n  };\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Navigate, useLocation } from 'react-router';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport { useSearchParams } from 'react-router-dom';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { useWatchHistoryStore } from '@jwp/ott-common/src/stores/WatchHistoryStore';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport { generateEpisodeJSONLD } from '@jwp/ott-common/src/utils/structuredData';\nimport { getEpisodesInSeason, getFiltersFromSeries } from '@jwp/ott-common/src/utils/series';\nimport { createVideoMetadata } from '@jwp/ott-common/src/utils/metadata';\nimport { formatSeriesMetaString } from '@jwp/ott-common/src/utils/formatting';\nimport { buildLegacySeriesUrlFromMediaItem, mediaURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport { VideoProgressMinMax } from '@jwp/ott-common/src/constants';\nimport useEntitlement from '@jwp/ott-hooks-react/src/useEntitlement';\nimport useMedia from '@jwp/ott-hooks-react/src/useMedia';\nimport { useSeries } from '@jwp/ott-hooks-react/src/series/useSeries';\nimport { useEpisodes } from '@jwp/ott-hooks-react/src/series/useEpisodes';\nimport { useSeriesLookup } from '@jwp/ott-hooks-react/src/series/useSeriesLookup';\nimport { useNextEpisode } from '@jwp/ott-hooks-react/src/series/useNextEpisode';\nimport PlayTrailer from '@jwp/ott-theme/assets/icons/play_trailer.svg?react';\nimport useBreakpoint, { Breakpoint } from '@jwp/ott-ui-react/src/hooks/useBreakpoint';\nimport { useFirstEpisode } from '@jwp/ott-hooks-react/src/series/useFirstEpisode';\nimport env from '@jwp/ott-common/src/env';\n\nimport type { ScreenComponent } from '../../../../../types/screens';\nimport ErrorPage from '../../../../components/ErrorPage/ErrorPage';\nimport StartWatchingButton from '../../../../containers/StartWatchingButton/StartWatchingButton';\nimport InlinePlayer from '../../../../containers/InlinePlayer/InlinePlayer';\nimport VideoLayout from '../../../../components/VideoLayout/VideoLayout';\nimport Cinema from '../../../../containers/Cinema/Cinema';\nimport TrailerModal from '../../../../containers/TrailerModal/TrailerModal';\nimport ShareButton from '../../../../components/ShareButton/ShareButton';\nimport FavoriteButton from '../../../../containers/FavoriteButton/FavoriteButton';\nimport Button from '../../../../components/Button/Button';\nimport Loading from '../../../Loading/Loading';\nimport Icon from '../../../../components/Icon/Icon';\nimport VideoMetaData from '../../../../components/VideoMetaData/VideoMetaData';\nimport { createURLFromLocation } from '../../../../utils/location';\n\nconst MediaSeries: ScreenComponent<PlaylistItem> = ({ data: seriesMedia }) => {\n  const breakpoint = useBreakpoint();\n  const { t } = useTranslation('video');\n  const [playTrailer, setPlayTrailer] = useState<boolean>(false);\n\n  // Navigation\n  const [searchParams, setSearchParams] = useSearchParams();\n  const seriesId = seriesMedia.mediaid;\n  const play = searchParams.get('play') === '1';\n  const feedId = searchParams.get('r');\n  const episodeId = searchParams.get('e');\n\n  // Main data\n  const { isLoading: isSeriesDataLoading, data: series, error: seriesError } = useSeries(seriesId);\n  const { isLoading: isEpisodeLoading, data: episode } = useMedia(episodeId || '');\n  const { isLoading: isTrailerLoading, data: trailerItem } = useMedia(episode?.trailerId || '');\n  const { isLoading: isSeriesDictionaryLoading, data: episodeInSeries } = useSeriesLookup(episodeId || undefined);\n  const { isLoading: isFirstEpisodeLoading, data: firstEpisode } = useFirstEpisode({ series });\n\n  // Whether we show series or episode information\n  const selectedItem = (episode || seriesMedia) as PlaylistItem;\n\n  // Config\n  const { config, accessModel } = useConfigStore(({ config, accessModel }) => ({ config, accessModel }), shallow);\n  const { features, siteName, custom } = config;\n  const isFavoritesEnabled: boolean = Boolean(features?.favoritesList);\n  const inlineLayout = Boolean(custom?.inlinePlayer);\n\n  // Filters\n  const filters = useMemo(() => getFiltersFromSeries(series), [series]);\n  const [seasonFilter, setSeasonFilter] = useState<string | undefined>(undefined);\n\n  // Season / episodes data\n  const {\n    data: episodes,\n    fetchNextPage: fetchNextEpisodes,\n    hasNextPage: hasNextEpisodesPage,\n  } = useEpisodes(seriesId, seasonFilter, { enabled: seasonFilter !== undefined && !!series });\n\n  const episodeMetadata = useMemo(\n    () =>\n      episodeInSeries && {\n        episodeNumber: episodeInSeries?.episode_number ? String(episodeInSeries.episode_number) : '',\n        seasonNumber: episodeInSeries?.season_number ? String(episodeInSeries.season_number) : '',\n      },\n    [episodeInSeries],\n  );\n  const playlist = useMemo(\n    () => ({\n      title: seriesMedia.title,\n      description: seriesMedia.description,\n      feedid: series?.series_id,\n      playlist: episodes?.flatMap((e) => e.episodes) || [],\n    }),\n    [seriesMedia, series, episodes],\n  );\n\n  const episodesInSeason = getEpisodesInSeason(episodeMetadata, series);\n  const { data: nextItem } = useNextEpisode({ series, episodeId: episode?.mediaid || firstEpisode?.mediaid });\n\n  // Watch history\n  const watchHistoryArray = useWatchHistoryStore((state) => state.watchHistory);\n  const watchHistoryDictionary = useWatchHistoryStore((state) => state.getDictionaryWithEpisodes());\n  const episodeInProgress = watchHistoryArray.find(\n    (episode) => episode?.seriesId === seriesId && episode.progress > VideoProgressMinMax.Min && episode.progress < VideoProgressMinMax.Max,\n  );\n\n  // User, entitlement\n  const { user, subscription } = useAccountStore(({ user, subscription }) => ({ user, subscription }), shallow);\n  const { isEntitled, mediaOffers } = useEntitlement(episode || firstEpisode);\n  const hasMediaOffers = !!mediaOffers.length;\n\n  const isLoggedIn = !!user;\n  const hasSubscription = !!subscription;\n\n  const location = useLocation();\n  const getURL = (toEpisode: PlaylistItem) => {\n    return createURLFromLocation(location, { e: toEpisode.mediaid });\n  };\n\n  // Handlers\n  const goBack = useCallback(() => {\n    setSearchParams({ ...searchParams, e: episode?.mediaid, r: feedId || '' });\n  }, [setSearchParams, searchParams, episode, feedId]);\n\n  const handleComplete = useCallback(async () => {\n    setSearchParams({ ...searchParams, e: (nextItem || episode)?.mediaid, r: feedId || '', play: nextItem ? '1' : '0' });\n  }, [setSearchParams, nextItem, episode, feedId, searchParams]);\n\n  const handleInlinePlay = useCallback(async () => {\n    if (!episode) {\n      setSearchParams({ ...searchParams, e: firstEpisode?.mediaid, r: feedId || '', play: '1' });\n    }\n  }, [setSearchParams, firstEpisode, feedId, episode, searchParams]);\n\n  // Effects\n  useEffect(() => {\n    (document.scrollingElement || document.body).scroll({ top: 0 });\n    (document.querySelector('#video-details button') as HTMLElement)?.focus();\n  }, [episode]);\n\n  useEffect(() => {\n    if (episodeInProgress && !searchParams.get('e')) {\n      setSearchParams({ ...searchParams, e: episodeInProgress.mediaid, r: feedId || '' }, { replace: true });\n    }\n  }, [episodeInProgress, setSearchParams, searchParams, feedId]);\n\n  useEffect(() => {\n    if (isSeriesDataLoading || isEpisodeLoading || isSeriesDictionaryLoading) {\n      return;\n    }\n\n    // No episode is selected, filter is not set\n    if (!episodeId && seasonFilter === undefined) {\n      setSeasonFilter(filters[0]?.value || '');\n      return;\n    }\n\n    // Select a corresponding season for an episode\n    if (seasonFilter === undefined && episodeMetadata) {\n      setSeasonFilter(episodeMetadata.seasonNumber);\n    }\n  }, [episodeMetadata, seasonFilter, isSeriesDataLoading, isEpisodeLoading, isSeriesDictionaryLoading, filters, episodeId]);\n\n  // UI\n  const playEpisode = episode || firstEpisode;\n  const isLoading = isSeriesDataLoading || isSeriesDictionaryLoading || isEpisodeLoading || isFirstEpisodeLoading;\n\n  const startWatchingButton = useMemo(\n    () =>\n      playEpisode && (\n        <StartWatchingButton\n          key={episodeId} // necessary to fix autofocus on TalkBack\n          item={playEpisode}\n          onClick={() => {\n            setSearchParams({ ...searchParams, e: playEpisode.mediaid, r: feedId || '', play: '1' }, { replace: true });\n          }}\n        />\n      ),\n    [episodeId, playEpisode, setSearchParams, searchParams, feedId],\n  );\n\n  if (isLoading) return <Loading />;\n\n  // Legacy series is used\n  if (seriesError?.code === 404) {\n    const url = buildLegacySeriesUrlFromMediaItem(seriesMedia, play, feedId);\n\n    return <Navigate to={url} replace />;\n  }\n\n  if (!seriesMedia || !series || !playEpisode) return <ErrorPage title={t('series_error')} />;\n\n  const pageTitle = `${selectedItem.title} - ${siteName}`;\n  const canonicalUrl = `${env.APP_PUBLIC_URL}${mediaURL({ id: seriesMedia.mediaid, title: seriesMedia.title, episodeId: episode?.mediaid })}`;\n\n  const primaryMetadata = (\n    <VideoMetaData\n      attributes={createVideoMetadata(selectedItem, {\n        episodesLabel: t('video:total_episodes', { count: series.episode_count }),\n        hoursAbbreviation: t('common:abbreviation.hours'),\n        minutesAbbreviation: t('common:abbreviation.minutes'),\n      })}\n    />\n  );\n  const secondaryMetadata = episodeMetadata && episode && (\n    <>\n      <strong>{formatSeriesMetaString(episodeMetadata.seasonNumber, episodeMetadata.episodeNumber)}</strong> - {episode.title}\n    </>\n  );\n  const filterMetadata =\n    episodeMetadata &&\n    ` ${t('video:season')} ${episodeMetadata.seasonNumber}/${filters?.length} - ${t('video:episode')} ${episodeMetadata.episodeNumber}/${episodesInSeason}`;\n  const shareButton = <ShareButton title={selectedItem?.title} description={selectedItem.description} url={canonicalUrl} />;\n\n  // For the old series approach we mark episodes as favorite items. New approach is applied to the series\n  const favoriteButton = isFavoritesEnabled && <FavoriteButton item={seriesMedia || firstEpisode} />;\n  const trailerButton = (!!trailerItem || isTrailerLoading) && (\n    <Button\n      label={t('video:trailer')}\n      aria-label={t('video:watch_trailer')}\n      startIcon={<Icon icon={PlayTrailer} />}\n      onClick={() => setPlayTrailer(true)}\n      active={playTrailer}\n      fullWidth={breakpoint < Breakpoint.md}\n      disabled={!trailerItem}\n    />\n  );\n\n  return (\n    <React.Fragment>\n      <Helmet>\n        <title>{pageTitle}</title>\n        <link rel=\"canonical\" href={canonicalUrl} />\n        <meta name=\"description\" content={selectedItem.description} />\n        <meta property=\"og:description\" content={selectedItem.description} />\n        <meta property=\"og:title\" content={pageTitle} />\n        <meta property=\"og:type\" content={episode ? 'video.episode' : 'video.series'} />\n        {selectedItem.image && <meta property=\"og:image\" content={selectedItem.image?.replace(/^https:/, 'http:')} />}\n        {selectedItem.image && <meta property=\"og:image:secure_url\" content={selectedItem.image?.replace(/^http:/, 'https:')} />}\n        {selectedItem.image && <meta property=\"og:image:width\" content={selectedItem.image ? '720' : ''} />}\n        {selectedItem.image && <meta property=\"og:image:height\" content={selectedItem.image ? '406' : ''} />}\n        <meta name=\"twitter:title\" content={pageTitle} />\n        <meta name=\"twitter:description\" content={selectedItem.description} />\n        <meta name=\"twitter:image\" content={selectedItem.image} />\n        <meta property=\"og:video\" content={canonicalUrl.replace(/^https:/, 'http:')} />\n        <meta property=\"og:video:secure_url\" content={canonicalUrl.replace(/^http:/, 'https:')} />\n        <meta property=\"og:video:type\" content=\"text/html\" />\n        <meta property=\"og:video:width\" content=\"1280\" />\n        <meta property=\"og:video:height\" content=\"720\" />\n        {selectedItem.tags?.split(',').map((tag: string) => (\n          <meta property=\"og:video:tag\" content={tag} key={tag} />\n        ))}\n        {selectedItem ? (\n          <script type=\"application/ld+json\">{generateEpisodeJSONLD(series, seriesMedia, env.APP_PUBLIC_URL, episode, episodeMetadata)}</script>\n        ) : null}\n      </Helmet>\n      <VideoLayout\n        item={selectedItem}\n        title={inlineLayout ? selectedItem.title : seriesMedia.title}\n        description={selectedItem.description || seriesMedia.description}\n        inlineLayout={inlineLayout}\n        primaryMetadata={primaryMetadata}\n        secondaryMetadata={secondaryMetadata}\n        image={selectedItem.backgroundImage}\n        shareButton={shareButton}\n        favoriteButton={favoriteButton}\n        trailerButton={trailerButton}\n        startWatchingButton={startWatchingButton}\n        isLoading={isLoading}\n        accessModel={accessModel}\n        isLoggedIn={isLoggedIn}\n        hasSubscription={hasSubscription}\n        playlist={playlist}\n        relatedTitle={inlineLayout ? seriesMedia.title : t('episodes')}\n        getURL={getURL}\n        setFilter={setSeasonFilter}\n        currentFilter={seasonFilter}\n        defaultFilterLabel={t('all_seasons')}\n        activeLabel={t('current_episode')}\n        watchHistory={watchHistoryDictionary}\n        filterMetadata={filterMetadata}\n        filters={filters}\n        hasMore={hasNextEpisodesPage}\n        loadMore={fetchNextEpisodes}\n        player={\n          inlineLayout ? (\n            <InlinePlayer\n              isLoggedIn={isLoggedIn}\n              item={playEpisode}\n              seriesItem={seriesMedia}\n              onComplete={handleComplete}\n              feedId={feedId ?? undefined}\n              onPlay={handleInlinePlay}\n              startWatchingButton={startWatchingButton}\n              isEntitled={isEntitled}\n              hasMediaOffers={hasMediaOffers}\n              autostart={play || undefined}\n            />\n          ) : (\n            <Cinema\n              open={play && isEntitled}\n              onClose={goBack}\n              item={playEpisode}\n              seriesItem={seriesMedia}\n              title={seriesMedia.title}\n              primaryMetadata={primaryMetadata}\n              secondaryMetadata={secondaryMetadata}\n              onComplete={handleComplete}\n              feedId={feedId ?? undefined}\n            />\n          )\n        }\n      />\n      {episode && <TrailerModal item={trailerItem} title={`${episode.title} - Trailer`} open={playTrailer} onClose={() => setPlayTrailer(false)} />}\n    </React.Fragment>\n  );\n};\n\nexport default MediaSeries;\n","import { Navigate } from 'react-router-dom';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { liveChannelsURL } from '@jwp/ott-common/src/utils/urlFormatting';\n\nimport type { ScreenComponent } from '../../../../../types/screens';\nimport Loading from '../../../Loading/Loading';\nimport MediaMovie from '../MediaMovie/MediaMovie';\n\nconst MediaLiveChannel: ScreenComponent<PlaylistItem> = ({ data, isLoading }) => {\n  const liveChannelsId = data.liveChannelsId;\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  // this live channel is part of a live channels (TV Guide) page\n  if (liveChannelsId) {\n    return <Navigate to={liveChannelsURL(liveChannelsId, data.mediaid)} replace={true}></Navigate>;\n  }\n\n  // this live channel is \"just\" a media item\n  return <MediaMovie data={data} isLoading={isLoading} />;\n};\n\nexport default MediaLiveChannel;\n","import { Navigate } from 'react-router';\nimport { useSearchParams } from 'react-router-dom';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { buildLegacySeriesUrlFromMediaItem, mediaURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport { useSeriesLookup } from '@jwp/ott-hooks-react/src/series/useSeriesLookup';\nimport useMedia from '@jwp/ott-hooks-react/src/useMedia';\n\nimport type { ScreenComponent } from '../../../../../types/screens';\nimport Loading from '../../../Loading/Loading';\n\n/**\n * This media series episode screen is used to redirect an episode item to the series page.\n */\nconst MediaEpisode: ScreenComponent<PlaylistItem> = ({ data: media, isLoading: isMediaLoading }) => {\n  const mediaId = media.mediaid;\n  const [searchParams] = useSearchParams();\n\n  const play = searchParams.get('play') === '1';\n  const feedId = searchParams.get('r');\n\n  const { data: episodeInSeries, isLoading: isSeriesIdLoading } = useSeriesLookup(media.mediaid);\n  const { isLoading: isSeriesMediaLoading, data: seriesMedia } = useMedia(episodeInSeries?.series_id || '');\n\n  // Prevent rendering multiple times when we are loading data\n  if (isMediaLoading || isSeriesIdLoading || isSeriesMediaLoading) {\n    return <Loading />;\n  }\n\n  if (!episodeInSeries) {\n    return <Navigate to={buildLegacySeriesUrlFromMediaItem(media, play, feedId)} replace />;\n  }\n\n  const { mediaid: id, title } = seriesMedia as PlaylistItem;\n\n  // Use media episode item for legacy series flow\n  return (\n    <Navigate\n      to={mediaURL({\n        episodeId: mediaId,\n        id,\n        title,\n        play,\n        playlistId: feedId,\n      })}\n      replace\n    />\n  );\n};\n\nexport default MediaEpisode;\n","import type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { isLiveEvent, isPlayable } from '@jwp/ott-common/src/utils/liveEvent';\n\nexport function useLiveEvent(media: PlaylistItem) {\n  return {\n    isLiveEvent: isLiveEvent(media),\n    isPlayable: isPlayable(media),\n  };\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport styles from './Tag.module.scss';\n\ntype TagProps = {\n  className?: string;\n  isLive?: boolean;\n  children?: React.ReactNode;\n  size?: 'normal' | 'large';\n};\n\nconst Tag: React.FC<TagProps> = ({ children, className, isLive = false, size = 'normal' }: TagProps) => {\n  return (\n    <div\n      className={classNames(className, styles.tag, styles[size], {\n        [styles.live]: isLive,\n      })}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Tag;\n","import { useTranslation } from 'react-i18next';\nimport { MediaStatus } from '@jwp/ott-common/src/utils/liveEvent';\nimport Today from '@jwp/ott-theme/assets/icons/today.svg?react';\n\nimport Tag from '../Tag/Tag';\nimport Icon from '../Icon/Icon';\n\nimport styles from './StatusIcon.module.scss';\n\ntype Props = {\n  mediaStatus?: MediaStatus;\n};\n\nexport default function StatusIcon({ mediaStatus }: Props) {\n  const { t } = useTranslation('video');\n\n  if (mediaStatus === MediaStatus.SCHEDULED || mediaStatus === MediaStatus.VOD) {\n    return <Icon icon={Today} className={styles.icon} />;\n  } else if (mediaStatus === MediaStatus.LIVE) {\n    return (\n      <Tag isLive className={styles.icon}>\n        {t('live')}\n      </Tag>\n    );\n  }\n\n  return null;\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport { MediaStatus } from '@jwp/ott-common/src/utils/liveEvent';\nimport { createLiveEventMetadata } from '@jwp/ott-common/src/utils/metadata';\nimport { mediaURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport { generateMovieJSONLD } from '@jwp/ott-common/src/utils/structuredData';\nimport useMedia from '@jwp/ott-hooks-react/src/useMedia';\nimport { useLiveEvent } from '@jwp/ott-hooks-react/src/useLiveEvent';\nimport usePlaylist from '@jwp/ott-hooks-react/src/usePlaylist';\nimport useEntitlement from '@jwp/ott-hooks-react/src/useEntitlement';\nimport useBreakpoint, { Breakpoint } from '@jwp/ott-ui-react/src/hooks/useBreakpoint';\nimport PlayTrailer from '@jwp/ott-theme/assets/icons/play_trailer.svg?react';\nimport useQueryParam from '@jwp/ott-ui-react/src/hooks/useQueryParam';\nimport env from '@jwp/ott-common/src/env';\n\nimport type { ScreenComponent } from '../../../../../types/screens';\nimport VideoLayout from '../../../../components/VideoLayout/VideoLayout';\nimport StartWatchingButton from '../../../../containers/StartWatchingButton/StartWatchingButton';\nimport Cinema from '../../../../containers/Cinema/Cinema';\nimport TrailerModal from '../../../../containers/TrailerModal/TrailerModal';\nimport ShareButton from '../../../../components/ShareButton/ShareButton';\nimport FavoriteButton from '../../../../containers/FavoriteButton/FavoriteButton';\nimport Button from '../../../../components/Button/Button';\nimport InlinePlayer from '../../../../containers/InlinePlayer/InlinePlayer';\nimport StatusIcon from '../../../../components/StatusIcon/StatusIcon';\nimport VideoMetaData from '../../../../components/VideoMetaData/VideoMetaData';\nimport Icon from '../../../../components/Icon/Icon';\n\nconst MediaEvent: ScreenComponent<PlaylistItem> = ({ data: media, isLoading }) => {\n  const { t, i18n } = useTranslation(['video', 'common']);\n\n  const [playTrailer, setPlayTrailer] = useState<boolean>(false);\n  const breakpoint = useBreakpoint();\n\n  // Routing\n  const navigate = useNavigate();\n\n  const params = useParams();\n  const id = params.id || '';\n  const play = useQueryParam('play') === '1';\n  const playlistId = useQueryParam('r');\n\n  // Config\n  const { config, accessModel } = useConfigStore(({ config, accessModel }) => ({ config, accessModel }), shallow);\n  const { siteName, features, custom } = config;\n\n  const isFavoritesEnabled: boolean = Boolean(features?.favoritesList);\n  const inlineLayout = Boolean(custom?.inlinePlayer);\n\n  // Media\n  const { isLoading: isTrailerLoading, data: trailerItem } = useMedia(media?.trailerId || '');\n  const { isLoading: isPlaylistLoading, data: playlist } = usePlaylist(playlistId || '');\n\n  // Event\n  const liveEvent = useLiveEvent(media);\n\n  // User, entitlement\n  const { user, subscription } = useAccountStore(({ user, subscription }) => ({ user, subscription }), shallow);\n  const { isEntitled, mediaOffers } = useEntitlement(media);\n  const hasMediaOffers = !!mediaOffers.length;\n\n  // Handlers\n  const goBack = () => media && navigate(mediaURL({ id: media.mediaid, title: media.title, playlistId, play: false }));\n  const getUrl = (item: PlaylistItem) => mediaURL({ id: item.mediaid, title: item.title, playlistId });\n\n  const handleComplete = useCallback(() => {\n    if (!id || !playlist) return;\n\n    const index = playlist.playlist.findIndex(({ mediaid }) => mediaid === id);\n    const nextItem = playlist.playlist[index + 1];\n\n    if (nextItem.mediaStatus === MediaStatus.SCHEDULED) {\n      return;\n    }\n\n    return nextItem && navigate(mediaURL({ id: nextItem.mediaid, title: nextItem.title, playlistId, play: true }));\n  }, [id, playlist, navigate, playlistId]);\n\n  // Effects\n  useEffect(() => {\n    (document.scrollingElement || document.body).scroll({ top: 0 });\n    (document.querySelector('#video-details button') as HTMLElement)?.focus();\n  }, [id]);\n\n  // UI\n  const { title, mediaid } = media;\n  const pageTitle = `${title} - ${siteName}`;\n  const canonicalUrl = media ? `${env.APP_PUBLIC_URL}${mediaURL({ id: mediaid, title })}` : window.location.href;\n\n  const primaryMetadata = (\n    <>\n      <StatusIcon mediaStatus={media.mediaStatus} />\n      <VideoMetaData\n        attributes={createLiveEventMetadata(media, i18n.language, {\n          minutesAbbreviation: t('common:abbreviation.minutes'),\n          hoursAbbreviation: t('common:abbreviation.hours'),\n        })}\n      />\n    </>\n  );\n\n  const shareButton = <ShareButton title={media.title} description={media.description} url={canonicalUrl} />;\n  const startWatchingButton = (\n    <StartWatchingButton\n      key={id} // necessary to fix autofocus on TalkBack\n      item={media}\n      playUrl={mediaURL({ id: mediaid, title, playlistId, play: true })}\n      disabled={!liveEvent.isPlayable}\n    />\n  );\n\n  const favoriteButton = isFavoritesEnabled && <FavoriteButton item={media} />;\n  const trailerButton = (!!trailerItem || isTrailerLoading) && (\n    <Button\n      label={t('video:trailer')}\n      aria-label={t('video:watch_trailer')}\n      startIcon={<Icon icon={PlayTrailer} />}\n      onClick={() => setPlayTrailer(true)}\n      active={playTrailer}\n      fullWidth={breakpoint < Breakpoint.md}\n      disabled={!trailerItem}\n    />\n  );\n\n  const isLoggedIn = !!user;\n  const hasSubscription = !!subscription;\n\n  return (\n    <React.Fragment>\n      <Helmet>\n        <title>{pageTitle}</title>\n        <link rel=\"canonical\" href={canonicalUrl} />\n        <meta name=\"description\" content={media.description} />\n        <meta property=\"og:description\" content={media.description} />\n        <meta property=\"og:title\" content={pageTitle} />\n        <meta property=\"og:type\" content=\"video.other\" />\n        {media.image && <meta property=\"og:image\" content={media.image?.replace(/^https:/, 'http:')} />}\n        {media.image && <meta property=\"og:image:secure_url\" content={media.image?.replace(/^http:/, 'https:')} />}\n        <meta property=\"og:image:width\" content={media.image ? '720' : ''} />\n        <meta property=\"og:image:height\" content={media.image ? '406' : ''} />\n        <meta name=\"twitter:title\" content={pageTitle} />\n        <meta name=\"twitter:description\" content={media.description} />\n        <meta name=\"twitter:image\" content={media.image} />\n        <meta property=\"og:video\" content={canonicalUrl.replace(/^https:/, 'http:')} />\n        <meta property=\"og:video:secure_url\" content={canonicalUrl.replace(/^http:/, 'https:')} />\n        <meta property=\"og:video:type\" content=\"text/html\" />\n        <meta property=\"og:video:width\" content=\"1280\" />\n        <meta property=\"og:video:height\" content=\"720\" />\n        {media.tags?.split(',').map((tag) => (\n          <meta property=\"og:video:tag\" content={tag} key={tag} />\n        ))}\n        {media ? <script type=\"application/ld+json\">{generateMovieJSONLD(media, env.APP_PUBLIC_URL)}</script> : null}\n      </Helmet>\n      <VideoLayout\n        item={media}\n        inlineLayout={inlineLayout}\n        isLoading={isLoading || isPlaylistLoading}\n        accessModel={accessModel}\n        isLoggedIn={isLoggedIn}\n        hasSubscription={hasSubscription}\n        title={media.title}\n        description={media.description}\n        image={media.backgroundImage}\n        primaryMetadata={primaryMetadata}\n        shareButton={shareButton}\n        favoriteButton={favoriteButton}\n        trailerButton={trailerButton}\n        startWatchingButton={startWatchingButton}\n        playlist={playlist}\n        relatedTitle={playlist?.title}\n        getURL={getUrl}\n        activeLabel={t('current_video')}\n        player={\n          inlineLayout ? (\n            <InlinePlayer\n              isLoggedIn={isLoggedIn}\n              item={media}\n              onComplete={handleComplete}\n              feedId={playlistId ?? undefined}\n              startWatchingButton={startWatchingButton}\n              isEntitled={isEntitled}\n              hasMediaOffers={hasMediaOffers}\n              autostart={liveEvent.isPlayable && (play || undefined)}\n              playable={liveEvent.isPlayable}\n            />\n          ) : (\n            <Cinema\n              open={play && isEntitled}\n              onClose={goBack}\n              item={media}\n              title={media.title}\n              primaryMetadata={primaryMetadata}\n              onComplete={handleComplete}\n              feedId={playlistId ?? undefined}\n              onNext={handleComplete}\n            />\n          )\n        }\n      />\n      <TrailerModal item={trailerItem} title={`${media.title} - Trailer`} open={playTrailer} onClose={() => setPlayTrailer(false)} />\n    </React.Fragment>\n  );\n};\n\nexport default MediaEvent;\n","import { useParams } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport React from 'react';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { isEpisode, isLegacySeriesFlow } from '@jwp/ott-common/src/utils/media';\nimport { MEDIA_CONTENT_TYPE } from '@jwp/ott-common/src/constants';\nimport { ScreenMap } from '@jwp/ott-common/src/utils/ScreenMap';\nimport useMedia from '@jwp/ott-hooks-react/src/useMedia';\n\nimport type { ScreenComponent } from '../../../types/screens';\nimport Loading from '../Loading/Loading';\nimport ErrorPage from '../../components/ErrorPage/ErrorPage';\nimport Fade from '../../components/Animation/Fade/Fade';\n\nimport MediaStaticPage from './mediaScreens/MediaStaticPage/MediaStaticPage';\nimport MediaMovie from './mediaScreens/MediaMovie/MediaMovie';\nimport MediaSeries from './mediaScreens/MediaSeries/MediaSeries';\nimport MediaLiveChannel from './mediaScreens/MediaLiveChannel/MediaLiveChannel';\nimport MediaEpisode from './mediaScreens/MediaEpisode/MediaEpisode';\nimport MediaEvent from './mediaScreens/MediaEvent/MediaEvent';\n\nexport const mediaScreenMap = new ScreenMap<PlaylistItem, ScreenComponent<PlaylistItem>>();\n\n// Register media screens\nmediaScreenMap.registerByContentType(MediaSeries, MEDIA_CONTENT_TYPE.series);\nmediaScreenMap.registerByContentType(MediaEpisode, MEDIA_CONTENT_TYPE.episode);\nmediaScreenMap.registerByContentType(MediaLiveChannel, MEDIA_CONTENT_TYPE.liveChannel);\nmediaScreenMap.registerByContentType(MediaEvent, MEDIA_CONTENT_TYPE.liveEvent);\nmediaScreenMap.registerByContentType(MediaStaticPage, MEDIA_CONTENT_TYPE.page);\nmediaScreenMap.registerDefault(MediaMovie);\n\n// Register legacy series and episode screens when `contentType` is missing\nmediaScreenMap.register(MediaEpisode, (item) => !!item && isEpisode(item));\nmediaScreenMap.register(MediaSeries, (item) => !!item && isLegacySeriesFlow(item));\n\nconst MediaScreenRouter = () => {\n  const params = useParams();\n  const id = params.id || '';\n  const { isLoading, isFetching, error, data } = useMedia(id);\n  const { t } = useTranslation('error');\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  if (error || !data) {\n    return <ErrorPage title={t('video_not_found')} />;\n  }\n\n  const MediaScreen = mediaScreenMap.getScreen(data);\n\n  return (\n    <Fade open>\n      <MediaScreen data={data} isLoading={isFetching} />\n    </Fade>\n  );\n};\n\nexport default MediaScreenRouter;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport type { Playlist, PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { filterPlaylist, getFiltersFromConfig } from '@jwp/ott-common/src/utils/collection';\nimport { mediaURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport { useTranslationKey } from '@jwp/ott-hooks-react/src/useTranslationKey';\n\nimport type { ScreenComponent } from '../../../../../types/screens';\nimport CardGrid from '../../../../components/CardGrid/CardGrid';\nimport Filter from '../../../../components/Filter/Filter';\n\nimport styles from './PlaylistGrid.module.scss';\n\nconst PlaylistGrid: ScreenComponent<Playlist> = ({ data, isLoading }) => {\n  const translationKey = useTranslationKey('title');\n  const { config, accessModel } = useConfigStore(({ config, accessModel }) => ({ config, accessModel }), shallow);\n\n  const [filter, setFilter] = useState<string>('');\n\n  const categories = getFiltersFromConfig(config, data.feedid);\n  const filteredPlaylist = useMemo(() => filterPlaylist(data, filter), [data, filter]);\n  const shouldShowFilter = Boolean(categories.length);\n\n  // User\n  const { user, subscription } = useAccountStore(({ user, subscription }) => ({ user, subscription }), shallow);\n\n  useEffect(() => {\n    // reset filter when the playlist id changes\n    setFilter('');\n  }, [data.feedid]);\n\n  const title = (data?.[translationKey] as string) || data.title;\n  const pageTitle = `${title} - ${config.siteName}`;\n\n  const getUrl = (playlistItem: PlaylistItem) =>\n    mediaURL({\n      id: playlistItem.mediaid,\n      title: playlistItem.title,\n      playlistId: playlistItem.feedid,\n    });\n\n  return (\n    <div className={styles.playlist}>\n      <Helmet>\n        <title>{pageTitle}</title>\n        <meta property=\"og:title\" content={pageTitle} />\n        <meta name=\"twitter:title\" content={pageTitle} />\n      </Helmet>\n      <header className={styles.header}>\n        <h1>{title}</h1>\n        {shouldShowFilter && <Filter name=\"genre\" value={filter} defaultLabel=\"All\" options={categories} setValue={setFilter} />}\n      </header>\n      <CardGrid\n        getUrl={getUrl}\n        playlist={filteredPlaylist}\n        accessModel={accessModel}\n        isLoggedIn={!!user}\n        hasSubscription={!!subscription}\n        isLoading={isLoading}\n        headingLevel={2}\n      />\n    </div>\n  );\n};\n\nexport default PlaylistGrid;\n","import { isAfter, isFuture, isPast, subHours } from 'date-fns';\n\nimport type { EpgChannel, EpgProgram } from '../../types/epg';\n\n/**\n * Returns true when the program is currently live e.g. the startTime is before now and the endTime is after now\n */\nexport const programIsLive = (program: EpgProgram) => {\n  const startTime = new Date(program.startTime);\n  const endTime = new Date(program.endTime);\n\n  return isPast(startTime) && isFuture(endTime);\n};\n\n/**\n * Returns true when the program is finished.\n */\nexport const programIsVod = (program: EpgProgram) => {\n  const endTime = new Date(program.endTime);\n\n  return isPast(endTime);\n};\n\n/**\n * Returns true when the program is watchable from the beginning. This is when the startTime is within the live stream\n * archive length.\n */\nexport const programIsFullyWatchable = (program: EpgProgram, liveStreamCatchupHours = 8) => {\n  const startTime = new Date(program.startTime);\n  const maxStartTime = subHours(new Date(), liveStreamCatchupHours);\n\n  return isAfter(startTime, maxStartTime);\n};\n\n/**\n * Get the live program of the given channel\n */\nexport const getLiveProgram = (channel: EpgChannel) => {\n  return channel.programs.find(programIsLive);\n};\n","import { useQuery } from 'react-query';\nimport { useCallback, useEffect, useState } from 'react';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\nimport type { EpgChannel, EpgProgram } from '@jwp/ott-common/types/epg';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport { getLiveProgram, programIsLive } from '@jwp/ott-common/src/utils/epg';\nimport { LIVE_CHANNELS_REFETCH_INTERVAL } from '@jwp/ott-common/src/constants';\nimport EpgController from '@jwp/ott-common/src/controllers/EpgController';\n\n/**\n * This hook fetches the schedules for the given list of playlist items and manages the current channel and program.\n *\n * It automatically selects the initial channel (or first channel) and currently live program. It also updates the\n * program information when the current program is not live anymore.\n *\n * The `enableAutoUpdate` argument can be used to ignore the auto update mechanism. For example, when playing a live\n * program from the beginning, we don't want to update the program information in the middle of the program.\n *\n * @todo The `enableAutoUpdate` mechanism has a drawback, when used the program information will not be updated anymore.\n *       Meaning that when watching a program from the beginning, it will hold the current program until the user clicks\n *       on a different program. This can be solved when we implement syncing the stream PDT with the schedule. Then the\n *       program information will be reactive based on the current time in the stream.\n */\nconst useLiveChannels = ({\n  playlist,\n  initialChannelId,\n  enableAutoUpdate = true,\n}: {\n  playlist: PlaylistItem[];\n  initialChannelId: string | undefined;\n  enableAutoUpdate?: boolean;\n}) => {\n  const epgController = getModule(EpgController);\n\n  const { data: channels = [] } = useQuery(['schedules', ...playlist.map(({ mediaid }) => mediaid)], () => epgController.getSchedules(playlist), {\n    refetchInterval: LIVE_CHANNELS_REFETCH_INTERVAL,\n  });\n\n  const [autoUpdate, setAutoUpdate] = useState(enableAutoUpdate);\n  const [channel, setChannel] = useState<EpgChannel | undefined>();\n  const [program, setProgram] = useState<EpgProgram | undefined>();\n\n  // this effect updates the program when watching the live stream and the next program starts\n  useEffect(() => {\n    if (!autoUpdate || !enableAutoUpdate) return;\n\n    const intervalId = window.setInterval(() => channel && setProgram(getLiveProgram(channel)), 5_000);\n\n    return () => clearInterval(intervalId);\n  }, [channel, autoUpdate, enableAutoUpdate]);\n\n  // auto select initial channel (fallback to first channel) and program when the data is loaded\n  // update channel and program state with the latest data\n  useEffect(() => {\n    const selectedChannel = channels.find(({ id }) => id === initialChannelId) || channels[0];\n\n    // auto select first channel when no channel is selected\n    if (!channel && selectedChannel) {\n      setChannel(selectedChannel);\n\n      // auto select live program\n      setProgram(getLiveProgram(selectedChannel));\n    }\n\n    // update the current channel with the updated data\n    if (channel) {\n      const updatedChannel = channels.find(({ id }) => id === channel.id);\n\n      // find the current program in the updated data\n      let updatedProgram = program && updatedChannel?.programs.find(({ id }) => id === program?.id);\n\n      // if the program doesn't exist, use the live program\n      if (!updatedProgram && updatedChannel) {\n        updatedProgram = getLiveProgram(updatedChannel);\n      }\n\n      // update channel with potential updated programs\n      setChannel(updatedChannel);\n      setProgram(updatedProgram);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [channels]);\n\n  // update the selected channel and optionally the program\n  const setActiveChannel = useCallback(\n    (id: string, programId?: string) => {\n      const channel = channels?.find((channel) => channel.id === id);\n\n      // early return when no channel was found\n      if (!channel) {\n        return;\n      }\n\n      // select the found program or live program when no programId is given\n      const program = programId ? channel.programs.find((program) => program.id === programId) : getLiveProgram(channel);\n\n      setChannel(channel);\n      setProgram(program);\n\n      // enable auto update when there is no program information or when the program is live\n      // when the user clicks on a VOD item, we don't want to update the information automatically\n      setAutoUpdate(!program || programIsLive(program));\n    },\n    [channels],\n  );\n\n  return {\n    channel,\n    channels,\n    program,\n    setActiveChannel,\n  };\n};\n\nexport default useLiveChannels;\n","import { useEffect, useState } from 'react';\nimport type { EpgProgram } from '@jwp/ott-common/types/epg';\nimport { programIsFullyWatchable, programIsLive, programIsVod } from '@jwp/ott-common/src/utils/epg';\n\n/**\n * This hook returns memoized program state variables that change based on the given program and the current time.\n * For example, the live and VOD states, toggle when the program is not live anymore.\n */\nconst useLiveProgram = ({ program, catchupHours }: { program: EpgProgram | undefined; catchupHours: number | undefined }) => {\n  const [isLive, setIsLive] = useState(false);\n  const [isVod, setIsVod] = useState(false);\n  const [isWatchableFromBeginning, setIsWatchableFromBeginning] = useState(false);\n\n  // update when the program changes\n  useEffect(() => {\n    const calculateStatus = () => {\n      setIsLive(!!program && programIsLive(program));\n      setIsVod(!!program && programIsVod(program));\n      setIsWatchableFromBeginning(!!program && programIsFullyWatchable(program, catchupHours));\n    };\n\n    // recalculate the program status every 5 seconds\n    const intervalId = setInterval(calculateStatus, 5_000);\n\n    // immediately update the program status when the program changes\n    calculateStatus();\n\n    return () => clearInterval(intervalId);\n  }, [catchupHours, program]);\n\n  return {\n    isLive,\n    isVod,\n    isWatchableFromBeginning,\n  };\n};\n\nexport default useLiveProgram;\n","import { useMemo } from 'react';\nimport { useEpg } from 'planby';\nimport { startOfDay, startOfToday, startOfTomorrow } from 'date-fns';\nimport type { EpgChannel, EpgProgram } from '@jwp/ott-common/types/epg';\nimport { is12HourClock } from '@jwp/ott-common/src/utils/datetime';\n\nconst isBaseTimeFormat = is12HourClock();\n\nexport const formatChannel = ({ id, channelLogoImage, backgroundImage }: EpgChannel) => ({\n  uuid: id,\n  logo: channelLogoImage,\n  channelLogoImage: channelLogoImage,\n  backgroundImage: backgroundImage,\n});\n\nexport const formatProgram = (channelId: string, { id, title, cardImage, backgroundImage, description, endTime, startTime }: EpgProgram) => ({\n  channelUuid: channelId,\n  id: id,\n  title: title,\n  image: cardImage || '',\n  // programs have the same cardImage/backgroundImage (different API)\n  cardImage: cardImage || '',\n  backgroundImage: backgroundImage || '',\n  description: description || '',\n  till: endTime,\n  since: startTime,\n});\n\n/**\n * Return the Planby EPG props for the given channels\n */\nconst usePlanByEpg = ({\n  channels,\n  sidebarWidth,\n  itemHeight,\n}: {\n  channels: EpgChannel[];\n  sidebarWidth: number;\n  itemHeight: number;\n  highlightColor?: string | null;\n  backgroundColor?: string | null;\n}) => {\n  const [epgChannels, epgPrograms] = useMemo(() => {\n    return [channels.map(formatChannel), channels.flatMap((channel) => channel.programs.map((program) => formatProgram(channel.id, program)))];\n  }, [channels]);\n\n  const theme = useMemo(() => makeTheme(), []);\n\n  // this mechanism updates the EPG component range when leaving the page open for a longer period\n  // the useEpg hook doesn't accept a formatted date and re-renders when not memoize the start and end dates\n  // @todo ideally we want to render the schedule X hours before and after the current time, but this doesn't work (yet)\n  //       in the Planby component. E.g. `[subHours(new Date(), 12), addHours(new Date(), 12)]`. The `date` dependency\n  //       must also be changed to update every hour instead of daily.\n  const date = startOfToday().toJSON();\n  const [startDate, endDate] = useMemo(() => [startOfDay(new Date(date)), startOfTomorrow()], [date]);\n\n  return useEpg({\n    channels: epgChannels,\n    epg: epgPrograms,\n    dayWidth: 7200,\n    sidebarWidth,\n    itemHeight,\n    isSidebar: true,\n    isTimeline: true,\n    isLine: true,\n    isBaseTimeFormat,\n    startDate,\n    endDate,\n    theme,\n  });\n};\n\nexport const makeTheme = () => ({\n  primary: {\n    600: 'var(--epg-background-color, var(--body-background-color))',\n    900: 'var(--epg-background-color, var(--body-background-color))',\n  },\n  grey: {\n    300: '#fff',\n  },\n  white: '#fff',\n  green: {\n    300: '#fff',\n  },\n  loader: {\n    teal: '',\n    purple: '',\n    pink: '',\n    bg: '',\n  },\n  scrollbar: {\n    border: '',\n    thumb: {\n      bg: '',\n    },\n  },\n  gradient: {\n    blue: {\n      300: '',\n      600: '',\n      900: '',\n    },\n  },\n  text: {\n    grey: {\n      300: '',\n      500: '',\n    },\n  },\n  timeline: {\n    divider: {\n      bg: '',\n    },\n  },\n});\n\nexport default usePlanByEpg;\n","import React from 'react';\nimport type { Channel } from 'planby';\nimport classNames from 'classnames';\nimport { testId } from '@jwp/ott-common/src/utils/common';\n\nimport Image from '../Image/Image';\n\nimport styles from './EpgChannelItem.module.scss';\n\ntype Props = {\n  channel: Channel;\n  channelItemWidth: number;\n  sidebarWidth: number;\n  onClick?: (channel: Channel) => void;\n  isActive: boolean;\n  title: string;\n};\n\nconst EpgChannelItem: React.VFC<Props> = ({ channel, channelItemWidth, sidebarWidth, onClick, isActive, title }) => {\n  const { position, uuid, channelLogoImage } = channel;\n  const style = { top: position.top, height: position.height, width: sidebarWidth };\n\n  return (\n    <div className={styles.epgChannelBox} style={style}>\n      <div\n        className={classNames(styles.epgChannel, { [styles.active]: isActive })}\n        style={{ width: channelItemWidth }}\n        onClick={() => onClick && onClick(channel)}\n        data-testid={testId(uuid)}\n        role=\"button\"\n      >\n        <Image className={styles.epgChannelLogo} image={channelLogoImage} alt={title} width={320} />\n      </div>\n    </div>\n  );\n};\n\nexport default EpgChannelItem;\n","import React from 'react';\nimport { useProgram, type Program } from 'planby';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { testId } from '@jwp/ott-common/src/utils/common';\n\nimport styles from './EpgProgramItem.module.scss';\n\ntype Props = {\n  program: Program;\n  onClick?: (program: Program) => void;\n  isActive: boolean;\n  compact: boolean;\n  disabled: boolean;\n  isBaseTimeFormat: boolean;\n};\n\nconst ProgramItem: React.VFC<Props> = ({ program, onClick, isActive, compact, disabled, isBaseTimeFormat }) => {\n  const {\n    styles: { position },\n    formatTime,\n    set12HoursTimeFormat,\n    isLive,\n    isMinWidth,\n  } = useProgram({\n    program,\n    isBaseTimeFormat,\n  });\n\n  const { t } = useTranslation('common');\n  const { data } = program;\n  const { image, title, since, till } = data;\n\n  const sinceTime = formatTime(since, set12HoursTimeFormat()).toLowerCase();\n  const tillTime = formatTime(till, set12HoursTimeFormat()).toLowerCase();\n\n  const showImage = !compact && isMinWidth;\n  const showLiveTagInImage = !compact && isMinWidth && isLive;\n  const alt = ''; // intentionally empty for a11y, because adjacent text alternative\n\n  return (\n    <div className={styles.epgProgramBox} style={position} onClick={() => onClick && onClick(program)}>\n      <div\n        className={classNames(styles.epgProgram, {\n          [styles.selected]: isActive,\n          [styles.live]: isLive,\n          [styles.disabled]: disabled,\n        })}\n        style={{ width: styles.width }}\n        data-testid={testId(program.data.id)}\n      >\n        {showImage && <img className={styles.epgProgramImage} src={image} alt={alt} />}\n        {showLiveTagInImage && <div className={styles.epgLiveTag}>{t('live')}</div>}\n        <div className={styles.epgProgramContent}>\n          {compact && isLive && <div className={styles.epgLiveTag}>{t('live')}</div>}\n          <h2 className={styles.epgProgramTitle}>{title}</h2>\n          <span className={styles.epgProgramText}>\n            {sinceTime} - {tillTime}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgramItem;\n","import React from 'react';\nimport { useTimeline } from 'planby';\n\nimport styles from './EpgTimeline.module.scss';\n\ntype Props = {\n  isBaseTimeFormat: boolean;\n  isSidebar: boolean;\n  dayWidth: number;\n  hourWidth: number;\n  numberOfHoursInDay: number;\n  offsetStartHoursRange: number;\n  sidebarWidth: number;\n};\n\nconst EpgTimeline: React.VFC<Props> = ({ isBaseTimeFormat, dayWidth, hourWidth, numberOfHoursInDay, offsetStartHoursRange, isSidebar, sidebarWidth }) => {\n  const { time, dividers, formatTime } = useTimeline(numberOfHoursInDay, isBaseTimeFormat);\n\n  const renderDividers = () => dividers.map((_, index) => <div className={styles.timelineDivider} key={index} style={{ marginRight: hourWidth / 4 }} />);\n\n  const renderTime = (index: number) => (\n    <div className={styles.timelineBox} key={index} style={{ width: hourWidth }}>\n      <time className={styles.timelineTime}>{formatTime(index + offsetStartHoursRange).toLowerCase()}</time>\n      <div className={styles.timelineDividers}>{renderDividers()}</div>\n    </div>\n  );\n\n  return (\n    <div className={styles.timelineContainer} style={{ width: dayWidth, left: isSidebar ? sidebarWidth : 0 }}>\n      {time.map((_, index) => renderTime(index))}\n    </div>\n  );\n};\n\nexport default EpgTimeline;\n","import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { Epg as EpgContainer, Layout } from 'planby';\nimport { isBefore, subHours } from 'date-fns';\nimport type { EpgChannel, EpgProgram } from '@jwp/ott-common/types/epg';\nimport usePlanByEpg from '@jwp/ott-hooks-react/src/usePlanByEpg';\nimport ChevronRight from '@jwp/ott-theme/assets/icons/chevron_right.svg?react';\nimport ChevronLeft from '@jwp/ott-theme/assets/icons/chevron_left.svg?react';\nimport useBreakpoint, { Breakpoint } from '@jwp/ott-ui-react/src/hooks/useBreakpoint';\nimport useFirstRender from '@jwp/ott-hooks-react/src/useFirstRender';\n\nimport IconButton from '../IconButton/IconButton';\nimport Button from '../Button/Button';\nimport EpgChannelItem from '../EpgChannel/EpgChannelItem';\nimport EpgProgramItem from '../EpgProgramItem/EpgProgramItem';\nimport EpgTimeline from '../EpgTimeline/EpgTimeline';\nimport Spinner from '../Spinner/Spinner';\nimport Icon from '../Icon/Icon';\n\nimport styles from './Epg.module.scss';\n\ntype Props = {\n  channels: EpgChannel[];\n  onChannelClick: (channelId: string) => void;\n  onProgramClick: (programId: string, channelId: string) => void;\n  selectedChannel: EpgChannel | undefined;\n  program: EpgProgram | undefined;\n};\n\nexport default function Epg({ channels, selectedChannel, onChannelClick, onProgramClick, program }: Props) {\n  const firstRender = useFirstRender();\n  const breakpoint = useBreakpoint();\n  const { t } = useTranslation('common');\n\n  const isMobile = breakpoint < Breakpoint.sm;\n  const sidebarWidth = isMobile ? 70 : 184;\n  // the subtracted value is used for spacing in the sidebar\n  const channelItemWidth = isMobile ? sidebarWidth - 10 : sidebarWidth - 24;\n  const itemHeight = isMobile ? 80 : 106;\n\n  // Epg\n  const { getEpgProps, getLayoutProps, onScrollToNow, onScrollLeft, onScrollRight } = usePlanByEpg({\n    channels,\n    sidebarWidth,\n    itemHeight,\n  });\n  const catchupHoursDict = useMemo(() => Object.fromEntries(channels.map((channel) => [channel.id, channel.catchupHours])), [channels]);\n  const titlesDict = useMemo(() => Object.fromEntries(channels.map((channel) => [channel.id, channel.title])), [channels]);\n\n  return (\n    <div className={classNames(styles.epg, firstRender && styles.firstFrame)}>\n      <div className={styles.timelineControl}>\n        <Button className={styles.timelineNowButton} variant=\"contained\" label={t('now')} color=\"primary\" onClick={onScrollToNow} size=\"small\" />\n        <IconButton className={styles.leftControl} aria-label={t('slide_left')} onClick={() => onScrollLeft()}>\n          <Icon icon={ChevronLeft} />\n        </IconButton>\n        <IconButton className={styles.rightControl} aria-label={t('slide_right')} onClick={() => onScrollRight()}>\n          <Icon icon={ChevronRight} />\n        </IconButton>\n      </div>\n      <EpgContainer {...getEpgProps()} loader={<Spinner className={styles.epgSpinner} />}>\n        <Layout\n          {...getLayoutProps()}\n          renderTimeline={(props) => <EpgTimeline {...props} />}\n          renderChannel={({ channel: epgChannel }) => (\n            <EpgChannelItem\n              key={epgChannel.uuid}\n              channel={epgChannel}\n              channelItemWidth={channelItemWidth}\n              sidebarWidth={sidebarWidth}\n              onClick={(toChannel) => {\n                onChannelClick(toChannel.uuid);\n                onScrollToNow();\n              }}\n              title={titlesDict[epgChannel.uuid] || ''}\n              isActive={selectedChannel?.id === epgChannel.uuid}\n            />\n          )}\n          renderProgram={({ program: programItem, isBaseTimeFormat }) => {\n            const catchupHours = catchupHoursDict[programItem.data.channelUuid];\n            const disabled = isBefore(new Date(programItem.data.since), subHours(new Date(), catchupHours));\n\n            return (\n              <EpgProgramItem\n                key={programItem.data.id}\n                program={programItem}\n                disabled={disabled}\n                onClick={(program) => !disabled && onProgramClick(program.data.id, program.data.channelUuid)}\n                isActive={program?.id === programItem.data.id}\n                compact={isMobile}\n                isBaseTimeFormat={isBaseTimeFormat}\n              />\n            );\n          }}\n        />\n      </EpgContainer>\n    </div>\n  );\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport { useLocation, useNavigate } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport { differenceInSeconds, format } from 'date-fns';\nimport type { Playlist } from '@jwp/ott-common/types/playlist';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { formatDurationTag } from '@jwp/ott-common/src/utils/formatting';\nimport { createURL, liveChannelsURL } from '@jwp/ott-common/src/utils/urlFormatting';\nimport { generateMovieJSONLD } from '@jwp/ott-common/src/utils/structuredData';\nimport useLiveChannels from '@jwp/ott-hooks-react/src/useLiveChannels';\nimport useEntitlement from '@jwp/ott-hooks-react/src/useEntitlement';\nimport useLiveProgram from '@jwp/ott-hooks-react/src/useLiveProgram';\nimport Play from '@jwp/ott-theme/assets/icons/play.svg?react';\nimport env from '@jwp/ott-common/src/env';\n\nimport type { ScreenComponent } from '../../../../../types/screens';\nimport Epg from '../../../../components/Epg/Epg';\nimport ShareButton from '../../../../components/ShareButton/ShareButton';\nimport StartWatchingButton from '../../../../containers/StartWatchingButton/StartWatchingButton';\nimport Cinema from '../../../../containers/Cinema/Cinema';\nimport Button from '../../../../components/Button/Button';\nimport Tag from '../../../../components/Tag/Tag';\nimport Loading from '../../../Loading/Loading';\nimport VideoDetails from '../../../../components/VideoDetails/VideoDetails';\nimport Icon from '../../../../components/Icon/Icon';\nimport VideoMetaData from '../../../../components/VideoMetaData/VideoMetaData';\n\nimport styles from './PlaylistLiveChannels.module.scss';\n\nconst PlaylistLiveChannels: ScreenComponent<Playlist> = ({ data: { feedid, playlist } }) => {\n  const { t } = useTranslation('epg');\n\n  // Config\n  const { config } = useConfigStore(({ config }) => ({ config }), shallow);\n  const { siteName } = config;\n\n  // Routing\n  const location = useLocation();\n  const navigate = useNavigate();\n  const searchParams = useMemo(() => new URLSearchParams(location.search), [location.search]);\n  const play = searchParams.get('play') === '1';\n  const channelId = searchParams.get('channel') ?? undefined;\n  const liveStartDateTime = searchParams.get('start');\n  const liveEndDateTime = searchParams.get('end');\n  const liveFromBeginning = searchParams.get('beginning') === '1';\n  const goBack = () => feedid && navigate(liveChannelsURL(feedid, channelId));\n\n  // EPG data\n  const [initialChannelId] = useState(channelId);\n  const { channels, channel, program, setActiveChannel } = useLiveChannels({ playlist, initialChannelId, enableAutoUpdate: !liveFromBeginning });\n  const { isLive, isVod, isWatchableFromBeginning } = useLiveProgram({ program, catchupHours: channel?.catchupHours });\n\n  // Media item\n  const channelMediaItem = useMemo(() => playlist.find(({ mediaid }) => channel?.id === mediaid), [channel?.id, playlist]);\n  const { isEntitled } = useEntitlement(channelMediaItem);\n\n  const videoDetails = useMemo(() => {\n    if (program) {\n      return {\n        title: program.title,\n        description: program.description || '',\n        image: program.backgroundImage,\n        canWatch: isLive || (isVod && isWatchableFromBeginning),\n        canWatchFromBeginning: isEntitled && isLive && isWatchableFromBeginning,\n      };\n    }\n\n    return {\n      title: channel?.title || '',\n      description: channel?.description || '',\n      image: channel?.backgroundImage,\n      canWatch: true,\n      canWatchFromBeginning: false,\n    };\n  }, [channel?.backgroundImage, channel?.description, channel?.title, isEntitled, isLive, isVod, isWatchableFromBeginning, program]);\n\n  const primaryMetadata = useMemo(() => {\n    if (!channel) {\n      return '';\n    }\n\n    if (!program) {\n      return <Tag isLive>{t('common:live')}</Tag>;\n    }\n\n    const startTime = new Date(program.startTime);\n    const endTime = new Date(program.endTime);\n    const durationInSeconds = differenceInSeconds(endTime, startTime);\n    const duration = formatDurationTag(durationInSeconds, { minutesAbbreviation: t('common:abbreviation.minutes') });\n    const attributes = [t('on_channel', { name: channel.title }), duration].filter(Boolean);\n\n    return (\n      <>\n        <Tag className={styles.tag} isLive={isLive}>\n          {isLive ? t('common:live') : `${format(startTime, 'p')} - ${format(endTime, 'p')}`}\n        </Tag>\n        <VideoMetaData attributes={attributes} />\n      </>\n    );\n  }, [channel, isLive, program, t]);\n\n  // Handlers\n  const handleProgramClick = (programId: string, channelId: string) => {\n    setActiveChannel(channelId, programId);\n\n    // scroll to top when clicking a program\n    (document.scrollingElement || document.body).scroll({ top: 0, behavior: 'smooth' });\n  };\n\n  const handleChannelClick = (channelId: string) => {\n    setActiveChannel(channelId);\n  };\n\n  // Effects\n  useEffect(() => {\n    // update the channel id in URL\n    if (channel && feedid && channelId !== channel.id) {\n      navigate(liveChannelsURL(feedid, channel.id), { replace: true });\n    }\n  }, [navigate, feedid, channel, channelId]);\n\n  // Loading (channel and feedid must be defined)\n  if (!channel || !feedid) {\n    return <Loading />;\n  }\n\n  // SEO (for channels)\n  // const getUrl = (id: string) => liveChannelsURL(feedid, id);\n  const canonicalUrl = `${env.APP_PUBLIC_URL}${liveChannelsURL(feedid, channel.id)}`;\n  const pageTitle = `${channel.title} - ${siteName}`;\n\n  const shareButton = channelMediaItem ? (\n    <ShareButton title={channelMediaItem.title} description={channelMediaItem.description} url={window.location.href} />\n  ) : null;\n\n  // @todo: bring all props to liveChannelsURL, so that createURL isn't needed\n  const startWatchingButton = channelMediaItem ? (\n    <>\n      <StartWatchingButton\n        item={channelMediaItem}\n        playUrl={createURL(liveChannelsURL(feedid, channelId, true), {\n          start: isVod ? program?.startTime : undefined,\n          end: isVod ? program?.endTime : undefined,\n        })}\n        disabled={!videoDetails.canWatch}\n      />\n      {videoDetails.canWatchFromBeginning && (\n        <Button\n          className={styles.catchupButton}\n          onClick={() =>\n            navigate(\n              createURL(liveChannelsURL(feedid || '', channelId, true), {\n                start: program?.startTime,\n                beginning: 1,\n              }),\n            )\n          }\n          label={t('start_from_beginning')}\n          startIcon={<Icon icon={Play} />}\n        />\n      )}\n    </>\n  ) : null;\n\n  return (\n    <>\n      <Helmet>\n        <title>{pageTitle}</title>\n        <link rel=\"canonical\" href={canonicalUrl} />\n        <meta name=\"description\" content={channelMediaItem?.description} />\n        <meta property=\"og:description\" content={channelMediaItem?.description} />\n        <meta property=\"og:title\" content={pageTitle} />\n        <meta property=\"og:type\" content=\"video.other\" />\n        {channelMediaItem?.image && <meta property=\"og:image\" content={channelMediaItem.image?.replace(/^https:/, 'http:')} />}\n        {channelMediaItem?.image && <meta property=\"og:image:secure_url\" content={channelMediaItem.image?.replace(/^http:/, 'https:')} />}\n        <meta property=\"og:image:width\" content={channelMediaItem?.image ? '720' : ''} />\n        <meta property=\"og:image:height\" content={channelMediaItem?.image ? '406' : ''} />\n        <meta name=\"twitter:title\" content={pageTitle} />\n        <meta name=\"twitter:description\" content={channelMediaItem?.description} />\n        <meta name=\"twitter:image\" content={channelMediaItem?.image} />\n        <meta property=\"og:video\" content={canonicalUrl.replace(/^https:/, 'http:')} />\n        <meta property=\"og:video:secure_url\" content={canonicalUrl.replace(/^http:/, 'https:')} />\n        <meta property=\"og:video:type\" content=\"text/html\" />\n        <meta property=\"og:video:width\" content=\"1280\" />\n        <meta property=\"og:video:height\" content=\"720\" />\n        {channelMediaItem?.tags?.split(',').map((tag) => (\n          <meta property=\"og:video:tag\" content={tag} key={tag} />\n        ))}\n        {channelMediaItem ? <script type=\"application/ld+json\">{generateMovieJSONLD(channelMediaItem, env.APP_PUBLIC_URL)}</script> : null}\n      </Helmet>\n      <VideoDetails\n        title={videoDetails.title}\n        description={videoDetails.description}\n        image={videoDetails.image}\n        startWatchingButton={startWatchingButton}\n        shareButton={shareButton}\n        primaryMetadata={primaryMetadata}\n      >\n        {channelMediaItem && (\n          <Cinema\n            open={play && isEntitled}\n            onClose={goBack}\n            item={channelMediaItem}\n            title={videoDetails.title}\n            primaryMetadata={primaryMetadata}\n            feedId={feedid}\n            liveStartDateTime={liveStartDateTime}\n            liveEndDateTime={liveEndDateTime}\n            liveFromBeginning={liveFromBeginning}\n          />\n        )}\n        <div className={styles.epgContainer}>\n          <Epg channels={channels} onChannelClick={handleChannelClick} onProgramClick={handleProgramClick} selectedChannel={channel} program={program} />\n        </div>\n      </VideoDetails>\n    </>\n  );\n};\n\nexport default PlaylistLiveChannels;\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport type { Playlist } from '@jwp/ott-common/types/playlist';\nimport { APP_CONFIG_ITEM_TYPE, PLAYLIST_CONTENT_TYPE } from '@jwp/ott-common/src/constants';\nimport { ScreenMap } from '@jwp/ott-common/src/utils/ScreenMap';\nimport usePlaylist from '@jwp/ott-hooks-react/src/usePlaylist';\nimport type { AppMenuType } from '@jwp/ott-common/types/config';\n\nimport Loading from '../Loading/Loading';\nimport ErrorPage from '../../components/ErrorPage/ErrorPage';\nimport type { ScreenComponent } from '../../../types/screens';\nimport Fade from '../../components/Animation/Fade/Fade';\n\nimport PlaylistGrid from './playlistScreens/PlaylistGrid/PlaylistGrid';\nimport PlaylistLiveChannels from './playlistScreens/PlaylistLiveChannels/PlaylistLiveChannels';\n\nexport const playlistScreenMap = new ScreenMap<Playlist, ScreenComponent<Playlist>>();\nexport const contentScreenMap = new ScreenMap<Playlist, ScreenComponent<Playlist>>();\n\n// register playlist screens\nplaylistScreenMap.registerDefault(PlaylistGrid);\nplaylistScreenMap.registerByContentType(PlaylistLiveChannels, PLAYLIST_CONTENT_TYPE.live);\n\n// register content list screens\ncontentScreenMap.registerDefault(PlaylistGrid);\n\nconst PlaylistScreenRouter = ({ type }: { type: AppMenuType }) => {\n  const params = useParams();\n  const id = params.id || '';\n\n  const { isFetching, error, data } = usePlaylist(id, {}, true, true, type);\n  const { t } = useTranslation('error');\n\n  if (isFetching) {\n    return <Loading />;\n  }\n\n  if (error || !data) {\n    return <ErrorPage title={t('playlist_not_found')} />;\n  }\n\n  if (data.playlist.length === 0) {\n    return <ErrorPage title={t('empty_shelves_heading')} message={t('empty_shelves_description')} />;\n  }\n\n  const Screen = type === APP_CONFIG_ITEM_TYPE.content_list ? contentScreenMap.getScreen(data) : playlistScreenMap.getScreen(data);\n\n  return (\n    <Fade key={id} open>\n      <Screen data={data} isLoading={isFetching} />\n    </Fade>\n  );\n};\n\nexport default PlaylistScreenRouter;\n","import { type PropsWithChildren } from 'react';\nimport classNames from 'classnames';\n\nimport createInjectableComponent from '../../modules/createInjectableComponent';\n\nimport styles from './Header.module.scss';\n\nexport const HeaderIdentifier = Symbol(`HEADER`);\n\ntype TypeHeader = 'static' | 'fixed';\n\nexport type HeaderProps = {\n  headerType?: TypeHeader;\n  className?: string;\n  searchActive: boolean;\n};\n\nconst Header = ({ children, className, headerType = 'static', searchActive }: PropsWithChildren<HeaderProps>) => {\n  const headerClassName = classNames(styles.header, styles[headerType], className, {\n    [styles.searchActive]: searchActive,\n  });\n\n  return (\n    <header className={headerClassName}>\n      <div className={styles.container}>{children}</div>\n    </header>\n  );\n};\n\nexport default createInjectableComponent(HeaderIdentifier, Header);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { IS_DEVELOPMENT_BUILD } from '@jwp/ott-common/src/utils/common';\n\nimport MarkdownComponent from '../MarkdownComponent/MarkdownComponent';\n\nimport styles from './Footer.module.scss';\n\ntype Props = {\n  text: string;\n};\n\nconst Footer: React.FC<Props> = ({ text }) => {\n  const chunks = text.split('|').map((chuck) => chuck.trim());\n  const footerContent = chunks.map((value, index) => <MarkdownComponent key={index} markdownString={value} inline tag={chunks.length > 1 ? 'li' : 'div'} />);\n  const wrapper = chunks.length > 1 ? <ul className={styles.list}>{footerContent}</ul> : footerContent;\n\n  return (\n    // The extra style below is just to fix the footer on mobile when the dev selector is shown\n    <footer className={classNames(styles.footer, { [styles.testFixMargin]: IS_DEVELOPMENT_BUILD })}>{wrapper}</footer>\n  );\n};\n\nexport default Footer;\n","import * as React from \"react\";\nconst SvgMenu = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M0 0h24v24H0V0z\", fill: \"none\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" }));\nexport default SvgMenu;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport Menu from '@jwp/ott-theme/assets/icons/menu.svg?react';\n\nimport Icon from '../Icon/Icon';\nimport IconButton from '../IconButton/IconButton';\n\nimport styles from './Header.module.scss';\n\ntype Props = {\n  className?: string;\n  sideBarOpen: boolean;\n  onClick: () => void;\n};\n\nconst HeaderMenu = ({ className, sideBarOpen, onClick }: Props) => {\n  const { t } = useTranslation('menu');\n\n  return (\n    <div className={classNames(styles.menu, className)}>\n      <IconButton className={styles.iconButton} aria-label={t('open_menu')} aria-expanded={sideBarOpen} onClick={onClick}>\n        <Icon icon={Menu} />\n      </IconButton>\n    </div>\n  );\n};\n\nexport default HeaderMenu;\n","import React, { useRef } from 'react';\nimport classNames from 'classnames';\n\nimport Button from '../Button/Button';\n\nimport styles from './Header.module.scss';\n\ntype NavItem = {\n  label: string;\n  to: string;\n};\n\nconst scrollOffset = 100;\n\nconst HeaderNavigation = ({ className, navItems }: { className?: string; navItems: NavItem[] }) => {\n  const navRef = useRef<HTMLElement>(null);\n\n  const focusHandler = (event: React.FocusEvent) => {\n    if (!navRef.current) return;\n\n    const navRect = navRef.current.getBoundingClientRect();\n    const targetRect = (event.target as HTMLElement).getBoundingClientRect();\n\n    // get the element offset position within the navigation scroll container\n    const targetScrollTo = targetRect.left + navRef.current.scrollLeft - navRect.left;\n    // the first half items will reset the scroll offset to 0\n    // all elements after will be scrolled into view with an offset, so that the previous item is still visible\n    const scrollTo = targetScrollTo < navRect.width / 2 ? 0 : targetScrollTo - scrollOffset;\n\n    navRef.current.scrollTo({ left: scrollTo, behavior: 'smooth' });\n  };\n\n  return (\n    <nav className={classNames(styles.nav, className)} ref={navRef}>\n      <ul onFocus={focusHandler}>\n        {navItems.map((item, index) => (\n          <li key={index}>\n            <Button activeClassname={styles.navButton} label={item.label} to={item.to} variant=\"text\" />\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default HeaderNavigation;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport styles from './Logo.module.scss';\n\ntype Props = {\n  src: string;\n  alt?: string;\n  onLoad: () => void;\n};\n\ntype ImgRef = {\n  height?: number;\n  width?: number;\n};\n\nconst Logo: React.FC<Props> = ({ src, alt = 'logo', onLoad }: Props) => {\n  const [imgDimensions, updateImgDimensions] = useState<ImgRef>({ height: undefined, width: undefined });\n\n  const onLoadHandler = (event: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    const { height, width } = event.currentTarget;\n    updateImgDimensions({ height, width });\n    onLoad();\n  };\n\n  return (\n    <Link to=\"/\">\n      <img className={styles.logo} alt={alt} src={src} height={imgDimensions.height} width={imgDimensions.width} onLoad={onLoadHandler} onError={onLoad} />\n    </Link>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\n\nimport Logo from '../Logo/Logo';\n\nimport styles from './Header.module.scss';\n\ntype Props = {\n  className?: string;\n  siteName?: string;\n  logoSrc?: string | null;\n  setLogoLoaded: (loaded: boolean) => void;\n};\n\nconst HeaderBrand = ({ className, siteName, logoSrc, setLogoLoaded }: Props) => {\n  const { t } = useTranslation('menu');\n\n  if (!logoSrc) return null;\n\n  return (\n    <div className={classNames(styles.brand, className)}>\n      <Logo alt={t('logo_alt', { siteName })} src={logoSrc} onLoad={() => setLogoLoaded(true)} />\n    </div>\n  );\n};\n\nexport default HeaderBrand;\n","import React, { type PropsWithChildren } from 'react';\nimport classNames from 'classnames';\n\nimport styles from './Header.module.scss';\n\nconst HeaderActions = ({ children, className }: PropsWithChildren<{ className?: string }>) => {\n  return <div className={classNames(styles.actions, className)}>{children}</div>;\n};\n\nexport default HeaderActions;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\n\nimport styles from './Header.module.scss';\n\nconst HeaderSkipLink = ({ className }: { className?: string }) => {\n  const { t } = useTranslation('menu');\n  return (\n    <a href=\"#content\" className={classNames(styles.skipToContent, className)}>\n      {t('skip_to_content')}\n    </a>\n  );\n};\n\nexport default HeaderSkipLink;\n","import React, { type ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Close from '@jwp/ott-theme/assets/icons/close.svg?react';\n\nimport IconButton from '../IconButton/IconButton';\nimport Icon from '../Icon/Icon';\nimport Modal, { type AnimationProps } from '../Modal/Modal';\nimport Slide from '../Animation/Slide/Slide';\nimport createInjectableComponent from '../../modules/createInjectableComponent';\n\nimport styles from './Sidebar.module.scss';\n\nexport const SidebarIdentifier = Symbol(`SIDEBAR`);\n\nexport type SidebarProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  children?: ReactNode;\n};\n\nconst SlideLeft = ({ children, ...props }: AnimationProps) => (\n  <Slide direction=\"left\" {...props}>\n    {children}\n  </Slide>\n);\n\nconst Sidebar: React.FC<SidebarProps> = ({ isOpen, onClose, children }) => {\n  const { t } = useTranslation('menu');\n\n  return (\n    <Modal open={isOpen} onClose={onClose} AnimationComponent={SlideLeft}>\n      <div className={styles.sidebar} id=\"sidebar\">\n        <div className={styles.heading}>\n          <IconButton onClick={onClose} aria-label={t('close_menu')}>\n            <Icon icon={Close} />\n          </IconButton>\n        </div>\n        <nav className={styles.group} onClick={onClose}>\n          {children}\n        </nav>\n      </div>\n    </Modal>\n  );\n};\n\nexport default createInjectableComponent(SidebarIdentifier, Sidebar);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport createInjectableComponent from '../../modules/createInjectableComponent';\n\nimport styles from './MenuButton.module.scss';\n\nexport const MenuButtonIdentifier = Symbol(`MENU_BUTTON`);\n\nexport type MenuButtonProps = {\n  label?: string;\n  to?: string;\n  onClick?: () => void;\n  onBlur?: () => void;\n  onFocus?: () => void;\n  tabIndex?: number;\n  active?: boolean;\n  startIcon?: React.ReactElement;\n  small?: boolean;\n} & React.AriaAttributes;\n\nconst MenuButton: React.FC<MenuButtonProps> = ({\n  label,\n  to,\n  onClick,\n  onBlur,\n  onFocus,\n  tabIndex = 0,\n  active = false,\n  startIcon,\n  small = false,\n  ...rest\n}: MenuButtonProps) => {\n  const icon = startIcon ? <div className={styles.startIcon}>{startIcon}</div> : null;\n  const getClassName = (isActive: boolean) => classNames(styles.menuButton, { [styles.small]: small }, { [styles.active]: isActive });\n\n  if (to) {\n    return (\n      <NavLink\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onClick={onClick}\n        className={({ isActive }) => getClassName(isActive || active)}\n        to={to}\n        tabIndex={tabIndex}\n        end\n      >\n        {icon}\n        <span className={styles.label}>{label}</span>\n      </NavLink>\n    );\n  }\n\n  return (\n    <div role=\"button\" onBlur={onBlur} onFocus={onFocus} className={getClassName(active)} onClick={onClick} tabIndex={tabIndex} {...rest}>\n      {icon}\n      <span className={styles.label}>{label}</span>\n    </div>\n  );\n};\n\nexport default createInjectableComponent(MenuButtonIdentifier, MenuButton);\n","import React, { useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport AccountCircle from '@jwp/ott-theme/assets/icons/account_circle.svg?react';\nimport Favorite from '@jwp/ott-theme/assets/icons/favorite.svg?react';\nimport BalanceWallet from '@jwp/ott-theme/assets/icons/balance_wallet.svg?react';\nimport Exit from '@jwp/ott-theme/assets/icons/exit.svg?react';\nimport { PATH_USER_ACCOUNT, PATH_USER_FAVORITES, PATH_USER_PAYMENTS } from '@jwp/ott-common/src/paths';\n\nimport styles from '../UserMenu/UserMenu.module.scss'; // TODO inherit styling\nimport MenuButton from '../MenuButton/MenuButton';\nimport Icon from '../Icon/Icon';\n\ntype Props = {\n  small?: boolean;\n  focusable: boolean;\n  showPaymentItems: boolean;\n  onButtonClick?: () => void;\n  titleId?: string;\n  favoritesEnabled?: boolean;\n};\n\nconst UserMenuNav = ({ showPaymentItems, small = false, onButtonClick, favoritesEnabled, focusable, titleId }: Props) => {\n  const { t } = useTranslation('user');\n  const navigate = useNavigate();\n  const accountController = getModule(AccountController);\n  const tabIndex = focusable ? 0 : -1;\n\n  const onLogout = useCallback(async () => {\n    if (onButtonClick) {\n      onButtonClick();\n    }\n\n    await accountController.logout();\n    navigate('/', { replace: true });\n  }, [onButtonClick, navigate, accountController]);\n\n  return (\n    <>\n      <h2 className={styles.sectionHeader} id={titleId}>\n        {t('nav.settings')}\n      </h2>\n      <ul className={styles.menuItems}>\n        <li>\n          <MenuButton\n            small={small}\n            onClick={onButtonClick}\n            to={PATH_USER_ACCOUNT}\n            label={t('nav.account')}\n            startIcon={<Icon icon={AccountCircle} />}\n            tabIndex={tabIndex}\n          />\n        </li>\n        {favoritesEnabled && (\n          <li>\n            <MenuButton\n              small={small}\n              onClick={onButtonClick}\n              to={PATH_USER_FAVORITES}\n              label={t('nav.favorites')}\n              startIcon={<Icon icon={Favorite} />}\n              tabIndex={tabIndex}\n            />\n          </li>\n        )}\n        {showPaymentItems && (\n          <li>\n            <MenuButton\n              small={small}\n              onClick={onButtonClick}\n              to={PATH_USER_PAYMENTS}\n              label={t('nav.payments')}\n              startIcon={<Icon icon={BalanceWallet} />}\n              tabIndex={tabIndex}\n            />\n          </li>\n        )}\n        <li className={classNames(styles.divider, { [styles.small]: small })}>\n          <MenuButton small={small} onClick={onLogout} label={t('nav.logout')} startIcon={<Icon icon={Exit} />} tabIndex={tabIndex} />\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default UserMenuNav;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useUIStore } from '@jwp/ott-common/src/stores/UIStore';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport useOpaqueId from '@jwp/ott-hooks-react/src/useOpaqueId';\nimport { useLocation, useNavigate } from 'react-router';\nimport { ACCESS_MODEL } from '@jwp/ott-common/src/constants';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport { determinePath } from '@jwp/ott-common/src/utils/urlFormatting';\nimport { useTranslationKey } from '@jwp/ott-hooks-react/src/useTranslationKey';\n\nimport Button from '../../components/Button/Button';\nimport Sidebar from '../../components/Sidebar/Sidebar';\nimport MenuButton from '../../components/MenuButton/MenuButton';\nimport { modalURLFromLocation } from '../../utils/location';\nimport UserMenuNav from '../../components/UserMenuNav/UserMenuNav';\n\nimport styles from './SidebarContainer.module.scss';\n\nconst SidebarUserActions = ({\n  sideBarOpen,\n  canLogin,\n  isLoggedIn,\n  favoritesEnabled,\n  onLoginClick,\n  onSignUpClick,\n}: {\n  sideBarOpen: boolean;\n  canLogin: boolean;\n  isLoggedIn: boolean;\n  favoritesEnabled: boolean;\n  onLoginClick: () => void;\n  onSignUpClick: () => void;\n}) => {\n  const { t } = useTranslation('menu');\n  const userMenuTitleId = useOpaqueId('usermenu-title');\n\n  if (!canLogin) return null;\n\n  return isLoggedIn ? (\n    <section aria-labelledby={userMenuTitleId}>\n      <UserMenuNav focusable={sideBarOpen} favoritesEnabled={favoritesEnabled} titleId={userMenuTitleId} showPaymentItems />\n    </section>\n  ) : (\n    <div className={styles.buttonContainer}>\n      <Button tabIndex={sideBarOpen ? 0 : -1} onClick={onLoginClick} label={t('sign_in')} fullWidth />\n      <Button tabIndex={sideBarOpen ? 0 : -1} variant=\"contained\" color=\"primary\" onClick={onSignUpClick} label={t('sign_up')} fullWidth />\n    </div>\n  );\n};\n\nconst SidebarContainer = () => {\n  const { t } = useTranslation('common');\n  const translationKey = useTranslationKey('title');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const sideBarOpen = useUIStore((state) => state.sideBarOpen);\n  const {\n    config: { menu, features },\n    accessModel,\n  } = useConfigStore((state) => ({\n    config: state.config,\n    accessModel: state.accessModel,\n  }));\n  const isLoggedIn = useAccountStore(({ user }) => !!user);\n\n  const favoritesEnabled = !!features?.favoritesList;\n  const canLogin = accessModel !== ACCESS_MODEL.AVOD;\n\n  const closeSideBar = () => useUIStore.setState({ sideBarOpen: false });\n\n  const loginButtonClickHandler = () => {\n    navigate(modalURLFromLocation(location, 'login'));\n  };\n\n  const signUpButtonClickHandler = () => {\n    navigate(modalURLFromLocation(location, 'create-account'));\n  };\n\n  return (\n    <Sidebar isOpen={sideBarOpen} onClose={closeSideBar}>\n      <ul>\n        <li>\n          <MenuButton label={t('home')} to=\"/\" />\n        </li>\n        {menu.map(({ contentId, type, label, custom }) => (\n          <li key={contentId}>\n            <MenuButton label={custom?.[translationKey] || label} to={determinePath({ type, contentId })} />\n          </li>\n        ))}\n      </ul>\n      <hr className={styles.separator} />\n      <SidebarUserActions\n        sideBarOpen={sideBarOpen}\n        favoritesEnabled={favoritesEnabled}\n        canLogin={canLogin}\n        isLoggedIn={isLoggedIn}\n        onLoginClick={loginButtonClickHandler}\n        onSignUpClick={signUpButtonClickHandler}\n      />\n    </Sidebar>\n  );\n};\n\nexport default SidebarContainer;\n","import { Helmet } from 'react-helmet';\nimport React from 'react';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport { useTranslation } from 'react-i18next';\n\nconst SiteMetadata = () => {\n  const { t } = useTranslation('common');\n  const { siteName, description } = useConfigStore(({ config }) => config, shallow);\n  const metaDescription = description || t('default_description');\n\n  return (\n    <Helmet>\n      <title>{siteName}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:title\" content={siteName} />\n      <meta name=\"twitter:title\" content={siteName} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n    </Helmet>\n  );\n};\n\nexport default SiteMetadata;\n","import * as React from \"react\";\nconst SvgSearch = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" }));\nexport default SvgSearch;\n","import * as React from \"react\";\nconst SvgCancel = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M9 1C4.58 1 1 4.58 1 9s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm4 10.87L11.87 13 9 10.13 6.13 13 5 11.87 7.87 9 5 6.13 6.13 5 9 7.87 11.87 5 13 6.13 10.13 9 13 11.87z\" }));\nexport default SvgCancel;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Search from '@jwp/ott-theme/assets/icons/search.svg?react';\nimport Cancel from '@jwp/ott-theme/assets/icons/cancel.svg?react';\n\nimport IconButton from '../IconButton/IconButton';\nimport Icon from '../Icon/Icon';\n\nimport styles from './SearchBar.module.scss';\n\nexport type Props = {\n  query?: string;\n  onQueryChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onClearButtonClick?: () => void;\n  onClose?: () => void;\n  inputRef?: React.MutableRefObject<HTMLInputElement>;\n};\n\nconst SearchBar: React.FC<Props> = ({ query, onQueryChange, onClearButtonClick, onClose, inputRef }: Props) => {\n  const { t } = useTranslation('search');\n  const handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    inputRef?.current.focus(); // Force hide mobile keyboard\n    (document.querySelector('#content') as HTMLElement)?.focus();\n  };\n\n  return (\n    <div className={styles.searchBar}>\n      <Icon icon={Search} className={styles.icon} />\n      <form className={styles.searchForm} role=\"search\" onSubmit={handleSubmit}>\n        <label htmlFor=\"searchbar-input\" className=\"hidden\">\n          {t('search_bar.search_label')}\n        </label>\n        <input\n          className={styles.input}\n          id=\"searchbar-input\"\n          type=\"search\"\n          value={query}\n          onChange={onQueryChange}\n          onKeyDown={(event) => event.key === 'Escape' && onClose?.()}\n          placeholder={t('search_bar.search_placeholder')}\n          ref={inputRef}\n        />\n        {query ? (\n          <IconButton className={styles.clearButton} aria-label={t('search_bar.clear_search_label')} onClick={onClearButtonClick}>\n            <Icon icon={Cancel} />\n          </IconButton>\n        ) : null}\n      </form>\n    </div>\n  );\n};\nexport default SearchBar;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport IconButton, { type Props as IconButtonProps } from '../IconButton/IconButton';\n\nimport styles from './Header.module.scss';\n\nconst HeaderActionButton = ({ children, className, ...rest }: IconButtonProps) => {\n  return (\n    <IconButton className={classNames(styles.iconButton, className)} {...rest}>\n      {children}\n    </IconButton>\n  );\n};\n\nexport default HeaderActionButton;\n","import React, { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport { isTruthyCustomParamValue } from '@jwp/ott-common/src/utils/common';\nimport { useUIStore } from '@jwp/ott-common/src/stores/UIStore';\nimport SearchIcon from '@jwp/ott-theme/assets/icons/search.svg?react';\nimport CloseIcon from '@jwp/ott-theme/assets/icons/close.svg?react';\n\nimport Icon from '../../components/Icon/Icon';\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport useSearchQueryUpdater from '../../hooks/useSearchQueryUpdater';\nimport HeaderActionButton from '../../components/Header/HeaderActionButton';\n\nimport styles from './HeaderSearch.module.scss';\n\nconst HeaderSearch = () => {\n  const { t } = useTranslation('menu');\n  const location = useLocation();\n  const searchInputRef = useRef<HTMLInputElement>(null) as React.MutableRefObject<HTMLInputElement>;\n\n  const config = useConfigStore(({ config }) => config);\n  const { features, custom } = config;\n\n  const { searchPlaylist } = features || {};\n  const hasAppContentSearch = isTruthyCustomParamValue(custom?.appContentSearch);\n  const searchEnabled = !!searchPlaylist || hasAppContentSearch;\n\n  const { searchQuery, searchActive } = useUIStore(\n    ({ searchQuery, searchActive, userMenuOpen, languageMenuOpen }) => ({\n      languageMenuOpen,\n      searchQuery,\n      searchActive,\n      userMenuOpen,\n    }),\n    shallow,\n  );\n  const { updateSearchQuery, resetSearchQuery } = useSearchQueryUpdater();\n\n  const closeSearchButtonClickHandler = () => {\n    resetSearchQuery();\n\n    useUIStore.setState({\n      searchActive: false,\n    });\n  };\n\n  const searchButtonClickHandler = () => {\n    useUIStore.setState({\n      searchActive: true,\n      preSearchPage: `${location.pathname}${location.search || ''}`,\n    });\n  };\n\n  useEffect(() => {\n    if (searchActive && searchInputRef.current) {\n      searchInputRef.current.focus();\n    }\n  }, [searchActive]);\n\n  if (!searchEnabled) return null;\n\n  return searchActive ? (\n    <div className={styles.searchContainer}>\n      <SearchBar\n        query={searchQuery}\n        onQueryChange={(event) => updateSearchQuery(event.target.value)}\n        onClearButtonClick={() => updateSearchQuery('')}\n        inputRef={searchInputRef}\n        onClose={closeSearchButtonClickHandler}\n      />\n      <HeaderActionButton aria-label={t('search_close')} onClick={closeSearchButtonClickHandler}>\n        <Icon icon={CloseIcon} />\n      </HeaderActionButton>\n    </div>\n  ) : (\n    <HeaderActionButton aria-label={t('search_open')} onClick={searchButtonClickHandler}>\n      <Icon icon={SearchIcon} />\n    </HeaderActionButton>\n  );\n};\n\nexport default HeaderSearch;\n","import * as React from \"react\";\nconst SvgLanguage = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { fill: \"currentColor\", d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z\" }));\nexport default SvgLanguage;\n","import React from 'react';\n\nimport styles from './Panel.module.scss';\n\ntype Props = {\n  id?: string;\n  children?: React.ReactNode;\n};\n\nconst Panel: React.FC<Props> = ({ children, ...rest }) => {\n  return (\n    <div className={styles.panel} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default Panel;\n","import React, { useEffect, useRef } from 'react';\n\ntype Prop = {\n  callback: () => void;\n  children: React.ReactElement;\n};\n\nconst DetectOutsideClick = ({ callback, children }: Prop) => {\n  const elementRef = useRef<HTMLDivElement>();\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      if (!elementRef.current || !(event.target instanceof Node)) {\n        return;\n      }\n\n      if (elementRef.current !== event.target && !elementRef.current?.contains(event.target)) {\n        callback();\n      }\n    };\n\n    setTimeout(() => document.addEventListener('click', handleClick), 1);\n\n    return () => document.removeEventListener('click', handleClick);\n  }, [callback]);\n\n  return React.cloneElement(children, {\n    ref: (node: HTMLDivElement) => {\n      elementRef.current = node;\n    },\n  });\n};\n\nexport default DetectOutsideClick;\n","import React, { type ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport DetectOutsideClick from '../DetectOutsideClick/DetectOutsideClick';\nimport Slide from '../Animation/Slide/Slide';\n\nimport styles from './Popover.module.scss';\n\ntype Props = {\n  children: ReactNode;\n  className?: string;\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nconst Popover: React.FC<Props> = ({ children, className, isOpen, onClose }: Props) => {\n  return (\n    <Slide open={isOpen} duration={250} direction=\"right\" style={{ position: 'relative' }}>\n      <DetectOutsideClick callback={onClose}>\n        <div className={classNames(styles.popover, className)}>{children}</div>\n      </DetectOutsideClick>\n    </Slide>\n  );\n};\n\nexport default Popover;\n","import type { LanguageDefinition } from '@jwp/ott-common/types/i18n';\nimport classNames from 'classnames';\nimport { type MouseEvent } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { testId } from '@jwp/ott-common/src/utils/common';\nimport Language from '@jwp/ott-theme/assets/icons/language.svg?react';\n\nimport Link from '../Link/Link';\nimport Panel from '../Panel/Panel';\nimport Popover from '../Popover/Popover';\nimport Icon from '../Icon/Icon';\nimport HeaderActionButton from '../Header/HeaderActionButton';\n\nimport styles from './LanguageMenu.module.scss';\n\ntype Props = {\n  onClick: (code: string) => void | null;\n  className?: string;\n  languages: LanguageDefinition[];\n  currentLanguage: LanguageDefinition | undefined;\n  languageMenuOpen: boolean;\n  openLanguageMenu: () => void;\n  closeLanguageMenu: () => void;\n};\n\nconst LanguageMenu = ({ onClick, className, languages, currentLanguage, languageMenuOpen, closeLanguageMenu, openLanguageMenu }: Props) => {\n  const { t } = useTranslation('menu');\n\n  const handleLanguageSelect = (event: MouseEvent<HTMLElement>, code: string) => {\n    event.preventDefault();\n    onClick && onClick(code);\n\n    closeLanguageMenu();\n  };\n\n  const handleMenuToggle = () => {\n    if (languageMenuOpen) {\n      closeLanguageMenu();\n    } else {\n      openLanguageMenu();\n    }\n  };\n\n  return (\n    <div>\n      <HeaderActionButton\n        data-testid={testId('language-menu-button')}\n        aria-controls=\"language-panel\"\n        aria-expanded={languageMenuOpen}\n        aria-haspopup=\"menu\"\n        className={className}\n        aria-label={t('language_menu')}\n        onClick={handleMenuToggle}\n        onBlur={closeLanguageMenu}\n      >\n        <Icon icon={Language} />\n      </HeaderActionButton>\n      <Popover isOpen={languageMenuOpen} onClose={closeLanguageMenu}>\n        <Panel id=\"language-panel\">\n          <ul className={styles.menuItems}>\n            {languages.map(({ code, displayName }) => {\n              const isActive = currentLanguage?.code === code;\n              const menuItemClassname = classNames(styles.menuItem, { [styles.menuItemActive]: isActive });\n              return (\n                <li key={code} className={menuItemClassname} onClick={(event) => handleLanguageSelect(event, code)}>\n                  <Link onFocus={openLanguageMenu} onBlur={closeLanguageMenu} href=\"#\" aria-current={isActive}>\n                    {displayName}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </Panel>\n      </Popover>\n    </div>\n  );\n};\n\nexport default LanguageMenu;\n","import React, { useCallback, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { useUIStore } from '@jwp/ott-common/src/stores/UIStore';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport FavoritesController from '@jwp/ott-common/src/controllers/FavoritesController';\nimport WatchHistoryController from '@jwp/ott-common/src/controllers/WatchHistoryController';\n\nimport LanguageMenu from '../../components/LanguageMenu/LanguageMenu';\n\nconst HeaderLanguageSwitcher = () => {\n  const { i18n } = useTranslation('menu');\n  const supportedLanguages = useConfigStore((state) => state.supportedLanguages);\n  const languageMenuOpen = useUIStore((state) => state.languageMenuOpen);\n\n  const favoritesController = getModule(FavoritesController);\n  const watchlistController = getModule(WatchHistoryController);\n\n  const openLanguageMenu = useCallback(() => useUIStore.setState({ languageMenuOpen: true }), []);\n  const closeLanguageMenu = useCallback(() => useUIStore.setState({ languageMenuOpen: false }), []);\n\n  const languageClickHandler = (code: string) => {\n    i18n.changeLanguage(code);\n    favoritesController.restoreFavorites(code);\n    watchlistController.restoreWatchHistory(code);\n  };\n\n  const currentLanguage = useMemo(() => supportedLanguages.find(({ code }) => code === i18n.language), [i18n.language, supportedLanguages]);\n\n  if (supportedLanguages.length < 2) return null;\n\n  return (\n    <LanguageMenu\n      openLanguageMenu={openLanguageMenu}\n      closeLanguageMenu={closeLanguageMenu}\n      languageMenuOpen={languageMenuOpen}\n      onClick={languageClickHandler}\n      languages={supportedLanguages}\n      currentLanguage={currentLanguage}\n    />\n  );\n};\n\nexport default HeaderLanguageSwitcher;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport AccountCircle from '@jwp/ott-theme/assets/icons/account_circle.svg?react';\n\nimport Icon from '../Icon/Icon';\nimport Popover from '../Popover/Popover';\nimport Panel from '../Panel/Panel';\nimport Button from '../Button/Button';\nimport UserMenuNav from '../UserMenuNav/UserMenuNav';\nimport HeaderActionButton from '../Header/HeaderActionButton';\n\nimport styles from './UserMenu.module.scss';\n\ntype Props = {\n  open: boolean;\n  onClose: () => void;\n  onOpen: () => void;\n  onLoginButtonClick: () => void;\n  onSignUpButtonClick: () => void;\n  isLoggedIn: boolean;\n  favoritesEnabled: boolean;\n};\n\nconst UserMenu = ({ isLoggedIn, favoritesEnabled, open, onClose, onOpen, onLoginButtonClick, onSignUpButtonClick }: Props) => {\n  const { t } = useTranslation('menu');\n\n  if (!isLoggedIn) {\n    return (\n      <>\n        <Button onClick={onLoginButtonClick} label={t('sign_in')} aria-haspopup=\"dialog\" />\n        <Button variant=\"contained\" color=\"primary\" onClick={onSignUpButtonClick} label={t('sign_up')} aria-haspopup=\"dialog\" />\n      </>\n    );\n  }\n\n  return (\n    <div>\n      <HeaderActionButton\n        aria-label={t('open_user_menu')}\n        aria-controls=\"menu_panel\"\n        aria-expanded={open}\n        aria-haspopup=\"menu\"\n        onClick={onOpen}\n        onBlur={onClose}\n      >\n        <Icon icon={AccountCircle} />\n      </HeaderActionButton>\n      <Popover className={styles.popover} isOpen={open} onClose={onClose}>\n        <Panel id=\"menu_panel\">\n          <div onFocus={onOpen} onBlur={onClose}>\n            <UserMenuNav focusable={open} onButtonClick={onClose} showPaymentItems={true} favoritesEnabled={favoritesEnabled} small />\n          </div>\n        </Panel>\n      </Popover>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import React, { useCallback } from 'react';\nimport { useUIStore } from '@jwp/ott-common/src/stores/UIStore';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport { ACCESS_MODEL } from '@jwp/ott-common/src/constants';\nimport { useLocation, useNavigate } from 'react-router';\n\nimport UserMenu from '../../components/UserMenu/UserMenu';\nimport useBreakpoint, { Breakpoint } from '../../hooks/useBreakpoint';\nimport { modalURLFromLocation } from '../../utils/location';\n\nconst HeaderUserMenu = () => {\n  const breakpoint = useBreakpoint();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const userMenuOpen = useUIStore((state) => state.userMenuOpen);\n  const {\n    config: { features },\n    accessModel,\n  } = useConfigStore((state) => ({\n    config: state.config,\n    accessModel: state.accessModel,\n  }));\n  const isLoggedIn = useAccountStore(({ user }) => !!user);\n\n  const favoritesEnabled = !!features?.favoritesList;\n  const canLogin = accessModel !== ACCESS_MODEL.AVOD;\n\n  const openUserPanel = useCallback(() => useUIStore.setState({ userMenuOpen: true }), []);\n  const closeUserPanel = useCallback(() => useUIStore.setState({ userMenuOpen: false }), []);\n\n  const loginButtonClickHandler = () => navigate(modalURLFromLocation(location, 'login'));\n  const signUpButtonClickHandler = () => navigate(modalURLFromLocation(location, 'create-account'));\n\n  if (!canLogin || breakpoint <= Breakpoint.sm) return null;\n\n  return (\n    <UserMenu\n      open={userMenuOpen}\n      onOpen={openUserPanel}\n      onClose={closeUserPanel}\n      isLoggedIn={isLoggedIn}\n      favoritesEnabled={favoritesEnabled}\n      onLoginButtonClick={loginButtonClickHandler}\n      onSignUpButtonClick={signUpButtonClickHandler}\n    />\n  );\n};\n\nexport default HeaderUserMenu;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Outlet } from 'react-router';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\nimport { useConfigStore } from '@jwp/ott-common/src/stores/ConfigStore';\nimport { unicodeToChar } from '@jwp/ott-common/src/utils/common';\nimport { determinePath } from '@jwp/ott-common/src/utils/urlFormatting';\nimport env from '@jwp/ott-common/src/env';\nimport { useUIStore } from '@jwp/ott-common/src/stores/UIStore';\nimport { useTranslationKey } from '@jwp/ott-hooks-react/src/useTranslationKey';\n\nimport Header from '../../components/Header/Header';\nimport Footer from '../../components/Footer/Footer';\nimport HeaderMenu from '../../components/Header/HeaderMenu';\nimport HeaderNavigation from '../../components/Header/HeaderNavigation';\nimport HeaderBrand from '../../components/Header/HeaderBrand';\nimport HeaderActions from '../../components/Header/HeaderActions';\nimport HeaderSkipLink from '../../components/Header/HeaderSkipLink';\nimport SidebarContainer from '../SidebarContainer/SidebarContainer';\nimport SiteMetadata from '../SiteMetadata/SiteMetadata';\nimport HeaderSearch from '../HeaderSearch/HeaderSearch';\nimport HeaderLanguageSwitcher from '../HeaderLanguageSwitcher/HeaderLanguageSwitcher';\nimport HeaderUserMenu from '../HeaderUserMenu/HeaderUserMenu';\n\nimport styles from './Layout.module.scss';\n\nconst Layout = () => {\n  const { t } = useTranslation('common');\n  const translationKey = useTranslationKey('label');\n\n  const { config } = useConfigStore(\n    ({ config, accessModel, supportedLanguages }) => ({\n      config,\n      accessModel,\n      supportedLanguages,\n    }),\n    shallow,\n  );\n  const { menu, assets, siteName, styling } = config;\n  const { footerText: configFooterText } = styling || {};\n  const footerText = configFooterText || unicodeToChar(env.APP_FOOTER_TEXT);\n\n  const { sideBarOpen, searchActive } = useUIStore((state) => ({\n    sideBarOpen: state.sideBarOpen,\n    searchActive: state.searchActive,\n  }));\n  const banner = assets.banner;\n\n  const openSideBar = () => useUIStore.setState({ sideBarOpen: true });\n\n  const navItems = [\n    { label: t('home'), to: '/' },\n    ...menu.map(({ label, contentId, type, custom }) => ({\n      label: custom?.[translationKey] || label,\n      to: determinePath({ type, contentId, label }),\n    })),\n  ];\n\n  const containerProps = { inert: sideBarOpen ? '' : undefined }; // inert is not yet officially supported in react\n\n  return (\n    <div className={styles.layout}>\n      <SiteMetadata />\n      <div {...containerProps}>\n        <Header searchActive={searchActive}>\n          <HeaderSkipLink />\n          <HeaderMenu sideBarOpen={sideBarOpen} onClick={openSideBar} />\n          <HeaderBrand siteName={siteName} logoSrc={banner} setLogoLoaded={() => undefined} />\n          <HeaderNavigation navItems={navItems} />\n          <HeaderActions>\n            <HeaderSearch />\n            <HeaderLanguageSwitcher />\n            <HeaderUserMenu />\n          </HeaderActions>\n        </Header>\n        <main id=\"content\" className={styles.main} tabIndex={-1}>\n          <Outlet />\n        </main>\n        {!!footerText && <Footer text={footerText} />}\n      </div>\n      <SidebarContainer />\n    </div>\n  );\n};\n\nexport default Layout;\n","import { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router';\nimport { getModule } from '@jwp/ott-common/src/modules/container';\nimport AccountController from '@jwp/ott-common/src/controllers/AccountController';\nimport { queryClient } from '@jwp/ott-ui-react/src/containers/QueryProvider/QueryProvider';\nimport { modalURLFromLocation } from '@jwp/ott-ui-react/src/utils/location';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport useEventCallback from '@jwp/ott-hooks-react/src/useEventCallback';\nimport type { AccountModals } from '@jwp/ott-ui-react/src/containers/AccountModal/AccountModal';\n\nenum NotificationsTypes {\n  ACCESS_REVOKED = 'access.revoked',\n  CARD_REQUIRES_ACTION = 'payment.card.requires.action',\n  CARD_FAILED = 'payment.card.failed',\n  CARD_SUCCESS = 'payment.card.success',\n  SUBSCRIBE_REQUIRES_ACTION = 'subscribe.requires.action',\n  FAILED = '.failed',\n  SUBSCRIBE_FAILED = 'subscribe.failed',\n  SUBSCRIBE_SUCCESS = 'subscribe.success',\n  ACCOUNT_LOGOUT = 'account.logout',\n}\n\nexport default function useNotifications() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const uuid = useAccountStore((s) => (typeof s.user?.uuid === 'string' ? s.user.uuid : undefined));\n\n  const accountController = getModule(AccountController);\n  const { hasNotifications } = accountController?.getFeatures() || {};\n\n  // use an eventCallback to prevent the `location` property being stale when used directly in the useEffect below\n  const navigateToModal = useEventCallback((path: keyof AccountModals | null, queryParams?: Record<string, string>) => {\n    navigate(modalURLFromLocation(location, path, queryParams));\n  });\n\n  useEffect(() => {\n    if (!uuid || !hasNotifications) return;\n\n    accountController?.subscribeToNotifications({\n      uuid,\n      onMessage: async (message) => {\n        if (message) {\n          const notification = JSON.parse(message);\n\n          switch (notification.type) {\n            case NotificationsTypes.FAILED:\n            case NotificationsTypes.CARD_FAILED:\n            case NotificationsTypes.SUBSCRIBE_FAILED:\n              navigateToModal('payment-error', notification.resource?.message);\n              break;\n            case NotificationsTypes.CARD_SUCCESS:\n              await queryClient.invalidateQueries(['entitlements']);\n              navigateToModal(null); // close modal\n              break;\n            case NotificationsTypes.SUBSCRIBE_SUCCESS:\n              await accountController.reloadSubscriptions();\n              break;\n            case NotificationsTypes.ACCESS_REVOKED:\n              await accountController.reloadSubscriptions();\n              break;\n            case NotificationsTypes.CARD_REQUIRES_ACTION:\n            case NotificationsTypes.SUBSCRIBE_REQUIRES_ACTION:\n              window.location.href = notification.resource?.redirect_to_url;\n              break;\n            default:\n              break;\n          }\n        }\n      },\n    });\n  }, [accountController, hasNotifications, navigateToModal, uuid]);\n}\n","import React, { useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { Outlet } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport { useAccountStore } from '@jwp/ott-common/src/stores/AccountStore';\nimport { shallow } from '@jwp/ott-common/src/utils/compare';\n\nimport useNotifications from '#src/hooks/useNotifications';\n\nconst RoutesContainer = () => {\n  const { i18n } = useTranslation();\n  const location = useLocation();\n\n  const userData = useAccountStore((s) => ({ loading: s.loading, user: s.user }), shallow);\n\n  // listen to websocket notifications\n  useNotifications();\n\n  // set/update lang html lang attribute\n  useEffect(() => {\n    document.documentElement.setAttribute('lang', i18n.language);\n  }, [i18n.language]);\n\n  // used for social logins\n  // @todo should users be redirected away from a page after login?\n  if (userData.user && !userData.loading && window.location.href.includes('#token')) {\n    return <Navigate to={{ ...location, hash: '' }} replace />; // component instead of hook to prevent extra re-renders\n  }\n\n  return <Outlet />;\n};\n\nexport default RoutesContainer;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Route, Routes } from 'react-router-dom';\nimport ErrorPage from '@jwp/ott-ui-react/src/components/ErrorPage/ErrorPage';\nimport RootErrorPage from '@jwp/ott-ui-react/src/components/RootErrorPage/RootErrorPage';\nimport About from '@jwp/ott-ui-react/src/pages/About/About';\nimport Home from '@jwp/ott-ui-react/src/pages/Home/Home';\nimport Search from '@jwp/ott-ui-react/src/pages/Search/Search';\nimport User from '@jwp/ott-ui-react/src/pages/User/User';\nimport LegacySeries from '@jwp/ott-ui-react/src/pages/LegacySeries/LegacySeries';\nimport MediaScreenRouter from '@jwp/ott-ui-react/src/pages/ScreenRouting/MediaScreenRouter';\nimport PlaylistScreenRouter from '@jwp/ott-ui-react/src/pages/ScreenRouting/PlaylistScreenRouter';\nimport Layout from '@jwp/ott-ui-react/src/containers/Layout/Layout';\nimport { PATH_ABOUT, PATH_CONTENT_LIST, PATH_LEGACY_SERIES, PATH_MEDIA, PATH_PLAYLIST, PATH_SEARCH, PATH_USER } from '@jwp/ott-common/src/paths';\nimport { APP_CONFIG_ITEM_TYPE } from '@jwp/ott-common/src/constants';\n\nimport RoutesContainer from '#src/containers/RoutesContainer/RoutesContainer';\n\nexport default function AppRoutes() {\n  const { t } = useTranslation('error');\n\n  return (\n    <Routes>\n      <Route element={<RoutesContainer />}>\n        <Route element={<Layout />} errorElement={<RootErrorPage />}>\n          <Route index element={<Home />} />\n          <Route path={PATH_PLAYLIST} element={<PlaylistScreenRouter type={APP_CONFIG_ITEM_TYPE.playlist} />} />\n          <Route path={PATH_CONTENT_LIST} element={<PlaylistScreenRouter type={APP_CONFIG_ITEM_TYPE.content_list} />} />\n          <Route path={PATH_MEDIA} element={<MediaScreenRouter />} />\n          <Route path={PATH_LEGACY_SERIES} element={<LegacySeries />} />\n          <Route path={PATH_SEARCH} element={<Search />} />\n          <Route path={PATH_USER} element={<User />} />\n          <Route path={PATH_ABOUT} element={<About />} />\n          <Route\n            path=\"/*\"\n            element={<ErrorPage title={t('notfound_error_heading', 'Not found')} message={t('notfound_error_description', \"This page doesn't exist.\")} />}\n          />\n        </Route>\n      </Route>\n    </Routes>\n  );\n}\n","import React, { useEffect, useMemo } from 'react';\nimport type { Content } from '@jwp/ott-common/types/config';\nimport type { PlaylistItem } from '@jwp/ott-common/types/playlist';\n\nimport type { ScreenComponent } from '../../../../../types/screens';\nimport ShelfList from '../../../../containers/ShelfList/ShelfList';\nimport Hero from '../../../../components/Hero/Hero';\nimport HeroTitle from '../../../../components/Hero/HeroTitle';\nimport HeroDescription from '../../../../components/Hero/HeroDescription';\n\nconst parsePlaylistIds = (input: unknown): Content[] => {\n  const playlistIds = typeof input === 'string' ? input.replace(/\\s+/g, '').split(',') : [];\n\n  return playlistIds.map((id) => ({ type: 'playlist', contentId: id }));\n};\n\nconst MediaHub: ScreenComponent<PlaylistItem> = ({ data }) => {\n  // Hub may specify multiple playlists as a CSV list of IDs or a single playlist\n  const rows = useMemo(() => parsePlaylistIds(data.playlists || data.playlist), [data.playlist, data.playlists]);\n\n  // Effects\n  useEffect(() => {\n    (document.scrollingElement || document.body).scroll({ top: 0 });\n    (document.querySelector('#video-details button') as HTMLElement)?.focus();\n  }, [data]);\n\n  return (\n    <header>\n      <Hero image={data.backgroundImage}>\n        <HeroTitle title={data.title} />\n        <HeroDescription description={data.description} />\n      </Hero>\n      <ShelfList rows={rows}></ShelfList>\n    </header>\n  );\n};\n\nexport default MediaHub;\n","import { MEDIA_CONTENT_TYPE } from '@jwp/ott-common/src/constants';\nimport { mediaScreenMap } from '@jwp/ott-ui-react/src/pages/ScreenRouting/MediaScreenRouter';\nimport MediaHub from '@jwp/ott-ui-react/src/pages/ScreenRouting/mediaScreens/MediaHub/MediaHub';\n\n/**\n * This file is used to add media and/or playlist screens.\n *\n * The most basic example is given below where a media screen is registered for the `hub` contentType. This means that\n * when navigating to the `/m/:id` page and the requested media item has `contentType: hub`, it will render the\n * `MediaHub` screen.\n *\n * In the application, screens are registered for the following contentTypes: Episode, Series and LiveChannel. When no\n * match is found, the default screen is used.\n *\n * To override the default media screen you can use:\n *\n * @example\n * mediaScreenMap.registerDefault(CustomMediaScreen);\n *\n * If you want to override the series contentType you can use:\n *\n * @example\n * mediaScreenMap.registerByContentType(CustomSeriesScreen, 'series');\n *\n * Or you want to use different parameters to select a screen, you can use the `register` method with a predicate\n * function. This predicate function must return `true` when it should be used.\n *\n * @example\n * mediaScreenMap.register(CustomMediaScreen, (item?: PlaylistItem) => item?.customParam === 'yes');\n *\n * If you want to override all screens and only use a single screen for all media items, you can register a screen\n * with a predicate that always returns `true`\n *\n * @example\n * mediaScreenMap.register(CustomMediaScreen, () => true);\n *\n * The same methods can be used for the `playlistScreenMap` that is exported from\n * {@link /src/pages/ScreenRouting/PlaylistScreenRouter.tsx}\n */\n\nexport default function registerCustomScreens() {\n  // Hub is an example screen for the media router\n  mediaScreenMap.registerByContentType(MediaHub, MEDIA_CONTENT_TYPE.hub);\n}\n","import { useLayoutEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport type { Settings } from '@jwp/ott-common/types/settings';\nimport { CONFIG_QUERY_KEY } from '@jwp/ott-common/src/constants';\n\nexport function useTrackConfigKeyChange(settings: Settings | undefined, configSource: string | undefined) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // Update the query string to maintain the right params\n  useLayoutEffect(() => {\n    if (!settings) {\n      return;\n    }\n\n    // If there is no valid config source or the config source equals the default, remove the ?app-config= param\n    if (searchParams.has(CONFIG_QUERY_KEY) && (!configSource || configSource === settings?.defaultConfigSource)) {\n      setSearchParams(\n        (s) => {\n          s.delete(CONFIG_QUERY_KEY);\n\n          return s;\n        },\n        { replace: true },\n      );\n    }\n\n    // If the config source is not the default and the query string isn't set right, set the ?app-config= param\n    if (configSource && configSource !== settings?.defaultConfigSource && searchParams.get(CONFIG_QUERY_KEY) !== configSource) {\n      setSearchParams(\n        (s) => {\n          s.set(CONFIG_QUERY_KEY, configSource);\n          return s;\n        },\n        { replace: true },\n      );\n    }\n  }, [configSource, searchParams, setSearchParams, settings]);\n\n  return configSource;\n}\n","import React, { useEffect, useState, type FC, useCallback } from 'react';\nimport { IS_DEMO_MODE, IS_DEVELOPMENT_BUILD, IS_PREVIEW_MODE, IS_PROD_MODE } from '@jwp/ott-common/src/utils/common';\nimport ErrorPage from '@jwp/ott-ui-react/src/components/ErrorPage/ErrorPage';\nimport AccountModal from '@jwp/ott-ui-react/src/containers/AccountModal/AccountModal';\nimport DevConfigSelector from '@jwp/ott-ui-react/src/components/DevConfigSelector/DevConfigSelector';\nimport LoadingOverlay from '@jwp/ott-ui-react/src/components/LoadingOverlay/LoadingOverlay';\nimport { type BootstrapData, type OnReadyCallback, useBootstrapApp } from '@jwp/ott-hooks-react/src/useBootstrapApp';\nimport { setThemingVariables } from '@jwp/ott-ui-react/src/utils/theming';\nimport type { Config } from '@jwp/ott-common/types/config';\nimport { AppError } from '@jwp/ott-common/src/utils/error';\n\nimport DemoConfigDialog from '../../components/DemoConfigDialog/DemoConfigDialog';\nimport AppRoutes from '../AppRoutes/AppRoutes';\n\nimport registerCustomScreens from '#src/screenMapping';\nimport { useTrackConfigKeyChange } from '#src/hooks/useTrackConfigKeyChange';\n\nconst IS_DEMO_OR_PREVIEW = IS_DEMO_MODE || IS_PREVIEW_MODE;\n\nconst BootstrapError = ({ error }: { error: Error | AppError }) => {\n  if (error instanceof AppError) {\n    return <ErrorPage title={error.payload.title} message={error.payload.description} helpLink={error.payload.helpLink} error={error} />;\n  }\n  return <ErrorPage error={error} />;\n};\n\nconst ProdContentLoader = ({ query }: { query: BootstrapData }) => {\n  const { isLoading, error } = query;\n\n  if (isLoading) {\n    return <LoadingOverlay />;\n  }\n\n  if (error) {\n    return <BootstrapError error={error} />;\n  }\n\n  return null;\n};\n\nconst DemoContentLoader = ({ query }: { query: BootstrapData }) => {\n  const { isLoading, error, data } = query;\n\n  // Show the spinner while loading except in demo mode (the demo config shows its own loading status)\n  if (!IS_DEMO_OR_PREVIEW && isLoading) {\n    return <LoadingOverlay />;\n  }\n\n  const { configSource } = data || {};\n\n  return (\n    <>\n      {/* Show the error page when error except in demo mode (the demo mode shows its own error) */}\n      {!IS_DEMO_OR_PREVIEW && error && <BootstrapError error={error} />}\n      {IS_DEMO_OR_PREVIEW && <DemoConfigDialog query={query} />}\n      {/* Config select control to improve testing experience */}\n      {(IS_DEVELOPMENT_BUILD || IS_PREVIEW_MODE) && <DevConfigSelector selectedConfig={configSource} />}\n    </>\n  );\n};\n\n// This is moved to a separate, parallel component to reduce rerenders\nconst RootLoader = ({ onReady }: { onReady: OnReadyCallback }) => {\n  const query = useBootstrapApp(window.location.href, onReady);\n\n  // Modify query string to add / remove app-config id\n  useTrackConfigKeyChange(query.data?.settings, query.data?.configSource);\n\n  return IS_PROD_MODE ? <ProdContentLoader query={query} /> : <DemoContentLoader query={query} />;\n};\n\nconst Root: FC = () => {\n  const [isReady, setIsReady] = useState(false);\n\n  // Register custom screen mappings\n  useEffect(() => {\n    registerCustomScreens();\n  }, []);\n\n  const onReadyCallback = useCallback(async (config: Config | undefined) => {\n    // when the config is missing, the initialization failed\n    if (!config) {\n      return;\n    }\n\n    // because theming and analytics are specific to web, we configure it from here\n    // alternatively, we can use an events or specific callbacks or extend the AppController for each platform\n    setThemingVariables(config);\n\n    setIsReady(true);\n  }, []);\n\n  return (\n    <>\n      {isReady && <AppRoutes />}\n      {isReady && <AccountModal />}\n      {/*This is moved to a separate, parallel component to reduce rerenders */}\n      <RootLoader onReady={onReadyCallback} />\n    </>\n  );\n};\n\nexport default Root;\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport QueryProvider from '@jwp/ott-ui-react/src/containers/QueryProvider/QueryProvider';\nimport { ErrorPageWithoutTranslation } from '@jwp/ott-ui-react/src/components/ErrorPage/ErrorPage';\nimport LoadingOverlay from '@jwp/ott-ui-react/src/components/LoadingOverlay/LoadingOverlay';\nimport { AriaAnnouncerProvider } from '@jwp/ott-ui-react/src/containers/AnnouncementProvider/AnnoucementProvider';\nimport { logError } from '@jwp/ott-common/src/logger';\n\nimport initI18n from './i18n/config';\nimport Root from './containers/Root/Root';\n\nimport './screenMapping';\nimport './styles/main.scss';\n\ninterface State {\n  isLoading: boolean;\n  error?: Error;\n}\n\nexport default function App() {\n  const [i18nState, seti18nState] = useState<State>({ isLoading: true });\n\n  useEffect(() => {\n    initI18n()\n      .then(() => seti18nState({ isLoading: false }))\n      .catch((e) => seti18nState({ isLoading: false, error: e as Error }));\n  }, []);\n\n  if (i18nState.isLoading) {\n    return <LoadingOverlay />;\n  }\n\n  if (i18nState.error) {\n    logError('App', 'Failed to load translations', { error: i18nState.error });\n\n    // Don't be tempted to translate these strings. If i18n fails to load, translations won't work anyhow\n    return (\n      <ErrorPageWithoutTranslation\n        title={'Unable to load translations'}\n        message={'Check your language settings and try again later. If the problem persists contact technical support.'}\n        error={i18nState.error}\n      />\n    );\n  }\n\n  return (\n    <QueryProvider>\n      <BrowserRouter>\n        <AriaAnnouncerProvider>\n          <Root />\n        </AriaAnnouncerProvider>\n      </BrowserRouter>\n    </QueryProvider>\n  );\n}\n","export const attachAccessibilityListener = () => {\n  let isTabbing = false;\n\n  // when the user presses the Tab key, we add a `is-tabbing` className to the body element, so we can enable outline\n  // focus for keyboard users\n  document.addEventListener('keydown', (event) => {\n    if (event.key === 'Tab' && !isTabbing) {\n      isTabbing = true;\n      document.body.classList.add('is-tabbing');\n    }\n  });\n\n  // remove the `is-tabbing` className when the user uses a mouse again to interact with elements\n  document.addEventListener('mousedown', () => {\n    if (isTabbing) {\n      isTabbing = false;\n      document.body.classList.remove('is-tabbing');\n    }\n  });\n};\n","import 'virtual:polyfills';\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport 'wicg-inert';\nimport { registerSW } from 'virtual:pwa-register';\nimport { configureEnv } from '@jwp/ott-common/src/env';\n\nimport './modules/register';\n\nimport App from './App';\n\nimport { attachAccessibilityListener } from '#src/utils/accessibility';\n\n// Collect env vars\nconfigureEnv({\n  APP_VERSION: import.meta.env.APP_VERSION,\n\n  APP_API_BASE_URL: import.meta.env.APP_API_BASE_URL,\n  APP_PLAYER_ID: import.meta.env.APP_PLAYER_ID,\n\n  APP_DEFAULT_CONFIG_SOURCE: import.meta.env.APP_DEFAULT_CONFIG_SOURCE,\n  APP_PLAYER_LICENSE_KEY: import.meta.env.APP_PLAYER_LICENSE_KEY,\n\n  APP_FOOTER_TEXT: import.meta.env.APP_FOOTER_TEXT,\n  APP_BODY_FONT: import.meta.env.APP_BODY_FONT,\n  APP_BODY_ALT_FONT: import.meta.env.APP_BODY_ALT_FONT,\n  APP_PUBLIC_URL: import.meta.env.APP_PUBLIC_URL || window.location.origin,\n});\n\nattachAccessibilityListener();\n\nconst rootElement = document.getElementById('root');\n\nif (rootElement) {\n  const root = createRoot(rootElement);\n  root.render(<App />);\n} else {\n  console.info('Application - rootElement not found');\n}\n\nconst refresh = registerSW({\n  immediate: true,\n  onNeedRefresh: () => refresh(true),\n});\n"],"file":"assets/index-CxLR9GeF.js"}